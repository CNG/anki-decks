{
    "__type__": "Deck", 
    "children": [
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "542759f8-35b7-11e7-970f-2c56dc924912", 
            "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "mid": "1475043240989", 
            "name": "Shell", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --version", 
                        "grep", 
                        "", 
                        "-V", 
                        "--version", 
                        "", 
                        "", 
                        "<p>Output the version number of <code>grep</code> and exit.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MDksICJpZCI6ICIxNDk0Mzk1MDAwMTc1LTAwNiIsICJtZCI6ICJPdXRwdXQgdGhlIHZlcnNpb24gbnVtYmVyIG9mIGBncmVwYCBhbmQgZXhpdC5cbiJ9---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QF?BR7Efb,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --extended-regexp", 
                        "grep", 
                        "variant", 
                        "-E", 
                        "--extended-regexp", 
                        "egrep", 
                        "", 
                        "Interpret <u>PATTERN</u> as an extended regular expression (ERE).", 
                        "<div>grep [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div>grep [<u>OPTIONS</u>] [-e <u>PATTERN</u> | -f <u>FILE</u>] [<u>FILE</u>...]</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IRaYMm?y@$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --fixed-strings", 
                        "grep", 
                        "variant", 
                        "-F", 
                        "--fixed-strings", 
                        "fgrep", 
                        "", 
                        "<div>Interpret <u>PATTERN</u> as a list of fixed strings (instead of regular expressions), separated by newlines, any of which is to be matched.</div>", 
                        "<div>grep [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div>grep [<u>OPTIONS</u>] [-e <u>PATTERN</u> | -f <u>FILE</u>] [<u>FILE</u>...]</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P%EhyHaT7_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --basic-regexp", 
                        "grep", 
                        "", 
                        "-G <u>PATTERN</u>", 
                        "--basic-regexp <u>PATTERN</u>", 
                        "", 
                        "", 
                        "Interpret <u>PATTERN</u> as a basic regular expression (BRE). This is the default.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r4|gThY);y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --perl-regexp", 
                        "grep", 
                        "", 
                        "-P", 
                        "--perl-regexp", 
                        "", 
                        "", 
                        "<div>Interpret the pattern as a Perl-compatible regular expression (PCRE). This is highly experimental and <code>grep</code> may warn of unimplemented features.</div>", 
                        "<div><div>grep [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div>grep [<u>OPTIONS</u>] [-e <u>PATTERN</u> | -f <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LMs%v&XES[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --regexp", 
                        "grep", 
                        "", 
                        "-e <u>PATTERN</u>", 
                        "--regexp=<u>PATTERN</u>", 
                        "", 
                        "", 
                        "<div>Use <u>PATTERN</u> as the pattern. If this option is used multiple times or is combined with the <code>-f</code> (<code>--file</code>) option, search for all patterns given. This option can be used to protect a pattern beginning with <code>-</code>.</div>", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jWk`lEtB,U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --file", 
                        "grep", 
                        "", 
                        "-f <u>FILE</u>", 
                        "--file=<u>FILE</u>", 
                        "", 
                        "", 
                        "<div>Obtain patterns from <u>FILE</u>, one per line. If this option is used multiple times or is combined with the <code>-e</code> (<code>--regexp</code>) option, search for all patterns given. The empty file contains zero patterns, and therefore matches nothing.</div>", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jukb8P{[{S", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --ignore-case", 
                        "grep", 
                        "obsolete alias", 
                        "-i", 
                        "--ignore-case", 
                        "grep -y", 
                        "", 
                        "Ignore case distinctions in both the <u>PATTERN</u> and the input files.", 
                        "<div><div><code><div>grep -i \"the\" demo_file</div></code></div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K/Uhau-FAk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --invert-match", 
                        "grep", 
                        "", 
                        "-v", 
                        "--invert-match", 
                        "", 
                        "", 
                        "Invert the sense of matching, to select non-matching lines.", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n[;rTi!3s|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --word-regexp", 
                        "grep", 
                        "", 
                        "-w", 
                        "--word-regexp", 
                        "", 
                        "", 
                        "<div><div><div>Select only those lines containing matches that form whole words. The test is that the matching substring must either be at the beginning of the line, or preceded by a non-word constituent character. Similarly, it must be either at the end of the line or followed by a non-word constituent character. Word-constituent characters are letters, digits, and the underscore. This option has no effect if <code>-x</code> is also specified.</div></div></div>", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o>gqziovh)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --line-regexp", 
                        "grep", 
                        "", 
                        "-x", 
                        "--line-regexp", 
                        "", 
                        "", 
                        "Select only those matches that exactly match the whole line. For a regular expression pattern, this is like parenthesizing the pattern and then surrounding it with <code>^</code> and <code>$</code>.", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ao3z.w.==l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --count", 
                        "grep", 
                        "", 
                        "-c", 
                        "--count", 
                        "", 
                        "", 
                        "<div>Suppress normal output; instead print a count of matching lines for each input file. With the <code>-v</code>, <code>--invert-match</code> option (see below), count non-matching lines.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Od>e~]sdAp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --color", 
                        "grep", 
                        "", 
                        "", 
                        "--color[=<u>WHEN</u>]", 
                        "", 
                        "", 
                        "<div>Surround the matched (non-empty) strings, matching lines, context lines, file names, line numbers, byte offsets, and separators (for fields and groups of context lines) with escape sequences to display them in color on the terminal. The colors are defined by the environment variable <code>GREP_COLORS</code>. The deprecated environment variable <code>GREP_COLOR</code> is still supported, but its setting does not have priority. <u>WHEN</u> is <code>never</code>, <code>always</code>, or <code>auto</code>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v4z+:J=zz-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --files-without-match", 
                        "grep", 
                        "", 
                        "-L", 
                        "--files-without-match", 
                        "", 
                        "", 
                        "<div>Suppress normal output; instead print the name of each input file from which no output would normally have been printed. The scanning will stop on the first match.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F3yu77}Axt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --files-with-matches", 
                        "grep", 
                        "", 
                        "-l", 
                        "--files-with-matches", 
                        "", 
                        "", 
                        "<div>Suppress normal output; instead print the name of each input file from which output would normally have been printed. The scanning will stop on the first match.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q1Ink/<oZU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --max-count", 
                        "grep", 
                        "", 
                        "-m <u>NUM</u>", 
                        "--max-count=<u>NUM</u>", 
                        "", 
                        "", 
                        "<div>Stop reading a file after <u>NUM</u> matching lines. If the input is standard input from a regular file, and <u>NUM</u> matching lines are output, <code>grep</code> ensures that the standard input is positioned to just after the last matching line before exiting, regardless of the presence of trailing context lines. This enables a calling process to resume a search. When <code>grep</code> stops after <u>NUM</u> matching lines, it outputs any trailing context lines. When the <code>-c</code> or <code>--count</code> option is also used,<code> grep</code> does not output a count greater than <u>NUM</u>. When the <code>-v</code> or <code>--invert-match</code> option is also used, <code>grep</code> stops after outputting <u>NUM </u>non-matching lines.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "weq1`#%1I]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --only-matching", 
                        "grep", 
                        "", 
                        "-o", 
                        "--only-matching", 
                        "", 
                        "", 
                        "Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t=(R1aD;Nd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --quiet", 
                        "grep", 
                        "", 
                        "-q", 
                        "--quiet", 
                        "grep --silent", 
                        "", 
                        "<div>Quiet; do not write anything to standard output. Exit immediately with zero status if any match is found, even if an error was detected. Also see the <code>-s</code> or <code>--no-messages</code> option.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q6tq|<jwvu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --no-messages", 
                        "grep", 
                        "", 
                        "-s", 
                        "--no-messages", 
                        "", 
                        "", 
                        "<div>Suppress error messages about nonexistent or unreadable files.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i&Q&#<@pi]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --byte-offset", 
                        "grep", 
                        "", 
                        "-b", 
                        "--byte-offset", 
                        "", 
                        "", 
                        "Print the 0-based byte offset within the input file before each line of output. If <code>-o</code> (<code>--only-matching</code>) is specified, print the offset of the matching part itself.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c@#p>u~9u0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --with-filename", 
                        "grep", 
                        "", 
                        "-H", 
                        "--with-filename", 
                        "", 
                        "", 
                        "Print the file name for each match. This is the default when there is more than one file to search.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q]Ee-@>6(v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --no-filename", 
                        "grep", 
                        "", 
                        "-h", 
                        "--no-filename", 
                        "", 
                        "", 
                        "Suppress the prefixing of file names on output. This is the default when there is only one file (or only standard input) to search.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DFo/eu+>?p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --label", 
                        "grep", 
                        "", 
                        "", 
                        "--label=<u>LABEL</u>", 
                        "", 
                        "", 
                        "Display input actually coming from standard input as input coming from file <u><strike>LABEL</strike></u>. This is especially useful when implementing tools like <code>zgrep</code>. See also the <code>-H</code> option.", 
                        "<div><div><div>gzip -cd foo.gz | grep --label=foo -H something</div></div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y&9GMam/gJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --line-number", 
                        "grep", 
                        "", 
                        "-n", 
                        "--line-number", 
                        "", 
                        "", 
                        "<div>Prefix each line of output with the 1-based line number within its input file. (This is specified by <b>POSIX</b>.) </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ymMKC<,jqL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --initial-tab", 
                        "grep", 
                        "", 
                        "-T", 
                        "--initial-tab", 
                        "", 
                        "", 
                        "<div>Make sure that the first character of actual line content lies on a tab stop, so that the alignment of tabs looks normal. This is useful with options that prefix their output to the actual content: <code>-H</code>, <code>-n</code>, and<code> -b</code>. In order to improve the probability that lines from a single file will all start at the same column, this also causes the line number and byte offset (if present) to be printed in a minimum size field width. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vy]ccsp&fq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --unix-byte-offsets", 
                        "grep", 
                        "", 
                        "-u", 
                        "--unix-byte-offsets", 
                        "", 
                        "", 
                        "<div>Report Unix-style byte offsets. This switch causes <code>grep</code> to report byte offsets as if the file were a Unix-style text file, i.e., with CR characters stripped off. This will produce results identical to running <code>grep</code> on a Unix machine. This option has no effect unless <code>-b</code> option is also used; it has no effect on platforms other than MS-DOS and MS -Windows. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GS|v6vMSL.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --null", 
                        "grep", 
                        "", 
                        "-Z", 
                        "--null", 
                        "", 
                        "", 
                        "Output a zero byte (the ASCII <code>NUL</code> character) instead of the character that normally follows a file name. For example, <code><strike>grep -lZ</strike></code> outputs a zero byte after each file name instead of the usual newline. This option makes the output unambiguous, even in the presence of file names containing unusual characters like newlines. This option can be used with friends like <code>find -print0, perl -0, sort -z</code>, and <code>xargs -0</code> to process arbitrary file names, even those that contain newline characters.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L2nI>h^zck", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --after-context", 
                        "grep", 
                        "", 
                        "-A <u>NUM</u>", 
                        "--after-context=<u>NUM</u>", 
                        "", 
                        "", 
                        "<div>Print <u>NUM</u> lines of trailing context after matching lines. Places a line containing a group separator (--) between contiguous groups of matches. With the <code>-o</code> or <code>--only-matching</code> option, this has no effect and a warning is given. </div>", 
                        "<div><div><div><code>grep -A 3 -i \"example\" demo_text</code></div></div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ng@ooyj+tv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --before-context", 
                        "grep", 
                        "", 
                        "-B <u>NUM</u>", 
                        "--before-context=<u>NUM</u>", 
                        "", 
                        "", 
                        "<div>Print <u>NUM</u> lines of leading context before matching lines. Places a line containing a group separator (--) between contiguous groups of matches. With the <code>-o</code> or <code>--only-matching</code> option, this has no effect and a warning is given.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ycG)_A4nJ5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --context", 
                        "grep", 
                        "alias", 
                        "-C<u>NUM</u>", 
                        "--context=<u>NUM</u>", 
                        "grep -<u>NUM</u>", 
                        "", 
                        "<div>Print <u>NUM</u> lines of output context. Places a line containing a group separator (<code>--</code>) between contiguous groups of matches. With the <code>-o</code> or <code>--only-matching</code> option, this has no effect and a warning is given.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fOO~>(H,4b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --recursive", 
                        "grep", 
                        "equivalent", 
                        "-(R|r)", 
                        "--recursive", 
                        "grep -d recurse", 
                        "", 
                        "<div>Read all files under each directory, recursively.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EE^gC-P@Wj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --include", 
                        "grep", 
                        "", 
                        "", 
                        "--include=<u>GLOB</u>", 
                        "", 
                        "", 
                        "<div>Search only files whose base name matches <u>GLOB</u> (using wildcard matching as described under <code>&#8209;&#8209;exclude</code>). </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nsoj0z@JT<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --<b>exclude</b>", 
                        "grep", 
                        "", 
                        "", 
                        "--<b>exclude</b>=<u>GLOB</u>", 
                        "", 
                        "", 
                        "Skip files whose base name matches <u>GLOB</u> (using wildcard matching). A file-name glob can use <b><code>*</code></b>, <b><code>?</code></b>, and <b><code>[...]</code></b> as wildcards, and <b><code>\\</code></b> to quote a wildcard or backslash character literally.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I+~`9v<xyV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --<b>exclude-from</b>", 
                        "grep", 
                        "", 
                        "", 
                        "--<b>exclude-from=<u>FILE</u></b>", 
                        "", 
                        "", 
                        "Skip files whose base name matches any of the file-name globs read from <u>FILE</u> (using wildcard matching as described under <code>--exclude</code>).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hl|.]gn7yl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --<b>exclude-dir</b>", 
                        "grep", 
                        "", 
                        "", 
                        "--<b>exclude-dir=<u>DIR</u></b>", 
                        "", 
                        "", 
                        "Exclude directories matching the pattern <u>DIR</u> from recursive searches.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f6s5Wh.Zg@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep -I", 
                        "grep", 
                        "equivalent", 
                        "-I", 
                        "", 
                        "grep&nbsp;--binary-files=without-match", 
                        "", 
                        "<div>Process a binary file as if it did not contain matching data. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I1ZF{3{~r`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --text", 
                        "grep", 
                        "equivalent", 
                        "-a", 
                        "--text", 
                        "--binary-files=text", 
                        "", 
                        "Process a binary file as if it were text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rJ.3d*3Jy(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --line-buffered", 
                        "grep", 
                        "", 
                        "", 
                        "--line-buffered", 
                        "", 
                        "", 
                        "<div>Use line buffering on output. This can cause a performance penalty. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nn4P&%8XWr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --binary", 
                        "grep", 
                        "", 
                        "-U", 
                        "--binary", 
                        "", 
                        "", 
                        "<div>Treat the <code>file</code>(s) as binary. By default, under MS-DOS and MS -Windows, <code>grep</code> guesses the file type by looking at the contents of the first 32KB read from the file. If <code>grep</code> decides the file is a text file, it strips the CR characters from the original file contents (to make regular expressions with <code>^</code> and <code>$</code> work correctly). This option&nbsp;overrules this guesswork, causing all files to be read and passed to the matching mechanism verbatim; if the file is a text file with CR/LF pairs at the end of each line, this will cause some regular expressions to fail. This option has no effect on platforms other than MS-DOS and MS -Windows.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jd0CJ&9k`x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --null-data", 
                        "grep", 
                        "", 
                        "-z", 
                        "--null-data", 
                        "", 
                        "", 
                        "<div>Treat the input as a set of lines, each terminated by a zero byte (the ASCII NUL character) instead of a newline. Like the <code><strike>-Z</strike></code> or <code>--null</code> option, this option can be used with commands like <code>sort -z</code> to process arbitrary file names. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jQ=)eCIY+o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "grep"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --version", 
                        "rsync", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "<div>Print&nbsp;version number and exit.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G00aqKIeET", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --verbose", 
                        "rsync", 
                        "", 
                        "-v", 
                        "--verbose", 
                        "", 
                        "", 
                        "<div> This option increases the amount of information you are given during the transfer.</div>", 
                        "<div>By default, rsync works silently. A single&nbsp;<code>-v</code>&nbsp;will give you information about what files are being transferred and a brief summary at the end. Two&nbsp;<code>-v</code>&nbsp;options will give you information on what files are being skipped and slightly more information at the end. More than two&nbsp;<code>-v</code>&nbsp;options should only be used if you are debugging rsync.</div><div><br /></div><div>Note that the names of the transferred files that are output are done using&nbsp;a default&nbsp;<code>--out-format</code>&nbsp;of&nbsp;<code>%n%L</code>, which tells you just the name of the file and, if the item is a link, where it points. At the single&nbsp;<code>-v</code>&nbsp;level of verbosity, this does not mention when a file gets its attributes changed. If you ask for an itemized list of changed attributes (either&nbsp;<code>--itemize-changes</code>&nbsp;or adding&nbsp;<code>%i</code>&nbsp;to the&nbsp;<code>--out-format</code>&nbsp;setting), the output (on the client) increases to mention all items that are changed in any way. See the&nbsp;<code>--out-format</code>&nbsp;option for more details.</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ve5`N<qgim", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --no-<i>OPTION</i>", 
                        "rsync", 
                        "", 
                        "", 
                        "<b>--no-<i>OPTION</i></b>", 
                        "", 
                        "", 
                        "<p>You may turn off one or more implied options by prefixing the option name with <code><strike>no-</strike></code>. </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY2NDEwMzMsICJpZCI6ICIxNDk0Mzk1MDAwMjIzLTAwNiIsICJtZCI6ICJZb3UgbWF5IHR1cm4gb2ZmIG9uZSBvciBtb3JlIGltcGxpZWQgb3B0aW9ucyBieSBwcmVmaXhpbmcgdGhlIG9wdGlvbiBuYW1lIHdpdGggYG5vLWAuIFxuIn0=---->", 
                        "<p>Not all options may be prefixed with a <code>no-</code>: only options that are implied by other options (e.g. <code>--no-D</code>, <code>--no-perms</code>) or have different defaults in various circumstances (e.g. <code>--no-whole-file</code>, <code>--no-blocking-io</code>, <code>--no-dirs</code>). You may specify either the short or the long option name after the <code>no-</code> prefix (e.g. <code>--no-R</code> is the same as <code>--no-relative</code>).</p>\n<p>For example: if you want to use <code>-a</code> (<code>--archive</code>) but don't want <code>-o</code> (<code>--owner</code>), instead of converting <code>-a</code> into <code>-rlptgD</code>, you could specify <code>-a --no-o</code> (or <code>-a --no-owner</code>).</p>\n<p>The order of the options is important: if you specify <code>--no-r -a</code>, the <code>-r</code> option would end up being turned on, the opposite of <code>-a --no-r</code>. Note also that the side-effects of the <code>--files-from</code> option are NOT positional, as it affects the default state of several options and slightly changes the meaning of <code>-a</code> (see the <code>--files-from</code> option for more details).</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY2NDEwNDAsICJpZCI6ICIxNDk0Mzk1MDAwMjIzLTAwNyIsICJtZCI6ICJOb3QgYWxsIG9wdGlvbnMgbWF5IGJlIHByZWZpeGVkIHdpdGggYSBgbm8tYDogb25seSBvcHRpb25zIHRoYXQgYXJlIGltcGxpZWQgYnkgb3RoZXIgb3B0aW9ucyAoZS5nLiBgLS1uby1EYCwgYC0tbm8tcGVybXNgKSBvciBoYXZlIGRpZmZlcmVudCBkZWZhdWx0cyBpbiB2YXJpb3VzIGNpcmN1bXN0YW5jZXMgKGUuZy4gYC0tbm8td2hvbGUtZmlsZWAsIGAtLW5vLWJsb2NraW5nLWlvYCwgYC0tbm8tZGlyc2ApLiBZb3UgbWF5IHNwZWNpZnkgZWl0aGVyIHRoZSBzaG9ydCBvciB0aGUgbG9uZyBvcHRpb24gbmFtZSBhZnRlciB0aGUgYG5vLWAgcHJlZml4IChlLmcuIGAtLW5vLVJgIGlzIHRoZSBzYW1lIGFzIGAtLW5vLXJlbGF0aXZlYCkuXG4gIFxuRm9yIGV4YW1wbGU6IGlmIHlvdSB3YW50IHRvIHVzZSBgLWFgIChgLS1hcmNoaXZlYCkgYnV0IGRvbiZhcG9zO3Qgd2FudCBgLW9gIChgLS1vd25lcmApLCBpbnN0ZWFkIG9mIGNvbnZlcnRpbmcgYC1hYCBpbnRvIGAtcmxwdGdEYCwgeW91IGNvdWxkIHNwZWNpZnkgYC1hIC0tbm8tb2AgKG9yIGAtYSAtLW5vLW93bmVyYCkuXG4gIFxuVGhlIG9yZGVyIG9mIHRoZSBvcHRpb25zIGlzIGltcG9ydGFudDogaWYgeW91IHNwZWNpZnkgYC0tbm8tciAtYWAsIHRoZSBgLXJgIG9wdGlvbiB3b3VsZCBlbmQgdXAgYmVpbmcgdHVybmVkIG9uLCB0aGUgb3Bwb3NpdGUgb2YgYC1hIC0tbm8tcmAuIE5vdGUgYWxzbyB0aGF0IHRoZSBzaWRlLWVmZmVjdHMgb2YgdGhlIGAtLWZpbGVzLWZyb21gIG9wdGlvbiBhcmUgTk9UIHBvc2l0aW9uYWwsIGFzIGl0IGFmZmVjdHMgdGhlIGRlZmF1bHQgc3RhdGUgb2Ygc2V2ZXJhbCBvcHRpb25zIGFuZCBzbGlnaHRseSBjaGFuZ2VzIHRoZSBtZWFuaW5nIG9mIGAtYWAgKHNlZSB0aGUgYC0tZmlsZXMtZnJvbWAgb3B0aW9uIGZvciBtb3JlIGRldGFpbHMpLlxuIn0=---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oo)zCW%YRj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--size-only</b>", 
                        "rsync", 
                        "", 
                        "", 
                        "<b>--size-only</b>", 
                        "", 
                        "", 
                        "<div>This modifies rsync's \"quick check\" algorithm for finding files that need to be transferred, changing it from the default of transferring files with either a changed size or a changed last-modified time to<i> just looking for files that have changed in size</i>. This is useful when starting to use rsync after using another mirroring system which may not preserve timestamps exactly. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tjD,Qpt4Zr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--modify-window</b>", 
                        "rsync", 
                        "", 
                        "", 
                        "<b>--modify-window=<i>N</i></b>", 
                        "", 
                        "", 
                        "<div>When comparing two timestamps, rsync treats the timestamps as being equal if they differ by no more than the given value. This is normally 0 (for an exact match), but you may find it useful to set this to a larger value in some situations. In particular, when transferring to or from an MS Windows FAT filesystem (which represents times with a 2-second resolution), <code><strike>--modify-window</strike>=1</code> is useful (allowing times to differ by up to 1 second).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C,{_ER!MpE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --recursive", 
                        "rsync", 
                        "", 
                        "-r", 
                        "--recursive", 
                        "", 
                        "", 
                        "<p>This tells rsync to copy directories recursively. See also <code>--dirs</code> (<code>-d</code>).</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY2ODk5NjYsICJpZCI6ICIxNDk0Mzk1MDAwMjI2LTAwNiIsICJtZCI6ICJUaGlzIHRlbGxzIHJzeW5jIHRvIGNvcHkgZGlyZWN0b3JpZXMgcmVjdXJzaXZlbHkuIFNlZSBhbHNvIGAtLWRpcnNgIChgLWRgKS5cbiJ9---->", 
                        "<p>Beginning with rsync 3.0.0, the recursive algorithm used is now an incremental scan that uses much less memory than before and begins the transfer after the scanning of the first few directories have been completed. This incremental scan only affects our recursion algorithm, and does not change a non-recursive transfer. It is also only possible when both ends of the transfer are at least version 3.0.0.</p>\n<p>Some options require <code>rsync</code> to know the full file list, so these options disable the incremental recursion mode. These include: <code>--delete-before</code>, <code>--delete-after</code>, <code>--prune-empty-dirs</code>, and <code>--delay-updates</code>. Because of this, the default delete mode when you specify <code>--delete</code> is now <code>--delete-during</code> when both ends of the connection are at least 3.0.0 (use <code>--del</code> or <code>--delete-during</code> to request this improved deletion mode explicitly). See also the <code>--delete-delay</code> option that is a better choice than using <code>--delete-after</code>.<br />\nIncremental recursion can be disabled using the <code>--no-inc-recursive</code> option or its shorter <code>--no-i-r</code> alias.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY2ODk5NDQsICJpZCI6ICIxNDk0Mzk1MDAwMjI2LTAwNyIsICJtZCI6ICJCZWdpbm5pbmcgd2l0aCByc3luYyAzLjAuMCwgdGhlIHJlY3Vyc2l2ZSBhbGdvcml0aG0gdXNlZCBpcyBub3cgYW4gaW5jcmVtZW50YWwgc2NhbiB0aGF0IHVzZXMgbXVjaCBsZXNzIG1lbW9yeSB0aGFuIGJlZm9yZSBhbmQgYmVnaW5zIHRoZSB0cmFuc2ZlciBhZnRlciB0aGUgc2Nhbm5pbmcgb2YgdGhlIGZpcnN0IGZldyBkaXJlY3RvcmllcyBoYXZlIGJlZW4gY29tcGxldGVkLiBUaGlzIGluY3JlbWVudGFsIHNjYW4gb25seSBhZmZlY3RzIG91ciByZWN1cnNpb24gYWxnb3JpdGhtLCBhbmQgZG9lcyBub3QgY2hhbmdlIGEgbm9uLXJlY3Vyc2l2ZSB0cmFuc2Zlci4gSXQgaXMgYWxzbyBvbmx5IHBvc3NpYmxlIHdoZW4gYm90aCBlbmRzIG9mIHRoZSB0cmFuc2ZlciBhcmUgYXQgbGVhc3QgdmVyc2lvbiAzLjAuMC5cbiAgXG5Tb21lIG9wdGlvbnMgcmVxdWlyZSBgcnN5bmNgIHRvIGtub3cgdGhlIGZ1bGwgZmlsZSBsaXN0LCBzbyB0aGVzZSBvcHRpb25zIGRpc2FibGUgdGhlIGluY3JlbWVudGFsIHJlY3Vyc2lvbiBtb2RlLiBUaGVzZSBpbmNsdWRlOiBgLS1kZWxldGUtYmVmb3JlYCwgYC0tZGVsZXRlLWFmdGVyYCwgYC0tcHJ1bmUtZW1wdHktZGlyc2AsIGFuZCBgLS1kZWxheS11cGRhdGVzYC4gQmVjYXVzZSBvZiB0aGlzLCB0aGUgZGVmYXVsdCBkZWxldGUgbW9kZSB3aGVuIHlvdSBzcGVjaWZ5IGAtLWRlbGV0ZWAgaXMgbm93IGAtLWRlbGV0ZS1kdXJpbmdgIHdoZW4gYm90aCBlbmRzIG9mIHRoZSBjb25uZWN0aW9uIGFyZSBhdCBsZWFzdCAzLjAuMCAodXNlIGAtLWRlbGAgb3IgYC0tZGVsZXRlLWR1cmluZ2AgdG8gcmVxdWVzdCB0aGlzIGltcHJvdmVkIGRlbGV0aW9uIG1vZGUgZXhwbGljaXRseSkuIFNlZSBhbHNvIHRoZSBgLS1kZWxldGUtZGVsYXlgIG9wdGlvbiB0aGF0IGlzIGEgYmV0dGVyIGNob2ljZSB0aGFuIHVzaW5nIGAtLWRlbGV0ZS1hZnRlcmAuXG5JbmNyZW1lbnRhbCByZWN1cnNpb24gY2FuIGJlIGRpc2FibGVkIHVzaW5nIHRoZSBgLS1uby1pbmMtcmVjdXJzaXZlYCBvcHRpb24gb3IgaXRzIHNob3J0ZXIgYC0tbm8taS1yYCBhbGlhcy5cbiJ9---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H}i>Efw#;k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --relative", 
                        "rsync", 
                        "", 
                        "-R", 
                        "--relative", 
                        "", 
                        "", 
                        "<div>Use relative paths. This means that the full path names specified on the command line are sent to the server rather than just the last parts of the filenames. This is particularly useful when you want to send several different directories at the same time.</div>", 
                        "<p>For example, if you used this command:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -av /foo/bar/baz.c remote:/tmp/\n</pre></div>\n<p>this would create a file named <code>baz.c</code> in <code>/tmp/</code> on the remote machine. If instead you used</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avR /foo/bar/baz.c remote:/tmp/\n</pre></div>\n<p>then a file named <code>/tmp/foo/bar/baz.c</code> would be created on the remote machine, preserving its full path. These extra path elements are called \"implied directories\" (i.e. the \"foo\" and the \"foo/bar\" directories in the above example).</p>\n<p>Beginning with <strong>rsync</strong> 3.0.0, <strong>rsync</strong> always sends these implied directories as real directories in the file list, even if a path element is really a symlink on the sending side. This prevents some really unexpected behaviors when copying the full path of a file that you didn't realize had a symlink in its path. If you want to duplicate a server-side symlink, include both the symlink via its path, and referent directory via its real path. If you're dealing with an older <strong>rsync</strong> on the sending side, you may need to use the <strong><code>--no-implied-dirs</code></strong> option.</p>\n<p>It is also possible to limit the amount of path information that is sent as implied directories for each path you specify. With a modern <strong>rsync</strong> on the sending side (beginning with 2.6.7), you can insert a dot and a slash into the source path, like this:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avR /foo/./bar/baz.c remote:/tmp/\n</pre></div>\n<p>That would create <strong> /tmp/bar/baz.c</strong> on the remote machine. (Note that the dot must be followed by a slash, so \"/foo/.\" would not be abbreviated.) For older <strong>rsync</strong> versions, you would need to use a chdir to limit the source path. For example, when pushing files:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">cd</span> /foo<span style=\"color: #d0d0d0\">;</span> rsync -avR bar/baz.c remote:/tmp/<span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>(Note that the parens put the two commands into a sub-shell, so that the <code>cd</code> command doesn't remain in effect for future commands.) If you're pulling files from an older rsync, use this idiom (but only for a non-daemon transfer):</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avR --rsync-path<span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"cd /foo; rsync\"</span> <span style=\"color: #ed9d13\">\\</span>\nremote:bar/baz.c /tmp/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY2OTAwMzgsICJpZCI6ICIxNDk0Mzk1MDAwMjI3LTAwNyIsICJtZCI6ICJGb3IgZXhhbXBsZSwgaWYgeW91IHVzZWQgdGhpcyBjb21tYW5kOlxuICBcbiAgICA6OjpzaFxuICAgIHJzeW5jIC1hdiAvZm9vL2Jhci9iYXouYyByZW1vdGU6L3RtcC9cbiAgXG50aGlzIHdvdWxkIGNyZWF0ZSBhIGZpbGUgbmFtZWQgYGJhei5jYCBpbiBgL3RtcC9gIG9uIHRoZSByZW1vdGUgbWFjaGluZS4gSWYgaW5zdGVhZCB5b3UgdXNlZFxuICBcbiAgICA6OjpzaFxuICAgIHJzeW5jIC1hdlIgL2Zvby9iYXIvYmF6LmMgcmVtb3RlOi90bXAvXG4gIFxudGhlbiBhIGZpbGUgbmFtZWQgYC90bXAvZm9vL2Jhci9iYXouY2Agd291bGQgYmUgY3JlYXRlZCBvbiB0aGUgcmVtb3RlIG1hY2hpbmUsIHByZXNlcnZpbmcgaXRzIGZ1bGwgcGF0aC4gVGhlc2UgZXh0cmEgcGF0aCBlbGVtZW50cyBhcmUgY2FsbGVkICZxdW90O2ltcGxpZWQgZGlyZWN0b3JpZXMmcXVvdDsgKGkuZS4gdGhlICZxdW90O2ZvbyZxdW90OyBhbmQgdGhlICZxdW90O2Zvby9iYXImcXVvdDsgZGlyZWN0b3JpZXMgaW4gdGhlIGFib3ZlIGV4YW1wbGUpLlxuICBcbkJlZ2lubmluZyB3aXRoICoqcnN5bmMqKiAzLjAuMCwgKipyc3luYyoqIGFsd2F5cyBzZW5kcyB0aGVzZSBpbXBsaWVkIGRpcmVjdG9yaWVzIGFzIHJlYWwgZGlyZWN0b3JpZXMgaW4gdGhlIGZpbGUgbGlzdCwgZXZlbiBpZiBhIHBhdGggZWxlbWVudCBpcyByZWFsbHkgYSBzeW1saW5rIG9uIHRoZSBzZW5kaW5nIHNpZGUuIFRoaXMgcHJldmVudHMgc29tZSByZWFsbHkgdW5leHBlY3RlZCBiZWhhdmlvcnMgd2hlbiBjb3B5aW5nIHRoZSBmdWxsIHBhdGggb2YgYSBmaWxlIHRoYXQgeW91IGRpZG4mYXBvczt0IHJlYWxpemUgaGFkIGEgc3ltbGluayBpbiBpdHMgcGF0aC4gSWYgeW91IHdhbnQgdG8gZHVwbGljYXRlIGEgc2VydmVyLXNpZGUgc3ltbGluaywgaW5jbHVkZSBib3RoIHRoZSBzeW1saW5rIHZpYSBpdHMgcGF0aCwgYW5kIHJlZmVyZW50IGRpcmVjdG9yeSB2aWEgaXRzIHJlYWwgcGF0aC4gSWYgeW91JmFwb3M7cmUgZGVhbGluZyB3aXRoIGFuIG9sZGVyICoqcnN5bmMqKiBvbiB0aGUgc2VuZGluZyBzaWRlLCB5b3UgbWF5IG5lZWQgdG8gdXNlIHRoZSAqKmAtLW5vLWltcGxpZWQtZGlyc2AqKiBvcHRpb24uXG4gIFxuSXQgaXMgYWxzbyBwb3NzaWJsZSB0byBsaW1pdCB0aGUgYW1vdW50IG9mIHBhdGggaW5mb3JtYXRpb24gdGhhdCBpcyBzZW50IGFzIGltcGxpZWQgZGlyZWN0b3JpZXMgZm9yIGVhY2ggcGF0aCB5b3Ugc3BlY2lmeS4gV2l0aCBhIG1vZGVybiAqKnJzeW5jKiogb24gdGhlIHNlbmRpbmcgc2lkZSAoYmVnaW5uaW5nIHdpdGggMi42LjcpLCB5b3UgY2FuIGluc2VydCBhIGRvdCBhbmQgYSBzbGFzaCBpbnRvIHRoZSBzb3VyY2UgcGF0aCwgbGlrZSB0aGlzOlxuICBcbiAgICA6OjpzaFxuICAgIHJzeW5jIC1hdlIgL2Zvby8uL2Jhci9iYXouYyByZW1vdGU6L3RtcC9cbiAgXG5UaGF0IHdvdWxkIGNyZWF0ZSAqKiAvdG1wL2Jhci9iYXouYyoqIG9uIHRoZSByZW1vdGUgbWFjaGluZS4gKE5vdGUgdGhhdCB0aGUgZG90IG11c3QgYmUgZm9sbG93ZWQgYnkgYSBzbGFzaCwgc28gJnF1b3Q7L2Zvby8uJnF1b3Q7IHdvdWxkIG5vdCBiZSBhYmJyZXZpYXRlZC4pIEZvciBvbGRlciAqKnJzeW5jKiogdmVyc2lvbnMsIHlvdSB3b3VsZCBuZWVkIHRvIHVzZSBhIGNoZGlyIHRvIGxpbWl0IHRoZSBzb3VyY2UgcGF0aC4gRm9yIGV4YW1wbGUsIHdoZW4gcHVzaGluZyBmaWxlczpcbiAgXG4gICAgOjo6c2hcbiAgICAoY2QgL2ZvbzsgcnN5bmMgLWF2UiBiYXIvYmF6LmMgcmVtb3RlOi90bXAvKVxuICBcbiAgXG4oTm90ZSB0aGF0IHRoZSBwYXJlbnMgcHV0IHRoZSB0d28gY29tbWFuZHMgaW50byBhIHN1Yi1zaGVsbCwgc28gdGhhdCB0aGUgYGNkYCBjb21tYW5kIGRvZXNuJmFwb3M7dCByZW1haW4gaW4gZWZmZWN0IGZvciBmdXR1cmUgY29tbWFuZHMuKSBJZiB5b3UmYXBvcztyZSBwdWxsaW5nIGZpbGVzIGZyb20gYW4gb2xkZXIgcnN5bmMsIHVzZSB0aGlzIGlkaW9tIChidXQgb25seSBmb3IgYSBub24tZGFlbW9uIHRyYW5zZmVyKTpcbiAgXG4gICAgOjo6c2hcbiAgICByc3luYyAtYXZSIC0tcnN5bmMtcGF0aD0mcXVvdDtjZCAvZm9vOyByc3luYyZxdW90OyBcXFxuICAgIHJlbW90ZTpiYXIvYmF6LmMgL3RtcC9cbiJ9---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zCZ0XP~}v/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --info", 
                        "rsync", 
                        "", 
                        "", 
                        "--info=FLAGS", 
                        "", 
                        "", 
                        "fine-grained informational verbosity", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lrO>RK9|s&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --debug", 
                        "rsync", 
                        "", 
                        "", 
                        "--debug=FLAGS", 
                        "", 
                        "", 
                        "<ul>\n<li style=\"text-align: left; \">Fine-grained control over the debug output you want to see. Flag names may be followed by a level number, with <code>0</code> meaning to silence that output, <code>1</code> being the default output level, and higher numbers increasing the output of that flag.</li>\n<li style=\"text-align: left; \">Some debug messages will only be output when <code>--msgs2stderr</code> is specified, especially those pertaining to I/O and buffer debugging.</li>\n<li style=\"text-align: left; \">Use <code><strike>--debug</strike>=help</code> to see all the available flag names, what they output, and what flag names are added for each increase in the verbose level.</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTczOTY0MzgsICJpZCI6ICIxNDk0Mzk1MDAwMjI5LTAwNiIsICJtZCI6ICIqIEZpbmUtZ3JhaW5lZCBjb250cm9sIG92ZXIgdGhlIGRlYnVnIG91dHB1dCB5b3Ugd2FudCB0byBzZWUuIEZsYWcgbmFtZXMgbWF5IGJlIGZvbGxvd2VkIGJ5IGEgbGV2ZWwgbnVtYmVyLCB3aXRoIGAwYCBtZWFuaW5nIHRvIHNpbGVuY2UgdGhhdCBvdXRwdXQsIGAxYCBiZWluZyB0aGUgZGVmYXVsdCBvdXRwdXQgbGV2ZWwsIGFuZCBoaWdoZXIgbnVtYmVycyBpbmNyZWFzaW5nIHRoZSBvdXRwdXQgb2YgdGhhdCBmbGFnLlxuKiBTb21lIGRlYnVnIG1lc3NhZ2VzIHdpbGwgb25seSBiZSBvdXRwdXQgd2hlbiBgLS1tc2dzMnN0ZGVycmAgaXMgc3BlY2lmaWVkLCBlc3BlY2lhbGx5IHRob3NlIHBlcnRhaW5pbmcgdG8gSS9PIGFuZCBidWZmZXIgZGVidWdnaW5nLlxuKiBVc2UgYC0tZGVidWc9aGVscGAgdG8gc2VlIGFsbCB0aGUgYXZhaWxhYmxlIGZsYWcgbmFtZXMsIHdoYXQgdGhleSBvdXRwdXQsIGFuZCB3aGF0IGZsYWcgbmFtZXMgYXJlIGFkZGVkIGZvciBlYWNoIGluY3JlYXNlIGluIHRoZSB2ZXJib3NlIGxldmVsLlxuIn0=---->", 
                        "<p>Some examples:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avvv --debug<span style=\"color: #d0d0d0\">=</span>none src/ dest/\nrsync -avA --del --debug<span style=\"color: #d0d0d0\">=</span>del2,acl src/ dest/\n</pre></div>\n<p>This option was added to <strong>3.1.0</strong>, so an older rsync on the server side might reject your attempts at fine-grained control (if one or more flags needed to be send to the server and the server was too old to understand them). See also the \"max verbosity\" caveat for dealing with a daemon. </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTczOTY0NTcsICJpZCI6ICIxNDk0Mzk1MDAwMjI5LTAwNyIsICJtZCI6ICJTb21lIGV4YW1wbGVzOlxuICBcbiAgICA6OjpiYXNoXG4gICAgcnN5bmMgLWF2dnYgLS1kZWJ1Zz1ub25lIHNyYy8gZGVzdC9cbiAgICByc3luYyAtYXZBIC0tZGVsIC0tZGVidWc9ZGVsMixhY2wgc3JjLyBkZXN0L1xuICBcblRoaXMgb3B0aW9uIHdhcyBhZGRlZCB0byAqKjMuMS4wKiosIHNvIGFuIG9sZGVyIHJzeW5jIG9uIHRoZSBzZXJ2ZXIgc2lkZSBtaWdodCByZWplY3QgeW91ciBhdHRlbXB0cyBhdCBmaW5lLWdyYWluZWQgY29udHJvbCAoaWYgb25lIG9yIG1vcmUgZmxhZ3MgbmVlZGVkIHRvIGJlIHNlbmQgdG8gdGhlIHNlcnZlciBhbmQgdGhlIHNlcnZlciB3YXMgdG9vIG9sZCB0byB1bmRlcnN0YW5kIHRoZW0pLiBTZWUgYWxzbyB0aGUgJnF1b3Q7bWF4IHZlcmJvc2l0eSZxdW90OyBjYXZlYXQgZm9yIGRlYWxpbmcgd2l0aCBhIGRhZW1vbi4gXG4ifQ==---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hj1ZK@ja5F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --msgs2stderr", 
                        "rsync", 
                        "", 
                        "", 
                        "--msgs2stderr", 
                        "", 
                        "", 
                        "special output handling for debugging", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QHr3fB+*^v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --quiet", 
                        "rsync", 
                        "", 
                        "-q", 
                        "--quiet", 
                        "", 
                        "", 
                        "<div>This option decreases the amount of information you are given during the transfer, notably suppressing information messages from the remote server. This option is useful when invoking rsync from cron.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B,NbV=EqZt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --no-motd", 
                        "rsync", 
                        "", 
                        "", 
                        "--no-motd", 
                        "", 
                        "", 
                        "<div>This option affects the information that is output by the client at the start of a daemon transfer. This suppresses the <strike>message of the day</strike>, but it also affects the list of modules that the daemon sends in response to the <code>rsync host::</code> request (due to a limitation in the rsync protocol), so omit this option if you want to request the list of modules from the daemon.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "furD>|f?E(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --checksum", 
                        "rsync", 
                        "", 
                        "-c", 
                        "--checksum", 
                        "", 
                        "", 
                        "<p>This changes the way rsync checks if the files have been changed and are in need of a transfer. Without this option, <code>rsync</code> uses a \"quick check\" that (by default) checks if each file's size and time of last modification match between the sender and receiver. <em>This option changes this to compare a 128-bit checksum for each file that has a matching size.</em></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY2ODkzMjIsICJpZCI6ICIxNDk0Mzk1MDAwMjMzLTAwNiIsICJtZCI6ICJUaGlzIGNoYW5nZXMgdGhlIHdheSByc3luYyBjaGVja3MgaWYgdGhlIGZpbGVzIGhhdmUgYmVlbiBjaGFuZ2VkIGFuZCBhcmUgaW4gbmVlZCBvZiBhIHRyYW5zZmVyLiBXaXRob3V0IHRoaXMgb3B0aW9uLCBgcnN5bmNgIHVzZXMgYSAmcXVvdDtxdWljayBjaGVjayZxdW90OyB0aGF0IChieSBkZWZhdWx0KSBjaGVja3MgaWYgZWFjaCBmaWxlJmFwb3M7cyBzaXplIGFuZCB0aW1lIG9mIGxhc3QgbW9kaWZpY2F0aW9uIG1hdGNoIGJldHdlZW4gdGhlIHNlbmRlciBhbmQgcmVjZWl2ZXIuIF9UaGlzIG9wdGlvbiBjaGFuZ2VzIHRoaXMgdG8gY29tcGFyZSBhIDEyOC1iaXQgY2hlY2tzdW0gZm9yIGVhY2ggZmlsZSB0aGF0IGhhcyBhIG1hdGNoaW5nIHNpemUuX1xuIn0=---->", 
                        "<div>Generating the checksums means that both sides will expend a lot of disk I/O reading all the data in the files in the transfer (and this is prior to any reading that will be done to transfer changed files), so this can slow things down significantly.</div><div>The sending side generates its checksums while it is doing the file-system</div><div>scan that builds the list of the available files. The receiver generates its checksums when it is scanning for changed files, and will checksum any file that has the same size as the corresponding sender's file: files with either a changed size or a changed checksum are selected for transfer.</div><div>Note that rsync always verifies that each transferred file was</div><div>correctly reconstructed on the receiving side by checking a whole-file checksum that is generated as the file is transferred, but that automatic after-the-transfer verification has nothing to do with this option's before-the-transfer \"Does this file need to be updated?\" check.</div><div>For protocol 30 and beyond (first supported in 3.0.0), the checksum used is</div><div>MD5. For older protocols, the checksum used is MD4.</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BL_A9we3^.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --archive", 
                        "rsync", 
                        "expanded form", 
                        "-a", 
                        "--archive", 
                        "rsync <code>-rlptgoD</code>", 
                        "", 
                        "<div>Recursion and preserve almost everything except&nbsp;hardlinks, because finding multiply-linked files is expensive. You must separately specify&nbsp;<code>-H</code>.&nbsp;When <code>--files-from</code> is specified,&nbsp;<code>-r</code> is not implied.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OHAH}mCJaB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --no-implied-dirs", 
                        "rsync", 
                        "", 
                        "", 
                        "--no-implied-dirs", 
                        "", 
                        "", 
                        "don't send implied dirs with <code>--relative</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d?)b{vXK-%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --backup", 
                        "rsync", 
                        "", 
                        "-b", 
                        "--backup", 
                        "", 
                        "", 
                        "make backups (see <code>--suffix</code> & <code>--backup-dir</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c62Uy}atO}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --backup-dir", 
                        "rsync", 
                        "", 
                        "", 
                        "--backup-dir=DIR", 
                        "", 
                        "", 
                        "make backups into hierarchy based in <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u(~AZnUvE*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --suffix", 
                        "rsync", 
                        "", 
                        "", 
                        "--suffix=SUFFIX", 
                        "", 
                        "", 
                        "backup suffix (default <code>~</code> w/o <code>--backup-dir</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ji)8&}K=q9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --update", 
                        "rsync", 
                        "", 
                        "-u", 
                        "--update", 
                        "", 
                        "", 
                        "skip files that are newer on the receiver", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iMPj4~]`/n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --inplace", 
                        "rsync", 
                        "", 
                        "", 
                        "--inplace", 
                        "", 
                        "", 
                        "update destination files in-place", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x4n}[=kj`z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --append", 
                        "rsync", 
                        "", 
                        "", 
                        "--append", 
                        "", 
                        "", 
                        "append data onto shorter files<div><br /></div><div>This causes rsync to update a file by appending data onto the end of the\n file, which presumes that the data that already exists on the receiving\n side is\nidentical with the start of the file on the sending side. If a file \nneeds to be transferred and its size on the receiver is the same or \nlonger than the size on\nthe sender, the file is skipped. This does not interfere with the \nupdating of a file's non-content attributes (e.g. permissions, \nownership, etc.) when the file\ndoes not need to be transferred, nor does it affect the updating of any \nnon-regular files. Implies <code>--inplace</code>, but does not conflict with <code>--sparse</code>\n(since it is always extending a file's length).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OrhH3qPQZa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --append-verify", 
                        "rsync", 
                        "", 
                        "", 
                        "--append-verify", 
                        "", 
                        "", 
                        "<code><strike>--append</strike></code> w/old data in file checksum<div><br /></div><div>This works just like the <code><strike>--append</strike></code> option, but the existing data on the receiving side is included in the full-file checksum verification step, which will cause a file to be resent if the final verification step fails (<code>rsync</code> uses a normal, non-<strike>appending</strike> <code>--inplace</code> transfer for the resend).\nNote: prior to <code>rsync</code> <b>3.0.0</b>, the <code><strike>--append</strike></code> option worked like\n<code><strike>--append-verify</strike></code>, so if you are interacting with an older <code>rsync</code> (or the transfer is using a protocol prior to<b> 30</b>), specifying either append option will initiate an <code><strike>--append-verify</strike></code> transfer. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D:Gh<(;D3f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --dirs", 
                        "rsync", 
                        "", 
                        "-d", 
                        "--dirs", 
                        "", 
                        "", 
                        "transfer directories without recursing", 
                        "<p>Tell the sending side to include any directories that are encountered. Unlike <code>--recursive</code>, a directory's contents are not copied unless the directory name specified is <code>.</code>&nbsp;or ends with a trailing slash (e.g. <code>.</code>, <code>dir/.</code>, <code>dir/</code>, etc.). Without this option or the <code>--recursive</code> option, rsync will skip all directories it encounters (and output a message to that effect for each one). If you specify both <code>--dirs</code> and <code>--recursive</code>, <code>--recursive</code> takes precedence. The <code>--dirs</code> option is implied by the <code>--files-from</code> option or the <code>--list-only</code> option (including an implied <code>--list-only</code> usage) if <code>--recursive</code> wasn't specified (so that directories are seen in the listing). Specify <code>--no-dirs</code> (or <code>--no-d</code>) if you want to turn this off. There is also a backward-compatibility helper option, <code>--old-dirs</code> (or <code>--old-d</code>) that tells <code>rsync</code> to use a hack of <code>-r</code> <code>--exclude='/*/*'</code>&nbsp;to get an older <code>rsync</code> to list a single directory without recursing.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYyMTczMDIsICJpZCI6ICIxNDk0Mzk1MDAwMjQzLTAwNyIsICJtZCI6ICJUZWxsIHRoZSBzZW5kaW5nIHNpZGUgdG8gaW5jbHVkZSBhbnkgZGlyZWN0b3JpZXMgdGhhdCBhcmUgZW5jb3VudGVyZWQuIFVubGlrZSBgLS1yZWN1cnNpdmVgLCBhIGRpcmVjdG9yeSZhcG9zO3MgY29udGVudHMgYXJlIG5vdCBjb3BpZWQgdW5sZXNzIHRoZSBkaXJlY3RvcnkgbmFtZSBzcGVjaWZpZWQgaXMgYGxxLnJxYCBvciBlbmRzIHdpdGggYSB0cmFpbGluZyBzbGFzaCAoZS5nLiBgbHEucnFgLCBgbHFkaXIvLnJxYCwgYGxxZGlyL3JxYCwgZXRjLikuIFdpdGhvdXQgdGhpcyBvcHRpb24gb3IgdGhlIGAtLXJlY3Vyc2l2ZWAgb3B0aW9uLCByc3luYyB3aWxsIHNraXAgYWxsIGRpcmVjdG9yaWVzIGl0IGVuY291bnRlcnMgKGFuZCBvdXRwdXQgYSBtZXNzYWdlIHRvIHRoYXQgZWZmZWN0IGZvciBlYWNoIG9uZSkuIElmIHlvdSBzcGVjaWZ5IGJvdGggYC0tZGlyc2AgYW5kIGAtLXJlY3Vyc2l2ZWAsIGAtLXJlY3Vyc2l2ZWAgdGFrZXMgcHJlY2VkZW5jZS4gVGhlIGAtLWRpcnNgIG9wdGlvbiBpcyBpbXBsaWVkIGJ5IHRoZSBgLS1maWxlcy1mcm9tYCBvcHRpb24gb3IgdGhlIGAtLWxpc3Qtb25seWAgb3B0aW9uIChpbmNsdWRpbmcgYW4gaW1wbGllZCBgLS1saXN0LW9ubHlgIHVzYWdlKSBpZiBgLS1yZWN1cnNpdmVgIHdhc24mYXBvczt0IHNwZWNpZmllZCAoc28gdGhhdCBkaXJlY3RvcmllcyBhcmUgc2VlbiBpbiB0aGUgbGlzdGluZykuIFNwZWNpZnkgYC0tbm8tZGlyc2AgKG9yIGAtLW5vLWRgKSBpZiB5b3Ugd2FudCB0byB0dXJuIHRoaXMgb2ZmLiBUaGVyZSBpcyBhbHNvIGEgYmFja3dhcmQtY29tcGF0aWJpbGl0eSBoZWxwZXIgb3B0aW9uLCBgLS1vbGQtZGlyc2AgKG9yIGAtLW9sZC1kYCkgdGhhdCB0ZWxscyBgcnN5bmNgIHRvIHVzZSBhIGhhY2sgb2YgYGxxLXJgIGAtLWV4Y2x1ZGU9JmFwb3M7LyovKiZhcG9zO3JxYCB0byBnZXQgYW4gb2xkZXIgYHJzeW5jYCB0byBsaXN0IGEgc2luZ2xlIGRpcmVjdG9yeSB3aXRob3V0IHJlY3Vyc2luZy5cbiJ9---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w3x:-Qr-jh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --links", 
                        "rsync", 
                        "", 
                        "-l", 
                        "--links", 
                        "", 
                        "", 
                        "copy symlinks as symlinks", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q$me]NgaeZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-links", 
                        "rsync", 
                        "", 
                        "-L", 
                        "--copy-links", 
                        "", 
                        "", 
                        "transform symlink into referent file/dir", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l:-RY5EcFk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-unsafe-links", 
                        "rsync", 
                        "", 
                        "", 
                        "--copy-unsafe-links", 
                        "", 
                        "", 
                        "<i>tl;dr:</i> only \"unsafe\" symlinks are transformed<div><br /></div><div>This tells rsync to copy the referent of symbolic links that point \noutside the copied tree. Absolute symlinks are also treated like \nordinary files, and so\nare any symlinks in the source path itself when <code>--relative</code> is used. This option has no additional effect if <code><strike>--copy-links</strike></code> was also specified.&nbsp;</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cXP</]N=OX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --safe-links", 
                        "rsync", 
                        "", 
                        "", 
                        "--safe-links", 
                        "", 
                        "", 
                        "ignore symlinks that point outside the tree", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hXBcigQe|+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --munge-links", 
                        "rsync", 
                        "", 
                        "", 
                        "--munge-links", 
                        "", 
                        "", 
                        "munge symlinks to make them safer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b2e!fEaJ@)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-dirlinks", 
                        "rsync", 
                        "", 
                        "-k", 
                        "--copy-dirlinks", 
                        "", 
                        "", 
                        "transform symlink to dir into referent dir", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "!L?F#`pmh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --keep-dirlinks", 
                        "rsync", 
                        "", 
                        "-K", 
                        "--keep-dirlinks", 
                        "", 
                        "", 
                        "treat symlinked dir on receiver as dir", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "we@+q!KvlD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --hard-links", 
                        "rsync", 
                        "", 
                        "-H", 
                        "--hard-links", 
                        "", 
                        "", 
                        "preserve hard links", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e[vmbo*Pz;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --perms", 
                        "rsync", 
                        "", 
                        "-p", 
                        "--perms", 
                        "", 
                        "", 
                        "preserve permissions", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Kb;d#`n<hU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --fileflags", 
                        "rsync", 
                        "", 
                        "", 
                        "--fileflags", 
                        "", 
                        "", 
                        "preserve file-flags (aka chflags)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x!j^kIy!|s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --executability", 
                        "rsync", 
                        "", 
                        "-E", 
                        "--executability", 
                        "", 
                        "", 
                        "preserve executability", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uwAGve*:]C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --chmod", 
                        "rsync", 
                        "", 
                        "", 
                        "--chmod=CHMOD", 
                        "", 
                        "", 
                        "affect file and/or directory permissions", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mx*GX]eR$o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --acls", 
                        "rsync", 
                        "", 
                        "-A", 
                        "--acls", 
                        "", 
                        "", 
                        "preserve ACLs (implies <code>-p</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D&96W8Pb&w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --xattrs", 
                        "rsync", 
                        "", 
                        "-X", 
                        "--xattrs", 
                        "", 
                        "", 
                        "preserve extended attributes", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b`2S<&zw-j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --hfs-compression", 
                        "rsync", 
                        "", 
                        "", 
                        "--hfs-compression", 
                        "", 
                        "", 
                        "preserve <u>HFS</u> compression if supported", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f[paM^N-{w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --protect-decmpfs", 
                        "rsync", 
                        "", 
                        "", 
                        "--protect-decmpfs", 
                        "", 
                        "", 
                        "preserve <u>HFS</u> compression as xattrs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OvoT-!r+iD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --owner", 
                        "rsync", 
                        "", 
                        "-o", 
                        "--owner", 
                        "", 
                        "", 
                        "preserve owner (super-user only)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i)UvW>##c$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --group", 
                        "rsync", 
                        "", 
                        "-g", 
                        "--group", 
                        "", 
                        "", 
                        "preserve group", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iIbeFK50q+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --devices", 
                        "rsync", 
                        "", 
                        "", 
                        "--devices", 
                        "", 
                        "", 
                        "preserve device files (super-user only)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tFJ7wa`DU[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --specials", 
                        "rsync", 
                        "", 
                        "", 
                        "--specials", 
                        "", 
                        "", 
                        "preserve special files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oR`o9ra#9?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -D", 
                        "rsync", 
                        "", 
                        "-D", 
                        "", 
                        "", 
                        "", 
                        "same as <code>--devices</code> <code>--specials</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hMSn}nDU0K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --times", 
                        "rsync", 
                        "", 
                        "-t", 
                        "--times", 
                        "", 
                        "", 
                        "preserve modification times", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "whGJG(4,f$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --crtimes", 
                        "rsync", 
                        "", 
                        "-N", 
                        "--crtimes", 
                        "", 
                        "", 
                        "preserve create times (newness)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qgF2q^&er<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --omit-dir-times", 
                        "rsync", 
                        "", 
                        "-O", 
                        "--omit-dir-times", 
                        "", 
                        "", 
                        "omit directories from <code>--times</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CuD8S>1T{{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --omit-link-times", 
                        "rsync", 
                        "", 
                        "-J", 
                        "--omit-link-times", 
                        "", 
                        "", 
                        "omit symlinks from <code>--times</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H&N-v;p}})", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --super", 
                        "rsync", 
                        "", 
                        "", 
                        "--super", 
                        "", 
                        "", 
                        "receiver attempts super-user activities", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b)4zI/v0gS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --fake-super", 
                        "rsync", 
                        "", 
                        "", 
                        "--fake-super", 
                        "", 
                        "", 
                        "store/recover privileged attrs using xattrs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g@6|Ix3$/f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --sparse", 
                        "rsync", 
                        "", 
                        "-S", 
                        "--sparse", 
                        "", 
                        "", 
                        "handle sparse files efficiently", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ga?+5Lw/sp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --preallocate", 
                        "rsync", 
                        "", 
                        "", 
                        "--preallocate", 
                        "", 
                        "", 
                        "allocate dest files before writing", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f/C)v`*7Wn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --dry-run", 
                        "rsync", 
                        "", 
                        "-n", 
                        "--dry-run", 
                        "", 
                        "", 
                        "perform a trial run with no changes made", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hGfx--S.AQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --whole-file", 
                        "rsync", 
                        "", 
                        "-W", 
                        "--whole-file", 
                        "", 
                        "", 
                        "copy files whole (w/o delta-xfer algorithm)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r)ah{hh]nD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --one-file-system", 
                        "rsync", 
                        "", 
                        "-x", 
                        "--one-file-system", 
                        "", 
                        "", 
                        "don't cross filesystem boundaries", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QQhO!!SG6f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --block-size", 
                        "rsync", 
                        "", 
                        "-B", 
                        "--block-size", 
                        "", 
                        "", 
                        "force a fixed checksum block size", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BJ5iD!9*Vz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --rsh", 
                        "rsync", 
                        "", 
                        "-e", 
                        "--rsh=COMMAND", 
                        "", 
                        "", 
                        "specify the remote shell to use", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wC*y,N^zOE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --rsync-path", 
                        "rsync", 
                        "", 
                        "", 
                        "--rsync-path=PROGRAM", 
                        "", 
                        "", 
                        "specify the rsync to run on remote machine", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h`w&_7)j^w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --existing", 
                        "rsync", 
                        "", 
                        "", 
                        "--existing", 
                        "", 
                        "", 
                        "skip creating new files on receiver", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vO9+x&fX,K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-existing", 
                        "rsync", 
                        "", 
                        "", 
                        "--ignore-existing", 
                        "", 
                        "", 
                        "skip updating files that exist on receiver", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P3+=PwNLH|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --remove-source-files", 
                        "rsync", 
                        "", 
                        "", 
                        "--remove-source-files", 
                        "", 
                        "", 
                        "sender removes synchronized non-dir files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iNR{%S[``P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete", 
                        "", 
                        "", 
                        "delete extraneous files from dest dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BOBAL5+JDO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-before", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-before", 
                        "", 
                        "", 
                        "receiver deletes before xfer, not during", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F6>?-x59ck", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-during", 
                        "rsync", 
                        "alias", 
                        "", 
                        "--delete-during", 
                        "rsync --del", 
                        "", 
                        "receiver deletes during the transfer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ks=;#GG%b~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-delay", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-delay", 
                        "", 
                        "", 
                        "find deletions during, delete after", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pBGpU`hXuO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-after", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-after", 
                        "", 
                        "", 
                        "receiver deletes after transfer, not during", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pjo&34g!RT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-excluded", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-excluded", 
                        "", 
                        "", 
                        "also delete excluded files from dest dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kumNFzha1)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-missing-args", 
                        "rsync", 
                        "", 
                        "", 
                        "--ignore-missing-args", 
                        "", 
                        "", 
                        "ignore missing source args without error", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iaelt3ZBLs", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-missing-args", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-missing-args", 
                        "", 
                        "", 
                        "delete missing source args from destination", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Nmv8LyG1UE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-errors", 
                        "rsync", 
                        "", 
                        "", 
                        "--ignore-errors", 
                        "", 
                        "", 
                        "delete even if there are I/O errors", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k:`yVJE(p0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-delete", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-delete", 
                        "", 
                        "", 
                        "force deletion of dirs even if not empty", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H)FfBGGNLH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-change", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-change", 
                        "", 
                        "", 
                        "affect user/system immutable files/dirs<div><br /></div><div>This option causes rsync to disable both user-immutable and system-immutable  flags  on\tfiles  and  directories\tthat are being\n\t      updated or deleted on the\treceiving side.\t This option overrides\n\t      <code><strike>--force-uchange</strike></code> and <code><strike>--force-schange</strike></code>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E@ZE#m%?TF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-uchange", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-uchange", 
                        "", 
                        "", 
                        "affect user-immutable files/dirs<div><div><div><br /></div><div>This option causes rsync to disable user-immutable flags on\tfiles and directories\tthat are being updated or deleted on the\treceiving side. It does not try to affect system flags. This option overrides&nbsp;<code><strike>--force-schange</strike></code>&nbsp;and&nbsp;<code><strike>--force-change</strike></code>.</div></div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qIa0ZNGoKC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-schange", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-schange", 
                        "", 
                        "", 
                        "affect system-immutable files/dirs<div><div><br /></div><div>This option causes rsync to disable system-immutable flags on\tfiles and directories\tthat are being updated or deleted on the\treceiving side. It does not try to affect user flags. This option overrides&nbsp;<code><strike>--force-uchange</strike></code>&nbsp;and&nbsp;<code><strike>--force-change</strike></code>.</div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mdK<CLASp<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --max-delete", 
                        "rsync", 
                        "", 
                        "", 
                        "--max-delete=NUM", 
                        "", 
                        "", 
                        "don't delete more than <u>NUM</u> files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v8DqT/#.JS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --max-size", 
                        "rsync", 
                        "", 
                        "", 
                        "--max-size=SIZE", 
                        "", 
                        "", 
                        "don't transfer any file larger than <u>SIZE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kHL(ExIORC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --min-size", 
                        "rsync", 
                        "", 
                        "", 
                        "--min-size=SIZE", 
                        "", 
                        "", 
                        "don't transfer any file smaller than <u>SIZE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B_G=pApHF8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --partial", 
                        "rsync", 
                        "", 
                        "", 
                        "--partial", 
                        "", 
                        "", 
                        "keep partially transferred files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "low[+RTRpz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --partial-dir", 
                        "rsync", 
                        "", 
                        "", 
                        "--partial-dir=DIR", 
                        "", 
                        "", 
                        "put a partially transferred file into <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lj4kY_o@*$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delay-updates", 
                        "rsync", 
                        "", 
                        "", 
                        "--delay-updates", 
                        "", 
                        "", 
                        "put all updated files into place at end", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x,Iv=8DpNg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --prune-empty-dirs", 
                        "rsync", 
                        "", 
                        "-m", 
                        "--prune-empty-dirs", 
                        "", 
                        "", 
                        "prune empty directory chains from file-list", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n%d5p6y&G*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --numeric-ids", 
                        "rsync", 
                        "", 
                        "", 
                        "--numeric-ids", 
                        "", 
                        "", 
                        "don't map uid/gid values by user/group name", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nShB:Mn3|D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --usermap", 
                        "rsync", 
                        "", 
                        "", 
                        "--usermap=STRING", 
                        "", 
                        "", 
                        "custom username mapping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qD$0X2*BeM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --groupmap", 
                        "rsync", 
                        "", 
                        "", 
                        "--groupmap=STRING", 
                        "", 
                        "", 
                        "custom groupname mapping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o}G}v>2mLg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --chown", 
                        "rsync", 
                        "", 
                        "", 
                        "--chown=USER:GROUP", 
                        "", 
                        "", 
                        "simple username/groupname mapping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sv+?jg(#E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --timeout", 
                        "rsync", 
                        "", 
                        "", 
                        "--timeout=SECONDS", 
                        "", 
                        "", 
                        "set I/O timeout in seconds", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C-5#6m&8!x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --contimeout", 
                        "rsync", 
                        "", 
                        "", 
                        "--contimeout=SECONDS", 
                        "", 
                        "", 
                        "set daemon connection timeout in seconds", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hzI!!oTCk-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-times", 
                        "rsync", 
                        "", 
                        "-I", 
                        "--ignore-times", 
                        "", 
                        "", 
                        "Normally rsync will skip any files that are already the same size and have the same modification timestamp. This option turns off this “quick check” behavior, causing all files to be updated.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "poc%J6U6a]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --temp-dir", 
                        "rsync", 
                        "", 
                        "-T", 
                        "--temp-dir=DIR", 
                        "", 
                        "", 
                        "create temporary files in directory <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p^(0H[),A^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --fuzzy", 
                        "rsync", 
                        "", 
                        "-y", 
                        "--fuzzy", 
                        "", 
                        "", 
                        "    This option tells <code>rsync</code> that it should look for a basis file for any destination file that is missing. The current algorithm looks in the same directory as the destination file for either a file that has an identical size and modified-time, or a similarly-named file. If found, <code>rsync</code> uses the fuzzy basis file to try to speed up the transfer. \nNote that the use of the <code>--delete</code> option might get rid of any potential\n    fuzzy-match files, so either use <code>--delete-after</code> or specify some filename exclusions if you need to prevent this", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n2(#EVcQTR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --compare-dest", 
                        "rsync", 
                        "", 
                        "", 
                        "--compare-dest=DIR", 
                        "", 
                        "", 
                        "also compare received files relative to <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wpa{IIx](g", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-dest", 
                        "rsync", 
                        "", 
                        "", 
                        "--copy-dest=<i>DIR</i>", 
                        "", 
                        "", 
                        "    This option behaves like <code>--compare-dest</code>, but <code>rsync</code> will also copy unchanged files found in&nbsp;<i><code>DIR</code></i>&nbsp;to the destination directory using a local copy. This is useful for doing transfers to a new destination while leaving existing files intact, and then doing a flash-cutover when all files have been successfully transferred.<div><br /></div><div>Multiple <code>--copy-dest</code> directories may be provided, which will cause\n    <code>rsync</code> to search the list in the order specified for an unchanged file. If a match is not found, a basis file from one of the&nbsp;<i><code>DIR</code></i>s will be selected to try to speed up the transfer. \nIf&nbsp;<i><code>DIR</code></i>&nbsp;is a relative path, it is relative to the destination directory. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pK|Q*>j?8{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --link-dest", 
                        "rsync", 
                        "", 
                        "", 
                        "--link-dest=DIR", 
                        "", 
                        "", 
                        "hardlink to files in <u>DIR</u> when unchanged", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u{_VGkx47O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --compress", 
                        "rsync", 
                        "", 
                        "-z", 
                        "--compress", 
                        "", 
                        "", 
                        "compress file data during the transfer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HK*AcL<#U>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --compress-level", 
                        "rsync", 
                        "", 
                        "", 
                        "--compress-level=NUM", 
                        "", 
                        "", 
                        "explicitly set compression level", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O&IOKG[+AK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --skip-compress", 
                        "rsync", 
                        "", 
                        "", 
                        "--skip-compress=LIST", 
                        "", 
                        "", 
                        "skip compressing files with suffix in <u>LIST</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tS84xsYuhU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --cvs-exclude", 
                        "rsync", 
                        "", 
                        "-C", 
                        "--cvs-exclude", 
                        "", 
                        "", 
                        "auto-ignore files in the same way <u>CVS</u> does", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G7B?X:I[I]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --filter", 
                        "rsync", 
                        "", 
                        "-f", 
                        "--filter=RULE", 
                        "", 
                        "", 
                        "add a file-filtering <u>RULE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jt<?m[8Jx8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -F", 
                        "rsync", 
                        "", 
                        "-F", 
                        "", 
                        "", 
                        "", 
                        "<p>The first time it is used is a shorthand for this rule: <code>--filter='dir-merge /.rsync-filter'</code><br />\nThis tells rsync to look for per-directory <code>.rsync-filter</code> files that have been sprinkled through the hierarchy and use their rules to filter the files in the transfer.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTcxNDM0NTUsICJpZCI6ICIxNDk0Mzk1MDAwMzIxLTAwNiIsICJtZCI6ICJUaGUgZmlyc3QgdGltZSBpdCBpcyB1c2VkIGlzIGEgc2hvcnRoYW5kIGZvciB0aGlzIHJ1bGU6IGAtLWZpbHRlcj0mYXBvcztkaXItbWVyZ2UgLy5yc3luYy1maWx0ZXImYXBvcztgXG5UaGlzIHRlbGxzIHJzeW5jIHRvIGxvb2sgZm9yIHBlci1kaXJlY3RvcnkgYC5yc3luYy1maWx0ZXJgIGZpbGVzIHRoYXQgaGF2ZSBiZWVuIHNwcmlua2xlZCB0aHJvdWdoIHRoZSBoaWVyYXJjaHkgYW5kIHVzZSB0aGVpciBydWxlcyB0byBmaWx0ZXIgdGhlIGZpbGVzIGluIHRoZSB0cmFuc2Zlci5cbiJ9---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bJ;_)hXP~O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --exclude", 
                        "rsync", 
                        "", 
                        "", 
                        "--exclude=PATTERN", 
                        "", 
                        "", 
                        "exclude files matching <u>PATTERN</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gg-0ZSf3X=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --exclude-from", 
                        "rsync", 
                        "", 
                        "", 
                        "--exclude-from=FILE", 
                        "", 
                        "", 
                        "read exclude patterns from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hO3kln/6bv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --include", 
                        "rsync", 
                        "", 
                        "", 
                        "--include=PATTERN", 
                        "", 
                        "", 
                        "don't exclude files matching <u>PATTERN</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cwwr#3ET>/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --include-from", 
                        "rsync", 
                        "", 
                        "", 
                        "--include-from=FILE", 
                        "", 
                        "", 
                        "read include patterns from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LIX|pY?2sM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --files-from", 
                        "rsync", 
                        "", 
                        "", 
                        "--files-from=FILE", 
                        "", 
                        "", 
                        "read list of source-file names from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "me9@i1<3Pv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --from0", 
                        "rsync", 
                        "", 
                        "-0", 
                        "--from0", 
                        "", 
                        "", 
                        "all *from/filter files are delimited by <code>\\0</code>s<div><br /></div><div>This tells rsync that the rules/filenames it reads from a file are \nterminated by a null (<code>\\0</code>) character, not a NL, CR, or CR+LF. This \naffects\n<code>--exclude-from</code>, <code>--include-from</code>, <code>--files-from</code>, and any merged files specified in a <code>--filter</code> rule. It does not affect\n<code>--cvs-exclude</code> (since all names read from a <code>.cvsignore</code> file are split on whitespace).&nbsp;</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x_Kl>7uA7I", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --protect-args", 
                        "rsync", 
                        "", 
                        "-s", 
                        "--protect-args", 
                        "", 
                        "", 
                        "no space-splitting; wildcard chars only", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K6%+P:jH.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --address", 
                        "rsync", 
                        "", 
                        "", 
                        "--address=ADDRESS", 
                        "", 
                        "", 
                        "By default <code>rsync</code> will bind to the wildcard address when connecting to an <code>rsync</code> daemon. This&nbsp;option allows you to specify a specific IP\naddress (or hostname) to bind to. See also this option in the <b><code>--daemon</code></b> mode section.&nbsp;", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G/|)Htl}xF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --port", 
                        "rsync", 
                        "", 
                        "", 
                        "--port=PORT", 
                        "", 
                        "", 
                        "specify double-colon alternate port number", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O4.[pIZQPw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --sockopts", 
                        "rsync", 
                        "", 
                        "", 
                        "--sockopts=OPTIONS", 
                        "", 
                        "", 
                        "specify custom <u>TCP</u> options", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JGy/^(n+^3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --blocking-io", 
                        "rsync", 
                        "", 
                        "", 
                        "--blocking-io", 
                        "", 
                        "", 
                        "use blocking I/O for the remote shell", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gH1SB2k7d{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --outbuf", 
                        "rsync", 
                        "", 
                        "", 
                        "--outbuf=N|L|B", 
                        "", 
                        "", 
                        "set out buffering to None, Line, or Block", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nFN;iZ`)]G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --stats", 
                        "rsync", 
                        "", 
                        "", 
                        "--stats", 
                        "", 
                        "", 
                        "give some file-transfer stats", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fn:X;g|r&?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --8-bit-output", 
                        "rsync", 
                        "", 
                        "-8", 
                        "--8-bit-output", 
                        "", 
                        "", 
                        "<b>leave high-bit chars unescaped in output</b><div><br /></div><div>This tells rsync to leave all high-bit characters unescaped in the output instead of trying to test them to see if they're valid in the current locale and escaping the invalid ones. All control characters (but never tabs) are always escaped, regardless of this option's setting. The escape idiom that started in 2.6.7 is to output a literal backslash (\\) and a hash (#), followed by exactly 3 octal digits.</div>", 
                        "For example, a newline would output as \"\\#012\". A literal backslash that is in a filename is not escaped unless it is followed by a hash and 3 digits (0-9).", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ic5.&3T!]?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --human-readable", 
                        "rsync", 
                        "", 
                        "-h", 
                        "--human-readable", 
                        "", 
                        "", 
                        "output numbers in a human-readable format", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xaDnJi.-)V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --progress", 
                        "rsync", 
                        "", 
                        "", 
                        "--progress", 
                        "", 
                        "", 
                        "show progress during transfer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jpmw`1PJL3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -P", 
                        "rsync", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "same as <code>--partial</code> <code>--progress</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tZgb=dj5He", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --itemize-changes", 
                        "rsync", 
                        "", 
                        "-i", 
                        "--itemize-changes", 
                        "", 
                        "", 
                        "output a change-summary for all updates", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NRFm/>esl:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --remote-option", 
                        "rsync", 
                        "", 
                        "-M", 
                        "--remote-option=OPTION", 
                        "", 
                        "", 
                        "send <u>OPTION</u> to the remote side only", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p(d:n7uNe[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --out-format", 
                        "rsync", 
                        "", 
                        "", 
                        "--out-format=FORMAT", 
                        "", 
                        "", 
                        "output updates using the specified <u>FORMAT</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mQ.}Uo:s7@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --log-", 
                        "rsync", 
                        "", 
                        "", 
                        "--log-file=FILE", 
                        "", 
                        "", 
                        "log what we're doing to the specified <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lj]Ul-GDu:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --log-file-format", 
                        "rsync", 
                        "", 
                        "", 
                        "--log-file-format=FMT", 
                        "", 
                        "", 
                        "log updates using the specified <u>FMT</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EqfW6YIRt>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --password-file", 
                        "rsync", 
                        "", 
                        "", 
                        "--password-file=FILE", 
                        "", 
                        "", 
                        "read daemon-access password from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LaYxL@/[TB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --list-only", 
                        "rsync", 
                        "", 
                        "", 
                        "--list-only", 
                        "", 
                        "", 
                        "list the files instead of copying them", 
                        "This option will cause the source files to be listed\ninstead of transferred.  This option is inferred if there is a single source\narg and no destination specified, so its main uses are: (1) to turn a copy\ncommand that includes a\ndestination arg into a file-listing command, or (2) to be able to specify\nmore than one source arg (note: be sure to include the destination).\nCaution: keep in mind that a source arg with a wild-card is expanded by the\nshell into multiple args, so it is never safe to try to list such an arg\nwithout using this option.  For example:\n<p>\n</p><pre>    rsync -av --list-only foo* dest/\n</pre>\n<p>\nStarting with rsync 3.1.0, the sizes output by <code>--list-only</code> are affected\nby the <code>--human-readable</code> option.  By default they will contain digit\nseparators, but higher levels of readability will output the sizes with\nunit suffixes.  Note also that the column width for the size output has\nincreased from 11 to 14 characters for all human-readable levels.  Use\n<code>--no-h</code> if you want just digits in the sizes, and the old column width\nof 11 characters.\n</p><p>\nCompatibility note:  when requesting a remote listing of files from an rsync\nthat is version 2.6.3 or older, you may encounter an error if you ask for a\nnon-recursive listing.  This is because a file listing implies the <code>--dirs</code>\noption w/o <code>--recursive</code>, and older rsyncs don't have that option.  To\navoid this problem, either specify the <code>--no-dirs</code> option (if you don't\nneed to expand a directory's content), or turn on recursion and exclude\nthe content of subdirectories: <code>-r --exclude='/*/*'</code>.&nbsp;</p>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Drf:<0V-b[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --bwlimit", 
                        "rsync", 
                        "", 
                        "", 
                        "--bwlimit=<i>KBPS</i>", 
                        "", 
                        "", 
                        "limit socket I/O bandwidth<div><br /></div><div>This option allows you to specify a maximum transfer rate in kilobytes per second. This option is most effective when using <code>rsync</code> with large files (several megabytes and up). Due to the nature of <code>rsync</code> transfers, blocks of data are sent, then if <code>rsync</code> determines the transfer was too fast, it will wait before sending the next data block. The result is an average transfer rate equaling the specified limit. A value of zero specifies no limit.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xcvxoTD<v}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --write-batch", 
                        "rsync", 
                        "", 
                        "", 
                        "--write-batch=FILE", 
                        "", 
                        "", 
                        "write a batched update to <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PJHIB<0<`E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --only-write-batch", 
                        "rsync", 
                        "", 
                        "", 
                        "--only-write-batch=FILE", 
                        "", 
                        "", 
                        "like <code>--write-batch</code> but w/o updating dest", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iG];b|EmMt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --read-batch", 
                        "rsync", 
                        "", 
                        "", 
                        "--read-batch=FILE", 
                        "", 
                        "", 
                        "read a batched update from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PRK$uZI2Nn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --protocol", 
                        "rsync", 
                        "", 
                        "", 
                        "--protocol=NUM", 
                        "", 
                        "", 
                        "force an older protocol version to be used", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k[^)SE*7Ym", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --iconv", 
                        "rsync", 
                        "", 
                        "", 
                        "--iconv=CONVERT_SPEC", 
                        "", 
                        "", 
                        "request charset conversion of filenames", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rS1a::{+n:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --checksum-seed", 
                        "rsync", 
                        "", 
                        "", 
                        "--checksum-seed=NUM", 
                        "", 
                        "", 
                        "set block/file checksum seed (advanced)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K}3zGibTZg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ipv4", 
                        "rsync", 
                        "", 
                        "-4", 
                        "--ipv4", 
                        "", 
                        "", 
                        "Tells rsync to prefer <b>IPv4</b> when creating sockets. This only affects sockets that rsync has direct control over, such as the outgoing socket when directly contacting an rsync daemon. See also these options in the&nbsp;<code>--daemon</code>&nbsp;mode section.&nbsp;If rsync was compiled without support for <b>IPv4</b>, this option will have no effect. The&nbsp;<code>--version</code>&nbsp;output will tell you if this is the case.&nbsp;", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kzJMWdcIWq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ipv6", 
                        "rsync", 
                        "", 
                        "-6", 
                        "--ipv6", 
                        "", 
                        "", 
                        "Tells rsync to prefer <b>IPv6</b>\nwhen creating sockets.  This only affects sockets that rsync has direct\ncontrol over, such as the outgoing socket when directly contacting an\nrsync daemon.  See also these options in the <code>--daemon</code> mode section.&nbsp;If rsync was compiled without support for IPv6, this&nbsp;option\nwill have no effect.  The <code>--version</code> output will tell you if this\nis the case.&nbsp;", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wQ>CzUQAMg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -F -F", 
                        "rsync", 
                        "", 
                        "-F -F", 
                        "", 
                        "", 
                        "", 
                        "<p>same as <code>--filter='dir-merge /.rsync-filter' --filter='- .rsync-filter'</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY3ODU3NDAsICJpZCI6ICIxNDk0Mzk1MDAwMzU1LTAwNiIsICJtZCI6ICJzYW1lIGFzIGAtLWZpbHRlcj0mYXBvcztkaXItbWVyZ2UgLy5yc3luYy1maWx0ZXImYXBvczsgLS1maWx0ZXI9JmFwb3M7LSAucnN5bmMtZmlsdGVyJmFwb3M7YFxuIn0=---->", 
                        "<p>The <code>-F</code> option is a shorthand for adding two <code>--filter</code> rules to your command. The first time it is used is a shorthand for this rule: <code>CW --filter='dir-merge /.rsync-filter'</code><br />\nThis tells rsync to look for per-directory <code>.rsync-filter</code> files that have been sprinkled through the hierarchy and use their rules to filter the files in the transfer.</p>\n<p>If <code>-F</code> is repeated, it is a shorthand for this rule: <code>CW --filter='exclude .rsync-filter'</code><br />\nThis filters out the <code>.rsync-filter</code> files themselves from the transfer.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY3ODU3MzgsICJpZCI6ICIxNDk0Mzk1MDAwMzU1LTAwNyIsICJtZCI6ICJUaGUgYC1GYCBvcHRpb24gaXMgYSBzaG9ydGhhbmQgZm9yIGFkZGluZyB0d28gYC0tZmlsdGVyYCBydWxlcyB0byB5b3VyIGNvbW1hbmQuIFRoZSBmaXJzdCB0aW1lIGl0IGlzIHVzZWQgaXMgYSBzaG9ydGhhbmQgZm9yIHRoaXMgcnVsZTogYENXIC0tZmlsdGVyPSZhcG9zO2Rpci1tZXJnZSAvLnJzeW5jLWZpbHRlciZhcG9zO2BcblRoaXMgdGVsbHMgcnN5bmMgdG8gbG9vayBmb3IgcGVyLWRpcmVjdG9yeSBgLnJzeW5jLWZpbHRlcmAgZmlsZXMgdGhhdCBoYXZlIGJlZW4gc3ByaW5rbGVkIHRocm91Z2ggdGhlIGhpZXJhcmNoeSBhbmQgdXNlIHRoZWlyIHJ1bGVzIHRvIGZpbHRlciB0aGUgZmlsZXMgaW4gdGhlIHRyYW5zZmVyLlxuICBcbklmIGAtRmAgaXMgcmVwZWF0ZWQsIGl0IGlzIGEgc2hvcnRoYW5kIGZvciB0aGlzIHJ1bGU6IGBDVyAtLWZpbHRlcj0mYXBvcztleGNsdWRlIC5yc3luYy1maWx0ZXImYXBvcztgXG5UaGlzIGZpbHRlcnMgb3V0IHRoZSBgLnJzeW5jLWZpbHRlcmAgZmlsZXMgdGhlbXNlbHZlcyBmcm9tIHRoZSB0cmFuc2Zlci5cbiJ9---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fil]pt?{L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "rsync"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar @<u>archive</u>", 
                        "tar", 
                        "", 
                        "@<u>archive</u>", 
                        "", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code> mode:</b> <code><u>archive</u></code> is opened and the entries in it will be appended to the current archive", 
                        "As a simple example,&nbsp;<code>tar -c -f&nbsp;<u>-</u>&nbsp;<u>newfile</u>&nbsp;@<u>original.tar</u></code>&nbsp;writes a new archive to standard output containing a file&nbsp;<u>newfile</u>&nbsp;and all of the entries from&nbsp;<u>original.tar</u>. In contrast,&nbsp;<code>tar -c -f&nbsp;<u>-</u>&nbsp;<u>newfile</u>&nbsp;<u>original.tar</u></code>&nbsp;creates a new archive with only two entries. Similarly,&nbsp;<code>tar -czf&nbsp;<u>-</u>&nbsp;</code><code>--format pax @-</code>&nbsp;reads an archive from standard input (whose format will be determined automatically) and converts it into a&nbsp;<code>gzip</code>-compressed&nbsp;<code>pax</code>-format archive on&nbsp;<i>stdout</i>. In this way,&nbsp;<code>tar</code>&nbsp;can be used to convert archives from one format to another.", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "3SJO`1d./", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -b", 
                        "tar", 
                        "", 
                        "-b <u>blocksize</u>", 
                        "", 
                        "", 
                        "", 
                        "Specify the block size, in 512-byte records, for tape drive I/O. As a rule, this argument is only needed when reading from or writing to tape drives, and usually not even then as the default block size of 20 records (10240 bytes) is very common.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qa`9mb:X}J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -C", 
                        "tar", 
                        "", 
                        "-C <u>directory</u>", 
                        "", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>&nbsp;mode:</b>&nbsp;change directory before adding following files<br /><div><b><code>x</code> mode:</b>&nbsp;change directory after opening archive but before extracting entries from archive</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yKuq]e8t<v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --check-links", 
                        "tar", 
                        "", 
                        "-l", 
                        "--check-links", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>&nbsp;mode:</b>&nbsp;Issue a warning message unless all links to each file are archived.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hutOdeif(S", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --chroot", 
                        "tar", 
                        "", 
                        "", 
                        "--chroot", 
                        "", 
                        "", 
                        "<b>x&nbsp;mode:</b>&nbsp;<code>chroot</code>() to the current directory after processing any <code>-C</code> options and before extracting any files.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lxoanW<{34", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --exclude", 
                        "tar", 
                        "", 
                        "", 
                        "--exclude <u>pattern</u>", 
                        "", 
                        "", 
                        "Do not process files or directories that match the specified pattern. Note that exclusions take precedence over patterns or filenames specified on the command line.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jXtu(WHUk?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --format", 
                        "tar", 
                        "", 
                        "", 
                        "--format <u>format</u>", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>/<code>u</code>&nbsp;mode:</b>&nbsp;Use the specified format for the created archive. Supported formats include <code>cpio</code>, <code>pax</code>, <code>shar</code>, and <code>ustar</code>. Other formats may also be supported; see <code>libarchive-formats</code>(5) for more information about currently supported formats. In <code>r</code> and <code>u</code> modes, when extending an existing archive, the format specified here must be compatible with the format of the existing archive on disk.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r)&xA&S`@p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -f", 
                        "tar", 
                        "", 
                        "-f <u>file</u>", 
                        "", 
                        "", 
                        "", 
                        "Read the archive from or write the archive to the specified file. The filename can be <code>-</code> for standard input or standard output.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kp-<`9q;s=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -H", 
                        "tar", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code> mode:</b> Symbolic links named on the command line will be followed; the target of the link will be archived, not the link itself.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PBy+]Yom9y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --include", 
                        "tar", 
                        "", 
                        "", 
                        "--include <u>pattern</u>", 
                        "", 
                        "", 
                        "Process only files or directories that match the specified pattern. Note that exclusions specified with <code><strike>--exclude</strike></code> take precedence over <strike>inclusions</strike>. If no inclusions are explicitly specified, all entries are processed by default. The <code><strike>--include</strike></code> option is especially useful when filtering archives. For example, the command <code>tar -c -f <u>new.tar</u> <strike>--include</strike>='*foo*' @<u>old.tgz</u></code> creates a new archive <u>new.tar</u> containing only the entries from <u>old.tgz</u> containing the string `foo'.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H_6jH<g$6b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -k", 
                        "tar", 
                        "", 
                        "-k", 
                        "", 
                        "", 
                        "", 
                        "<b><code>x</code>&nbsp;mode:</b>&nbsp;Do not overwrite existing files. In particular, if a file appears more than once in an archive, later copies will not overwrite earlier copies.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uz7/$@C$4F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --keep-newer-files", 
                        "tar", 
                        "", 
                        "", 
                        "--keep-newer-files", 
                        "", 
                        "", 
                        "<b><code>x</code>&nbsp;mode:</b>&nbsp;Do not overwrite existing files that are newer than the versions appearing in the archive being extracted.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qE{Vx]1t|$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -L", 
                        "tar", 
                        "synonym", 
                        "-L", 
                        "", 
                        "tar -h", 
                        "", 
                        "<b><code>c</code>/<code>r</code>&nbsp;mode:</b>&nbsp;All symbolic links will be followed. Normally, symbolic links are archived as such. With this option, the target of the link will be archived instead.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wH]$WgxV!G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -m", 
                        "tar", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "", 
                        "<b><code>x</code>&nbsp;mode:</b>&nbsp;Do not extract modification time. By default, the modification time is set to the time stored in the archive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d]8^-pU[cr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -n", 
                        "tar", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>/<code>u</code>&nbsp;mode:</b>&nbsp;Do not recursively archive the contents of directories.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E8q%SCnoN#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer", 
                        "tar", 
                        "", 
                        "", 
                        "--newer <u>date</u>", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>/<code>u</code>&nbsp;mode:</b>&nbsp;Only include files and directories newer than the specified date. This compares <i>ctime</i> entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N`MnH5ty{Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer-mtime", 
                        "tar", 
                        "", 
                        "", 
                        "--newer-mtime <u>date</u>", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>/<code>u</code>&nbsp;mode:</b>&nbsp;Like <code><strike>--newer</strike></code>, except it compares <i>mtime</i> entries instead of <i>ctime</i> entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kng^a]v?FG", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer-than", 
                        "tar", 
                        "", 
                        "", 
                        "--newer-than <u>file</u>", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>/<code>u</code>&nbsp;mode:</b>&nbsp;Only include files and directories newer than the specified file. This compares <i>ctime</i> entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rYJ4qiephg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer-mtime-than", 
                        "tar", 
                        "", 
                        "", 
                        "--newer-mtime-than <u>file</u>", 
                        "", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes only) Like <code>--newer-than</code>, except it compares mtime entries instead of ctime entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ips./R@zqS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --nodump", 
                        "tar", 
                        "", 
                        "", 
                        "--nodump", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>&nbsp;mode:</b>&nbsp;Honor the <i>nodump</i> file flag by skipping this file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CY45c2ip^v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --null", 
                        "tar", 
                        "", 
                        "", 
                        "--null", 
                        "", 
                        "", 
                        "<p>(use with <code>-I</code>, <code>-T</code>, or <code>-X</code>) Filenames or patterns are separated by null characters, not by newlines. This is often used to read filenames output by the <code>-print0</code> option to <code>find</code>.</p>\n<p>The <code><strike>--null</strike></code> option causes <code>--files-from=<b>file-of-names</b></code> (<code>-T <b>file-of-names</b></code>) to read file names terminated by a NUL instead of a newline, so files whose names contain newlines can be archived using <code>--files-from</code>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTcwMzk3MTgsICJpZCI6ICIxNDk0Mzk1MDAwMzgwLTAwNiIsICJtZCI6ICIodXNlIHdpdGggYC1JYCwgYC1UYCwgb3IgYC1YYCkgRmlsZW5hbWVzIG9yIHBhdHRlcm5zIGFyZSBzZXBhcmF0ZWQgYnkgbnVsbCBjaGFyYWN0ZXJzLCBub3QgYnkgbmV3bGluZXMuIFRoaXMgaXMgb2Z0ZW4gdXNlZCB0byByZWFkIGZpbGVuYW1lcyBvdXRwdXQgYnkgdGhlIGAtcHJpbnQwYCBvcHRpb24gdG8gYGZpbmRgLlxuICBcblRoZSBgLS1udWxsYCBvcHRpb24gY2F1c2VzIGAtLWZpbGVzLWZyb209ZmlsZS1vZi1uYW1lc2AgKGAtVCBmaWxlLW9mLW5hbWVzYCkgdG8gcmVhZCBmaWxlIG5hbWVzIHRlcm1pbmF0ZWQgYnkgYSBOVUwgaW5zdGVhZCBvZiBhIG5ld2xpbmUsIHNvIGZpbGVzIHdob3NlIG5hbWVzIGNvbnRhaW4gbmV3bGluZXMgY2FuIGJlIGFyY2hpdmVkIHVzaW5nIGAtLWZpbGVzLWZyb21gLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ct*PMq(o8(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --numeric-owner", 
                        "tar", 
                        "", 
                        "", 
                        "--numeric-owner", 
                        "", 
                        "", 
                        "<b><code>x</code>&nbsp;mode:</b>&nbsp;Ignore symbolic user and group names when restoring archives to disk, only numeric <i>uid</i> and<i> gid</i> values will be obeyed.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BoFg4O~8yU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -O", 
                        "tar", 
                        "", 
                        "-O", 
                        "", 
                        "", 
                        "", 
                        "<b><code>x</code>&nbsp;mode:</b> write files to&nbsp;<i>stdout</i>&nbsp;rather than to disk<div><b><code>t</code>&nbsp;mode:</b> write file listing to <i>stderr</i> rather than to&nbsp;<i>stdout</i></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h{VBY)]Yof", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -o", 
                        "tar", 
                        "", 
                        "-o", 
                        "", 
                        "", 
                        "", 
                        "<b><code>x</code> mode:</b> Use the user and group of the user running the program rather than those specified in the archive. Note that this has no significance unless <code>-p</code> is specified, and the program is being run by the root user. In this case, the file modes and flags from the archive will be restored, but ACLs or owner information in the archive will be discarded.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OQe;q*.KFL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --one-file-system", 
                        "tar", 
                        "", 
                        "", 
                        "--one-file-system", 
                        "", 
                        "", 
                        "<b><code>c</code>/<code>r</code>/<code>u</code>&nbsp;mode:</b>&nbsp;Do not cross mount points.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b{aNIrtuY~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --options", 
                        "tar", 
                        "", 
                        "", 
                        "--options options", 
                        "", 
                        "", 
                        "<div>Select optional behaviors for particular modules. The argument is a text string containing comma-separated keywords and values. These are passed to the modules that handle particular formats to control how those formats will behave. Each option has one of the following forms:</div><div><ul><li><code>key=value</code><br />The key will be set to the specified value in every module that supports it. Modules that do not support this key will ignore it.</li><li><code>key</code><br />The key will be enabled in every module that supports it. This is equivalent to <code>key=1</code>.</li><li><code>!key</code><br />The key will be disabled in every module that supports it.</li><li><code>module:key=value</code>, <code>module:key</code>, <code>module:!key</code><br />As above, but the corresponding key and value will be provided only to modules whose name matches module.</li></ul></div>", 
                        "<div>The currently supported modules and keys are:</div><div><ul><li><code>iso9660:joliet</code><br />Support Joliet extensions. This is enabled by default, use&nbsp;<code>!joliet</code>&nbsp;or&nbsp;<code>iso9660:!joliet</code>&nbsp;to disable.</li><li><code>iso9660:rockridge</code><br />Support Rock Ridge extensions. This is enabled by default, use&nbsp;<code>!rockridge</code>&nbsp;or&nbsp;<code>iso9660:!rockridge</code>&nbsp;to disable.</li><li><code>gzip:compression-level</code><br />A decimal integer from 0 to 9 specifying the&nbsp;<code>gzip</code>&nbsp;compression level.</li><li><code>xz:compression-level</code><br />A decimal integer from 0 to 9 specifying the&nbsp;<code>xz</code>&nbsp;compression level.</li><li><code>mtree:keyword</code><br />The&nbsp;<code>mtree</code>&nbsp;writer module allows you to specify which mtree keywords will be included in the output. Supported keywords include:&nbsp;<code>cksum</code>,&nbsp;<code>device</code>,&nbsp;<code>flags</code>,&nbsp;<code>gid</code>,&nbsp;<code>gname</code>,&nbsp;<code>indent</code>,&nbsp;<code>link</code>,&nbsp;<code>md5</code>,&nbsp;<code>mode</code>,&nbsp;<code>nlink</code>,&nbsp;<code>rmd160</code>,&nbsp;<code>sha1</code>,&nbsp;<code>sha256</code>,&nbsp;<code>sha384</code>,&nbsp;<code>sha512</code>,&nbsp;<code>size</code>,&nbsp;<code>time</code>,&nbsp;<code>uid</code>,&nbsp;<code>uname</code>. The default is equivalent to:&nbsp;<code>device</code>,&nbsp;<code>flags</code>,&nbsp;<code>gid</code>,&nbsp;<code>gname</code>,&nbsp;<code>link</code>,&nbsp;<code>mode</code>,&nbsp;<code>nlink</code>,&nbsp;<code>size</code>,&nbsp;<code>time</code>,&nbsp;<code>type</code>,&nbsp;<code>uid</code>,&nbsp;<code>uname</code>.</li><li><code>mtree:all</code><br />Enables all of the above keywords. You can also use&nbsp;<code>mtree:!all</code>&nbsp;to disable all keywords.</li><li><code>mtree:use-set</code><br />Enable generation of&nbsp;<code>/set</code>&nbsp;lines in the output.</li><li><code>mtree:indent</code><br />Produce human-readable output by indenting options and splitting lines to fit into 80 columns.</li><li><code>zip:compression=type</code><br />Use type as compression method. Supported values are&nbsp;<code>store</code>&nbsp;(uncompressed) and&nbsp;<code>deflate</code>&nbsp;(<code>gzip</code>&nbsp;algorithm).</li></ul></div><div>If a provided option is not supported by any module, that is a fatal error.</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b751a-9RE$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -P", 
                        "tar", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "Preserve pathnames. By default, absolute pathnames (those that begin with a <code>/</code> character) have the leading slash removed both when creating archives and extracting from them. Also, <code>tar</code> will refuse to extract archive entries whose pathnames contain <code>..</code> or whose target directory would be altered by a symlink. This option suppresses these behaviors.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A45E0&4LyT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -p", 
                        "tar", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "<b>x&nbsp;mode:</b>&nbsp;Preserve file permissions. Attempt to restore the full permissions, including owner, file modes, file flags and ACLs, if available, for each item extracted from the archive. By default, newly-created files are owned by the user running <code>tar</code>, the file mode is restored for newly-created regular files, and all other types of entries receive default permissions. If <code>tar</code> is being run by root, the default is to restore the owner unless the <code>-o</code> option is also specified.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wz@`>uZEm3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --fast-read", 
                        "tar", 
                        "", 
                        "-q", 
                        "--fast-read", 
                        "", 
                        "", 
                        "<b><code>x</code>/<code>t</code>&nbsp;mode:</b>&nbsp;Extract or list only the first archive entry that matches each pattern or filename operand. Exit as soon as each specified pattern or filename has been matched. By default, the archive is always read to the very end, since there can be multiple entries with the same name and, by convention, later entries overwrite earlier entries. This option is provided as a performance optimization.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JX(N2y~wmd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -S", 
                        "tar", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "", 
                        "<b>x&nbsp;mode:</b>&nbsp;Extract files as sparse files. For every block on disk, check first if it contains only NULL bytes and seek over it otherwise. This works similiar to the <code>conv=sparse</code> option of <code>dd</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N.?i_pTTuc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --strip-components", 
                        "tar", 
                        "", 
                        "", 
                        "--strip-components <u>count</u>", 
                        "", 
                        "", 
                        "<b><code>x</code>&nbsp;mode:</b>&nbsp;Remove the specified number of leading path elements. Pathnames with fewer elements will be silently skipped. Note that the pathname is edited after checking inclusion/exclusion patterns but before security checks.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xR65[C7DVB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s", 
                        "tar", 
                        "", 
                        "-s <u>pattern</u>", 
                        "", 
                        "", 
                        "", 
                        "Modify file or archive member names according to <code><u>pattern</u></code>&nbsp;formatted&nbsp;<code>/<u>old</u>/<u>new</u>/[gps]</code> where <code><u>old</u></code> is a basic regular expression (BRE), <code><u>new</u></code> is the replacement string of the matched part, and the optional trailing letters modify how the replacement is handled. If <code><u>old</u></code> is not matched, the pattern is skipped.", 
                        "<br /><div><p><b><code><u>new</u></code>&nbsp;substitutions</b><br /><code>~</code>&nbsp;= the match<br /><code>1</code>-<code>9</code>&nbsp;= the content of the corresponding captured group</p><p><b>Optional trailing specifiers:</b><br /><code>g</code>: matching should continue after the matched part and stopped on the first unmatched pattern.<br /><code>s</code>: pattern applies to the value of symbolic links.<br /><code>p</code>: print to&nbsp;<i>stderr</i>&nbsp;original and new path names after successful substitutions.</p></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x|o-PRPeP|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -T", 
                        "tar", 
                        "synonym", 
                        "-T <u>filename</u>", 
                        "", 
                        "tar -I&nbsp;<u>filename</u>", 
                        "", 
                        "<b><code>x</code>/<code>t</code>&nbsp;mode:</b>&nbsp;<code>tar</code> will read the list of names to be extracted from&nbsp;<code><i>filename</i></code><br /><div><b><code>c</code>&nbsp;mode:&nbsp;</b><code>tar</code> will read names to be archived from <code><i>filename</i></code>.</div><div><br /></div><div>The special name <code>-C</code> on a line by itself will cause the current directory to be changed to the directory specified on the following line. Names are terminated by newlines unless <code>--null</code> is specified. Note that <code>--null</code> also disables the special handling of lines containing <code>-C.</code></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x@t?MWTLoi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -U", 
                        "tar", 
                        "", 
                        "-U", 
                        "", 
                        "", 
                        "", 
                        "<b>x mode:</b>&nbsp;Unlink files before creating them. Without this option, <code>tar</code> overwrites existing files, which preserves existing hardlinks. With this option, existing hardlinks will be broken, as will any symlink that would affect the location of an extracted file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A)wmt#9)3h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --use-compress-program", 
                        "tar", 
                        "", 
                        "", 
                        "--use-compress-program <u>program</u>", 
                        "", 
                        "", 
                        "Pipe the input (<b><code>x</code>/<code>t</code> mode</b>) or the output (<b><code>c</code> mode</b>) through <i><code><u>program</u></code></i> instead of using the builtin compression support.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jg?[Q+yQxC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -v", 
                        "tar", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "", 
                        "Produce verbose output.<div><br /></div><div><b><code>c</code>/<code>x</code>&nbsp;mode:</b>&nbsp;<code>tar</code> will list each file name as it is read from or written to the archive.</div><div><b>t mode:</b>&nbsp;<code>tar</code> will produce output similar to that of <code>ls</code>. Additional <code><strike>-v</strike></code> options will provide additional detail.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M:0=u~U?Rr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --version", 
                        "tar", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "Print version of <code>tar</code> and <code>libarchive</code>, and exit.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dOP={+NI4P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -w", 
                        "tar", 
                        "", 
                        "-w", 
                        "", 
                        "", 
                        "", 
                        "Ask for confirmation for every action.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M[iXohCgkN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -X", 
                        "tar", 
                        "", 
                        "-X <u>filename</u>", 
                        "", 
                        "", 
                        "", 
                        "Read a list of exclusion patterns from the specified file. See <code>--exclude</code> for more information about the handling of exclusions.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xcJnbTOUY!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -y", 
                        "tar", 
                        "synonym", 
                        "-y", 
                        "", 
                        "tar -j", 
                        "", 
                        "<b></b><b style=\"font-weight: bold; \"><code>x</code>/<code>t</code>&nbsp;mode</b>: Ignored<div><br /></div><b><code>c</code> mode:</b>&nbsp;Compress the resulting archive with <code>bzip2</code>.&nbsp;Note some&nbsp;<code>tar</code>&nbsp;implementations do not recognize&nbsp;<code>bzip2</code>&nbsp;compression automatically when reading archives.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t2$[G>ByyV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -z", 
                        "tar", 
                        "", 
                        "-z", 
                        "", 
                        "", 
                        "", 
                        "<b style=\"font-weight: bold; \"><code>x</code>/<code>t</code>&nbsp;mode</b>: Ignored<div><br /><div><b>c mode</b>: Compress the resulting archive with <code>gzip</code>.&nbsp;Note some&nbsp;<code>tar</code>&nbsp;implementations do not recognize&nbsp;<code>gzip</code>&nbsp;compression automatically when reading archives.</div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x4lAx<)^yc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -Z", 
                        "tar", 
                        "", 
                        "-Z", 
                        "", 
                        "", 
                        "", 
                        "<b><code><div></div></code></b><b><code></code></b><b style=\"font-weight: bold; \"><code>x</code>/<code>t</code>&nbsp;mode</b>: Ignored<div><b><code><br /></code></b></div><b><code>c</code> mode:</b> Compress the resulting archive with <code>compress</code>.&nbsp;Note some&nbsp;<code>tar</code>&nbsp;implementations do not recognize&nbsp;<code>compress</code>&nbsp;compression automatically when reading archives.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ef18P<[.{#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -H", 
                        "find", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "", 
                        "<div><b>command line symlinks as references, other symlinks as files</b></div><div><br /></div>Cause the file information and file type (see <code>stat</code>(2)) returned for each symbolic link specified on the command line to be those of the file referenced by the link, not the link itself.  If the referenced file does not exist, the file information and type will be for the link itself.  File information of all symbolic links not on the command line is that of the link itself.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ygmdxq(T5F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -L", 
                        "find", 
                        "deprecated equivalent primary", 
                        "-L", 
                        "", 
                        "find&nbsp;-follow", 
                        "", 
                        "<div><b>all symlinks as references</b></div><div><br /></div><div>Cause the file information and file type (see <code>stat</code>(2)) returned for each symbolic link to be those of the file referenced by the link, not the link itself.  If the referenced file does not exist, the file information and type will be for the link itself.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OU55%)h]/U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -P", 
                        "find", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "<div><b>all symlinks as files</b></div><div><br /></div>Cause the file information and file type (see <code>stat</code>(2)) returned for each symbolic link to be those of the link itself.  This is the default.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FbtAmOVN9t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -X", 
                        "find", 
                        "", 
                        "-X", 
                        "", 
                        "", 
                        "", 
                        "<div>Permit find to be safely used in conjunction with <code>xargs</code>.  If a file name contains any of the delimiting characters used by <code>xargs</code>, a diagnostic message is displayed on standard error, and the file is skipped.  The delimiting characters include single <code>'</code> and double <code>\"</code> quotes, backslash <code>\\</code>, space, tab and newline characters.</div><div>However, you may wish to consider the <code>-print0</code> primary in conjunction with <code>xargs -0</code> as an effective alternative.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e}zBW?,a{c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -d", 
                        "find", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "", 
                        "<div>Cause find to perform a depth-first traversal, i.e., directories are visited in post-order and all entries in a directory will be acted on before the directory itself.  By default, find visits directories in pre-order, i.e., before their contents.  Note, the default is not a breadth-first traversal.</div><div>This option is equivalent to the <code>-depth</code> primary of IEEE Std 1003.1-2001 (<code>POSIX.1</code>).  This&nbsp;option can be useful when <code>find</code> is used with <code>cpio</code>&nbsp;to process files that are contained in directories with unusual permissions.  It ensures that you have write permission while you are placing files in a directory, then sets the directory's permissions as the last thing.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AFtEy-Nj{K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -f", 
                        "find", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "", 
                        "Specify a file hierarchy for find to traverse.  File hierarchies may also be specified as the operands immediately following the options.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s9KJ@k3,QP", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -x", 
                        "find", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "", 
                        "<div>Prevent find from descending into directories that have a device number different than that of the file from which the descent began.</div><div>This option is equivalent to the deprecated <code>-xdev</code> primary.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bB[yZJt_<r", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-case", 
                        "diff", 
                        "", 
                        "-i", 
                        "--ignore-case", 
                        "", 
                        "", 
                        "Ignore case differences in file contents.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lp9O?8%B?U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-file-name-case", 
                        "diff", 
                        "", 
                        "", 
                        "--ignore-file-name-case", 
                        "", 
                        "", 
                        "Ignore case when comparing file names.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GeV#.{,ZqB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --no-ignore-file-name-case", 
                        "diff", 
                        "", 
                        "", 
                        "--no-ignore-file-name-case", 
                        "", 
                        "", 
                        "Consider case when comparing file names.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pm1,XQSO?=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-tab-expansion", 
                        "diff", 
                        "", 
                        "-E", 
                        "--ignore-tab-expansion", 
                        "", 
                        "", 
                        "Ignore changes due to tab expansion.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EH;=~X}:[6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-space-change", 
                        "diff", 
                        "", 
                        "-b", 
                        "--ignore-space-change", 
                        "", 
                        "", 
                        "Ignore changes in the amount of white space.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K[96^4#Mb4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-all-space", 
                        "diff", 
                        "", 
                        "-w", 
                        "--ignore-all-space", 
                        "", 
                        "", 
                        "Ignore all white space.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w2#DWgBT7)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-blank-lines", 
                        "diff", 
                        "", 
                        "-B", 
                        "--ignore-blank-lines", 
                        "", 
                        "", 
                        "Ignore changes whose lines are all blank.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m3R|ctlxGo", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-matching-lines", 
                        "diff", 
                        "", 
                        "-I <u>RE</u>", 
                        "--ignore-matching-lines=<u>RE</u>", 
                        "", 
                        "", 
                        "Ignore changes whose lines all match <u>RE</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D}Z)GEFLIB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --strip-trailing-cr", 
                        "diff", 
                        "", 
                        "", 
                        "--strip-trailing-cr", 
                        "", 
                        "", 
                        "Strip trailing carriage return on input.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fn0.NXmA:t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --text", 
                        "diff", 
                        "", 
                        "-a", 
                        "--text", 
                        "", 
                        "", 
                        "Treat all files as text.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b9M_k&V|ky", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --context", 
                        "diff", 
                        "", 
                        "-c&nbsp;<u>NUM</u>", 
                        "--context[=<u>NUM</u>]", 
                        "<i>diff</i> -C <u>NUM</u>", 
                        "", 
                        "Output <u>NUM</u> (default 3) lines of copied context.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LqM=v%}p$i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --unified", 
                        "diff", 
                        "", 
                        "-u&nbsp;<u>NUM</u>", 
                        "--unified[=<u>NUM</u>]", 
                        "<i>diff </i>-U <u>NUM</u>", 
                        "", 
                        "Output <u>NUM</u> (default 3) lines of unified context.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ON-wH<^E[n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --label", 
                        "diff", 
                        "", 
                        "", 
                        "--label <u>LABEL</u>", 
                        "", 
                        "", 
                        "Use <u>LABEL</u> instead of file name.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e@Hsje>7s7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --show-c-function", 
                        "diff", 
                        "", 
                        "-p", 
                        "--show-c-function", 
                        "", 
                        "", 
                        "Show which C function each change is in.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qI}dK*pzq#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --show-function-line", 
                        "diff", 
                        "", 
                        "-F <u>RE</u>", 
                        "--show-function-line=<u>RE</u>", 
                        "", 
                        "", 
                        "Show the most recent line matching <u>RE</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g7h*Q1aZ#!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --brief", 
                        "diff", 
                        "", 
                        "-q", 
                        "--brief", 
                        "", 
                        "", 
                        "Output only whether files differ.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B+y=UiIhN:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ed", 
                        "diff", 
                        "", 
                        "-e", 
                        "--ed", 
                        "", 
                        "", 
                        "Output an <code>ed</code> script.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B!s>Ub`^$+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --normal", 
                        "diff", 
                        "", 
                        "", 
                        "--normal", 
                        "", 
                        "", 
                        "Output a normal diff.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OmJo[n<|)k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --rcs", 
                        "diff", 
                        "", 
                        "-n", 
                        "--rcs", 
                        "", 
                        "", 
                        "Output an RCS format diff.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vnA~9U@-QN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --side-by-side", 
                        "diff", 
                        "", 
                        "-y", 
                        "--side-by-side", 
                        "", 
                        "", 
                        "Output in two columns.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fu=dR&]s;U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --width", 
                        "diff", 
                        "", 
                        "-W <u>NUM</u>", 
                        "--width=<u>NUM</u>", 
                        "", 
                        "", 
                        "Output at most <u>NUM</u> (default 130) print columns.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yB~Vp=z(OK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --left-column", 
                        "diff", 
                        "", 
                        "", 
                        "--left-column", 
                        "", 
                        "", 
                        "Output only the left column of common lines.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nT3MqX>?#6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --suppress-common-lines", 
                        "diff", 
                        "", 
                        "", 
                        "--suppress-common-lines", 
                        "", 
                        "", 
                        "Do not output common lines.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xOwWFoHTi9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ifdef", 
                        "diff", 
                        "", 
                        "-D <u>NAME</u>", 
                        "--ifdef=<u>NAME</u>", 
                        "", 
                        "", 
                        "Output merged file to show <code>#ifdef <u>NAME</u></code> diffs.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x{&e]Cpiu!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --<u>GTYPE</u>-group-format", 
                        "diff", 
                        "", 
                        "", 
                        "--<u>GTYPE</u>-group-format=<u>GFMT</u>", 
                        "", 
                        "", 
                        "<div>Similar, but format <u>GTYPE</u> input groups with <u>GFMT</u>.</div><div><u>LTYPE</u> is <code>old</code>, <code>new</code>, or <code>unchanged</code>. <u>GTYPE</u> is <u>LTYPE</u> or <code>changed</code>.</div><div><u>GFMT</u> may contain:</div><ul><li><code>%<</code>: lines from <u>FILE1</u></li><li><code>%></code>: lines from <u>FILE2</u></li><li><code>%=</code>: lines common to <u>FILE1</u> and <u>FILE2</u></li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}<u>LETTER</u></code>: <code>printf</code>-style spec for <u>LETTER</u></li></ul><div>LETTERs are as follows for new group, lower case for old group:</div><ul><li><code>F</code>: first line number</li><li><code>L</code>: last line number</li><li><code>N</code>: number of lines = <code>L-F+1</code></li><li><code>E</code>: <code>F-1</code></li><li><code>M</code>: <code>L+1</code></li></ul><div>LFMT may contain:</div><ul><li><code>%L</code>: contents of line</li><li><code>%l</code>: contents of line, excluding any trailing newline</li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}n</code>: <code>printf</code>-style spec for input line number</li></ul><div>Either <u>GFMT</u> or <u>LFMT</u> may contain:</div><ul><li><code>%%</code>: %</li><li><code>%c'C'</code>: the single character C</li><li><code>%c'\\OOO'</code>: the character with octal code OOO</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E=]^l&V3I9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --line-format", 
                        "diff", 
                        "", 
                        "", 
                        "--line-format=<u>LFMT</u>", 
                        "", 
                        "", 
                        "<div>Similar, but format all input lines with <u>LFMT</u>.</div><div><u>LTYPE</u> is <code>old</code>, <code>new</code>, or <code>unchanged</code>. <u>GTYPE</u> is <u>LTYPE</u> or <code>changed</code>.</div><div><u>GFMT</u> may contain:</div><ul><li><code>%<</code>: lines from <u>FILE1</u></li><li><code>%></code>: lines from <u>FILE2</u></li><li><code>%=</code>: lines common to <u>FILE1</u> and <u>FILE2</u></li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}<u>LETTER</u></code>: <code>printf</code>-style spec for <u>LETTER</u></li></ul><div>LETTERs are as follows for new group, lower case for old group:</div><ul><li><code>F</code>: first line number</li><li><code>L</code>: last line number</li><li><code>N</code>: number of lines = <code>L-F+1</code></li><li><code>E</code>: <code>F-1</code></li><li><code>M</code>: <code>L+1</code></li></ul><div>LFMT may contain:</div><ul><li><code>%L</code>: contents of line</li><li><code>%l</code>: contents of line, excluding any trailing newline</li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}n</code>: <code>printf</code>-style spec for input line number</li></ul><div>Either <u>GFMT</u> or <u>LFMT</u> may contain:</div><ul><li><code>%%</code>: %</li><li><code>%c'C'</code>: the single character C</li><li><code>%c'\\OOO'</code>: the character with octal code OOO</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b5}+oxWK^z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --<u>LTYPE</u>-line-format", 
                        "diff", 
                        "", 
                        "", 
                        "--<u>LTYPE</u>-line-format=<u>LFMT</u>", 
                        "", 
                        "", 
                        "<div>Similar, but format <u>LTYPE</u> input lines with <u>LFMT</u>.</div><div><u>LTYPE</u> is <code>old</code>, <code>new</code>, or <code>unchanged</code>. <u>GTYPE</u> is <u>LTYPE</u> or <code>changed</code>.</div><div><u>GFMT</u> may contain:</div><ul><li><code>%<</code>: lines from <u>FILE1</u></li><li><code>%></code>: lines from <u>FILE2</u></li><li><code>%=</code>: lines common to <u>FILE1</u> and <u>FILE2</u></li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}<u>LETTER</u></code>: <code>printf</code>-style spec for <u>LETTER</u></li></ul><div>LETTERs are as follows for new group, lower case for old group:</div><ul><li><code>F</code>: first line number</li><li><code>L</code>: last line number</li><li><code>N</code>: number of lines = <code>L-F+1</code></li><li><code>E</code>: <code>F-1</code></li><li><code>M</code>: <code>L+1</code></li></ul><div>LFMT may contain:</div><ul><li><code>%L</code>: contents of line</li><li><code>%l</code>: contents of line, excluding any trailing newline</li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}n</code>: <code>printf</code>-style spec for input line number</li></ul><div>Either <u>GFMT</u> or <u>LFMT</u> may contain:</div><ul><li><code>%%</code>: %</li><li><code>%c'C'</code>: the single character C</li><li><code>%c'\\OOO'</code>: the character with octal code OOO</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OIIrAv$y++", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --paginate", 
                        "diff", 
                        "", 
                        "-l", 
                        "--paginate", 
                        "", 
                        "", 
                        "Pass the output through <code>pr</code> to paginate it.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p4/<llUYwT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --expand-tabs", 
                        "diff", 
                        "", 
                        "-t", 
                        "--expand-tabs", 
                        "", 
                        "", 
                        "Expand tabs to spaces in output.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u:JBc6LMLR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --initial-tab", 
                        "diff", 
                        "", 
                        "-T", 
                        "--initial-tab", 
                        "", 
                        "", 
                        "Make tabs line up by prepending a tab.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lqxnI+w60Z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --recursive", 
                        "diff", 
                        "", 
                        "-r", 
                        "--recursive", 
                        "", 
                        "", 
                        "Recursively compare any subdirectories found.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y<-T#0d9mW", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --new-file", 
                        "diff", 
                        "", 
                        "-N", 
                        "--new-file", 
                        "", 
                        "", 
                        "Treat absent files as empty.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H7x<Y7i/iH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --unidirectional-new-file", 
                        "diff", 
                        "", 
                        "", 
                        "--unidirectional-new-file", 
                        "", 
                        "", 
                        "Treat absent first files as empty.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w8MLL7A.$$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --report-identical-files", 
                        "diff", 
                        "", 
                        "-s", 
                        "--report-identical-files", 
                        "", 
                        "", 
                        "Report when two files are the same.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PSklO)`bBc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --exclude", 
                        "diff", 
                        "", 
                        "-x <u>PAT</u>", 
                        "--exclude=<u>PAT</u>", 
                        "", 
                        "", 
                        "Exclude files that match <u>PAT</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h03nR+f[=s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --exclude-from", 
                        "diff", 
                        "", 
                        "-X <u>FILE</u>", 
                        "--exclude-from=<u>FILE</u>", 
                        "", 
                        "", 
                        "Exclude files that match any pattern in <u>FILE</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "on7ztVC^C]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --starting-file", 
                        "diff", 
                        "", 
                        "-S <u>FILE</u>", 
                        "--starting-file=<u>FILE</u>", 
                        "", 
                        "", 
                        "Start with <u>FILE</u> when comparing directories.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pT(F5;Lp*/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --from-file", 
                        "diff", 
                        "", 
                        "", 
                        "--from-file=<u>FILE1</u>", 
                        "", 
                        "", 
                        "Compare <u>FILE1</u> to all operands.  <u>FILE1</u> can be a directory.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rA9qyY<U+@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --to-file", 
                        "diff", 
                        "", 
                        "", 
                        "--to-file=<u>FILE2</u>", 
                        "", 
                        "", 
                        "Compare all operands to <u>FILE2</u>.  <u>FILE2</u> can be a directory.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J_dhOf4]YV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --horizon-lines", 
                        "diff", 
                        "", 
                        "", 
                        "--horizon-lines=<u>NUM</u>", 
                        "", 
                        "", 
                        "Keep <u>NUM</u> lines of the common prefix and suffix.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fh|[%vhY~]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --minimal", 
                        "diff", 
                        "", 
                        "-d", 
                        "--minimal", 
                        "", 
                        "", 
                        "Try hard to find a smaller set of changes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "he/c-X*bq)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --speed-large-files", 
                        "diff", 
                        "", 
                        "", 
                        "--speed-large-files", 
                        "", 
                        "", 
                        "Assume large files and many scattered small changes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v,p~*[`t1<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --version", 
                        "diff", 
                        "", 
                        "-v", 
                        "--version", 
                        "", 
                        "", 
                        "Output version info.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xQ^5n}&pqA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --help", 
                        "diff", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "", 
                        "Output this help.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "di>h`D92EG", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -E", 
                        "find", 
                        "", 
                        "-E", 
                        "", 
                        "", 
                        "", 
                        "Interpret regular expressions followed by <code>-regex</code> and <code>-iregex</code> primaries as extended (modern) regular expressions rather than basic regular expressions (BRE's).  The <code>re_format</code>(7) manual page fully describes both formats.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t%>7z6E_>}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -s", 
                        "find", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "Traverse the file hierarchies in lexicographical order, i.e., alphabetical order within each directory.  Note:&nbsp;<code>find | sort</code> may give different results.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yuKE#[la`m", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -Bmin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-Bmin <u>n</u>", 
                        "", 
                        "True if the difference between the time of a file's <b>inode creation</b> and the time <code>find</code> was started, rounded up to the <b>next full minute</b>, is <code>n</code> minutes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L|][0Lamtv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -Bnewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-Bnewer <u>file</u>", 
                        "", 
                        "<i>Shorter of two meaning:</i>&nbsp;True if the current file has a more recent&nbsp;<b>inode creation time</b>&nbsp;than the&nbsp;<b>modification time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "Equivalent to&nbsp;<code>-newerBm&nbsp;<u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zNhR*+r$G<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -Btime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-Btime <u>n</u>[<u>smhdw</u>]", 
                        "", 
                        "<div>If no units are specified, this primary evaluates to true if the difference between the time of a file's <b>inode creation</b> and the time find was started, rounded up to the <b>next full 24-hour period</b>, is <code>n</code> 24-hour periods.</div><div>If units are specified, this primary evaluates to true if the difference between the time of a file's inode creation and the time find was started is exactly <code>n</code> units.  Please refer to the <code>-e</code> primary description for information on supported time units.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zDB_hzNvj4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -acl", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-acl", 
                        "", 
                        "May be used in conjunction with other primaries to locate files with extended ACLs.  See <code>acl</code>(3) for more information.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OtwYdaPm-A", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -amin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-amin <u>n</u>", 
                        "", 
                        "True if the difference between the file <b>last access time</b> and the time <code>find</code> was started, rounded up to the <b>next full minute</b>, is <code>n</code> minutes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r|vx[iRI7j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -anewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-anewer <u>file</u>", 
                        "", 
                        "<i>Shorter of two meaning:</i>&nbsp;True if the current file has a more recent&nbsp;<b>access time</b>&nbsp;than the&nbsp;<b>modification time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "Equivalent to&nbsp;<code>-neweram&nbsp;<u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u+r[?#T}lH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-atime <u>n</u>[<u>smhdw</u>]", 
                        "", 
                        "<div>If no units are specified, this primary evaluates to true if the difference between the file <b>last access time</b> and the time find was started, rounded up to the <b>next full 24-hour period</b>, is <code>n</code> 24-hour periods.</div><div>If units are specified, this primary evaluates to true if the difference between the file last access time and the time find was started is exactly <code>n</code> units.  Possible time units are as follows:</div><ul><li><code>s</code>: second</li><li><code>m</code>: minute (60 seconds)</li><li><code>h</code>: hour (60 minutes)</li><li><code>d</code>: day (24 hours)</li><li><code>w</code>: week (7 days)</li></ul><div>Any number of units may be combined in one <code>-atime</code> argument, for example, <code>-atime -1h30m</code>.  Units are probably only useful when used in conjunction with the <code>+</code> or <code>-</code> modifier.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B;tT(}U4va", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -cmin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-cmin <u>n</u>", 
                        "", 
                        "True if the difference between the time of <b>last change</b> of file status information and the time find was started, rounded up to the <b>next full minute</b>, is <code>n</code> minutes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QJR71]qT#D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -cnewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-cnewer <u>file</u>", 
                        "", 
                        "<i>Shorter of two meaning:</i>&nbsp;True if the current file has a more recent&nbsp;<b>change time</b>&nbsp;than the&nbsp;<b>modification time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "Equivalent to&nbsp;<code>-newercm&nbsp;<u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N?7~AkAeNw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ctime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ctime <u>n</u>[<u>smhdw</u>]", 
                        "", 
                        "<div>If no units are specified, this primary evaluates to true if the difference between the time of <b>last change</b> of file status information and the time find was started, rounded up to the <b>next full 24-hour period</b>, is <code>n</code> 24-hour periods.</div><div>If units are specified, this primary evaluates to true if the difference between the time of last change of file status information and the time find was started is exactly <code>n</code> units.  Please refer to the <code>-e</code> primary description for information on supported time units.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C.3A6,KaS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -d", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-d", 
                        "", 
                        "<i>Shorter of two meaning: </i>Always true.&nbsp;Process each directory’s contents before the directory itself. This is implied by&nbsp;<code>-delete</code>.<br /><div><b><br /></b></div><div><b>GNU</b> <code>find</code> implements this as a primary in mistaken emulation of <b>FreeBSD</b> <code>find</code>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D8F6AoWPVX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -delete", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-delete", 
                        "", 
                        "Delete found files and/or directories.  Always returns true.  This executes from the current working directory as find recurses down the tree.  It will not attempt to delete a filename with a <code>/</code> character in its pathname relative to <code>.</code> for security reasons.  Depth-first traversal processing is implied by this option.  Following symlinks is incompatible with this option.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w`FHyy]zV&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -depth", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-depth", 
                        "", 
                        "<i>Longer of two meaning:&nbsp;</i>Always true.&nbsp;Process each directory’s contents before the directory itself. This is implied by&nbsp;<code>-delete</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xvB5<Wj6Ko", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -empty", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-empty", 
                        "", 
                        "True if the current file or directory is empty.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EQE}Q$9$sY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -exec ;", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-exec <u>utility</u> [argument ...] ;", 
                        "", 
                        "True if the program named <u>utility</u> returns a zero value as its exit status.  Optional arguments may be passed to the utility.  The expression must be terminated by a semicolon (<code>;</code>).  If you invoke <code>find</code> from a shell you may need to quote the semicolon if the shell would otherwise treat it as a control operator.  If&nbsp;<code>{}</code> appears anywhere in the utility name or the arguments it is replaced by the pathname of the current file. <code><u>utility</u></code> will be executed from the directory from which <code>find</code> was executed.  Utility and arguments are not subject to the further expansion of shell patterns and constructs.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>McT6W[Dq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -execdir ;", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-execdir <u>utility</u> [<u>argument</u> ...] ;", 
                        "", 
                        "Identical to&nbsp;<code>-execdir&nbsp;<u>utility</u>&nbsp;[<u>argument</u>&nbsp;...] {} +</code>&nbsp;except&nbsp;<code><u>utility</u></code> will be executed from the directory that holds the current file.  The filename substituted for&nbsp;<code>{}</code> is not qualified.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jyi?XXdnh#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -flags", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-flags [-|+]<u>flags</u>,<u>notflags</u>", 
                        "", 
                        "<div>The flags are specified using symbolic names.  Those with the <code>no</code> prefix (except <code>nodump</code>) are said to be <i>notflags</i>.  Flags in <i>flags</i> are checked to be set, and flags in <i>notflags</i> are checked to be not set.  Note that this is different from <code>-perm</code>, which only allows the user to specify mode bits that are set.</div><div>If flags are preceded by a dash (<code>-</code>), this primary evaluates to true if at least all of the bits in flags and none of the bits in <i>notflags</i> are set in the file's flags bits.  If flags are preceded by a plus (<code>+</code>), this primary evaluates to true if any of the bits in flags is set in the file's flags bits, or any of the bits in <i>notflags</i> is not set in the file's flags bits.  Otherwise, this primary evaluates to true if the bits in flags exactly match the file's flags bits, and none of the flags bits match those of <i>notflags</i>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D8Og7NZ:km", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -fstype", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-fstype <u>type</u>", 
                        "", 
                        "True if the file is contained in a file system of type <u>type</u>.  The <code>lsvfs</code>(1) command can be used to find out the types of file systems that are available on the system.  In addition, there are two pseudo-types, <code>local</code> and <code>rdonly</code>.  The former matches any file system physically mounted on the system where the find is being executed and the latter matches any file system which is mounted read-only.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b_Vx%e];p?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -gid", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-gid <u>gname</u>", 
                        "", 
                        "The same thing as <code>-group</code> <u>gname</u> for compatibility with GNU <code>find</code>.  GNU <code>find</code> imposes a restriction that <u>gname</u> is numeric, while <code>find</code>(1) does not.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F(N_P-@w/u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -group", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-group <u>gname</u>", 
                        "", 
                        "True if the file belongs to the group <u>gname</u>.  If <u>gname</u> is numeric and there is no such group name, then <u>gname</u> is treated as a group ID.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I-IG0#_.<G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ignore_readdir_race", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ignore_readdir_race", 
                        "", 
                        "<b>BSD: </b>This option is for <b>GNU</b> <code>find</code> compatibility and is ignored.<div><br /></div><div><b>GNU: </b>Normally, <code>find</code> will emit an error message when it fails to <code>stat</code> a file. If you give this option and a file is deleted between the time find\nreads the name of the file from the directory and the time it tries to \n<code>stat</code> the file, no error message will be issued. This also applies to \nfiles or\ndirectories whose names are given on the command line. This option takes\n effect at the time the command line is read, which means that you \ncannot search one\npart of the filesystem with this option on and part of it with this \noption off (if you need to do that, you will need to issue two find commands\ninstead, one with the option and one without it).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L`Ji5^~Ti", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ilname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ilname <u>pattern</u>", 
                        "", 
                        "Like <code>-lname</code>, but the match is case insensitive.  This is a GNU <code>find</code> extension.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BrBHggVst6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -iname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-iname <u>pattern</u>", 
                        "", 
                        "Like <code>-name</code>, but the match is case insensitive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IFzjAudh!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -inum", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-inum <u>n</u>", 
                        "", 
                        "True if the file has inode number <u>n</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Bk)#us/OZa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ipath", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ipath <u>pattern</u>", 
                        "", 
                        "Like <code>-path</code>, but the match is case insensitive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cpt@%A/k5G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -iregex", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-iregex <u>pattern</u>", 
                        "", 
                        "Like <code>-regex</code>, but the match is case insensitive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j;KVHzUbr]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -iwholename", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-iwholename <u>pattern</u>", 
                        "", 
                        "The same thing as <code>-ipath</code>, for GNU <code>find</code> compatibility.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tH`&kwT#Nz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -links", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-links <u>n</u>", 
                        "", 
                        "True if the file has <u>n</u> links.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lz^FeJh.3y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -lname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-lname <u>pattern</u>", 
                        "", 
                        "Like <code>-name</code>, but the contents of the symbolic link are matched instead of the file name.  Note that this only matches broken symbolic links if symbolic links are being followed.  This is a GNU <code>find</code> extension.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ku$J@+I<_G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ls", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ls", 
                        "", 
                        "This primary always evaluates to true.  The following information for the current file is written to standard output: its inode number, size in 512-byte blocks, file permissions, number of hard links, owner, group, size in bytes, last modification time, and pathname.  If the file is a block or character special file, the device number will be displayed instead of the size in bytes.  If the file is a symbolic link, the pathname of the linked-to file will be displayed preceded by <code>-></code>.  The format is identical to that produced by <code>ls -dgils</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DW,&%^y4ep", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -maxdepth", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-maxdepth <u>n</u>", 
                        "", 
                        "<p>Always true; descend at most <em>n</em> directory levels below the command line arguments. If any <code>-h</code> primary is specified, it applies to the entire expression even if it would not normally be evaluated. Setting this primary to value&nbsp;<code>0</code> limits the whole search to the command line arguments.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MTksICJpZCI6ICIxNDk0NDA0NDcwMzU0LTAwNiIsICJtZCI6ICJBbHdheXMgdHJ1ZTsgZGVzY2VuZCBhdCBtb3N0IF9uXyBkaXJlY3RvcnkgbGV2ZWxzIGJlbG93IHRoZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzLiBJZiBhbnkgYC1oYCBwcmltYXJ5IGlzIHNwZWNpZmllZCwgaXQgYXBwbGllcyB0byB0aGUgZW50aXJlIGV4cHJlc3Npb24gZXZlbiBpZiBpdCB3b3VsZCBub3Qgbm9ybWFsbHkgYmUgZXZhbHVhdGVkLiBgLW1heGRlcHRoIDBgIGxpbWl0cyB0aGUgd2hvbGUgc2VhcmNoIHRvIHRoZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hnl&P&xl{D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mindepth", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mindepth <u>n</u>", 
                        "", 
                        "<p>Always true; do not apply any tests or actions at levels less than <em>n</em>. If any <code>-h</code> primary is specified, it applies to the entire expression even if it would not normally be evaluated. <code><strike>-mindepth</strike> 1</code> processes all but the command line arguments.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MjUsICJpZCI6ICIxNDk0NDA0NDcwMzU1LTAwNiIsICJtZCI6ICJBbHdheXMgdHJ1ZTsgZG8gbm90IGFwcGx5IGFueSB0ZXN0cyBvciBhY3Rpb25zIGF0IGxldmVscyBsZXNzIHRoYW4gX25fLiBJZiBhbnkgYC1oYCBwcmltYXJ5IGlzIHNwZWNpZmllZCwgaXQgYXBwbGllcyB0byB0aGUgZW50aXJlIGV4cHJlc3Npb24gZXZlbiBpZiBpdCB3b3VsZCBub3Qgbm9ybWFsbHkgYmUgZXZhbHVhdGVkLiBgLW1pbmRlcHRoIDFgIHByb2Nlc3NlcyBhbGwgYnV0IHRoZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q!Anqu7mbO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mmin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mmin <u>n</u>", 
                        "", 
                        "<p>True if the difference between the file last modification time and the time find was started, rounded up to the next full minute, is <code>n</code> minutes.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MzAsICJpZCI6ICIxNDk0NDA0NDcwMzU2LTAwNiIsICJtZCI6ICJUcnVlIGlmIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGZpbGUgbGFzdCBtb2RpZmljYXRpb24gdGltZSBhbmQgdGhlIHRpbWUgZmluZCB3YXMgc3RhcnRlZCwgcm91bmRlZCB1cCB0byB0aGUgbmV4dCBmdWxsIG1pbnV0ZSwgaXMgYG5gIG1pbnV0ZXMuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o.9Dbjs@dO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mnewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mnewer <u>file</u>", 
                        "", 
                        "<div><i>Middle of three meaning:&nbsp;</i>True if the current file has a more recent <b>last modification time</b> than&nbsp;<u>file</u>.</div>", 
                        "Equivalent&nbsp;to&nbsp;<code>-newer&nbsp;<u>file</u></code>&nbsp;and&nbsp;<code>-newermm&nbsp;<u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L-mckxzo5q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mount", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mount", 
                        "", 
                        "<p>The same thing as <code>-xdev</code>, for GNU <code>find</code> compatibility.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MzcsICJpZCI6ICIxNDk0NDA0NDcwMzU4LTAwNiIsICJtZCI6ICJUaGUgc2FtZSB0aGluZyBhcyBgLXhkZXZgLCBmb3IgR05VIGBmaW5kYCBjb21wYXRpYmlsaXR5LlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C-Tj%v=oLn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mtime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mtime <u>n</u>[<u>smhdw</u>]", 
                        "", 
                        "<p>If no units are specified, this primary evaluates to true if the difference between the file last modification time and the time find was started, rounded up to the next full 24-hour period, is <em>n</em> 24-hour periods.<br /> If units are specified, this primary evaluates to true if the difference between the file last modification time and the time find was started is exactly <em>n</em> units. Please refer to the <code>-e</code> primary description for information on supported time units.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NDEsICJpZCI6ICIxNDk0NDA0NDcwMzU5LTAwNiIsICJtZCI6ICJJZiBubyB1bml0cyBhcmUgc3BlY2lmaWVkLCB0aGlzIHByaW1hcnkgZXZhbHVhdGVzIHRvIHRydWUgaWYgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZmlsZSBsYXN0IG1vZGlmaWNhdGlvbiB0aW1lIGFuZCB0aGUgdGltZSBmaW5kIHdhcyBzdGFydGVkLCByb3VuZGVkIHVwIHRvIHRoZSBuZXh0IGZ1bGwgMjQtaG91ciBwZXJpb2QsIGlzIF9uXyAyNC1ob3VyIHBlcmlvZHMuXG5JZiB1bml0cyBhcmUgc3BlY2lmaWVkLCB0aGlzIHByaW1hcnkgZXZhbHVhdGVzIHRvIHRydWUgaWYgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZmlsZSBsYXN0IG1vZGlmaWNhdGlvbiB0aW1lIGFuZCB0aGUgdGltZSBmaW5kIHdhcyBzdGFydGVkIGlzIGV4YWN0bHkgX25fIHVuaXRzLiBQbGVhc2UgcmVmZXIgdG8gdGhlIGAtZWAgcHJpbWFyeSBkZXNjcmlwdGlvbiBmb3IgaW5mb3JtYXRpb24gb24gc3VwcG9ydGVkIHRpbWUgdW5pdHMuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tFzgL9Sk~`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -name", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-name <u>pattern</u>", 
                        "", 
                        "<p>True if the last component of the pathname being examined matches <em>pattern</em>. Special shell pattern matching characters (<code>[</code>, <code>]</code>, <code>*</code>, and <code>?</code>) may be used as part of <em>pattern</em>. These characters may be matched explicitly by escaping them with a backslash (<code>\\</code>).</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NDYsICJpZCI6ICIxNDk0NDA0NDcwMzYwLTAwNiIsICJtZCI6ICJUcnVlIGlmIHRoZSBsYXN0IGNvbXBvbmVudCBvZiB0aGUgcGF0aG5hbWUgYmVpbmcgZXhhbWluZWQgbWF0Y2hlcyBfcGF0dGVybl8uIFNwZWNpYWwgc2hlbGwgcGF0dGVybiBtYXRjaGluZyBjaGFyYWN0ZXJzIChgW2AsIGBdYCwgYCpgLCBhbmQgYD9gKSBtYXkgYmUgdXNlZCBhcyBwYXJ0IG9mIF9wYXR0ZXJuXy4gVGhlc2UgY2hhcmFjdGVycyBtYXkgYmUgbWF0Y2hlZCBleHBsaWNpdGx5IGJ5IGVzY2FwaW5nIHRoZW0gd2l0aCBhIGJhY2tzbGFzaCAoYFxcYCkuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E[kv<:CZ`y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newer <u>file</u>", 
                        "", 
                        "<i>Shortest of three meaning: </i>True if the current file has a more recent <b>last modification time</b> than <u>file</u>.", 
                        "Equivalent&nbsp;to&nbsp;<code>-mnewer&nbsp;<u>file</u></code>&nbsp;and&nbsp;<code>-newermm&nbsp;<u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lc*n`EGPeU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -nogroup", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-nogroup", 
                        "", 
                        "True if the file belongs to an unknown group.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GJ~.TEOdd1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -noignore_readdir_race", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-noignore_readdir_race", 
                        "", 
                        "<p>This option is for GNU <code>find</code> compatibility and is ignored.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NTksICJpZCI6ICIxNDk0NDA0NDcwMzY0LTAwNiIsICJtZCI6ICJUaGlzIG9wdGlvbiBpcyBmb3IgR05VIGBmaW5kYCBjb21wYXRpYmlsaXR5IGFuZCBpcyBpZ25vcmVkLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v]?~+z2>fc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -noleaf", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-noleaf", 
                        "", 
                        "This option is for GNU <code>find</code> compatibility.  In GNU <code>find</code> it disables an optimization not relevant to <code>find</code>(1), so it is ignored.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vXFMYwm%pA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -nouser", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-nouser", 
                        "", 
                        "True if the file belongs to an unknown user.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c-t.5tX%yg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ok", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ok <u>utility</u> [<u>argument</u> ...] ;", 
                        "", 
                        "Identical to the <code>-exec</code> primary with the exception that find requests user affirmation for the execution of the utility by printing a message to the terminal and reading a response.  If the response is not affirmative (<code>y</code> in the <code>POSIX</code> locale), the command is not executed and the value of this&nbsp;primary expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q0^TTYM:f<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -okdir", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-okdir <u>utility</u> [<u>argument</u> ...] ;", 
                        "", 
                        "Identical to the <code>-execdir</code> primary&nbsp;with the exception that <code>find</code> requests user affirmation for the execution of the utility by printing a message to the terminal and reading a response. If the response is not affirmative (<code>y</code>&nbsp;in the&nbsp;<code>POSIX</code>&nbsp;locale), the command is not executed and the value of this&nbsp;primary expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oMl/dv9l7R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -path", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-path <u>pattern</u>", 
                        "", 
                        "True if the pathname being examined matches pattern.  Special shell pattern matching characters (<code>[</code>, <code>]</code>, <code>*</code>, and <code>?</code>) may be used as part of pattern.  These characters may be matched explicitly by escaping them with a backslash (<code>\\</code>).  Slashes (<code>/</code>) are treated as normal characters and do not have to be matched explicitly.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zu9/GA]PhV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -perm", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-perm [-|+]<u>mode</u>", 
                        "", 
                        "The mode may be either symbolic (see <code>chmod</code>(1)) or an octal number.  If the mode is symbolic, a starting value of zero is assumed and the mode sets or clears permissions without regard to the process' file mode creation mask.  If the mode is octal, only bits <code>07777</code> (<code>S_ISUID</code> | <code>S_ISGID</code> | <code>S_ISTXT</code> | <code>S_IRWXU</code> | <code>S_IRWXG</code> | <code>S_IRWXO</code>) of the file's mode bits participate in the comparison.  If the mode is preceded by a dash (<code>-</code>), this primary evaluates to true if at least all of the bits in the mode are set in the file's mode bits.  If the mode is preceded by a plus (<code>+</code>), this primary evaluates to true if any of the bits in the mode are set in the file's mode bits.  Otherwise, this primary evaluates to true if the bits in the mode exactly match the file's mode bits.  Note, the first character of a symbolic mode may not be a dash (<code>-</code>).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qGDeQE=zDF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -print", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-print", 
                        "", 
                        "This primary always evaluates to true.  It prints the pathname of the current file to standard output.  If none of <code>-exec</code>, <code>-ls</code>, <code>-print</code>, <code>-print0</code>, or <code>-ok</code> is specified, the given expression shall be effectively replaced by ( given expression ) <code>-print</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cu_^ifENwb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -print0", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-print0", 
                        "", 
                        "This primary always evaluates to true.  It prints the pathname of the current file to standard output, followed by an ASCII <code>NUL</code> character (character code <code>0</code>).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oW*y*P7Li!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -prune", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-prune", 
                        "", 
                        "This primary always evaluates to true.  It causes find to not descend into the current file.  Note, this primary has no effect if the <code>-d</code> option was specified.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L$6<~K9_H~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -regex", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-regex <u>pattern</u>", 
                        "", 
                        "True if the whole path of the file matches <u>pattern</u> using regular expression.  To match a file named <code>./foo/xyzzy</code>, you can use the regular expression <code>.*/[xyz]*</code> or <code>.*/foo/.*</code>, but not <code>xyzzy</code> or <code>/foo/</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ek#1bZH#*u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -samefile", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-samefile <u>name</u>", 
                        "", 
                        "True if the file is a hard link to <u>name</u>.  If the command option <code>-L</code> is specified, it is also true if the file is a symbolic link and points to name.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D*1[`>@,^,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-size <u>n</u>[<u>ckMGTP</u>]", 
                        "", 
                        "<div>True if the file's size, rounded up, in 512-byte blocks is <u>n</u>.  If <u>n</u> is followed by a <u>c</u>, then the primary is true if the file's size is <u>n</u> bytes (characters).  Similarly if <u>n</u> is followed by a scale indicator then the file's size is compared to <u>n</u> scaled as:</div><ul><li><code>k</code>: kilobytes (1024 bytes)</li><li><code>M</code>: megabytes (1024 kilobytes)</li><li><code>G</code>: gigabytes (1024 megabytes)</li><li><code>T</code>: terabytes (1024 gigabytes)</li><li><code>P</code>: petabytes (1024 terabytes)</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o3c1;$(&3J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-type <i>[<u>t</u>]</i>", 
                        "", 
                        "<div>True if the file is of the specified type.  Possible file types are as follows:</div><ul><li><code>b</code>: block special</li><li><code>c</code>: character special</li><li><code>d</code>: directory</li><li><code>f</code>: regular file</li><li><code>l</code>: symbolic link</li><li><code>p</code>: FIFO</li><li><code>s</code>: socket</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u9Z06|MAl6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -uid", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-uid <u>uname</u>", 
                        "", 
                        "The same thing as <code>-user</code> <u>uname</u> for compatibility with GNU <code>find</code>.  GNU <code>find</code> imposes a restriction that <u>uname</u> is numeric, while <code>find</code>(1) does not.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DBK^z/cs7z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -user", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-user <u>uname</u>", 
                        "", 
                        "True if the file belongs to the user <u>uname</u>.  If <u>uname</u> is numeric and there is no such user name, then <u>uname</u> is treated as a user ID.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ns2ieN9A95", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -wholename", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-wholename <u>pattern</u>", 
                        "", 
                        "The same thing as <code>-path</code>, for GNU <code>find</code> compatibility.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H]/>N`rN4?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -xattr", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-xattr", 
                        "", 
                        "True if the file has any extended attributes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s<!@InK3NB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -xattrname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-xattrname <u>name</u>", 
                        "", 
                        "True if the file has an extended attribute with the specified <u>name</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CMe#}AW:$c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator ( )", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "( <u>expression</u> )", 
                        "", 
                        "Force precedence. This evaluates to true if the parenthesized expression evaluates to true.&nbsp;Since parentheses are special to the shell, you will normally need to quote them.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b*4~SYOpE5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator !", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "! <u>expression</u>", 
                        "", 
                        "Unary NOT operator, <b>POSIX</b> compliant. Evaluates to true if the expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LP<-0V3N`v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -not", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "-not <u>expression</u>", 
                        "", 
                        "Unary NOT operator, <i>not&nbsp;<b>POSIX</b>&nbsp;compliant</i>. Evaluates to true if the expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uz7Mk7M:5H", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -false", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "-false", 
                        "", 
                        "Always false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t84pUyp-N(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -true", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "-true", 
                        "", 
                        "Always true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Qpf{qlAY;?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -and", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expr1</u>&nbsp;-and <u>expr2</u>", 
                        "", 
                        "Logical AND operator, explicit (does not have to be specified) and <i>not&nbsp;<b>POSIX</b> compliant</i>. The expression evaluates to true if both expressions are true.  The second expression is not evaluated if the first expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eVnR+n0@&y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator {<u>expr1}</u>&nbsp;{<u>expr2}</u>", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expr1</u> <u>expr2</u>", 
                        "", 
                        "Logical AND operator, <b>POSIX</b> compliant. The expression evaluates to true if either the first or the second expression is true.  The second expression is not evaluated if the first expression is true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dq?/)|]FHq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -or", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expr1</u>&nbsp;-or <u>expr2</u>", 
                        "", 
                        "Logical OR operator, <i>not <b>POSIX</b> compliant</i>. The expression evaluates to true if either expression is true.  The second expression is not evaluated if the first expression is true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CF%YD#mB#P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type b", 
                        "find", 
                        "<code>-type</code>", 
                        "", 
                        "", 
                        "b", 
                        "", 
                        "block special", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cWf-]O%B6U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type c", 
                        "find", 
                        "<code>-type</code>", 
                        "", 
                        "", 
                        "c", 
                        "", 
                        "character special", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O:[-vq<&^|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type d", 
                        "find", 
                        "<code>-type</code>", 
                        "", 
                        "", 
                        "d", 
                        "", 
                        "directory", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rGo>cowy^:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type f", 
                        "find", 
                        "<code>-type</code>", 
                        "", 
                        "", 
                        "f", 
                        "", 
                        "regular file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MZaNKki%+O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type l", 
                        "find", 
                        "<code></code><code>-type</code>", 
                        "", 
                        "", 
                        "l", 
                        "", 
                        "symbolic link", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KA&F+2PlJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type p", 
                        "find", 
                        "<code>-type</code>", 
                        "", 
                        "", 
                        "p", 
                        "", 
                        "<span class=\"_Tgc\">A <b>FIFO</b> special <b>file</b> (a named pipe) is \nsimilar to a pipe, except that it is accessed as part of the filesystem.\n It can be opened by multiple processes for reading or writing. When \nprocesses are exchanging data via the <b>FIFO</b>, the kernel passes all data internally without writing it to the filesystem.</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LpJNpk/4zH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type s", 
                        "find", 
                        "<code>-type</code>", 
                        "", 
                        "", 
                        "s", 
                        "", 
                        "socket", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l0GP+4t-=J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size k", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "k", 
                        "", 
                        "kilobytes (1024 bytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F5-Rz+30pX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size M", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "M", 
                        "", 
                        "megabytes (1024 kilobytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "isVAy_&BCt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size G", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "G", 
                        "", 
                        "gigabytes (1024 megabytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "{o}>$3OYl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size T", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "T", 
                        "", 
                        "terabytes (1024 gigabytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oIugc{x%~j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size P", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "P", 
                        "", 
                        "petabytes (1024 terabytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cf&@3z2ACN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime s", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "s", 
                        "", 
                        "second", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x{?@W+6mY#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime m", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "m", 
                        "", 
                        "minute (60 seconds)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e7.dN1VX|Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime h", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "h", 
                        "", 
                        "hour (60 minutes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cI3Fni5+W`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime d", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "d", 
                        "", 
                        "day (24 hours)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n;!u>DCF0/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime w", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "w", 
                        "", 
                        "week (7 days)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A~uZ^9o9+I", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -depth&nbsp;<u>n</u>", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-depth <u>n</u>", 
                        "", 
                        "True if the depth of the file relative to the starting point of the traversal is <code>n</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K%M_ITG_[!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -exec {} +", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-exec <u>utility</u> [<u>argument</u> ...] {} +", 
                        "", 
                        "Same as&nbsp;<code>-exec&nbsp;<u>utility</u>&nbsp;[<u>argument</u>&nbsp;...] ;</code>&nbsp;except&nbsp;<code>{}</code>&nbsp;is replaced with as many pathnames as possible for each invocation of&nbsp;<code><u>utility</u></code>. This behaviour is similar to that of&nbsp;<code>xargs</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n~ln.8y<nT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -execdir {} +", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-execdir <u>utility</u> [<u>argument</u> ...] {} +", 
                        "", 
                        "Same as&nbsp;<code>-execdir&nbsp;<u>utility</u>&nbsp;[<u>argument</u>&nbsp;...] ;</code>&nbsp;except&nbsp;<code>{}</code> is replaced with as many pathnames as possible for each invocation of <code><u>utility</u></code>.  This behaviour is similar to that of <code>xargs</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eA1ZMWtiwr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate", 
                        "locate", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Searches a database for all pathnames which match the specified pattern. The database is recomputed periodically (usually weekly or daily), and contains the pathnames of all files which are publicly accessible.</p>\n<p>Shell globbing and quoting characters (<code>*</code>, <code>?</code>, <code>\\</code>, <code>[</code> and <code>]</code>) may be used in pattern, although they will have to be escaped from the shell. Preceding any character with a backslash (<code>\\</code>) eliminates any special meaning which it may have. The matching differs in that no characters must be matched explicitly, including slashes (<code>/</code>).</p>\n<p>As a special case, a pattern containing no globbing characters <code>foo</code> is matched as though it were <code>*foo*</code>.</p>\n<p>Historically, locate only stored characters between 32 and 127. The current implementation store any character except newline (<code>\\n</code>) and NUL (<code>\\0</code>). The 8-bit character support does not waste extra space for plain ASCII file names. Characters less than 32 or greater than 127 are stored in 2 bytes.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU4NDE0MzQsICJpZCI6ICIxNDk0NDA1NDQ3MjA3LTAwNiIsICJtZCI6ICJTZWFyY2hlcyBhIGRhdGFiYXNlIGZvciBhbGwgcGF0aG5hbWVzIHdoaWNoIG1hdGNoIHRoZSBzcGVjaWZpZWQgcGF0dGVybi4gVGhlIGRhdGFiYXNlIGlzIHJlY29tcHV0ZWQgcGVyaW9kaWNhbGx5ICh1c3VhbGx5IHdlZWtseSBvciBkYWlseSksIGFuZCBjb250YWlucyB0aGUgcGF0aG5hbWVzIG9mIGFsbCBmaWxlcyB3aGljaCBhcmUgcHVibGljbHkgYWNjZXNzaWJsZS5cbiAgXG5TaGVsbCBnbG9iYmluZyBhbmQgcXVvdGluZyBjaGFyYWN0ZXJzIChgKmAsIGA/YCwgYFxcYCwgYFtgIGFuZCBgXWApIG1heSBiZSB1c2VkIGluIHBhdHRlcm4sIGFsdGhvdWdoIHRoZXkgd2lsbCBoYXZlIHRvIGJlIGVzY2FwZWQgZnJvbSB0aGUgc2hlbGwuIFByZWNlZGluZyBhbnkgY2hhcmFjdGVyIHdpdGggYSBiYWNrc2xhc2ggKGBcXGApIGVsaW1pbmF0ZXMgYW55IHNwZWNpYWwgbWVhbmluZyB3aGljaCBpdCBtYXkgaGF2ZS4gVGhlIG1hdGNoaW5nIGRpZmZlcnMgaW4gdGhhdCBubyBjaGFyYWN0ZXJzIG11c3QgYmUgbWF0Y2hlZCBleHBsaWNpdGx5LCBpbmNsdWRpbmcgc2xhc2hlcyAoYC9gKS5cbiAgXG5BcyBhIHNwZWNpYWwgY2FzZSwgYSBwYXR0ZXJuIGNvbnRhaW5pbmcgbm8gZ2xvYmJpbmcgY2hhcmFjdGVycyBgZm9vYCBpcyBtYXRjaGVkIGFzIHRob3VnaCBpdCB3ZXJlIGAqZm9vKmAuXG4gIFxuSGlzdG9yaWNhbGx5LCBsb2NhdGUgb25seSBzdG9yZWQgY2hhcmFjdGVycyBiZXR3ZWVuIDMyIGFuZCAxMjcuIFRoZSBjdXJyZW50IGltcGxlbWVudGF0aW9uIHN0b3JlIGFueSBjaGFyYWN0ZXIgZXhjZXB0IG5ld2xpbmUgKGBcXG5gKSBhbmQgTlVMIChgXFwwYCkuIFRoZSA4LWJpdCBjaGFyYWN0ZXIgc3VwcG9ydCBkb2VzIG5vdCB3YXN0ZSBleHRyYSBzcGFjZSBmb3IgcGxhaW4gQVNDSUkgZmlsZSBuYW1lcy4gQ2hhcmFjdGVycyBsZXNzIHRoYW4gMzIgb3IgZ3JlYXRlciB0aGFuIDEyNyBhcmUgc3RvcmVkIGluIDIgYnl0ZXMuXG4ifQ==---->", 
                        "<code>locate</code> [<code>-0Scims</code>] [<code>-l</code> <u>limit</u>] [<code>-d</code> <u>database</u>] <u>pattern</u> ...", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "jhQ0Su*;Aa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -0", 
                        "locate", 
                        "", 
                        "-0", 
                        "", 
                        "", 
                        "", 
                        "Print pathnames separated by an ASCII NUL character (character code 0) instead of default NL (newline, character code 10).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kVC{8)4Bbi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -S", 
                        "locate", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "", 
                        "Print some statistics about the database and exit.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dGg3B}SkQr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -c", 
                        "locate", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "", 
                        "Suppress normal output; instead print a count of matching file names.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e6OEu6EanA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -d", 
                        "locate", 
                        "", 
                        "-d <u>database</u>", 
                        "", 
                        "", 
                        "", 
                        "<div>Search in database instead of the default file name database. &nbsp;Multiple of this&nbsp;option are allowed.</div>", 
                        "<div>&nbsp;Each additional&nbsp;<code>-d</code>&nbsp;option adds</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the specified database to the list of databases to be searched.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The option database may be a colon-separated list of databases. &nbsp;A single colon is a reference to the default database.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d $HOME/lib/mydb: foo</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;will first search string \"foo\" in&nbsp;<code>$HOME/lib/mydb</code>&nbsp;and then in&nbsp;<code>/var/db/locate.database</code>.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$ locate -d $HOME/lib/mydb::/cdrom/locate.database foo</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;will first search string \"foo\" in&nbsp;<code>$HOME/lib/mydb</code>&nbsp;and then in&nbsp;<code>/var/db/locate.database</code>&nbsp;and then in&nbsp;<code>/cdrom/locate.database</code>.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d db1 -d db2 -d db3 pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;is the same as</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d db1:db2:db3 pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;or</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d db1:db2 -d db3 pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;If&nbsp;<code>-</code>&nbsp;is given as the database name, standard input will be read instead. &nbsp;For example, you can compress your database and use:</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ zcat database.gz | locate -d - pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;This might be useful on machines with a fast CPU and little RAM and slow I/O. &nbsp;Note: you can only use one pattern for stdin.</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HH4bhoQ@xe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -i", 
                        "locate", 
                        "", 
                        "-i", 
                        "", 
                        "", 
                        "", 
                        "<div>Ignore case distinctions in both the pattern and the database.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EF*BtH8Fe&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -l", 
                        "locate", 
                        "", 
                        "-l <u>number</u>", 
                        "", 
                        "", 
                        "", 
                        "<div>Limit output to <u>number</u> of file names and exit.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s@(8tE]g+h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -m", 
                        "locate", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "", 
                        "<div>Use <code>mmap</code>&nbsp;instead of the <code>stdio</code>&nbsp;library. &nbsp;This is the default behavior and is faster in most cases.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AZLWd-;AU1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -s", 
                        "locate", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "<div>Use the <code>stdio</code>(3) library instead of <code>mmap</code>(2).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o3l;kd,fmN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "locate"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apropos", 
                        "apropos", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "searches  a  set  of database files containing short descriptions of system commands for keywords and displays the result on the        standard output", 
                        "apropos&nbsp;<u>keyword</u>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "lmVRq<27=O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "whatis", 
                        "whatis", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Searches  a  set  of  database files containing short descriptions of system commands for keywords and displays the result on the        standard output.  Only complete word matches are displayed.", 
                        "<code>whatis</code>&nbsp;<u>keyword</u><div><u><br /></u></div><div>The database is created using the command <code>/usr/libexec/makewhatis</code></div>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "k):&nHI1Y4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "man [section]", 
                        "man", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Following 8 sections are available in the man page.</p> <ol> <li>General commands</li> <li>System calls</li> <li>C library functions</li> <li>Special files (usually devices, those found in /dev) and drivers</li> <li>File formats and conventions</li> <li>Games and screensavers</li> <li>Miscellaneous</li> <li>System administration commands and daemons</li></ol>", 
                        "<b><div>$ whatis crontab</div><div>crontab (1) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- maintain crontab files for individual users (V3)</div><div>crontab (5) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- tables for driving cron</div><div><br /></div><div>$ man 5 crontab</div></b>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "D/&uFU>9M{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "What is wrong with <code>--option=~/file</code>", 
                        "", 
                        "<code>~</code> only substituted by shell if leading filename, so needs <code>=</code> replaced by space", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x#J@s]Ye#9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Make the current commit the only (initial) commit in a Git repository?", 
                        "", 
                        "<p>The only solution that works for me (and keeps submodules working) is</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><b>git checkout --orphan newBranch</b>\ngit add -A  <span style=\"color: #999999;font-style: italic\"># Add all files and commit them</span>\ngit commit\ngit branch -D master  <span style=\"color: #999999; font-style: italic\"># Deletes the master branch</span>\ngit branch -m master  <span style=\"color: #999999; font-style: italic\"># Rename the current branch to master</span>\ngit push -f origin master  <span style=\"color: #999999; font-style: italic\"># Force push master branch to github</span>\ngit gc --aggressive --prune<span style=\"color: #d0d0d0\">=</span>all     <span style=\"color: #999999; font-style: italic\"># remove the old files</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTkxMTcyODksICJpZCI6ICIxNDk0NjM3NjAwNzcyLTAwMSIsICJtZCI6ICJUaGUgb25seSBzb2x1dGlvbiB0aGF0IHdvcmtzIGZvciBtZSAoYW5kIGtlZXBzIHN1Ym1vZHVsZXMgd29ya2luZykgaXNcbiAgXG4gICAgOjo6YmFzaFxuICAgIGdpdCBjaGVja291dCAtLW9ycGhhbiBuZXdCcmFuY2hcbiAgICBnaXQgYWRkIC1BICAjIEFkZCBhbGwgZmlsZXMgYW5kIGNvbW1pdCB0aGVtXG4gICAgZ2l0IGNvbW1pdFxuICAgIGdpdCBicmFuY2ggLUQgbWFzdGVyICAjIERlbGV0ZXMgdGhlIG1hc3RlciBicmFuY2hcbiAgICBnaXQgYnJhbmNoIC1tIG1hc3RlciAgIyBSZW5hbWUgdGhlIGN1cnJlbnQgYnJhbmNoIHRvIG1hc3RlclxuICAgIGdpdCBwdXNoIC1mIG9yaWdpbiBtYXN0ZXIgICMgRm9yY2UgcHVzaCBtYXN0ZXIgYnJhbmNoIHRvIGdpdGh1YlxuICAgIGdpdCBnYyAtLWFnZ3Jlc3NpdmUgLS1wcnVuZT1hbGwgICAgICMgcmVtb3ZlIHRoZSBvbGQgZmlsZXNcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qofM=IFI?1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "cron meaning", 
                        "", 
                        "There is no definitive explanation but most accepted answers is reportdly from Ken Thompson (author of unix cron): cron comes from chron, the Greek prefix for ‘time’.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f_/3PNYTeb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab short for", 
                        "", 
                        "cron table", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EHJ/577DF0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab restrictions", 
                        "", 
                        "<ul>\n<li style=\"text-align: left; \">if <code>/usr/lib/cron/cron.allow</code> exists<ul>\n<li style=\"text-align: left; \"><code>$USER</code> must appear in it</li>\n</ul>\n</li>\n<li style=\"text-align: left; \">else if <code>/usr/lib/cron/cron.deny</code> exists<ul>\n<li style=\"text-align: left; \"><code>$USER</code> must not appear in it</li>\n</ul>\n</li>\n<li style=\"text-align: left; \">else<ul>\n<li style=\"text-align: left; \">only <code>root</code> can use crontab</li>\n</ul>\n</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM0MjYsICJpZCI6ICIxNDk0OTg3MDM2NzY2LTAwMSIsICJtZCI6ICIqIGlmIGAvdXNyL2xpYi9jcm9uL2Nyb24uYWxsb3dgIGV4aXN0c1xuICAgICogYCRVU0VSYCBtdXN0IGFwcGVhciBpbiBpdFxuKiBlbHNlIGlmIGAvdXNyL2xpYi9jcm9uL2Nyb24uZGVueWAgZXhpc3RzXG4gICAgKiBgJFVTRVJgIG11c3Qgbm90IGFwcGVhciBpbiBpdFxuKiBlbHNlXG4gICAgKiBvbmx5IGByb290YCBjYW4gdXNlIGNyb250YWJcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cUkL&{<ow2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -n", 
                        "declare", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "<p>Give each <var>name</var> the <var>nameref</var> attribute, making it a name reference to another variable. That other variable is defined by the value of <var>name</var>. All references, assignments, and attribute modifications to <var>name</var>, except for those using or changing this&nbsp;attribute itself, are performed on the variable referenced by <var>name</var>’s value. The nameref attribute cannot be applied to array variables. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ad~W|cc`AR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin alias", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "alias", 
                        "", 
                        "<p>Without arguments or with the <code>-p</code> option, <code><strike>alias</strike></code> prints the list of aliases on the standard output in a form that allows them to be reused as input. If arguments are supplied, an alias is defined for each <code>name</code> whose <code>value</code> is given.  If no <code>value</code> is given, the name and value of the alias is printed.</p> <p>Aliases are described in <a href=\"Aliases.html#Aliases\">Aliases</a>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTA2NDUsICJpZCI6ICIxNDk1MjUwNDIyNDY5LTAwNiIsICJtZCI6ICJXaXRob3V0IGFyZ3VtZW50cyBvciB3aXRoIHRoZSBgLXBgIG9wdGlvbiwgYGFsaWFzYCBwcmludHMgdGhlIGxpc3Qgb2YgYWxpYXNlcyBvbiB0aGUgc3RhbmRhcmQgb3V0cHV0IGluIGEgZm9ybSB0aGF0IGFsbG93cyB0aGVtIHRvIGJlIHJldXNlZCBhcyBpbnB1dC4gSWYgYXJndW1lbnRzIGFyZSBzdXBwbGllZCwgYW4gYWxpYXMgaXMgZGVmaW5lZCBmb3IgZWFjaCBgbmFtZWAgd2hvc2UgYHZhbHVlYCBpcyBnaXZlbi4gIElmIG5vIGB2YWx1ZWAgaXMgZ2l2ZW4sIHRoZSBuYW1lIGFuZCB2YWx1ZSBvZiB0aGUgYWxpYXMgaXMgcHJpbnRlZC5cbiAgXG5BbGlhc2VzIGFyZSBkZXNjcmliZWQgaW4gJmx0O2EgaHJlZj0mcXVvdDtBbGlhc2VzLmh0bWwjQWxpYXNlcyZxdW90OyZndDtBbGlhc2VzJmx0Oy9hJmd0Oy5cbiJ9---->", 
                        "alias [-p] [&lt;var&gt;name&lt;/var&gt;[=&lt;var&gt;value&lt;/var&gt;] &amp;hellip;]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BgnPg5!Ho-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "bind", 
                        "", 
                        "<p>Display current Readline (see <a href=\"Command-Line-Editing.html#Command-Line-Editing\">Command Line Editing</a>) key and function bindings, bind a key sequence to a Readline function or macro, or set a Readline variable. Each non-option argument is a command as it would appear in a Readline initialization file (see <a href=\"Readline-Init-File.html#Readline-Init-File\">Readline Init File</a>), but each binding or command must be passed as a separate argument;  e.g., ‘<samp>\"\\C-x\\C-r\":re-read-init-file</samp>’. </p> <p>The return status is zero unless an invalid option is supplied or an error occurs. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MlW:MQw9x-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;builtin", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "builtin", 
                        "", 
                        "<p>Run a shell builtin, passing it <var>args</var>, and return its exit status. This is useful when defining a shell function with the same name as a shell builtin, retaining the functionality of the builtin within the function. The return status is non-zero if <var>shell-builtin</var> is not a shell builtin command. </p>", 
                        "builtin [<var>shell-builtin</var> [<var>args</var>]]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u$+?iVaEIu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;caller", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "caller", 
                        "", 
                        "<p>Returns the context of any active subroutine call (a shell function or a script executed with the <code>.</code> or <code>source</code> builtins). </p> <p>Without <var>expr</var>, <code>caller</code> displays the line number and source filename of the current subroutine call. If a non-negative integer is supplied as <var>expr</var>, <code>caller</code> displays the line number, subroutine name, and source file corresponding to that position in the current execution call stack.  This extra information may be used, for example, to print a stack trace.  The current frame is frame 0. </p> <p>The return value is 0 unless the shell is not executing a subroutine call or <var>expr</var> does not correspond to a valid position in the call stack. </p>", 
                        "caller [<var>expr</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f5B5:V7:5L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;command", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "command", 
                        "", 
                        "<p>Runs <var>command</var> with <var>arguments</var> ignoring any shell function named <var>command</var>. Only shell builtin commands or commands found by searching the <code>PATH</code> are executed. If there is a shell function named <code>ls</code>, running ‘<samp>command ls</samp>’ within the function will execute the external command <code>ls</code> instead of calling the function recursively. The <samp>-p</samp> option means to use a default value for <code>PATH</code> that is guaranteed to find all of the standard utilities. The return status in this case is 127 if <var>command</var> cannot be found or an error occurred, and the exit status of <var>command</var> otherwise. </p> <p>If either the <samp>-V</samp> or <samp>-v</samp> option is supplied, a description of <var>command</var> is printed.  The <samp>-v</samp> option causes a single word indicating the command or file name used to invoke <var>command</var> to be displayed; the <samp>-V</samp> option produces a more verbose description.  In this case, the return status is zero if <var>command</var> is found, and non-zero if not. </p>", 
                        "command [-pVv] <var>command</var> [<var>arguments</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kIAz{lk*vt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;declare", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "declare", 
                        "", 
                        "<p>Declare variables and give them attributes.  If no <var>name</var>s are given, then display the values of variables instead.  </p> <p>The <samp>-p</samp> option will display the attributes and values of each <var>name</var>. When <samp>-p</samp> is used with <var>name</var> arguments, additional options, other than <samp>-f</samp> and <samp>-F</samp>, are ignored. </p> <p>When <samp>-p</samp> is supplied without <var>name</var> arguments, <code>declare</code> will display the attributes and values of all variables having the attributes specified by the additional options. If no other options are supplied with <samp>-p</samp>, <code>declare</code> will display the attributes and values of all shell variables.  The <samp>-f</samp> option will restrict the display to shell functions. </p> <p>The <samp>-F</samp> option inhibits the display of function definitions; only the function name and attributes are printed. If the <code>extdebug</code> shell option is enabled using <code>shopt</code> (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html#The-Shopt-Builtin\">The Shopt Builtin</a>), the source file name and line number where each <var>name</var> is defined are displayed as well. <samp>-F</samp> implies <samp>-f</samp>. </p> <p>The <samp>-g</samp> option forces variables to be created or modified at the global scope, even when <code>declare</code> is executed in a shell function. It is ignored in all other cases. </p> <p>The following options can be used to restrict output to variables with the specified attributes or to give variables attributes: </p> <dl compact=\"compact\"> <dt><code>-a</code></dt> <dd><p>Each <var>name</var> is an indexed array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p> </dd> <dt><code>-A</code></dt> <dd><p>Each <var>name</var> is an associative array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p> </dd> <dt><code>-f</code></dt> <dd><p>Use function names only. </p> </dd> <dt><code>-i</code></dt> <dd><p>The variable is to be treated as an integer; arithmetic evaluation (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic\">Shell Arithmetic</a>) is performed when the variable is assigned a value. </p> </dd> <dt><code>-l</code></dt> <dd><p>When the variable is assigned a value, all upper-case characters are converted to lower-case. The upper-case attribute is disabled. </p> </dd> <dt><code>-n</code></dt> <dd><p>Give each <var>name</var> the <var>nameref</var> attribute, making it a name reference to another variable. That other variable is defined by the value of <var>name</var>. All references, assignments, and attribute modifications to <var>name</var>, except for those using or changing the <samp>-n</samp> attribute itself, are performed on the variable referenced by <var>name</var>’s value. The nameref attribute cannot be applied to array variables. </p> </dd> <dt><code>-r</code></dt> <dd><p>Make <var>name</var>s readonly.  These names cannot then be assigned values by subsequent assignment statements or unset. </p> </dd> <dt><code>-t</code></dt> <dd><p>Give each <var>name</var> the <code>trace</code> attribute. Traced functions inherit the <code>DEBUG</code> and <code>RETURN</code> traps from the calling shell. The trace attribute has no special meaning for variables. </p> </dd> <dt><code>-u</code></dt> <dd><p>When the variable is assigned a value, all lower-case characters are converted to upper-case. The lower-case attribute is disabled. </p> </dd> <dt><code>-x</code></dt> <dd><p>Mark each <var>name</var> for export to subsequent commands via the environment. </p></dd> </dl> <p>Using ‘<samp>+</samp>’ instead of ‘<samp>-</samp>’ turns off the attribute instead, with the exceptions that ‘<samp>+a</samp>’ may not be used to destroy an array variable and ‘<samp>+r</samp>’ will not remove the readonly attribute. When used in a function, <code>declare</code> makes each <var>name</var> local, as with the <code>local</code> command, unless the <samp>-g</samp> option is used. If a variable name is followed by =<var>value</var>, the value of the variable is set to <var>value</var>. </p> <p>When using <samp>-a</samp> or <samp>-A</samp> and the compound assignment syntax to  create array variables, additional attributes do not take effect until subsequent assignments. </p> <p>The return status is zero unless an invalid option is encountered, an attempt is made to define a function using ‘<samp>-f foo=bar</samp>’, an attempt is made to assign a value to a readonly variable, an attempt is made to assign a value to an array variable without using the compound assignment syntax (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>), one of the <var>names</var> is not a valid shell variable name, an attempt is made to turn off readonly status for a readonly variable, an attempt is made to turn off array status for an array variable, or an attempt is made to display a non-existent function with <samp>-f</samp>. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "blcwGb0=Sd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;echo", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "echo", 
                        "", 
                        "<p>Output the <var>arg</var>s, separated by spaces, terminated with a newline. The return status is 0 unless a write error occurs. If <samp>-n</samp> is specified, the trailing newline is suppressed. If the <samp>-e</samp> option is given, interpretation of the following backslash-escaped characters is enabled. The <samp>-E</samp> option disables the interpretation of these escape characters, even on systems where they are interpreted by default. The <code>xpg_<strike>echo</strike></code> shell option may be used to dynamically determine whether or not <code><strike>echo</strike></code> expands these escape characters by default. <code><strike>echo</strike></code> does not interpret <samp>--</samp> to mean the end of options.</p><dl compact=\"compact\"> </dl>", 
                        "echo [-neE] [<var>arg</var> …]<div><br /></div><div><code>echo</code>&nbsp;interprets the following escape sequences:</div><div><dl compact=\"compact\"><dt><code>\\a&nbsp;</code>alert (bell)</dt><dt><code>\\b&nbsp;</code>backspace</dt><dt><code>\\c&nbsp;</code>suppress further output</dt><dt><code>\\e</code></dt><dt><code>\\E&nbsp;</code>escape</dt><dt><code>\\f&nbsp;</code>form feed</dt><dt><code>\\n&nbsp;</code>new line</dt><dt><code>\\r&nbsp;</code>carriage return</dt><dt><code>\\t&nbsp;</code>horizontal tab</dt><dt><code>\\v&nbsp;</code>vertical tab</dt><dt><code>\\\\&nbsp;</code>backslash</dt><dt><code>\\0<var>nnn&nbsp;</var></code>the eight-bit character whose value is the octal value&nbsp;<var>nnn</var>&nbsp;(zero to three octal digits)</dt><dt><code>\\x<var>HH&nbsp;</var></code>the eight-bit character whose value is the hexadecimal value&nbsp;<var>HH</var>&nbsp;(one or two hex digits)</dt><dt><code>\\u<var>HHHH&nbsp;</var></code>the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value&nbsp;<var>HHHH</var>&nbsp;(one to four hex digits)</dt><dt><code>\\U<var>HHHHHHHH&nbsp;</var></code>the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value&nbsp;<var>HHHHHHHH</var>&nbsp;(one to eight hex digits)</dt></dl></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xg(k=R,ED4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;enable", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "enable", 
                        "", 
                        "<p>Enable and disable builtin shell commands. Disabling a builtin allows a disk command which has the same name as a shell builtin to be executed without specifying a full pathname, even though the shell normally searches for builtins before disk commands. If <samp>-n</samp> is used, the <var>name</var>s become disabled.  Otherwise <var>name</var>s are enabled.  For example, to use the <code>test</code> binary found via <code>$PATH</code> instead of the shell builtin version, type <code>enable -n test</code>. </p> <p>If the <samp>-p</samp> option is supplied, or no <var>name</var> arguments appear, a list of shell builtins is printed.  With no other arguments, the list consists of all enabled shell builtins. The <samp>-a</samp> option means to list each builtin with an indication of whether or not it is enabled.  </p> <p>The <samp>-f</samp> option means to load the new builtin command <var>name</var> from shared object <var>filename</var>, on systems that support dynamic loading. The <samp>-d</samp> option will delete a builtin loaded with <samp>-f</samp>. </p> <p>If there are no options, a list of the shell builtins is displayed. The <samp>-s</samp> option restricts <code>enable</code> to the <small>POSIX</small> special builtins.  If <samp>-s</samp> is used with <samp>-f</samp>, the new builtin becomes a special builtin (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Special-Builtins.html#Special-Builtins\">Special Builtins</a>). </p> <p>The return status is zero unless a <var>name</var> is not a shell builtin or there is an error loading a new builtin from a shared object. </p>", 
                        "enable [-a] [-dnps] [-f <var>filename</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y+s-pRZ9o&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;let", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "let", 
                        "", 
                        "<p>Allows arithmetic to be performed on shell variables.  Each <var>expression</var> is evaluated according to the rules given in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic\">Shell Arithmetic</a>.  If the last <var>expression</var> evaluates to 0, returns 1; otherwise 0 is returned. </p>", 
                        "let <var>expression</var> [<var>expression</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EY<Gn-Ym54", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;local", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "local", 
                        "", 
                        "<p>For each argument, a local variable named <var>name</var> is created, and assigned <var>value</var>. The <var>option</var> can be any of the options accepted by <code>declare</code>. <code>local</code> can only be used within a function; it makes the variable <var>name</var> have a visible scope restricted to that function and its children. If <var>name</var> is ‘<samp>-</samp>’, the set of shell options is made local to the function in which <code>local</code> is invoked: shell options changed using the <code>set</code> builtin inside the function are restored to their original values when the function returns. The return status is zero unless <code>local</code> is used outside a function, an invalid <var>name</var> is supplied, or <var>name</var> is a readonly variable. </p>", 
                        "local [<var>option</var>] <var>name</var>[=<var>value</var>] …", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r<uB?)-FXq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;mapfile", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "mapfile", 
                        "", 
                        "<p>Read lines from the standard input into the indexed array variable <var><code>array</code></var>, or from file descriptor <var><code>fd</code></var> if the <samp><code>-u</code></samp> option is supplied. The variable <code><strike>MAPFILE</strike></code> is the default <var><code>array</code></var>.</p> <dl compact=\"compact\"> <dt>If not supplied with an explicit origin, will clear <var><code>array</code></var> before assigning to it.</dt></dl> <p>Returns successfully unless an invalid option or option argument is supplied, <var><code>array</code></var> is invalid or unassignable, or <var><code>array</code></var> is not an indexed array. </p>", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FL1P~u(yC&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;logout", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "logout <i>[<b>n</b>]</i>", 
                        "", 
                        "Exit a login shell, returning a status of <var>n</var> to the shell’s parent.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t{?Rd@3rY]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;printf", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "printf", 
                        "", 
                        "<p>Write the formatted <var>arguments</var> to the standard output under the control of the <var>format</var>. The <samp>-v</samp> option causes the output to be assigned to the variable <var>var</var> rather than being printed to the standard output. </p> <p>The <var>format</var> is a character string which contains three types of objects: plain characters, which are simply copied to standard output, character escape sequences, which are converted and copied to the standard output, and format specifications, each of which causes printing of the next successive <var>argument</var>. In addition to the standard <code>printf(1)</code> formats, <code>printf</code> interprets the following extensions:&nbsp;<code>%b</code>,&nbsp;<code>%q</code>,&nbsp;%(<var>datefmt</var>)T.</p> <p>Arguments to non-string format specifiers are treated as C language constants, except that a leading plus or minus sign is allowed, and if the leading character is a single or double quote, the value is the ASCII value of the following character. </p> <p>The <var>format</var> is reused as necessary to consume all of the <var>arguments</var>. If the <var>format</var> requires more <var>arguments</var> than are supplied, the extra format specifications behave as if a zero value or null string, as appropriate, had been supplied.  The return value is zero on success, non-zero on failure. </p>", 
                        "printf [-v <var>var</var>] <var>format</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dCBn@]AT!@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;readarray", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "readarray", 
                        "", 
                        "<p>Read lines from the standard input into the indexed array variable <var>array</var>, or from file descriptor <var>fd</var> if the <samp>-u</samp> option is supplied. </p> <p>A synonym for <code>mapfile</code>. </p>", 
                        "readarray [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>}5T1Xh(,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;source", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "source", 
                        "", 
                        "<p>synonym for <code>.</code></p>", 
                        "source <var>filename</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lt8-qN!?a3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;typeset", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "typeset", 
                        "", 
                        "<p>Synonym for the <code>declare</code> builtin command supplied for compatibility with the Korn shell. </p>", 
                        "typeset [-afFgrxilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ir6CcxR/|N", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;ulimit", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "ulimit", 
                        "", 
                        "<p>Provides control over the resources available to processes started by the shell, on systems that allow such control.  If an option is given, it is interpreted as follows: </p> <dl compact=\"compact\"> <dt><code>-S</code></dt> <dd><p>Change and report the soft limit associated with a resource. </p> </dd> <dt><code>-H</code></dt> <dd><p>Change and report the hard limit associated with a resource. </p> </dd> <dt><code>-a</code></dt> <dd><p>All current limits are reported. </p> </dd> <dt><code>-b</code></dt> <dd><p>The maximum socket buffer size. </p> </dd> <dt><code>-c</code></dt> <dd><p>The maximum size of core files created. </p> </dd> <dt><code>-d</code></dt> <dd><p>The maximum size of a process’s data segment. </p> </dd> <dt><code>-e</code></dt> <dd><p>The maximum scheduling priority (\"nice\"). </p> </dd> <dt><code>-f</code></dt> <dd><p>The maximum size of files written by the shell and its children. </p> </dd> <dt><code>-i</code></dt> <dd><p>The maximum number of pending signals. </p> </dd> <dt><code>-k</code></dt> <dd><p>The maximum number of kqueues that may be allocated. </p> </dd> <dt><code>-l</code></dt> <dd><p>The maximum size that may be locked into memory. </p> </dd> <dt><code>-m</code></dt> <dd><p>The maximum resident set size (many systems do not honor this limit). </p> </dd> <dt><code>-n</code></dt> <dd><p>The maximum number of open file descriptors (most systems do not allow this value to be set). </p> </dd> <dt><code>-p</code></dt> <dd><p>The pipe buffer size. </p> </dd> <dt><code>-q</code></dt> <dd><p>The maximum number of bytes in POSIX message queues. </p> </dd> <dt><code>-r</code></dt> <dd><p>The maximum real-time scheduling priority. </p> </dd> <dt><code>-s</code></dt> <dd><p>The maximum stack size. </p> </dd> <dt><code>-t</code></dt> <dd><p>The maximum amount of cpu time in seconds. </p> </dd> <dt><code>-u</code></dt> <dd><p>The maximum number of processes available to a single user. </p> </dd> <dt><code>-v</code></dt> <dd><p>The maximum amount of virtual memory available to the shell, and, on some systems, to its children. </p> </dd> <dt><code>-x</code></dt> <dd><p>The maximum number of file locks. </p> </dd> <dt><code>-P</code></dt> <dd><p>The maximum number of pseudoterminals. </p> </dd> <dt><code>-T</code></dt> <dd><p>The maximum number of threads. </p></dd> </dl> <p>If <var>limit</var> is given, and the <samp>-a</samp> option is not used, <var>limit</var> is the new value of the specified resource. The special <var>limit</var> values <code>hard</code>, <code>soft</code>, and <code>unlimited</code> stand for the current hard limit, the current soft limit, and no limit, respectively. A hard limit cannot be increased by a non-root user once it is set; a soft limit may be increased up to the value of the hard limit. Otherwise, the current value of the soft limit for the specified resource is printed, unless the <samp>-H</samp> option is supplied. When setting new limits, if neither <samp>-H</samp> nor <samp>-S</samp> is supplied, both the hard and soft limits are set. If no option is given, then <samp>-f</samp> is assumed.  Values are in 1024-byte increments, except for <samp>-t</samp>, which is in seconds; <samp>-p</samp>, which is in units of 512-byte blocks; <samp>-P</samp>, <samp>-T</samp>, <samp>-b</samp>, <samp>-k</samp>, <samp>-n</samp> and <samp>-u</samp>, which are unscaled values; and, when in <small><b>POSIX</b></small> Mode, <samp>-c</samp> and <samp>-f</samp>, which are in 512-byte increments. </p> <p>The return status is zero unless an invalid option or argument is supplied, or an error occurs while setting a new limit. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q0=yiGZHWg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;unalias", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "unalias", 
                        "", 
                        "Remove each <var>name</var> from the list of aliases.", 
                        "unalias [-a] [<var>name</var> … ]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "W@gSI$q0E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -m", 
                        "bind", 
                        "", 
                        "-m <var>keymap</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Use <var>keymap</var> as the keymap to be affected by the subsequent bindings.  Acceptable <var>keymap</var> names are <code>emacs</code>, <code>emacs-standard</code>, <code>emacs-meta</code>, <code>emacs-ctlx</code>, <code>vi</code>, <code>vi-move</code>, <code>vi-command</code>, and <code>vi-insert</code>. <code>vi</code> is equivalent to <code>vi-command</code> (<code>vi-move</code> is also a synonym); <code>emacs</code> is equivalent to <code>emacs-standard</code>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gGaWOaqk1<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -l", 
                        "bind", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "<p>List the names of all Readline functions. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PKDn$d>CNr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -p", 
                        "bind", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "<p>List current Readline function names and bindings. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bL^Ra>X%B_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -P", 
                        "bind", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "<p>List current Readline function names and bindings. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F^)_,g_Zih", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -v", 
                        "bind", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "", 
                        "<p>List current Readline variable names and values. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l!yY-@IG91", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -V", 
                        "bind", 
                        "", 
                        "-V", 
                        "", 
                        "", 
                        "", 
                        "<p>List current Readline variable names and values. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I)A@e,iWSm", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -s", 
                        "bind", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "<p>Display Readline key sequences bound to macros and the strings they output. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A!U9*cy!=7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -S", 
                        "bind", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "", 
                        "<p>Display Readline key sequences bound to macros and the strings they output. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FAZtA|_aUe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -f", 
                        "bind", 
                        "", 
                        "-f <var>filename</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Read key bindings from <var>filename</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c>-X.7.EJ!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -q", 
                        "bind", 
                        "", 
                        "-q <var>function</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Query about which keys invoke the named <var>function</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FBF3b{ycub", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -u", 
                        "bind", 
                        "", 
                        "-u <var>function</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Unbind all keys bound to the named <var>function</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FF1c!d+3hP", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -r", 
                        "bind", 
                        "", 
                        "-r <var>keyseq</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Remove any current binding for <var>keyseq</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "onFrkVw[e(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -x", 
                        "bind", 
                        "", 
                        "-x <var>keyseq:shell-command</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>List all key sequences bound to shell commands and the associated commands in a format that can be reused as input. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t>_]V!tP7A", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -X", 
                        "bind", 
                        "", 
                        "-X", 
                        "", 
                        "", 
                        "", 
                        "<p>List all key sequences bound to shell commands and the associated commands in a format that can be reused as input. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v>>:S,J*8f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -p", 
                        "declare", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "<p>Display the attributes and values of each <var>name</var>. When&nbsp;used with <var>name</var> arguments, other options except&nbsp;<samp>-f</samp> and <samp>-F</samp>&nbsp;are ignored. </p> <p>When&nbsp;<var>name</var> arguments not supplied, <code>declare</code> will display the attributes and values of all variables having the attributes specified by the additional options. If no other options are supplied, <code>declare</code> will display the attributes and values of all shell variables.  The <samp>-f</samp> option will restrict the display to shell functions. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e[gF:_x>XM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -F", 
                        "declare", 
                        "", 
                        "-F", 
                        "", 
                        "", 
                        "", 
                        "<p>Inhibits the display of function definitions; only the function name and attributes are printed. If the <code>extdebug</code> shell option is enabled using <code>shopt</code>, the source file name and line number where each <var>name</var> is defined are displayed as well. This implies <samp>-f</samp>. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d.=erZ+TQ/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -g", 
                        "declare", 
                        "", 
                        "-g", 
                        "", 
                        "", 
                        "", 
                        "<p>Forces variables to be created or modified at the global scope, even when <code>declare</code> is executed in a shell function. It is ignored in all other cases. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QuzH]1;hxe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -a", 
                        "declare", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "", 
                        "<p>Each <var>name</var> is an indexed array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kl(2Yl2%mB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -A", 
                        "declare", 
                        "", 
                        "-A", 
                        "", 
                        "", 
                        "", 
                        "Each <var>name</var> is an associative array variable.", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q)QdCU[Bgj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -f", 
                        "declare", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "", 
                        "<p>Use function names only. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mm%]47Tl#Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -i", 
                        "declare", 
                        "", 
                        "-i", 
                        "", 
                        "", 
                        "", 
                        "<p>The variable is to be treated as an integer; arithmetic evaluation (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic\">Shell Arithmetic</a>) is performed when the variable is assigned a value. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CL9t])xi#{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -l", 
                        "declare", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "<p>When the variable is assigned a value, all upper-case characters are converted to lower-case. The upper-case attribute is disabled. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l,v{H(RgQJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -r", 
                        "declare", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "", 
                        "<p>Make <var>name</var>s readonly.  These names cannot then be assigned values by subsequent assignment statements or unset. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tqd?a8[Sr^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -t", 
                        "declare", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "", 
                        "<p>Give each <var>name</var> the <code>trace</code> attribute. Traced functions inherit the <code>DEBUG</code> and <code>RETURN</code> traps from the calling shell. The trace attribute has no special meaning for variables. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nvDXQ20PyY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -u", 
                        "declare", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "", 
                        "<p>When the variable is assigned a value, all lower-case characters are converted to upper-case. The lower-case attribute is disabled. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q31+bHAYo,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -x", 
                        "declare", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "", 
                        "<p>Mark each <var>name</var> for export to subsequent commands via the environment. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f?[7p.qw6>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "help", 
                        "", 
                        "<p>Display helpful information about builtin commands. If <var>pattern</var> is specified, <code>help</code> gives detailed help on all commands matching <var>pattern</var>, otherwise a list of the builtins is printed. </p> <p>The return status is zero unless no command matches <var>pattern</var>. </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q]M1^0C.+8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help -d", 
                        "help", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "", 
                        "<p>Display a short description of each <var>pattern</var> </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F]t5|3r0&j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help -m", 
                        "help", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "help -m <var>pattern</var>", 
                        "Display the description of each <var>pattern</var> in a manpage-like format", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K4,2dLt!1R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help -s", 
                        "help", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "<p>Display only a short usage synopsis for each <var>pattern</var> </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EKC3Nuv6oq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin printf %b", 
                        "printf", 
                        "", 
                        "%q", 
                        "", 
                        "", 
                        "", 
                        "<p>Causes <code>printf</code> to output the corresponding <var>argument</var> in a format that can be reused as shell input. </p>", 
                        "printf [-v <var>var</var>] <var>format</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ab(3Q=QTU<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin printf %(datefmt)T", 
                        "printf", 
                        "", 
                        "%(<var>datefmt</var>)T", 
                        "", 
                        "", 
                        "", 
                        "<p>Causes <code>printf</code> to output the date-time string resulting from using <var>datefmt</var> as a format string for <code>strftime</code>. The corresponding <var>argument</var> is an integer representing the number of seconds since the epoch. Two special argument values may be used: <code>-1</code> represents the current time, and <code>-2</code> represents the time the shell was invoked. If no argument is specified, conversion behaves as if <code>-1</code> had been given. This is an exception to the usual <code>printf</code> behavior. </p>", 
                        "printf [-v <var>var</var>] <var>format</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ge3B;=R]tO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "read", 
                        "", 
                        "<p>One line is read from the standard input, or from the file descriptor <var>fd</var> supplied as an argument to the <samp>-u</samp> option, split into words as described above in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Word-Splitting.html#Word-Splitting\">Word Splitting</a>, and the first word is assigned to the first <var>name</var>, the second word to the second <var>name</var>, and so on. If there are more words than names, the remaining words and their intervening delimiters are assigned to the last <var>name</var>. If there are fewer words read from the input stream than names, the remaining names are assigned empty values. The characters in the value of the <code>IFS</code> variable are used to split the line into words using the same rules the shell uses for expansion (described above in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Word-Splitting.html#Word-Splitting\">Word Splitting</a>). The backslash character ‘<samp>\\</samp>’ may be used to remove any special meaning for the next character read and for line continuation. If no names are supplied, the line read is assigned to the variable <code>REPLY</code>. The exit status is zero, unless end-of-file is encountered, <code>read</code> times out (in which case the status is greater than 128), a variable assignment error (such as assigning to a readonly variable) occurs, or an invalid file descriptor is supplied as the argument to <samp>-u</samp>. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "etL-tbE)d}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -a", 
                        "read", 
                        "", 
                        "-a <var>aname</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>The words are assigned to sequential indices of the array variable <var>aname</var>, starting at 0. All elements are removed from <var>aname</var> before the assignment. Other <var>name</var> arguments are ignored. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fYAZD3*TDO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -d", 
                        "read", 
                        "", 
                        "-d <var>delim</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>The first character of <var>delim</var> is used to terminate the input line, rather than newline. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x5N3q=E2Gm", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -e", 
                        "read", 
                        "", 
                        "-e", 
                        "", 
                        "", 
                        "", 
                        "<p>Readline (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Command-Line-Editing.html#Command-Line-Editing\">Command Line Editing</a>) is used to obtain the line. Readline uses the current (or default, if line editing was not previously active) editing settings. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t2JkZ$(RQ7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -i", 
                        "read", 
                        "", 
                        "-i <var>text</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>If Readline is being used to read the line, <var>text</var> is placed into the editing buffer before editing begins. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l-:x&:uGw$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -n", 
                        "read", 
                        "", 
                        "-n <var>nchars</var>", 
                        "", 
                        "", 
                        "", 
                        "<p><code>read</code> returns after reading <var>nchars</var> characters rather than waiting for a complete line of input, but honors a delimiter if fewer than <var>nchars</var> characters are read before the delimiter. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q50O}E:SXM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -N", 
                        "read", 
                        "", 
                        "-N <var>nchars</var>", 
                        "", 
                        "", 
                        "", 
                        "<p><code>read</code> returns after reading exactly <var>nchars</var> characters rather than waiting for a complete line of input, unless EOF is encountered or <code>read</code> times out. Delimiter characters encountered in the input are not treated specially and do not cause <code>read</code> to return until <var>nchars</var> characters are read. The result is not split on the characters in <code>IFS</code>; the intent is that the variable is assigned exactly the characters read (with the exception of backslash; see the <samp>-r</samp> option below). </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M#KskkiPz`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -p", 
                        "read", 
                        "", 
                        "-p <var>prompt</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Display <var>prompt</var>, without a trailing newline, before attempting to read any input. The prompt is displayed only if input is coming from a terminal. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>(cch@3Ln", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -r", 
                        "read", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "", 
                        "<p>If this option is given, backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not be used as a line continuation. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wLsPII)ZQe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -s", 
                        "read", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "<p>Silent mode.  If input is coming from a terminal, characters are not echoed. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B?]pFaM[R!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -t", 
                        "read", 
                        "", 
                        "-t <var>timeout</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Cause <code>read</code> to time out and return failure if a complete line of input (or a specified number of characters) is not read within <var>timeout</var> seconds. <var>timeout</var>  may be a decimal number with a fractional portion following the decimal point. This option is only effective if <code>read</code> is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If <code>read</code> times out, <code>read</code> saves any partial input read into the specified variable <var>name</var>. If <var>timeout</var> is 0, <code>read</code> returns immediately, without trying to read and data.  The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dB]]yj<NZd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -u", 
                        "read", 
                        "", 
                        "-u <var>fd</var>", 
                        "", 
                        "", 
                        "", 
                        "<p>Read input from file descriptor <var>fd</var>. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lm>Gxm2~bi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "type", 
                        "", 
                        "<p>For each <var>name</var>, indicate how it would be interpreted if used as a command name. </p><p>The return status is zero if all of the <var>names</var> are found, non-zero if any are not found. </p>", 
                        "<code>type [-afptP] [name …]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p?4QTE;XZU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -t", 
                        "type", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "", 
                        "Print a single word which is one of <samp>alias</samp>, <samp>function</samp>, <samp>builtin</samp>, <samp>file</samp> or <samp>keyword</samp>, if <var>name</var> is an alias, shell function, shell builtin, disk file, or shell reserved word, respectively. If the <var>name</var> is not found, then nothing is printed, and <code>type</code> returns a failure status.", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C^^,~e:TRd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -p", 
                        "type", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "<p><code>type</code> either returns the name of the disk file that would be executed, or nothing if <samp>-t</samp> would not return <samp>file</samp>.</p> <p>If a command is hashed, <samp>-p</samp> and <samp>-P</samp> print the hashed value, which is not necessarily the file that appears first in <code>$PATH</code>. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hxSQZ^^!*f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -P", 
                        "type", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "<p>Forces a path search for each <var>name</var>, even if <samp>-t</samp> would not return <samp>file</samp>. </p> <p>If a command is hashed, <samp>-p</samp> and <samp>-P</samp> print the hashed value, which is not necessarily the file that appears first in <code>$PATH</code>. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sZ6_mTS9ut", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -a", 
                        "type", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "", 
                        "<p><code>type</code> returns all of the places that contain an executable named <var>file</var>. This includes aliases and functions, if and only if the <samp>-p</samp> option is not also used. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L;2eSvxYxp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -f", 
                        "type", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "", 
                        "<p><code>type</code> does not attempt to find shell functions, as with the <code>command</code> builtin. </p> <p>The return status is zero if all of the <var>names</var> are found, non-zero if any are not found. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GG(=p^yo/x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -S", 
                        "ulimit", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "", 
                        "<p>Change and report the soft limit associated with a resource. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vsLQQ&#0?u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -H", 
                        "ulimit", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "", 
                        "<p>Change and report the hard limit associated with a resource. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i#{kHD|dG!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -a", 
                        "ulimit", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "", 
                        "<p>All current limits are reported. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pdkQzs^n!W", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -b", 
                        "ulimit", 
                        "", 
                        "-b", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum socket buffer size. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HAT2-O1+<|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -c", 
                        "ulimit", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum size of core files created. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u:zlBlkhh%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -d", 
                        "ulimit", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum size of a process’s data segment. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yNv=sdt<#k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -e", 
                        "ulimit", 
                        "", 
                        "-e", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum scheduling priority (\"nice\"). </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n#]G#eox_s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -f", 
                        "ulimit", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum size of files written by the shell and its children. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lrnl^P)scv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -i", 
                        "ulimit", 
                        "", 
                        "-i", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of pending signals. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J7$MF{Bb!y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -k", 
                        "ulimit", 
                        "", 
                        "-k", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of kqueues that may be allocated. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b42s2j#o2R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -l", 
                        "ulimit", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum size that may be locked into memory. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uj0U;_0i~s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -m", 
                        "ulimit", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum resident set size (many systems do not honor this limit). </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Gl:Dgx={EH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -n", 
                        "ulimit", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of open file descriptors (most systems do not allow this value to be set). </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kt?pL7KXsT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -p", 
                        "ulimit", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "<p>The pipe buffer size. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k}i2(qVgg6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -q", 
                        "ulimit", 
                        "", 
                        "-q", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of bytes in POSIX message queues. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v=2?F!iYHv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -r", 
                        "ulimit", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum real-time scheduling priority. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AqA>UAnJ4o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -s", 
                        "ulimit", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum stack size. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fbOOi<%7vK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -t", 
                        "ulimit", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum amount of cpu time in seconds. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cs=L9>[-35", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -u", 
                        "ulimit", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of processes available to a single user. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t[sc-d&&JJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -v", 
                        "ulimit", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum amount of virtual memory available to the shell, and, on some systems, to its children. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "VNu5wTv0q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -x", 
                        "ulimit", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of file locks. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fL9d{?Dv9O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -P", 
                        "ulimit", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of pseudoterminals. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GzM%w)P(pU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -T", 
                        "ulimit", 
                        "", 
                        "-T", 
                        "", 
                        "", 
                        "", 
                        "<p>The maximum number of threads. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cY**,EJ5=2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin&nbsp;test", 
                        "test", 
                        "variant", 
                        "", 
                        "", 
                        "[", 
                        "", 
                        "<p>Evaluate a conditional expression <var>expr</var> and return a status of 0 (true) or 1 (false). Each operator and operand must be a separate argument. Expressions are composed of primaries.&nbsp;This builtin does not accept any options, nor does it accept and ignore an argument of <samp><code>--</code></samp> as signifying the end of options.</p>", 
                        "<!--anki--><p>When the&nbsp;<code>[</code>&nbsp;form is used, the last argument to the command must be a&nbsp;<code>]</code>.</p><p>Expressions may be combined using the following operators, listed in decreasing order of precedence. The evaluation depends on the number of arguments; see below. Operator precedence is used when there are five or more arguments.</p><dl compact=\"compact\"><dt><code>!&nbsp;<var>expr</var></code></dt><dd><p>True if&nbsp;<var>expr</var>&nbsp;is false.</p></dd><dt><code>(&nbsp;<var>expr</var>&nbsp;)</code></dt><dd><p>Returns the value of&nbsp;<var>expr</var>. This may be used to override the normal precedence of operators.</p></dd><dt><code><var>expr1</var>&nbsp;-a&nbsp;<var>expr2</var></code></dt><dd><p>True if both&nbsp;<var><code>expr1</code></var>&nbsp;and&nbsp;<var><code>expr2</code></var>&nbsp;are true.</p></dd><dt><code><var>expr1</var>&nbsp;-o&nbsp;<var>expr2</var></code></dt><dd><p>True if either&nbsp;<var><code>expr1</code></var>&nbsp;or&nbsp;<var><code>expr2</code></var>&nbsp;is true.</p></dd></dl><p>The&nbsp;<code>test</code>&nbsp;and&nbsp;<code>[</code>&nbsp;builtins evaluate conditional expressions using a set of rules based on the number of arguments.</p><dl compact=\"compact\"><dt>0 arguments</dt><dd><p>The expression is false.</p></dd><dt>1 argument</dt><dd><p>The expression is true if and only if the argument is not null.</p></dd><dt>2 arguments</dt><dd><p>If the first argument is&nbsp;<samp><code>!</code></samp>, the expression is true if and only if the second argument is null. If the first argument is one of the unary conditional operators (see&nbsp;<a href=\"file:///Users/cgorichanaz/Library/Application%20Support/Anki2/User%201/collection.media/Bash-Conditional-Expressions.html#Bash-Conditional-Expressions\">Bash Conditional Expressions</a>), the expression is true if the unary test is true. If the first argument is not a valid unary operator, the expression is false.</p></dd><dt>3 arguments</dt><dd><p>The following conditions are applied in the order listed. If the second argument is one of the binary conditional operators (see&nbsp;<a href=\"file:///Users/cgorichanaz/Library/Application%20Support/Anki2/User%201/collection.media/Bash-Conditional-Expressions.html#Bash-Conditional-Expressions\">Bash Conditional Expressions</a>), the result of the expression is the result of the binary test using the first and third arguments as operands. The&nbsp;<samp><code>-a</code></samp>&nbsp;and&nbsp;<samp><code>-o</code></samp>&nbsp;operators are considered binary operators when there are three arguments. If the first argument is&nbsp;<samp><code>!</code></samp>, the value is the negation of the two-argument test using the second and third arguments. If the first argument is exactly&nbsp;<samp><code>(</code></samp>&nbsp;and the third argument is exactly&nbsp;<samp><code>)</code></samp>, the result is the one-argument test of the second argument. Otherwise, the expression is false.</p></dd><dt>4 arguments</dt><dd><p>If the first argument is&nbsp;<samp><code>!</code></samp>, the result is the negation of the three-argument expression composed of the remaining arguments. Otherwise, the expression is parsed and evaluated according to precedence using the rules listed above.</p></dd><dt>5 or more arguments</dt><dd><p>The expression is parsed and evaluated according to precedence using the rules listed above.</p></dd></dl><p>When used with&nbsp;<code>test</code>&nbsp;or&nbsp;<samp><code>[</code></samp>, the&nbsp;<samp><code>&lt;</code></samp>&nbsp;and&nbsp;<samp><code>&gt;</code></samp>&nbsp;operators sort lexicographically using ASCII ordering.</p>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "wKSjjJ`/H8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin :", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        ":", 
                        "", 
                        "<p>Do nothing beyond expanding <var>arguments</var> and performing redirections. The return status is zero.</p>", 
                        ": [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ryWq,]ijZN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin .", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        ".", 
                        "", 
                        "<p>Read and execute commands from the <var>filename</var> argument in the current shell context.  If <var>filename</var> does not contain a slash, the <code>PATH</code> variable is used to find <var>filename</var>. When Bash is not in <small>POSIX</small> mode, the current directory is searched if <var>filename</var> is not found in <code>$PATH</code>. If any <var>arguments</var> are supplied, they become the positional parameters when <var>filename</var> is executed.  Otherwise the positional parameters are unchanged. If the <samp>-T</samp> option is enabled,&nbsp;<strike>source</strike>&nbsp;inherits any trap on <code>DEBUG</code>; if it is not, any <code>DEBUG</code> trap string is saved and restored around the call to&nbsp;<strike>source</strike>, and&nbsp;<strike>source</strike>&nbsp;unsets the <code>DEBUG</code> trap while it executes. If <samp>-T</samp> is not set, and the <strike>sourced</strike> file changes the <code>DEBUG</code> trap, the new value is retained when&nbsp;<strike>source</strike>&nbsp;completes. The return status is the exit status of the last command executed, or zero if no commands are executed.  If <var>filename</var> is not found, or cannot be read, the return status is non-zero. This builtin is equivalent to <code><strike>source</strike></code>.</p>", 
                        ".<var>filename</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IOg#5!]5@5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin break", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "break <i>[<b>n</b>]</i>", 
                        "", 
                        "<p>Exit from a <code>for</code>, <code>while</code>, <code>until</code>, or <code>select</code> loop. If <var>n</var> is supplied, the <var>n</var>th enclosing loop is exited.&nbsp;<var>n</var> must be greater than or equal to 1. The return status is zero unless <var>n</var> is not greater than or equal to 1.</p>", 
                        "break [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gQ}E=NKh)B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin cd", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "cd <i>DIR</i>", 
                        "", 
                        "<p>Change the current working directory to <var><code>DIR</code></var>. If&nbsp;<var><code>DIR</code></var>&nbsp;is not supplied, the value of the <code>HOME</code> shell variable is used. Any additional arguments following&nbsp;<var><code>DIR</code></var>&nbsp;are ignored. If the shell variable&nbsp;<code><strike>CDPATH</strike></code>&nbsp;exists, it is used as a search path: each directory name in <code><strike>CDPATH</strike></code> is searched for&nbsp;<var><code>DIR</code></var>, with alternative directory names in&nbsp;<code><strike>CDPATH</strike></code>&nbsp;separated by a colon (<samp>:</samp>). If&nbsp;<var><code>DIR</code></var>&nbsp;begins with a slash,&nbsp;<code><strike>CDPATH</strike></code>&nbsp;is not used.</p><p><code><strike>cd</strike> [-L|[-P [-e]] [-@] [<i>DIR</i>]</code></p>", 
                        "<div>The&nbsp;<samp>-P</samp>&nbsp;option means to not follow symbolic links: symbolic links are resolved while traversing&nbsp;<var><code>DIR</code></var>&nbsp;and before processing an instance of&nbsp;<samp>..</samp>&nbsp;in&nbsp;<var><code>DIR</code></var>.</div><div><p>By default, or when the&nbsp;<samp>-L</samp>&nbsp;option is supplied, symbolic links in&nbsp;<var><code>DIR</code></var>&nbsp;are resolved after processing an instance of&nbsp;<samp>..</samp>&nbsp;in&nbsp;<var><code>DIR</code></var>.</p><p>If&nbsp;<samp>..</samp>&nbsp;appears in&nbsp;<var><code>DIR</code></var>, it is processed by removing the immediately preceding pathname component, back to a slash or the beginning of&nbsp;<var><code>DIR</code></var>.</p><p>If the&nbsp;<samp>-e</samp>&nbsp;option is supplied with&nbsp;<samp>-P</samp>&nbsp;and the current working directory cannot be successfully determined after a successful directory change, an unsuccessful status will be returned.</p><p>On systems that support it, the&nbsp;<samp>-@</samp>&nbsp;option presents the extended attributes associated with a file as a directory.&nbsp; &nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;</p><p>If&nbsp;<var><code>DIR</code></var>&nbsp;is&nbsp;<samp><code>-</code></samp>, it is converted to&nbsp;<code>$OLDPWD</code>&nbsp;before the directory change is attempted.</p><p>If a non-empty directory name from&nbsp;<code>CDPATH</code>&nbsp;is used, or if&nbsp;<samp><code>-</code></samp>&nbsp;is the first argument, and the directory change is successful, the absolute pathname of the new working directory is written to the standard output.</p><p>The return status is zero if the directory is successfully changed, non-zero otherwise.</p></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ojgD{]B+9j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin continue", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "continue&nbsp;[<var>n</var>]", 
                        "", 
                        "<p>Resume the next iteration of an enclosing <code>for</code>, <code>while</code>, <code>until</code>, or <code>select</code> loop. If <var>n</var> is supplied, the execution of the <var>n</var>th enclosing loop is resumed.<var>n</var> must be greater than or equal to 1. The return status is zero unless <var>n</var> is not greater than or equal to 1.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dv+7T*>U/-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin eval", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "eval", 
                        "", 
                        "<p>The arguments are concatenated together into a single command, which is then read and executed, and its exit status returned as the exit status. If there are no arguments or only empty arguments, the return status is zero.</p>", 
                        "eval [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M;3xo1PYi^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin exec", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "exec", 
                        "", 
                        "<p>If <var>command</var> is supplied, it replaces the shell without creating a new process. If the <samp>-l</samp> option is supplied, the shell places a dash at the beginning of the zeroth argument passed to <var>command</var>. This is what the <code>login</code> program does. The <samp>-c</samp> option causes <var>command</var> to be executed with an empty environment. If <samp>-a</samp> is supplied, the shell passes <var>name</var> as the zeroth argument to <var>command</var>. If <var>command</var> cannot be executed for some reason, a non-interactive shell exits, unless the <code>execfail</code> shell option is enabled.  In that case, it returns failure. An interactive shell returns failure if the file cannot be executed. If no <var>command</var> is specified, redirections may be used to affect the current shell environment.  If there are no redirection errors, the return status is zero; otherwise the return status is non-zero.</p>", 
                        "exec [-cl] [-a <var>name</var>] [<var>command</var> [<var>arguments</var>]]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O_w$DcO3UE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin exit", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "exit&nbsp;[n]", 
                        "", 
                        "<p>Exit the shell, returning a status of <var>n</var> to the shell&rsquo;s parent. If <var>n</var> is omitted, the exit status is that of the last command executed. Any trap on <code>EXIT</code> is executed before the shell terminates.</p>", 
                        "exit [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mwKOZ65m{7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin export", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "export", 
                        "", 
                        "<p>Mark each <var>name</var> to be passed to child processes in the environment.  If the <samp>-f</samp> option is supplied, the <var>name</var>s refer to shell functions; otherwise the names refer to shell variables. The <samp>-n</samp> option means to no longer mark each <var>name</var> for export. If no <var>names</var> are supplied, or if the <samp>-p</samp> option is given, a list of names of all exported variables is displayed. The <samp>-p</samp> option displays output in a form that may be reused as input. If a variable name is followed by =<var>value</var>, the value of the variable is set to <var>value</var>.</p><p>The return status is zero unless an invalid option is supplied, one of the names is not a valid shell variable name, or <samp>-f</samp> is supplied with a name that is not a shell function.</p>", 
                        "export [-fn] [-p] [<var>name</var>[=<var>value</var>]]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tYb&5||-,#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin getopts", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "getopts", 
                        "", 
                        "<p>used by shell scripts to parse positional parameters.&nbsp;</p>", 
                        "<code>getopts optstringname [args]</code><br /><div><br /></div><div><br /></div><div><p><var>optstring</var>&nbsp;contains the option characters to be recognized; if a character is followed by a colon, the option is expected to have an argument, which should be separated from it by whitespace. The colon (<samp>:</samp>) and question mark (<samp>?</samp>) may not be used as option characters. Each time it is invoked,&nbsp;<strike><code>getopts</code></strike>&nbsp;places the next option in the shell variable&nbsp;<var>name</var>, initializing&nbsp;<var>name</var>&nbsp;if it does not exist, and the index of the next argument to be processed into the variable&nbsp;<code>OPTIND</code>.&nbsp;<code>OPTIND</code>&nbsp;is initialized to 1 each time the shell or a shell script is invoked. When an option requires an argument,&nbsp;<strike><code>getopts</code></strike>&nbsp;places that argument into the variable&nbsp;<code>OPTARG</code>. The shell does not reset&nbsp;<code>OPTIND</code>&nbsp;automatically; it must be manually reset between multiple calls to&nbsp;<strike><code>getopts</code></strike>&nbsp;within the same shell invocation if a new set of parameters is to be used.</p><p>When the end of options is encountered,&nbsp;<strike><code>getopts</code></strike>&nbsp;exits with a return value greater than zero.&nbsp;<code>OPTIND</code>&nbsp;is set to the index of the first non-option argument, and&nbsp;<var>name</var>&nbsp;is set to&nbsp;<samp>?</samp>.</p><p><code>getopts</code>&nbsp;normally parses the positional parameters, but if more arguments are given in&nbsp;<var>args</var>,&nbsp;<strike><code>getopts</code></strike>&nbsp;parses those instead.</p><p><strike><code>getopts</code></strike>&nbsp;can report errors in two ways. If the first character of&nbsp;<var>optstring</var>&nbsp;is a colon,&nbsp;<var>silent</var>&nbsp;error reporting is used. In normal operation, diagnostic messages are printed when invalid options or missing option arguments are encountered. If the variable&nbsp;<code>OPTERR</code>&nbsp;is set to 0, no error messages will be displayed, even if the first character of&nbsp;<code>optstring</code>&nbsp;is not a colon.</p><p>If an invalid option is seen,&nbsp;<strike><code>getopts</code></strike>&nbsp;places&nbsp;<samp>?</samp>&nbsp;into&nbsp;<var>name</var>&nbsp;and, if not silent, prints an error message and unsets&nbsp;<code>OPTARG</code>. If&nbsp;<strike><code>getopts</code></strike>&nbsp;is silent, the option character found is placed in&nbsp;<code>OPTARG</code>&nbsp;and no diagnostic message is printed.</p><p>If a required argument is not found, and&nbsp;<strike><code>getopts</code></strike>&nbsp;is not silent, a question mark (<samp>?</samp>) is placed in&nbsp;<var>name</var>,&nbsp;<code>OPTARG</code>&nbsp;is unset, and a diagnostic message is printed. If&nbsp;<strike><code>getopts</code></strike>&nbsp;is silent, then a colon (<samp>:</samp>) is placed in&nbsp;<var>name</var>&nbsp;and&nbsp;<code>OPTARG</code>&nbsp;is set to the option character found.</p></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ca-i1Jq@$6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin hash", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "hash", 
                        "", 
                        "<p>Each time this&nbsp;is invoked, it remembers the full pathnames of the commands specified as <var>name</var> arguments, so they need not be searched for on subsequent invocations. The commands are found by searching through the directories listed in <code>$PATH</code>. Any previously-remembered pathname is discarded. The <samp>-p</samp> option inhibits the path search, and <var>filename</var> is used as the location of <var>name</var>. The <samp>-r</samp> option causes the shell to forget all remembered locations. The <samp>-d</samp> option causes the shell to forget the remembered location of each <var>name</var>. If the <samp>-t</samp> option is supplied, the full pathname to which each <var>name</var> corresponds is printed.  If multiple <var>name</var> arguments are supplied with <samp>-t</samp> the <var>name</var> is printed before the hashed full pathname. The <samp>-l</samp> option causes output to be displayed in a format that may be reused as input. If no arguments are given, or if only <samp>-l</samp> is supplied, information about remembered commands is printed. The return status is zero unless a <var>name</var> is not found or an invalid option is supplied.</p>", 
                        "hash [-r] [-p <var>filename</var>] [-dt] [<var>name</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sra6D^|Q?e", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin pwd", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "pwd", 
                        "", 
                        "<p>Print the absolute pathname of the current working directory. If the <samp>-P</samp> option is supplied, the pathname printed will not contain symbolic links. If the <samp>-L</samp> option is supplied, the pathname printed may contain symbolic links. The return status is zero unless an error is encountered while determining the name of the current directory or an invalid option is supplied.</p>", 
                        "<code>pwd [-LP]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u~X>|/y]D<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin readonly", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "readonly", 
                        "", 
                        "<p>Mark each <var>name</var> as <strike>readonly</strike>&nbsp;so the values of these names may not be changed by subsequent assignment. If the <samp>-f</samp> option is supplied, each <var>name</var> refers to a shell function. The <samp>-a</samp> option means each <var>name</var> refers to an indexed array variable; the <samp>-A</samp> option means each <var>name</var> refers to an associative array variable. If both options are supplied, <samp>-A</samp> takes precedence. If no <var>name</var> arguments are given, or if the <samp>-p</samp> option is supplied, a list of all <strike>readonly</strike> names is printed. The other options may be used to restrict the output to a subset of the set of <strike>readonly</strike> names. The <samp>-p</samp> option causes output to be displayed in a format that may be reused as input. If a variable name is followed by =<var>value</var>, the value of the variable is set to <var>value</var>. The return status is zero unless an invalid option is supplied, one of the <var>name</var> arguments is not a valid shell variable or function name, or the <samp>-f</samp> option is supplied with a name that is not a shell function.</p>", 
                        "readonly [-aAf] [-p] [<var>name</var>[=<var>value</var>]] &hellip;", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "glMD~T:3Bb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin return", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "return", 
                        "", 
                        "<p>Cause a shell function to stop executing and return the value <var>n</var> to its caller. If <var>n</var> is not supplied, the return value is the exit status of the last command executed in the function. If <strike><code>return</code></strike> is executed by a trap handler, the last command used to determine the status is the last command executed before the trap handler. If&nbsp;<strike><code>return</code></strike>&nbsp;is executed during a <code>DEBUG</code> trap, the last command used to determine the status is the last command executed by the trap handler before&nbsp;<strike><code>return</code></strike>&nbsp;was invoked.&nbsp;<strike><code>return</code></strike>&nbsp;may also be used to terminate execution of a script being executed with the <code>.</code> (<code>source</code>) builtin, returning either <var>n</var> or the exit status of the last command executed within the script as the exit status of the script. If <var>n</var> is supplied, the return value is its least significant 8 bits. Any command associated with the&nbsp;<strike><code>RETURN</code></strike>&nbsp;trap is executed before execution resumes after the function or script. The return status is non-zero if&nbsp;<strike><code>return</code></strike>&nbsp;is supplied a non-numeric argument or is used outside a function and not during the execution of a script by <code>.</code> or <code>source</code>.</p>", 
                        "return [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MvEu8&8BJZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin shift", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "shift <i>n</i>", 
                        "", 
                        "<p>Shift the positional parameters to the left by <var>n</var>. The positional parameters from <var>n</var>+1 &hellip; <code>$#</code> are renamed to <code>$1</code> &hellip; <code>$#</code>-<var>n</var>. Parameters represented by the numbers <code>$#</code> to <code>$#</code>-<var>n</var>+1 are unset.<var>n</var> must be a non-negative number less than or equal to <code>$#</code>. If <var>n</var> is zero or greater than <code>$#</code>, the positional parameters are not changed. If <var>n</var> is not supplied, it is assumed to be 1. The return status is zero unless <var>n</var> is greater than <code>$#</code> or less than zero, non-zero otherwise.</p>", 
                        "shift [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MIwjM$UHoh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin times", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "times", 
                        "", 
                        "<p>Print out the user and system times used by the shell and its children. The return status is zero.</p>", 
                        "times", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Kf&,Y{X}-z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin trap", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "trap", 
                        "", 
                        "<p>The commands in <var>arg</var> are to be read and executed when the shell receives signal <var>sigspec</var>.  If <var>arg</var> is absent (and there is a single <var>sigspec</var>) or equal to ‘<samp>-</samp>’, each specified signal’s disposition is reset to the value it had when the shell was started. If <var>arg</var> is the null string, then the signal specified by each <var>sigspec</var> is ignored by the shell and commands it invokes. If <var>arg</var> is not present and <samp>-p</samp> has been supplied, the shell displays the trap commands associated with each <var>sigspec</var>. If no arguments are supplied, or only <samp>-p</samp> is given, <code>___</code> prints the list of commands associated with each signal number in a form that may be reused as shell input. The <samp>-l</samp> option causes the shell to print a list of signal names and their corresponding numbers. Each <var>sigspec</var> is either a signal name or a signal number. Signal names are case insensitive and the <code>SIG</code> prefix is optional.</p>", 
                        "<code>trap [-lp] [arg] [sigspec …]</code><br /><div><br /></div><div><p>If a&nbsp;<var>sigspec</var>&nbsp;is&nbsp;<code>0</code>&nbsp;or&nbsp;<code>EXIT</code>,&nbsp;<var>arg</var>&nbsp;is executed when the shell exits. If a&nbsp;<var>sigspec</var>&nbsp;is&nbsp;<code>DEBUG</code>, the command&nbsp;<var>arg</var>&nbsp;is executed before every simple command,&nbsp;<code>for</code>&nbsp;command,&nbsp;<code>case</code>&nbsp;command,&nbsp;<code>select</code>&nbsp;command, every arithmetic&nbsp;<code>for</code>&nbsp;command, and before the first command executes in a shell function. Refer to the description of the&nbsp;<code>extdebug</code>&nbsp;option to the&nbsp;<code>shopt</code>&nbsp;builtin for details of its effect on the&nbsp;<code>DEBUG</code>&nbsp;trap. If a&nbsp;<var>sigspec</var>&nbsp;is&nbsp;<code>RETURN</code>, the command&nbsp;<var>arg</var>&nbsp;is executed each time a shell function or a script executed with the&nbsp;<code>.</code>&nbsp;or&nbsp;<code>source</code>&nbsp;builtins finishes executing.</p><p>If a&nbsp;<var>sigspec</var>&nbsp;is&nbsp;<code>ERR</code>, the command&nbsp;<var>arg</var>&nbsp;is executed whenever a pipeline (which may consist of a single simple command), a list, or a compound command returns a non-zero exit status, subject to the following conditions. The&nbsp;<code>ERR</code>&nbsp;trap is not executed if the failed command is part of the command list immediately following an&nbsp;<code>until</code>&nbsp;or&nbsp;<code>while</code>&nbsp;keyword, part of the test following the&nbsp;<code>if</code>&nbsp;or&nbsp;<code>elif</code>&nbsp;reserved words, part of a command executed in a&nbsp;<code>&amp;&amp;</code>&nbsp;or&nbsp;<code>||</code>&nbsp;list except the command following the final&nbsp;<code>&amp;&amp;</code>&nbsp;or&nbsp;<code>||</code>, any command in a pipeline but the last, or if the command’s return status is being inverted using&nbsp;<code>!</code>. These are the same conditions obeyed by the&nbsp;<code>errexit</code>&nbsp;(<samp>-e</samp>) option.</p><p>Signals ignored upon entry to the shell cannot be trapped or reset. Trapped signals that are not being ignored are reset to their original values in a subshell or subshell environment when one is created.</p><p>The return status is zero unless a&nbsp;<var>sigspec</var>&nbsp;does not specify a valid signal.</p></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e:#u4H}7G[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin umask", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "umask", 
                        "", 
                        "<p>Set the shell process&rsquo;s file creation mask to <var>mode</var>.  If <var>mode</var> begins with a digit, it is interpreted as an octal number; if not, it is interpreted as a symbolic mode mask similar to that accepted by the <code>chmod</code> command.  If <var>mode</var> is omitted, the current value of the mask is printed.  If the <samp>-S</samp> option is supplied without a <var>mode</var> argument, the mask is printed in a symbolic format. If the  <samp>-p</samp> option is supplied, and <var>mode</var> is omitted, the output is in a form that may be reused as input. The return status is zero if the mode is successfully changed or if no <var>mode</var> argument is supplied, and non-zero otherwise.</p><p>Note that when the mode is interpreted as an octal number, each number of the umask is subtracted from <code>7</code>.  Thus, a umask of <code>022</code> results in permissions of <code>755</code>.</p>", 
                        "umask [-p] [-S] [<var>mode</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Npb%hy?dw)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin unset", 
                        "sh", 
                        "builtin", 
                        "", 
                        "", 
                        "unset", 
                        "", 
                        "<p>Remove each variable or function <var>name</var>. If the <samp>-v</samp> option is given, each <var>name</var> refers to a shell variable and that variable is removed. If the <samp>-f</samp> option is given, the <var>name</var>s refer to shell functions, and the function definition is removed. If the <samp>-n</samp> option is supplied, and <var>name</var> is a variable with the <var>nameref</var> attribute, <var>name</var> will be unset rather than the variable it references.<samp>-n</samp> has no effect if the <samp>-f</samp> option is supplied. If no options are supplied, each <var>name</var> refers to a variable; if there is no variable by that name, any function with that name is unset. Readonly variables and functions may not be unset. The return status is zero unless a <var>name</var> is readonly.</p>", 
                        "unset [-fnv] [<var>name</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p5ja+V{&&V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set", 
                        "set", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>If no options or arguments are supplied,&nbsp;displays the names and values of all shell variables and functions, sorted according to the current locale, in a format that may be reused as input for setting or resetting the currently-set variables. Read-only variables cannot be reset. In <small>POSIX</small> mode, only shell variables are listed. </p> <p>When options are supplied, they set or unset shell attributes.</p> <p>Using <samp><code>+</code></samp>&nbsp;rather than <samp><code>-</code></samp>&nbsp;causes these options to be turned off.  The options can also be used upon invocation of the shell.  The current set of options may be found in <code>$-</code>. </p> <p>The remaining N <var>arguments</var> are positional parameters and are assigned, in order, to <code>$1</code>, <code>$2</code>, …  <code>$N</code>. The special parameter <code>#</code> is set to N. </p> <p>The return status is always zero unless an invalid option is supplied. </p>", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">set</span> <span style=\"color: #d0d0d0\">[</span>--abefhkmnptuvxBCEHPT<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>-o option-name<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>argument …<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #24909d\">set</span> <span style=\"color: #d0d0d0\">[</span>+abefhkmnptuvxBCEHPT<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>+o option-name<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>argument …<span style=\"color: #d0d0d0\">]</span> </pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNjk3MDgsICJpZCI6ICIxNDk1MjY5NDEyMjc1LTAwNyIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNldCBbLS1hYmVmaGttbnB0dXZ4QkNFSFBUXSBbLW8gb3B0aW9uLW5hbWVdIFthcmd1bWVudCBcdTIwMjZdXG4gICAgc2V0IFsrYWJlZmhrbW5wdHV2eEJDRUhQVF0gWytvIG9wdGlvbi1uYW1lXSBbYXJndW1lbnQgXHUyMDI2XVxuIn0=---->", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "qliJfd2r<;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -b", 
                        "set", 
                        "", 
                        "-b", 
                        "-o notify", 
                        "", 
                        "", 
                        "<p>Cause the status of terminated background jobs to be reported immediately, rather than before printing the next primary prompt.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JQpRJ8phvH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -e", 
                        "set", 
                        "", 
                        "-e", 
                        "-o errexit", 
                        "", 
                        "", 
                        "<p>Exit immediately if a pipeline, which may consist of a single simple command, a list, or a compound command&nbsp;returns a non-zero status. The shell does not exit if the command that fails is part of the command list immediately following a <code>while</code> or <code>until</code> keyword, part of the test in an <code>if</code> statement, part of any command executed in a <code>&amp;&amp;</code> or <code>||</code> list except the command following the final <code>&amp;&amp;</code> or <code>||</code>, any command in a pipeline but the last, or if the command’s return status is being inverted with <code>!</code>. If a compound command other than a subshell returns a non-zero status because a command failed while <samp>-e</samp> was being ignored, the shell does not exit. A trap on <code>ERR</code>, if set, is executed before the shell exits.</p><p>This option applies to the shell environment and each subshell environment separately, and may cause subshells to exit before executing all the commands in the subshell.</p><p>If a compound command or shell function executes in a context where <samp>-e</samp> is being ignored, none of the commands executed within the compound command or function body will be affected by the <samp>-e</samp> setting, even if <samp>-e</samp> is set and a command returns a failure status. If a compound command or shell function sets <samp>-e</samp> while executing in a context where <samp>-e</samp> is ignored, that setting will not have any effect until the compound command or the command containing the function call completes.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BWv6|<0W/P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -f", 
                        "set", 
                        "", 
                        "-f", 
                        "-o noglob", 
                        "", 
                        "", 
                        "<p>Disable filename expansion (globbing).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bbCR@n6GWJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -h", 
                        "set", 
                        "", 
                        "-h", 
                        "-o hashall", 
                        "", 
                        "", 
                        "<p>Locate and remember (hash) commands as they are looked up for execution. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F!}%#a3nk4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -k", 
                        "set", 
                        "", 
                        "-k", 
                        "-o keyword", 
                        "", 
                        "", 
                        "<p>All arguments in the form of assignment statements are placed in the environment for a command, not just those that precede the command name.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GCoAkX}zj{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -m", 
                        "set", 
                        "", 
                        "-m", 
                        "-o monitor", 
                        "", 
                        "", 
                        "<p>Job control is enabled. All processes run in a separate process group. When a background job completes, the shell prints a line containing its exit status.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O8aA5aA;&B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -n", 
                        "set", 
                        "", 
                        "-n", 
                        "-o noexec", 
                        "", 
                        "", 
                        "<p>Read commands but do not execute them. This may be used to check a script for syntax errors. This option is ignored by interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kh@E_9q39X", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -p", 
                        "set", 
                        "", 
                        "-p", 
                        "-o privileged", 
                        "", 
                        "", 
                        "<p>Turn on privileged mode. In this mode, the <code>$BASH_ENV</code> and <code>$ENV</code> files are not processed, shell functions are not inherited from the environment, and the <code>SHELLOPTS</code>, <code>BASHOPTS</code>, <code>CDPATH</code> and <code>GLOBIGNORE</code>variables, if they appear in the environment, are ignored. If the shell is started with the effective user (group) id not equal to the real user (group) id, and the <samp>-p</samp> option is not supplied, these actions are taken and the effective user id is set to the real user id. If the <samp>-p</samp> option is supplied at startup, the effective user id is not reset. Turning this option off causes the effective user and group ids to be set to the real user and group ids.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zcP|<&pkjC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -t", 
                        "set", 
                        "", 
                        "-t", 
                        "-o onecmd", 
                        "", 
                        "", 
                        "<p>Exit after reading and executing one command.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dOL$p{#?]4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -u", 
                        "set", 
                        "", 
                        "-u", 
                        "-o nounset", 
                        "", 
                        "", 
                        "<p>Treat unset variables and parameters other than the special parameters <samp><code>@</code></samp>&nbsp;or <samp><code>*</code></samp>&nbsp;as an error when performing parameter expansion. An error message will be written to the standard error, and a non-interactive shell will exit.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d%B28~6QT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -v", 
                        "set", 
                        "", 
                        "-v", 
                        "-o verbose", 
                        "", 
                        "", 
                        "<p>Print shell input lines as they are read.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zD2Qkwam$6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -x", 
                        "set", 
                        "", 
                        "-x", 
                        "-o xtrace", 
                        "", 
                        "", 
                        "<p>Print a trace of simple commands, <code>for</code> commands, <code>case&nbsp;</code>commands, <code>select</code> commands, and arithmetic <code>for</code> commands and their arguments or associated word lists after they are expanded and before they are executed.  The value of the <code>PS4&nbsp;</code>variable is expanded and the resultant value is printed before the command and its expanded arguments.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mvkkb!y+?B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -B", 
                        "set", 
                        "", 
                        "-B", 
                        "-o braceexpand", 
                        "", 
                        "", 
                        "<p>The shell will perform brace expansion. This option is on by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O1=+7!*ryq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -C", 
                        "set", 
                        "", 
                        "-C", 
                        "-o noclobber", 
                        "", 
                        "", 
                        "Prevent output redirection using <code>&gt;</code>, <code>&gt;&amp;</code>, and <code>&lt;&gt;</code> from overwriting existing files.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y2M6xu~ooJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -E", 
                        "set", 
                        "", 
                        "-E", 
                        "-o errtrace", 
                        "", 
                        "", 
                        "<p>Any trap on <code>ERR</code> is inherited by shell functions, command substitutions, and commands executed in a subshell environment.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yF5[A);Mid", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -H", 
                        "set", 
                        "", 
                        "-H", 
                        "-o histexpand", 
                        "", 
                        "", 
                        "<p>Enable <samp>!</samp>&nbsp;style history substitution. This option is on by default for interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s$Ox&jSi)D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -T", 
                        "set", 
                        "", 
                        "-T", 
                        "-o functrace", 
                        "", 
                        "", 
                        "<p>Traps on <code>DEBUG</code> and <code>RETURN</code> are inherited by shell functions, command substitutions, and commands executed in a subshell environment.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CmKQ/0&HJE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set --", 
                        "set", 
                        "", 
                        "--", 
                        "", 
                        "", 
                        "", 
                        "<p>If no arguments follow this option, then the positional parameters are unset.  Otherwise, the positional parameters are set to the <var>arguments</var>, even if some of them begin with <samp>-</samp>.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f{iUC?2(?p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -", 
                        "set", 
                        "", 
                        "-", 
                        "", 
                        "", 
                        "", 
                        "<p>Signal the end of options, cause all remaining <var>arguments&nbsp;</var>to be assigned to the positional parameters.  The <samp>-x&nbsp;</samp>and <samp>-v</samp>  options are turned off. If there are no arguments, the positional parameters remain unchanged.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Re>!zH;YY2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt", 
                        "shopt", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Toggle the values of settings controlling optional shell behavior.</p>\n<p><code><strike>shopt</strike> [-pqsu] [-o] [optname …]</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYxMDIyNzQsICJpZCI6ICIxNDk1MjcwOTIzOTEwLTAwNiIsICJtZCI6ICJUb2dnbGUgdGhlIHZhbHVlcyBvZiBzZXR0aW5ncyBjb250cm9sbGluZyBvcHRpb25hbCBzaGVsbCBiZWhhdmlvci5cbiAgXG5gc2hvcHQgWy1wcXN1XSBbLW9dIFtvcHRuYW1lIFx1MjAyNl1gXG4ifQ==---->", 
                        "<p>The settings can be either those listed below, or, if the -o option is used, those available with the -o option to the <code>set</code> builtin command. With no options, or with the -p option, a list of all settable options is displayed, with an indication of whether or not each is set. The -p option causes output to be displayed in a form that may be reused as input.<br />\nIf either -s or -u is used with no optname arguments, <code>shopt</code> shows only those options which are set or unset, respectively.<br />\nUnless otherwise noted, the <code>shopt</code> options are disabled (off) by default.<br />\nThe return status when listing options is zero if all optnames are enabled, non-zero otherwise. When setting or unsetting options, the return status is zero unless an optname is not a valid shell option.<br />\nThe return status when listing options is zero if all optnames are enabled, non-zero otherwise. When setting or unsetting options, the return status is zero unless an optname is not a valid shell option.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYxMDIyNDgsICJpZCI6ICIxNDk1MjcwOTIzOTEwLTAwNyIsICJtZCI6ICJUaGUgc2V0dGluZ3MgY2FuIGJlIGVpdGhlciB0aG9zZSBsaXN0ZWQgYmVsb3csIG9yLCBpZiB0aGUgLW8gb3B0aW9uIGlzIHVzZWQsIHRob3NlIGF2YWlsYWJsZSB3aXRoIHRoZSAtbyBvcHRpb24gdG8gdGhlIGBzZXRgIGJ1aWx0aW4gY29tbWFuZC4gV2l0aCBubyBvcHRpb25zLCBvciB3aXRoIHRoZSAtcCBvcHRpb24sIGEgbGlzdCBvZiBhbGwgc2V0dGFibGUgb3B0aW9ucyBpcyBkaXNwbGF5ZWQsIHdpdGggYW4gaW5kaWNhdGlvbiBvZiB3aGV0aGVyIG9yIG5vdCBlYWNoIGlzIHNldC4gVGhlIC1wIG9wdGlvbiBjYXVzZXMgb3V0cHV0IHRvIGJlIGRpc3BsYXllZCBpbiBhIGZvcm0gdGhhdCBtYXkgYmUgcmV1c2VkIGFzIGlucHV0LlxuSWYgZWl0aGVyIC1zIG9yIC11IGlzIHVzZWQgd2l0aCBubyBvcHRuYW1lIGFyZ3VtZW50cywgYHNob3B0YCBzaG93cyBvbmx5IHRob3NlIG9wdGlvbnMgd2hpY2ggYXJlIHNldCBvciB1bnNldCwgcmVzcGVjdGl2ZWx5LlxuVW5sZXNzIG90aGVyd2lzZSBub3RlZCwgdGhlIGBzaG9wdGAgb3B0aW9ucyBhcmUgZGlzYWJsZWQgKG9mZikgYnkgZGVmYXVsdC5cblRoZSByZXR1cm4gc3RhdHVzIHdoZW4gbGlzdGluZyBvcHRpb25zIGlzIHplcm8gaWYgYWxsIG9wdG5hbWVzIGFyZSBlbmFibGVkLCBub24temVybyBvdGhlcndpc2UuIFdoZW4gc2V0dGluZyBvciB1bnNldHRpbmcgb3B0aW9ucywgdGhlIHJldHVybiBzdGF0dXMgaXMgemVybyB1bmxlc3MgYW4gb3B0bmFtZSBpcyBub3QgYSB2YWxpZCBzaGVsbCBvcHRpb24uXG5UaGUgcmV0dXJuIHN0YXR1cyB3aGVuIGxpc3Rpbmcgb3B0aW9ucyBpcyB6ZXJvIGlmIGFsbCBvcHRuYW1lcyBhcmUgZW5hYmxlZCwgbm9uLXplcm8gb3RoZXJ3aXNlLiBXaGVuIHNldHRpbmcgb3IgdW5zZXR0aW5nIG9wdGlvbnMsIHRoZSByZXR1cm4gc3RhdHVzIGlzIHplcm8gdW5sZXNzIGFuIG9wdG5hbWUgaXMgbm90IGEgdmFsaWQgc2hlbGwgb3B0aW9uLlxuIn0=---->", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "bi}rXJ@s0|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -p", 
                        "shopt", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "causes output to be displayed in a form that may be reused as input.", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K{sS0vbqb3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -u", 
                        "shopt", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "", 
                        "Disable (unset) each <var>optname</var>.", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u|;-P^zq7S", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -q", 
                        "shopt", 
                        "", 
                        "-q", 
                        "", 
                        "", 
                        "", 
                        "<p>Suppresses normal output; the return status indicates whether the <var>optname</var> is set or unset. If multiple <var>optname</var> arguments are given, the return status is zero if all <var>optnames</var> are enabled; non-zero otherwise. </p>", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L&N)CoB?UT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -o", 
                        "shopt", 
                        "", 
                        "-o", 
                        "", 
                        "", 
                        "", 
                        "<p>Restricts the values of <var>optname</var> to be those defined for the <samp>-o</samp> option to the <code>set</code> builtin. </p>", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q=@37`bRsZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option autocd", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "autocd", 
                        "", 
                        "<p>If set, a command name that is the name of a directory is executed as if it were the argument to the <code>cd</code> command. This option is only used by interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cFVH+ZAFrz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option cdable_vars", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "cdable_vars", 
                        "", 
                        "<p>If this is set, an argument to the <code>cd</code> builtin command that is not a directory is assumed to be the name of a variable whose value is the directory to change to.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i|^LqF>*GV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option cdspell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "cdspell", 
                        "", 
                        "<p>If set, minor errors in the spelling of a directory component in a <code>cd</code> command will be corrected. The errors checked for are transposed characters, a missing character, and a character too many. If a correction is found, the corrected path is printed, and the command proceeds. This option is only used by interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O<<<7b3~3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option checkhash", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "checkhash", 
                        "", 
                        "<p>Check that a command found in the hash table exists before trying to execute it.  If a hashed command no longer exists, a normal path search is performed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lp!J@=qEQJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option checkjobs", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "checkjobs", 
                        "", 
                        "<p>If set, Bash lists the status of any stopped and running jobs before exiting an interactive shell.  If any jobs are running, this causes the exit to be deferred until a second exit is attempted without an intervening command. The shell always postpones exiting if any jobs are stopped.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "px~u?E@t*!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option checkwinsize", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "checkwinsize", 
                        "", 
                        "<p>If set, Bash checks the window size after each command  and, if necessary, updates the values of     <code>LINES</code> and <code>COLUMNS</code>.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z(MwQuvRWr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option cmdhist", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "cmdhist", 
                        "", 
                        "<p>If set, Bash attempts to save all lines of a multiple-line command in the same history entry.  This allows easy re-editing of multi-line commands.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j-qp=)GAHJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat31", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat31", 
                        "", 
                        "<p>If set, Bash changes its behavior to that of version 3.1 with respect to quoted arguments to the conditional command&rsquo;s &lsquo;<samp>=~</samp>&rsquo; operator and with respect to locale-specific string comparison when using the <code>[[</code> conditional command&rsquo;s &lsquo;<samp>&lt;</samp>&rsquo; and &lsquo;<samp>&gt;</samp>&rsquo; operators. Bash versions prior to bash-4.1 use ASCII collation and strcmp(3); bash-4.1 and later use the current locale&rsquo;s collation sequence and strcoll(3).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MY{-4lRES}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat32", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat32", 
                        "", 
                        "<p>If set, Bash changes its behavior to that of version 3.2 with respect to locale-specific string comparison when using the <code>[[</code> conditional command’s <samp>&lt;</samp>&nbsp;and <samp>&gt;</samp>&nbsp;operators and the effect of interrupting a command list. Bash versions 3.2 and earlier continue with the next command in the list after one terminates due to an interrupt.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P23Q^FPS$i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat40", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat40", 
                        "", 
                        "<p>If set, Bash changes its behavior to that of version 4.0 with respect to locale-specific string comparison when using the <code>[[</code> conditional command&rsquo;s &lsquo;<samp>&lt;</samp>&rsquo; and &lsquo;<samp>&gt;</samp>&rsquo; operators (see description of <code>compat31</code>) and the effect of interrupting a command list. Bash versions 4.0 and later interrupt the list as if the shell received the interrupt; previous versions continue with the next command in the list.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i?y]mDRV2z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat41", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat41", 
                        "", 
                        "<p>If set, Bash, when in <small>POSIX</small> mode, treats a single quote in a double-quoted parameter expansion as a special character.  The single quotes must match (an even number) and the characters between the single quotes are considered quoted.  This is the behavior of <small>POSIX</small> mode through version 4.1. The default Bash behavior remains as in previous versions.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Df`h>m.9I@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat42", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat42", 
                        "", 
                        "<p>If set, Bash does not process the replacement string in the pattern substitution word expansion using quote removal.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p3nfFqagGB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat43", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat43", 
                        "", 
                        "<p>If set, Bash does not print a warning message if an attempt is made to use a quoted compound array assignment as an argument to <code>declare</code>, makes word expansion errors non-fatal errors that cause the current command to fail (the default behavior is to make them fatal errors that cause the shell to exit), and does not reset the loop state when a shell function is executed (this allows <code>break</code> or <code>continue</code> in a shell function to affect loops in the caller&rsquo;s context).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IGLOWa]mJk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option complete_fullquote", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "complete_fullquote", 
                        "", 
                        "<p>If set, Bash quotes all shell metacharacters in filenames and directory names when performing completion. If not set, Bash removes metacharacters such as the dollar sign from the set of characters that will be quoted in completed filenames when these metacharacters appear in shell variable references in words to be completed. This means that dollar signs in variable names that expand to directories will not be quoted; however, any dollar signs appearing in filenames will not be quoted, either. This is active only when bash is using backslashes to quote completed filenames. This variable is set by default, which is the default Bash behavior in versions through 4.2.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M|B]iF$e_z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option direxpand", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "direxpand", 
                        "", 
                        "<p>If set, Bash replaces directory names with the results of word expansion when performing filename completion.  This changes the contents of the readline editing buffer. If not set, Bash attempts to preserve what the user typed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lL<1r)|EWL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option dirspell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "dirspell", 
                        "", 
                        "<p>If set, Bash attempts spelling correction on directory names during word completion  if the directory name initially supplied does not exist.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G9z~ta7YyE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option dotglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "dotglob", 
                        "", 
                        "<p>Include filenames beginning with&nbsp;<code>.</code> in the results of filename expansion.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Mww|Y${P2_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option execfail", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "execfail", 
                        "", 
                        "<p>If this is set, a non-interactive shell will not exit if it cannot execute the file specified as an argument to the <code>exec</code> builtin command.  An interactive shell does not exit if <code>exec</code> fails.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DaBH?3eFqK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option expand_aliases", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "expand_aliases", 
                        "", 
                        "<p>If set, aliases are expanded. This option is enabled by default for interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pt+E!fEU+2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option extdebug", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "extdebug", 
                        "", 
                        "<p>If set at shell invocation, arrange to execute the debugger profile before the shell starts, identical to the <samp>--debugger</samp> option. If set after invocation, behavior intended for use by debuggers is enabled: </p><ol><li> The <samp>-F</samp> option to the <code>declare</code> builtin (see <a href=Bash-Builtins.html#Bash-Builtins\">Bash Builtins</a>) displays the source file name and line number corresponding to each function name supplied as an argument.  </li><li> If the command run by the <code>DEBUG</code> trap returns a non-zero value, the next command is skipped and not executed.  </li><li> If the command run by the <code>DEBUG</code> trap returns a value of 2, and the shell is executing in a subroutine (a shell function or a shell script executed by the <code>.</code> or <code>source</code> builtins), the shell simulates a call to <code>return</code>.  </li><li><code>BASH_ARGC</code> and <code>BASH_ARGV</code> are updated as described in their descriptions (see <a href=\"Bash-Variables.html#Bash-Variables\">Bash Variables</a>).  </li><li> Function tracing is enabled: command substitution, shell functions, and subshells invoked with <code>( <var>command</var> )</code> inherit the <code>DEBUG</code> and <code>RETURN</code> traps.  </li><li> Error tracing is enabled: command substitution, shell functions, and subshells invoked with <code>( <var>command</var> )</code> inherit the <code>ERR</code> trap.</li></ol>  \"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FCN(,NhtE/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option extglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "extglob", 
                        "", 
                        "<div>enables extended pattern matching features</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dy8+)Q2qN9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option extquote", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "extquote", 
                        "", 
                        "<p>If set, <code>$'<var>string</var>'</code> and <code>$&quot;<var>string</var>&quot;</code> quoting is   performed within <code>${<var>parameter</var>}</code> expansions                      enclosed in double quotes.  This option is enabled by default.  </p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j34b&Q6Bbv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option failglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "failglob", 
                        "", 
                        "<p>If set, patterns which fail to match filenames during filename expansion result in an expansion error.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E[!y;cYhHC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option force_fignore", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "force_fignore", 
                        "", 
                        "<p>If set, the suffixes specified by the <code>FIGNORE</code> shell variable cause words to be ignored when performing word completion even if the ignored words are the only possible completions. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P%XM_Hlhm$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option globasciiranges", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "globasciiranges", 
                        "", 
                        "<p>If set, range expressions used in pattern matching bracket expressions&nbsp;behave as if in the traditional C locale when performing comparisons.  That is, the current locale’s collating sequence is not taken into account, so <samp>b</samp>&nbsp;will not collate between <samp>A</samp>&nbsp;and <samp>B</samp>, and upper-case and lower-case ASCII characters will collate together.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A=F5^p<.nQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option globstar", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "globstar", 
                        "", 
                        "<p>If set, the pattern <samp><code>**</code></samp>&nbsp;used in a filename expansion context will match all files and zero or more directories and subdirectories. If the pattern is followed by a <samp><code>/</code></samp>, only directories and subdirectories match.</p>", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">shopt</span> -s globstar\n<span style=\"color: #6ab825; font-weight: bold\">for</span> i in **<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">do</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #40ffff\">$i</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">done</span>\n\na\nb\nb/e\nd\nd/f\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYxMDExOTEsICJpZCI6ICIxNDk1MjcxNzc1MjkxLTAwNyIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNob3B0IC1zIGdsb2JzdGFyXG4gICAgZm9yIGkgaW4gKio7IGRvIGVjaG8gJGk7IGRvbmVcbiAgXG4gICAgYVxuICAgIGJcbiAgICBiL2VcbiAgICBkXG4gICAgZC9mXG4ifQ==---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AESx[rj?bf", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option gnu_errfmt", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "gnu_errfmt", 
                        "", 
                        "<p>If set, shell error messages are written in the standard <small>GNU</small> error message format.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hy@=wlv^z(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option histappend", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "histappend", 
                        "", 
                        "<p>If set, the history list is appended to the file named by the value of the <code>HISTFILE</code> variable when the shell exits, rather than overwriting the file.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JlcQc;]pWM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option histreedit", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "histreedit", 
                        "", 
                        "<p>If set, and Readline is being used, a user is given the opportunity to re-edit a failed history substitution.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gBgtx2e;Z,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option histverify", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "histverify", 
                        "", 
                        "<p>If set, and Readline is being used, the results of history substitution are not immediately passed to the shell parser.  Instead, the resulting line is loaded into the Readline editing buffer, allowing further modification.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ku$gH`3mD1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option hostcomplete", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "hostcomplete", 
                        "", 
                        "<p>If set, and Readline is being used, Bash will attempt to perform hostname completion when a word containing a <samp>@</samp>&nbsp;is being completed.  This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p)5B}=6?_+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option huponexit", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "huponexit", 
                        "", 
                        "<p>Send <code>SIGHUP</code> to all jobs when an interactive login shell exits</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M88[|l#qI:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option inherit_errexit", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "inherit_errexit", 
                        "", 
                        "<p>If set, command substitution inherits the value of the <code>errexit</code> option, instead of unsetting it in the subshell environment. This option is enabled when <small>POSIX</small> mode is enabled.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ee&$#*nno3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option interactive_comments", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "interactive_comments", 
                        "", 
                        "<p>Allow a word beginning with <samp><code>#</code></samp>&nbsp;to cause that word and all remaining characters on that line to be ignored in an interactive shell. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D>V:Kc<L_y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option lastpipe", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "lastpipe", 
                        "", 
                        "<p>If set, and job control is not active, the shell runs the last command of a pipeline not executed in the background in the current shell environment.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ko@53Q+!`L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option lithist", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "lithist", 
                        "", 
                        "<p>If enabled, and the <code>cmdhist</code> option is enabled, multi-line commands are saved to the history with embedded newlines rather than using semicolon separators where possible.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q-Lz^;8fol", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option login_shell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "login_shell", 
                        "", 
                        "<p>The shell sets this option if it is started as a login shell. The value may not be changed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pqe+:0r38<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option mailwarn", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "mailwarn", 
                        "", 
                        "<p>If set, and a file that Bash is checking for mail has been accessed since the last time it was checked, the message <code>&quot;The mail in <var>mailfile</var> has been read&quot;</code> is displayed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KXuB?98+T5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option no_empty_cmd_completion", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "no_empty_cmd_completion", 
                        "", 
                        "<p>If set, and Readline is being used, Bash will not attempt to search the <code>PATH</code> for possible completions when completion is attempted on an empty line.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qk4gM_suXZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option nocaseglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "nocaseglob", 
                        "", 
                        "<p>If set, Bash matches filenames in a case-insensitive fashion when performing filename expansion.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OCC&A=^Eu)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option nocasematch", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "nocasematch", 
                        "", 
                        "<p>If set, Bash matches patterns in a case-insensitive fashion when performing matching while executing <code>case</code> or <code>[[</code> conditional commands, when performing pattern substitution word expansions, or when filtering possible completions as part of programmable completion.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "23@ic9iB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option nullglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "nullglob", 
                        "", 
                        "<p>If set, Bash allows filename patterns which match no files to expand to a null string, rather than themselves.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "weQ-btT>l^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option progcomp", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "progcomp", 
                        "", 
                        "<p>If set, the programmable completion facilities&nbsp;are enabled. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OohQ~/w3-F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option promptvars", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "promptvars", 
                        "", 
                        "<p>If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pg0)[laVb!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option restricted_shell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "restricted_shell", 
                        "", 
                        "<p>The shell sets this option if it is started in restricted mode. The value may not be changed. This is not reset when the startup files are executed, allowing the startup files to discover whether or not a shell is restricted.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CwW67eQ0az", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option shift_verbose", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "shift_verbose", 
                        "", 
                        "<p>If this is set, the <code>shift</code> builtin prints an error message when the shift count exceeds the number of positional parameters.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t@g<`0=:|i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option sourcepath", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "sourcepath", 
                        "", 
                        "<p>If set, the <code>source</code> builtin uses the value of <code>PATH</code> to find the directory containing the file supplied as an argument. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P{87F(0c7a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option xpg_echo", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "xpg_echo", 
                        "", 
                        "<p>If set, the <code>echo</code> builtin expands backslash-escape sequences by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r}hDE5W@:>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs", 
                        "dirs", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Display the list of currently remembered directories.  Directories are added to the list with the <code>pushd</code> command; the <code>popd</code> command removes directories from the list. The current directory is always the first directory in the stack. </p>", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "e=R]4(~:!O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd", 
                        "popd", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>When no arguments are given, <code><strike>popd</strike></code> removes the top directory from the stack and performs a <code>cd</code> to the new top directory. The elements are numbered from 0 starting at the first directory listed with <code>dirs</code>; that is, <code><strike>popd</strike></code> is equivalent to <code><strike>popd</strike> +0</code>. </p>", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "lmifg{<;qu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd", 
                        "pushd", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Save the current directory on the top of the directory stack and then <code>cd</code> to <var>dir</var>. With no arguments, <code>pushd</code> exchanges the top two directories and makes the new top the current directory. </p>", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "n7wQX:j`Q1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;-n", 
                        "pushd", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "Suppresses the normal change of directory when rotating or adding directories to the stack, so that only the stack is manipulated.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DHcH;Kd^{s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;+N", 
                        "pushd", 
                        "", 
                        "+<var>N</var>", 
                        "", 
                        "", 
                        "", 
                        "Brings the <var>N</var>th directory (counting from the left of the list printed by <code>dirs</code>, starting with zero) to the top of the list by rotating the stack.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "njUW32Q7$$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;-N", 
                        "pushd", 
                        "", 
                        "-<var>N</var>", 
                        "", 
                        "", 
                        "", 
                        "Brings the <var>N</var>th directory (counting from the right of the list printed by <code>dirs</code>, starting with zero) to the top of the list by rotating the stack.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e?_[~,WS34", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;dir", 
                        "pushd", 
                        "", 
                        "<var>dir</var>", 
                        "", 
                        "", 
                        "", 
                        "Makes <var>dir</var> be the top of the stack, making it the new current directory as if it had been supplied as an argument to the <code>cd</code> builtin.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fUR.%hQl:O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd -n", 
                        "popd", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w8t;g4x:<#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd +N", 
                        "popd", 
                        "", 
                        "+<var>N</var>", 
                        "", 
                        "", 
                        "", 
                        "Removes the <var>N</var>th directory (counting from the left of the list printed by <code>dirs</code>), starting with zero.", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "un;%Sa/x?(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd -N", 
                        "popd", 
                        "", 
                        "-<var>N</var>", 
                        "", 
                        "", 
                        "", 
                        "Removes the <var>N</var>th directory (counting from the right of the list printed by <code>dirs</code>), starting with zero.", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P(<w>rEWME", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -N", 
                        "dirs", 
                        "", 
                        "-<var>N</var>", 
                        "", 
                        "", 
                        "", 
                        "Displays the <var>N</var>th directory (counting from the right of the list printed by <code>dirs</code> when invoked without options), starting with zero.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n=1b@w`ESL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs +N", 
                        "dirs", 
                        "", 
                        "+<var>N</var>", 
                        "", 
                        "", 
                        "", 
                        "Displays the <var>N</var>th directory (counting from the left of the list printed by <code>dirs</code> when invoked without options), starting with zero.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tR;G:|5RHt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -v", 
                        "dirs", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "", 
                        "Causes <code>dirs</code> to print the directory stack with one entry per line, prefixing each entry with its index in the stack.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o/YB4R[^f%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -p", 
                        "dirs", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "Causes <code>dirs</code> to print the directory stack with one entry per line.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OIG*1f}iNM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -l", 
                        "dirs", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "Produces a listing using full pathnames; the default listing format uses a tilde to denote the home directory.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p`aKp8JjeJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -c", 
                        "dirs", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "", 
                        "Clears the directory stack by deleting all of the elements.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i865(zhO}5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -l", 
                        "jobs", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "List process IDs in addition to the normal information.", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NQGJOsU[jw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -n", 
                        "jobs", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "Display information only about jobs that have changed status since the user was last notified of their status.&nbsp;", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "logpsC>l,4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -p", 
                        "jobs", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "", 
                        "List only the process ID of the job’s process group leader.", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b8_]~X:CT(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -r", 
                        "jobs", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "", 
                        "Display only running jobs.&nbsp;", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P}8f{v7,M:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -s", 
                        "jobs", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "Display only stopped jobs.&nbsp;", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GWG]sse/NX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash jobs&nbsp;builtin jobs", 
                        "jobs", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "The first form lists the active jobs.<div><br /></div><div>If <var>jobspec</var> is given, output is restricted to information about that job.  If <var>jobspec</var> is not supplied, the status of all jobs is listed.</div> <p>If the <samp>-x</samp> option is supplied, <code>jobs</code> replaces any <var>jobspec</var> found in <var>command</var> or <var>arguments</var> with the corresponding process group <small>ID</small>, and executes <var>command</var>, passing it <var>argument</var>s, returning its exit status.  </p>", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">jobs</span> <span style=\"color: #d0d0d0\">[</span>-lnprs<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span><i>jobspec</i><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #24909d\">jobs</span> -x <span style=\"color: #24909d\"><i>command</i></span> <span style=\"color: #d0d0d0\">[</span><i>arguments</i><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MjU0MzAsICJpZCI6ICIxNDk1MjcyNjUyNTIxLTAwNyIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGpvYnMgWy1sbnByc10gW2pvYnNwZWNdXG4gICAgam9icyAteCBjb21tYW5kIFthcmd1bWVudHNdXG4ifQ==---->", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "p[jS?3wpYC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin bg", 
                        "bg&nbsp;[<var>jobspec</var>&nbsp;…]", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Resume each suspended job <var>jobspec</var> in the background, as if it had been started with <samp><code>&amp;</code></samp>. If <var>jobspec</var> is not supplied, the current job is used. The return status is zero unless it is run when job control is not enabled, or, when run with job control enabled, any <var>jobspec</var> was not found or specifies a job that was started without job control. </p>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "sh&+d~vj.m", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin fg", 
                        "fg", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Resume the job <var>jobspec</var> in the foreground and make it the current job. If <var>jobspec</var> is not supplied, the current job is used. The return status is that of the command placed into the foreground, or non-zero if run when job control is disabled or, when run with job control enabled, <var>jobspec</var> does not specify a valid job or <var>jobspec</var> specifies a job that was started without job control. </p>", 
                        "bg [<var>jobspec</var>&nbsp;…]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "hppd&Q,t~D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin kill", 
                        "kill", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Send a signal specified by <var>sigspec</var> or <var>signum</var> to the process named by job specification <var>jobspec</var> or process <small>ID</small> <var>pid</var>. <var>sigspec</var> is either a case-insensitive signal name such as <code>SIGINT</code> (with or without the <code>SIG</code> prefix) or a signal number; <var>signum</var> is a signal number. If <var>sigspec</var> and <var>signum</var> are not present, <code>SIGTERM</code> is used. The <samp>-l</samp> option lists the signal names. If any arguments are supplied when <samp>-l</samp> is given, the names of the signals corresponding to the arguments are listed, and the return status is zero. <var>exit_status</var> is a number specifying a signal number or the exit status of a process terminated by a signal. The <samp>-L</samp> option is equivalent to <samp>-l</samp>. The return status is zero if at least one signal was successfully sent, or non-zero if an error occurs or an invalid option is encountered. </p><p>When job control is not active, the <code><strike>kill</strike></code> and <code><strike>wait</strike></code> builtins do not accept <var>jobspec</var> arguments.  They must be supplied process <var>ID</var>s.</p>", 
                        "kill [-s <var>sigspec</var>] [-n <var>signum</var>] [-<var>sigspec</var>] [&nbsp;<var>jobspec</var> | <var>pid ]</var><div>kill -l|-L [<var>exit_status</var>]</div>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "J@?[f|Is6|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash jobs builtin wait", 
                        "wait", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Wait until the child process specified by each process <small>ID</small> <var>pid</var> or job specification <var>jobspec</var> exits and return the exit status of the last command waited for. If a job spec is given, all processes in the job are waited for. If no arguments are given, all currently active child processes are waited for, and the return status is zero. If the <samp>-n</samp> option is supplied, <code>wait</code> waits for any job to terminate and returns its exit status. If neither <var>jobspec</var> nor <var>pid</var> specifies an active child process of the shell, the return status is 127. </p><p>When job control is not active, the <code>kill</code> and <code>wait</code> builtins do not accept <var>jobspec</var> arguments.  They must be supplied process <var>ID</var>s.</p>", 
                        "wait [-n] [<var>jobspec</var> or <var>pid</var> …]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "HTXDyS/Xil", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin disown", 
                        "disown", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Without options, remove each <var>jobspec</var> from the table of active jobs. If the <samp>-h</samp> option is given, the job is not removed from the table, but is marked so that <code>SIGHUP</code> is not sent to the job if the shell receives a <code>SIGHUP</code>. If <var>jobspec</var> is not present, and neither the <samp>-a</samp> nor the <samp>-r</samp> option is supplied, the current job is used. If no <var>jobspec</var> is supplied, the <samp>-a</samp> option means to remove or mark all jobs; the <samp>-r</samp> option without a <var>jobspec</var> argument restricts operation to running jobs. </p>", 
                        "disown [-ar] [-h] [<var>jobspec</var> … | <var>pid</var> … ]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "dm8~aXk$;u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Bash pipeline", 
                        "", 
                        "<p>The output of each command in the pipeline is connected via a pipe\nto the input of the next command.\nThat is, each command reads the previous command’s output.  This\nconnection is performed before any redirections specified by the\ncommand.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C5^ZB^W5^h", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "specify crontab editor", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">export </span><span style=\"color: #40ffff\">EDITOR</span><span style=\"color: #d0d0d0\">=</span>vi\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM0OTQsICJpZCI6ICIxNDk1MjczNDU2NTA0LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGV4cG9ydCBFRElUT1I9dmlcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ez1A9XST0d", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -e", 
                        "crontab", 
                        "", 
                        "-e", 
                        "", 
                        "", 
                        "", 
                        "Edit crontab file, or create one if it doesn’t already exist.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bv/*ZrPq,f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -l", 
                        "crontab", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "crontab list of cronjobs , display crontab file contents.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "duD{p@:K%p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -r", 
                        "crontab", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "", 
                        "Remove your crontab file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QesTU+4pao", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -v", 
                        "crontab", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "", 
                        "Display the last time you edited your crontab file. (This option is only available on a few systems.)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l75VqS-SFU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab syntax", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">*</span>     <span style=\"color: #d0d0d0\">*</span>     <span style=\"color: #d0d0d0\">*</span>   <span style=\"color: #d0d0d0\">*</span>    <span style=\"color: #d0d0d0\">*</span>        <span style=\"color: #d0d0d0\">command</span> <span style=\"color: #d0d0d0\">to</span> <span style=\"color: #d0d0d0\">be</span> <span style=\"color: #d0d0d0\">executed</span>\n<span style=\"color: #d0d0d0\">-</span>     <span style=\"color: #d0d0d0\">-</span>     <span style=\"color: #d0d0d0\">-</span>   <span style=\"color: #d0d0d0\">-</span>    <span style=\"color: #d0d0d0\">-</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>   <span style=\"color: #d0d0d0\">|</span>    <span style=\"color: #d0d0d0\">|</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>   <span style=\"color: #d0d0d0\">|</span>    <span style=\"color: #d0d0d0\">+-----</span> <span style=\"color: #d0d0d0\">day</span> <span style=\"color: #d0d0d0\">of</span> <span style=\"color: #d0d0d0\">week</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">(Sunday=</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>   <span style=\"color: #d0d0d0\">+-------</span> <span style=\"color: #d0d0d0\">month</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">12</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">+---------</span> <span style=\"color: #d0d0d0\">day</span> <span style=\"color: #d0d0d0\">of</span>        <span style=\"color: #d0d0d0\">month</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">31</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">+-----------</span> <span style=\"color: #d0d0d0\">hour</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">23</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">+-------------</span> <span style=\"color: #d0d0d0\">min</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">59</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<ul>\n<li style=\"text-align: left; \">Repeat pattern like <code>/2</code> for every 2 minutes or <code>/10</code> for every 10 minutes is not supported by all operating systems. If you try to use it and crontab complains it is probably not supported.</li>\n<li style=\"text-align: left; \">The specification of days can be made in two fields: month day and weekday. If both are specified in an entry, they are cumulative meaning both of the entries will get executed .</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM3MDQsICJpZCI6ICIxNDk1MjczNTcwODkwLTAwMSIsICJtZCI6ICIgICAgKiAgICAgKiAgICAgKiAgICogICAgKiAgICAgICAgY29tbWFuZCB0byBiZSBleGVjdXRlZFxuICAgIC0gICAgIC0gICAgIC0gICAtICAgIC1cbiAgICB8ICAgICB8ICAgICB8ICAgfCAgICB8XG4gICAgfCAgICAgfCAgICAgfCAgIHwgICAgKy0tLS0tIGRheSBvZiB3ZWVrICgwIC0gNikgKFN1bmRheT0wKVxuICAgIHwgICAgIHwgICAgIHwgICArLS0tLS0tLSBtb250aCAoMSAtIDEyKVxuICAgIHwgICAgIHwgICAgICstLS0tLS0tLS0gZGF5IG9mICAgICAgICBtb250aCAoMSAtIDMxKVxuICAgIHwgICAgICstLS0tLS0tLS0tLSBob3VyICgwIC0gMjMpXG4gICAgKy0tLS0tLS0tLS0tLS0gbWluICgwIC0gNTkpXG4gIFxuKiBSZXBlYXQgcGF0dGVybiBsaWtlIGAvMmAgZm9yIGV2ZXJ5IDIgbWludXRlcyBvciBgLzEwYCBmb3IgZXZlcnkgMTAgbWludXRlcyBpcyBub3Qgc3VwcG9ydGVkIGJ5IGFsbCBvcGVyYXRpbmcgc3lzdGVtcy4gSWYgeW91IHRyeSB0byB1c2UgaXQgYW5kIGNyb250YWIgY29tcGxhaW5zIGl0IGlzIHByb2JhYmx5IG5vdCBzdXBwb3J0ZWQuXG4qIFRoZSBzcGVjaWZpY2F0aW9uIG9mIGRheXMgY2FuIGJlIG1hZGUgaW4gdHdvIGZpZWxkczogbW9udGggZGF5IGFuZCB3ZWVrZGF5LiBJZiBib3RoIGFyZSBzcGVjaWZpZWQgaW4gYW4gZW50cnksIHRoZXkgYXJlIGN1bXVsYXRpdmUgbWVhbmluZyBib3RoIG9mIHRoZSBlbnRyaWVzIHdpbGwgZ2V0IGV4ZWN1dGVkIC5cbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oCtt9la,bj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "disable crontab email", 
                        "", 
                        "<p>By default cron jobs sends a email to the user account executing the cronjob. If this is not needed put the following command At the end of the cron job line .</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">&gt;/dev/null 2&gt;<span style=\"color: #d0d0d0\">&amp;</span>1\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM3NjgsICJpZCI6ICIxNDk1MjczNjI4NTg2LTAwMSIsICJtZCI6ICJCeSBkZWZhdWx0IGNyb24gam9icyBzZW5kcyBhIGVtYWlsIHRvIHRoZSB1c2VyIGFjY291bnQgZXhlY3V0aW5nIHRoZSBjcm9uam9iLiBJZiB0aGlzIGlzIG5vdCBuZWVkZWQgcHV0IHRoZSBmb2xsb3dpbmcgY29tbWFuZCBBdCB0aGUgZW5kIG9mIHRoZSBjcm9uIGpvYiBsaW5lIC5cbiAgXG4gICAgOjo6YmFzaFxuICAgICZndDsvZGV2L251bGwgMiZndDsmYW1wOzFcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dM|p4Xnr&U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab location on Mac OS X", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">/usr/lib/cron/tabs/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM4MjQsICJpZCI6ICIxNDk1MjczNzcxNjE5LTAwMSIsICJtZCI6ICIgICAgL3Vzci9saWIvY3Jvbi90YWJzL1xuIn0=---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QFPC)`P(YR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab location on&nbsp;Solaris, HP-UX, Debian, Ubuntu", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">/var/spool/cron/crontabs/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM4NDksICJpZCI6ICIxNDk1MjczODI4OTcyLTAwMSIsICJtZCI6ICIgICAgL3Zhci9zcG9vbC9jcm9uL2Nyb250YWJzLyBcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G$:?#<W{xV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab location on&nbsp;AIX, Red Hat Linux, CentOS, Fedora", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">/var/spool/cron/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM4NzYsICJpZCI6ICIxNDk1MjczODU2MjEwLTAwMSIsICJtZCI6ICIgICAgL3Zhci9zcG9vbC9jcm9uLyBcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wvP2A>Xwz#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab does what if month day and week day both specified?", 
                        "", 
                        "Both get executed since&nbsp;they are cumulative.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b]H;ul`2Y-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor h", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "h", 
                        "", 
                        "move cursor left", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q;[RO5H[3/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor j", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "j", 
                        "", 
                        "move cursor down", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c9>nf0/}Z{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor k", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "k", 
                        "", 
                        "move cursor up", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e9;q{ZP0Wg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor l", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "l", 
                        "", 
                        "move cursor right", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "th!!-TSleF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor 4h", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "4h", 
                        "", 
                        "move cursor 4 (or any number) left", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s{uWZeuY6H", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor 4j", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "4j", 
                        "", 
                        "move cursor 4 (or any number) down", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JyK1G-jbQ|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor 4k", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "4k", 
                        "", 
                        "move cursor 4 (or any number) up", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D}6ab+~4p}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor 4l", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "4l", 
                        "", 
                        "move cursor 4 (or any number) right", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N22n7[F!<E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor w", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "w", 
                        "", 
                        "jump cursor by start of words (punctuation considered words)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z;&LVkOxBN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor W", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "W", 
                        "", 
                        "jump cursor by words (spaces separate words)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b4qf8Afn:h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor e", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "e", 
                        "", 
                        "move cursor to end of words (punctuation considered words)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J>9VRVC_L]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor E", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "E", 
                        "", 
                        "move cursor to end of words (spaces separate words)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zw/LVadx0|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor b", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "b", 
                        "", 
                        "jump cursor backward by words (punctuation considered words)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cD{_ofPfm5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor B", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "B", 
                        "", 
                        "jump cursor backward by words (spaces separate words)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v6/`CupL,K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor 0", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "0", 
                        "", 
                        "move cursor to start of line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O)|*Q@~DZa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor ^", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "^", 
                        "", 
                        "move cursor to first non-blank character of line&nbsp;(same as&nbsp;<code>_</code>?)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zQKRRERJPm", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor $", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "$", 
                        "", 
                        "move cursor to end of line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tt.l2R>Oa*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor G", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "G", 
                        "", 
                        "Go To command: prefixed with number (<code>5G</code> goes to line 5)&nbsp;or alone (<code>G</code> goes to last line)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bM|$$ITA%V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert i", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "i", 
                        "", 
                        "insert text at cursor [<code><i>count</i></code> times]", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w+LAP&GE}3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert I", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "I", 
                        "", 
                        "insert text before first non-blank in line [<code><i>count</i></code>] times", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ay<$i$6tB=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert a", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "a", 
                        "", 
                        "<em>insert mode:</em><br>Append text after the cursor [count] times.<br>append after the cursor", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Kh}0HxX)_4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert A", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "A", 
                        "", 
                        "<em>insert mode:</em><br>Append text at the end of the line [count] times.<br>append at the end of the line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q1|Me6~N@(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert o", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[n]</i>o", 
                        "", 
                        "Open new line below cursor and insert text [<code><i>n</i></code>&nbsp;times]", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c`B%0JvnW8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert O", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[n]</i>O", 
                        "", 
                        "Open new line above cursor and insert text [<code><i>n</i></code>&nbsp;times]<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O]$1;(z:#C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "r", 
                        "", 
                        "replace a single character (does not use insert mode)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g(PgOADWzM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "v", 
                        "", 
                        "start <b>visual</b> mode", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oVEhws^!<d", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]yy", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>yy", 
                        "", 
                        "copy [<code><i>count</i></code>] lines [into register <code><i>x</i></code>]", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q/5*B~%hL`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search /&lt;<kbd>CR</kbd>&gt;", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "/<kbd>CR</kbd>", 
                        "", 
                        "repeat last search, in the forward direction", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I`gnP])YK2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":e <i>filename</i>", 
                        "", 
                        "<em>multiple files:</em><br>Edit a file in a new buffer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mAWC]CXVL:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing r", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "r", 
                        "", 
                        "replace a single character (does not enter insert mode)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w3my2DKr1l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing J", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "J", 
                        "", 
                        "join line below to the current one", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IUT02XgWit", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing [\"x]cc", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>cc", 
                        "", 
                        "Delete [<code><i>count</i></code>] lines [into register&nbsp;<code><i>x</i></code>] and start insert; same as&nbsp;<code>S</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ah;ZB8>.H;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing cw", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "cw", 
                        "", 
                        "change (replace) to the end of word", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P#JfMT5*Ox", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing [\"x]c{motion]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>c<i>{m}</i>", 
                        "", 
                        "Delete {<code><i>motion</i></code>} text [into register <code><i>x</i></code>] and start insert.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G5z!.e(u8W", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing [\"x]s", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>s", 
                        "", 
                        "Delete [<code><i>count</i></code>] <b>characters</b> [into register&nbsp;<code><i>x</i></code>] and start insert; same as&nbsp;<code>cl</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DHT</nsnv[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;[\"x]S", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>S", 
                        "", 
                        "Delete [<code><i>count</i></code>] <b>lines</b> [into register <code><i>x</i></code>] and start insert; same as <code>cc</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G03oH<V,Z`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing xp", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "xp", 
                        "", 
                        "transpose two letters (delete and paste, technically)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hqZZayIVVQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing u", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "u", 
                        "", 
                        "undo", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pE.$x+_(nS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing .", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ".", 
                        "", 
                        "repeat last command", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EVAF{QKu,U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command v", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "v", 
                        "", 
                        "start visual mode, mark lines, then do command (such as y-yank)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NMwQ;V/#nS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command V", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "V", 
                        "", 
                        "start linewise visual mode", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xt}vfQ2A3<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual o", 
                        "vi", 
                        "visual cmd", 
                        "", 
                        "", 
                        "o", 
                        "", 
                        "move to other end of marked area", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n=Ze2u6GkB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ^V", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃V</kbd>", 
                        "", 
                        "start visual block mode", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gCkJ2;#hn3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual O", 
                        "vi", 
                        "visual cmd", 
                        "", 
                        "", 
                        "O", 
                        "", 
                        "move to other corner of block", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MWoqCCR|fx", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual aw", 
                        "vi", 
                        "visual cmd", 
                        "", 
                        "", 
                        "aw", 
                        "", 
                        "mark a word", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QqY*SnX8fI", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object ab", 
                        "vi", 
                        "text-object", 
                        "", 
                        "", 
                        "ab", 
                        "", 
                        "a parenthesized block (same as&nbsp;<code>a(</code>&nbsp;and&nbsp;<code>a)</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d*s+9%89gC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object aB", 
                        "vi", 
                        "text-object", 
                        "", 
                        "", 
                        "aB", 
                        "", 
                        "a braced block (same as&nbsp;<code>a{</code>&nbsp;and&nbsp;<code>a}</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "&2;oMl[lJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object ib", 
                        "vi", 
                        "text-object", 
                        "", 
                        "", 
                        "ib", 
                        "", 
                        "inner <code>()</code> block", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oT~Itu_Z)i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object iB", 
                        "vi", 
                        "text-object", 
                        "", 
                        "", 
                        "iB", 
                        "", 
                        "inner braced block (same as&nbsp;<code>i}</code>&nbsp;and&nbsp;<code>i{</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fZ5Rx{q,>:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual Esc", 
                        "vi", 
                        "visual", 
                        "", 
                        "", 
                        "<kbd>Esc</kbd>", 
                        "", 
                        "exit visual mode", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gw`K^Uy-13", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual &gt;", 
                        "vi", 
                        "visual&nbsp;cmd", 
                        "", 
                        "", 
                        "&gt;", 
                        "", 
                        "shift right", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I6c>nKeo~.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual &lt;", 
                        "vi", 
                        "visual&nbsp;cmd", 
                        "", 
                        "", 
                        "&lt;", 
                        "", 
                        "shift left", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xz7{{i)c-3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual y", 
                        "vi", 
                        "visual", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "copy marked text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tknLwWv$9i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual d", 
                        "vi", 
                        "visual&nbsp;cmd", 
                        "", 
                        "", 
                        "d", 
                        "", 
                        "delete marked text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B^bJI!8aZe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ~", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "~", 
                        "", 
                        "Switch case of [<code><i>count</i></code>]&nbsp;characters under cursor and move cursor to right.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x~wmNrPks", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]Y", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>Y", 
                        "", 
                        "Copy [<code><i>count</i></code>] lines [into register&nbsp;<code><i>x</i></code>]; same as <code>yy</code>.", 
                        "If you like <code>Y</code> to work from the \t\t\tcursor to the end of line (which is more logical, \t\t\tbut not Vi-compatible) use <code>:map Y y$</code>.", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BtuRLgOfXW", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]gp", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>gp", 
                        "", 
                        "put text [from register&nbsp;<code><i>x</i></code>]&nbsp;<b>after</b>&nbsp;cursor&nbsp;[<code><i>count</i></code>] times&nbsp;<b>but leave cursor just after the new text&nbsp;</b>(the&nbsp;<code>g</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KDxmIHw&48", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]y{motion}", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>y<i>{m}</i>", 
                        "", 
                        "copy {<code><i>motion</i></code>} lines [into register&nbsp;<code><i>x</i></code>]", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Mt!1@:Suxo", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]P", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>P", 
                        "", 
                        "put text [from register&nbsp;<code><i>x</i></code>]&nbsp;<b>before</b>&nbsp;cursor&nbsp;[<code><i>count</i></code>] times", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fWuQsd31+N", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]p", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>p", 
                        "", 
                        "put text [from register <code><i>x</i></code>] <b>after</b>&nbsp;cursor&nbsp;[<code><i>count</i></code>] times", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dp]f+nw}xA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]gP", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i></i><i>[\"x]</i>P", 
                        "", 
                        "put text [from register&nbsp;<code><i>x</i></code>] <b>before</b> cursor&nbsp;[<code><i>count</i></code>] times <b>but leave cursor just after the new text </b>(the <code>g</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kEH4[udF}l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]dd", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>dd", 
                        "", 
                        "Delete [<code><i>count</i></code>] lines [into register <code><i>x</i></code>]", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ur*Vm@l2=#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]d{motion}", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>d<i>{m}</i>", 
                        "", 
                        "Delete text {that <code><i>motion</i></code>&nbsp;moves over} [into register&nbsp;<code><i>x</i></code>].", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k0%}.7.%@&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]x", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>x", 
                        "", 
                        "Delete [<code>count</code>] characters under and after cursor [into register <code><i>x</i></code>]. Same as <code>dl</code> and <kbd>Del</kbd>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iDEd~>a0Z;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :w", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":w", 
                        "", 
                        "save the file (but don't exit)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GAXX+(7qfQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :wq", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":wq", 
                        "", 
                        "save current file and quit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fx6g)6I.XS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :q[uit]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":q[uit]", 
                        "", 
                        "quit (fails if anything has changed)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L=b~1]:xM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :q[uit]!", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":q[uit]!", 
                        "", 
                        "throw away changes and quit (same as <code>ZQ</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hm{o>S3lsG", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search /<i>pattern</i>", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "/<i>pattern</i>", 
                        "", 
                        "search for pattern", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LvG=sJ~ZE`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search ?<i>pattern</i>", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "?<i>pattern</i>", 
                        "", 
                        "search backward for <code>pattern</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QGSo_>&WWr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search n", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "n", 
                        "", 
                        "repeat search in same direction", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C(wn949)/r", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search N", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "N", 
                        "", 
                        "repeat search in opposite direction", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "msaB6QJKs2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search :%s/<i>old</i>/<i>new</i>/g", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":%s/<i>old</i>/<i>new</i>/g", 
                        "", 
                        "replace all <code>old</code> with <code>new</code> throughout file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Rf?m}vSv4.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search :%s/<i>old</i>/<i>new</i>/gc", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":%s/<i>old</i>/<i>new</i>/gc", 
                        "", 
                        "replace all <code>old</code> with <code>new</code> throughout file with confirmations", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z:rb]U,a:t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile :e <i>filename</i>", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":e <i>filename</i>", 
                        "", 
                        "<em>multiple files:</em><br />Edit&nbsp;<i>filename</i> in a new buffer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E7}HF[+v_7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile :bn[ext]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":bn[ext]", 
                        "", 
                        "<em>multiple files:</em><br>go to next buffer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r8|p<c3!5[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile :bprev (of :bp)", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":bp<i>[rev]</i>", 
                        "", 
                        "<em>multiple files:</em><br>go to previous buffer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KUf2:-?l3%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile :bd", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":bd", 
                        "", 
                        "<em>multiple files:</em><br>delete a buffer (close a file)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gkoI=BF1A(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile :sp", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":sp <i>file</i>", 
                        "", 
                        "<em>multiple files:</em><br />Open <code><i>file</i></code> in a new buffer and split window", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lJb8?u9F/d", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile ^w-s", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃W</kbd>s", 
                        "", 
                        "<em>multiple files:</em><br />Split windows horizontally", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KH<V}k6_fl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile ^w-w", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃W</kbd>w", 
                        "", 
                        "<em>multiple files:</em><br>switch between windows", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t:z*wXv~6p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile ^w-q", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃W</kbd>q", 
                        "", 
                        "quit a window", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t+7P>:VY_P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile ^w-v", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃W</kbd>v", 
                        "", 
                        "<em>multiple files:</em><br>Split windows vertically", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jU8loB)<jH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert ea", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "ea", 
                        "", 
                        "<em>insert mode:</em><br>append at end of word", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eG~K)VF%b7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert Esc", 
                        "vi", 
                        "insert cmd", 
                        "", 
                        "", 
                        "<kbd>Esc</kbd>", 
                        "", 
                        "exit insert mode (same as&nbsp;<kbd>⌃C</kbd>&nbsp;and&nbsp;<kbd>⌃[</kbd>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KJ^TFQ4Yrv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]&lt;Del&gt;", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i><kbd>Del</kbd>", 
                        "", 
                        "<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><!--StartFragment-->Delete character under cursor [into register <code>x</code>]. Same as <code>dl</code> and <code>x</code>. Does not take a <code>count</code>.<!--EndFragment--></p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hq4+jSiNlJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]X", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>X", 
                        "", 
                        "Delete&nbsp;[<code>count</code>]&nbsp;characters before cursor [into register&nbsp;<code><i>x</i></code>]. Same as&nbsp;<code>dh</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v4$?mnNFPK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting ZQ", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "ZQ", 
                        "", 
                        "throw away changes and quit (same as <code>:q[uit]!</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o`8NcHZx.M", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :cq[uit]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":cq[uit]", 
                        "", 
                        "<i>always</i> throw away changes and quit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dyj`lWX,g`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting ZZ", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "ZZ", 
                        "", 
                        "save current file and quit (same as <code>:wq</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AZQv23^#TS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :[range]wq[!]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":[range]wq[!]", 
                        "", 
                        "save lines in <i>range</i> in current file and quit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f{_UuXy(Ka", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :wq!", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":wq!", 
                        "", 
                        "<i>always</i> save current file and quit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KZdmU>Q@h/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :wq <i>filename</i>", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":wq", 
                        "", 
                        "save <i>filename</i> and quit if editing the last", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b^lH=n-*]z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :wq! <i>filename</i>", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":wq!", 
                        "", 
                        "save <i>filename</i> and <i>always</i> quit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oYTV.=^,{{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert :r[ead] [name]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":r[ead] <i>[name]</i>", 
                        "", 
                        "insert file <code><i>name</i></code> below cursor", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n&jRX!i9f}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert :r[ead] !{cmd}", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":r<i>[ead]</i> !<i>{cmd}</i>", 
                        "", 
                        "Execute <code><i>cmd</i></code>&nbsp;and insert its standard output below the cursor.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oOK1cx~u5Z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert gI", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "gI", 
                        "", 
                        "<em>insert mode:</em><br>Insert text in column 1 [count] times.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ydY%LO}D#[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing :e[dit]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":e[dit]", 
                        "", 
                        "Edit the current file. This is useful to re-edit the current file, when it has been changed outside of Vim.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J3[xeE|+:1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing :e[dit]!", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":e<i>dit</i>!", 
                        "", 
                        "Edit the current file always. Discard any changes to the current buffer. This is useful if you want to start all over again.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OPS`ZV,iF9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile :e! <i>filename</i>", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":e! <i>filename</i>", 
                        "", 
                        "discard any changes to current buffer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O]ZtzRWy4z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim multifile gf", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "gf", 
                        "", 
                        "Edit the file whose name is under or after the cursor.", 
                        "Mnemonic: \"goto file\".", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qMQoQed]f8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command d{motion}", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "d<i>{motion}</i>", 
                        "", 
                        "delete text <code><i>{motion}</i></code> covers", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f-$6MsNQH]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual dd", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "dd", 
                        "", 
                        "Delete [count] lines", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AiXYh;Pi0E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual D", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "D", 
                        "", 
                        "Delete the characters under the cursor until the end of the line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j$4/K_g.l1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual x", 
                        "vi", 
                        "visual", 
                        "", 
                        "", 
                        "x", 
                        "", 
                        "delete selection&nbsp;(same as&nbsp;<code>X</code>)", 
                        "This is a&nbsp;throwback to the old days of the typewriter, when you deleted things by typing&nbsp;<kbd>xxxx</kbd>&nbsp;over them.", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zq/L@8Hn{s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual {Visual}d", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "{V}d", 
                        "", 
                        "delete selection", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Kpbk,`6+_(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual X", 
                        "vi", 
                        "visual", 
                        "", 
                        "", 
                        "X", 
                        "", 
                        "delete selection (same as <code>x</code>)", 
                        "This is a&nbsp;throwback to the old days of the typewriter, when you deleted things by typing&nbsp;<kbd>xxxx</kbd>&nbsp;over them.", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "~Cdspn7b~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual D", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "{Visual}D", 
                        "", 
                        "delete selection", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vnO9L^)O{e", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual :[range]d[elete]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":[range]d[elete]", 
                        "", 
                        "Delete [range] lines (default: current line)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MpD?XUK?*C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual :[range]d[elete] {count}", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":[range]d[elete] {count}", 
                        "", 
                        "Delete {count} lines, starting with [range]", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ny0P;~*L.]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command r{char}", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "r<i>{c}</i>", 
                        "", 
                        "replace character under cursor with <code><i>c</i></code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M&iy^Y([Pf", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command R", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "R", 
                        "", 
                        "enter <b>replace mode</b>", 
                        "In Replace mode, one character in the line is deleted for every character you\ntype.  If there is no character to delete (at the end of the line), the\ntyped character is appended (as in Insert mode).  Thus the number of\ncharacters in a line stays the same until you get to the end of the line.\nIf a <nl> is typed, a line break is inserted and no character is deleted.</nl>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C?3hGGzV;2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim visual ~", 
                        "vi", 
                        "visual", 
                        "", 
                        "", 
                        "~", 
                        "", 
                        "switch case of selection", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C(54*x9Rp2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim undo-redo u", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "u", 
                        "", 
                        "Undo [count] changes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m7*2R1j!D~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim undo-redo :u[ndo]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":u[ndo]", 
                        "", 
                        "Undo one change.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pbrz/Zjb_B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim undo-redo ^R", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃R</kbd>", 
                        "", 
                        "Redo [<code><i>count</i></code>] changes which were undone.&nbsp;{Vi: redraw\n\t\t\tscreen}", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h4UZUn!XSU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim undo-redo :red[o]", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ":red[o]", 
                        "", 
                        "Redo one change which was undone. Does not take a range.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lgl~|+5I>[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim undo-redo U", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "U", 
                        "", 
                        "Undo all changes on last changed line. (Vi: while not moved off of it)", 
                        "<span class=\"kBFlUbIlDW\" id=\"NOrrtYga\"><code>U</code> is not actually a true \"undo\" command as it does not actually navigate undo history like <code>u</code> and <code>CTRL-R</code>. This means that (somewhat confusingly) <code>U</code> is itself undo-able with <code>u</code>; it creates a <i>new</i> change to reverse previous changes.&nbsp;</span>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H}yflP{_Zh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim undo-redo .", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        ".", 
                        "", 
                        "repeat last command&nbsp;<code>[count]</code>&nbsp;times", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HJ^pNV|x9,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim&nbsp;:set showmode", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":set showmode", 
                        "", 
                        "To be able to see what mode you are in, type this command.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ftMf.]r:]N", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing gJ", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "gJ", 
                        "", 
                        "like <code>J</code> but without inserting spaces", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w$#><{#fPg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :set autoindent", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":set autoindent", 
                        "", 
                        "<div>This makes Vim use the indent of the previous line for a newly created line.&nbsp;Thus there is the same amount of white space before the new line. For example&nbsp;when pressing <kbd>Enter</kbd> in <b>insert mode</b>, and when using the <code>o</code> command to open a&nbsp;new line.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lYQZT7P+f_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :set ruler", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":set ruler", 
                        "", 
                        "<div><div>Always display the current cursor position in the lower right corner of the&nbsp;Vim window.</div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xn=wq_MDa8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :set history=N", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":set history=<i>N</i>", 
                        "", 
                        "<div><div><div>Keep <code><i>N</i></code> commands and&nbsp;<code><i>N</i></code>&nbsp;search patterns in the history.</div></div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I5~l4`J{;J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :set incsearch", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":set incsearch", 
                        "", 
                        "highlight match in real time", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L(y,itS@a*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation [\"x]", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "[\"<i>x</i>]", 
                        "", 
                        "An optional register designation where text can be stored. The <code><i>x</i></code> is a single character between <code>a</code> and <code>z</code> or <code>A</code> and <code>Z</code> or <code>\"'</code>, and in some cases (with the put\n\t\tcommand) between <code>0</code> and <code>9</code>, <code>%</code>, <code>#</code>, or others.  The\n\t\tuppercase and lowercase letter designate the same register,\n\t\tbut the lowercase letter is used to overwrite the previous\n\t\tregister contents, while the uppercase letter is used to\n\t\tappend to the previous register contents.  Without the <code>\"x</code> or\n\t\twith <code>\"\"</code> the stored text is put into the unnamed register.", 
                        "<br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dx/0gIdHl]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;[]", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "[]", 
                        "", 
                        "Optional characters.", 
                        "<br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OZ-O-QA6Sd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;[count]", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "[count]", 
                        "", 
                        "An optional number that may precede the command to multiply or iterate the command. If no number is given, a count of one is used, unless otherwise noted. Note that in this manual the <code>[count]</code> is not mentioned in the description of the command, but only in the explanation. This was done to make the commands easier to look up. If the <code>showcmd</code> option is on, the (partially) entered count is shown at the bottom of the window. You can use <code>&lt;Del&gt;</code> to erase the last digit.", 
                        "<br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L=9>$n<T5h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;{}", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "{}", 
                        "", 
                        "Denote parts of the command which must appear,\n\t\tbut which can take a number of different values.", 
                        "<code></code><br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e-Mo/|(t(;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;{char1-char2}", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "{char1-char2}\t", 
                        "", 
                        "A single character from the range <i>char1</i> to <i>char2</i>.", 
                        "<code></code>For example:&nbsp;<code>{a-z}</code>&nbsp;is a lowercase letter. Multiple ranges may be concatenated. For example,&nbsp;<code>{a-zA-Z0-9}</code>&nbsp;is any alphanumeric character.", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Qjp<(?#GrL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;{motion}", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "{motion}\t", 
                        "", 
                        "<p>A command that moves the cursor. This is used after an operator command to move over the text that is to be operated upon.</p>\n<ul>\n<li style=\"text-align: left; \">If the motion includes a count and the operator also has a count, the two counts are multiplied. For example: <code>2d3w</code> deletes six words.</li>\n<li style=\"text-align: left; \">The motion can be backwards, e.g. <code>db</code> to delete to the start of the word.</li>\n<li style=\"text-align: left; \">The motion can also be a mouse click. The mouse is not supported in every terminal though.</li>\n<li style=\"text-align: left; \">The <code>:omap</code> command can be used to map characters while an operator is pending.</li>\n<li style=\"text-align: left; \">Ex commands can be used to move the cursor. This can be used to call a function that does some complicated motion. The motion is always characterwise exclusive, no matter what \":\" command is used. This means it's impossible to include the last character of a line without the line break (unless <code>virtualedit</code> is set). If the Ex command changes the text before where the operator starts or jumps to another buffer the result is unpredictable. It is possible to change the text further down. Jumping to another buffer is possible if the current buffer is not unloaded.</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU2MTgwNDQsICJpZCI6ICIxNDk1NjE3MjY2NDg1LTAwNiIsICJtZCI6ICJBIGNvbW1hbmQgdGhhdCBtb3ZlcyB0aGUgY3Vyc29yLiBUaGlzIGlzIHVzZWQgYWZ0ZXIgYW4gb3BlcmF0b3IgY29tbWFuZCB0byBtb3ZlIG92ZXIgdGhlIHRleHQgdGhhdCBpcyB0byBiZSBvcGVyYXRlZCB1cG9uLlxuICBcbiogSWYgdGhlIG1vdGlvbiBpbmNsdWRlcyBhIGNvdW50IGFuZCB0aGUgb3BlcmF0b3IgYWxzbyBoYXMgYSBjb3VudCwgdGhlIHR3byBjb3VudHMgYXJlIG11bHRpcGxpZWQuIEZvciBleGFtcGxlOiBgMmQzd2AgZGVsZXRlcyBzaXggd29yZHMuXG4qIFRoZSBtb3Rpb24gY2FuIGJlIGJhY2t3YXJkcywgZS5nLiBgZGJgIHRvIGRlbGV0ZSB0byB0aGUgc3RhcnQgb2YgdGhlIHdvcmQuXG4qIFRoZSBtb3Rpb24gY2FuIGFsc28gYmUgYSBtb3VzZSBjbGljay4gVGhlIG1vdXNlIGlzIG5vdCBzdXBwb3J0ZWQgaW4gZXZlcnkgdGVybWluYWwgdGhvdWdoLlxuKiBUaGUgYDpvbWFwYCBjb21tYW5kIGNhbiBiZSB1c2VkIHRvIG1hcCBjaGFyYWN0ZXJzIHdoaWxlIGFuIG9wZXJhdG9yIGlzIHBlbmRpbmcuXG4qIEV4IGNvbW1hbmRzIGNhbiBiZSB1c2VkIHRvIG1vdmUgdGhlIGN1cnNvci4gVGhpcyBjYW4gYmUgdXNlZCB0byBjYWxsIGEgZnVuY3Rpb24gdGhhdCBkb2VzIHNvbWUgY29tcGxpY2F0ZWQgbW90aW9uLiBUaGUgbW90aW9uIGlzIGFsd2F5cyBjaGFyYWN0ZXJ3aXNlIGV4Y2x1c2l2ZSwgbm8gbWF0dGVyIHdoYXQgJnF1b3Q7OiZxdW90OyBjb21tYW5kIGlzIHVzZWQuIFRoaXMgbWVhbnMgaXQmYXBvcztzIGltcG9zc2libGUgdG8gaW5jbHVkZSB0aGUgbGFzdCBjaGFyYWN0ZXIgb2YgYSBsaW5lIHdpdGhvdXQgdGhlIGxpbmUgYnJlYWsgKHVubGVzcyBgdmlydHVhbGVkaXRgIGlzIHNldCkuIElmIHRoZSBFeCBjb21tYW5kIGNoYW5nZXMgdGhlIHRleHQgYmVmb3JlIHdoZXJlIHRoZSBvcGVyYXRvciBzdGFydHMgb3IganVtcHMgdG8gYW5vdGhlciBidWZmZXIgdGhlIHJlc3VsdCBpcyB1bnByZWRpY3RhYmxlLiBJdCBpcyBwb3NzaWJsZSB0byBjaGFuZ2UgdGhlIHRleHQgZnVydGhlciBkb3duLiBKdW1waW5nIHRvIGFub3RoZXIgYnVmZmVyIGlzIHBvc3NpYmxlIGlmIHRoZSBjdXJyZW50IGJ1ZmZlciBpcyBub3QgdW5sb2FkZWQuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p?&L;zNL@v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;{Visual}", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "{Visual}\t", 
                        "", 
                        "A selected text area.  It is started with the <code>v</code>, <code>V</code>, or <kbd>^V</kbd>&nbsp;command, then any cursor movement command can be used\n\t\tto change the end of the selected text.\n\t\tThis is used before an operator command to highlight the\n\t\ttext that is to be operated upon.", 
                        "<code></code><br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O=5|+xKWs(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;&lt;character&gt;", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "&lt;character&gt;\t", 
                        "", 
                        "A special character from the table below, optionally with\n\t\tmodifiers, or a single ASCII character with modifiers.", 
                        "<code></code><br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k#kb9lHaFl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;'c'", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "'c'\t", 
                        "", 
                        "A single ASCII character.", 
                        "<code></code><br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oeWe-Tgo]h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation CTRL-{char}", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "<kbd>^{c}</kbd> ", 
                        "", 
                        "<code>{char}</code> typed as a control character; that is, typing <code>{char}</code><br>\t\twhile holding the <kbd>CTRL</kbd> key down.  The case of <code>{char}</code> does not<br>\t\tmatter; thus&nbsp;<kbd>CTRL+A</kbd>&nbsp;and&nbsp;<kbd>CTRL+a</kbd>&nbsp;are equivalent.  But on some<br>\t\tterminals, using the <kbd>SHIFT</kbd> key will produce another code,<br>\t\tdon’t use it then.", 
                        "<code></code><br>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ichc~Zx}05", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;'option'", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "'option'\t", 
                        "", 
                        "An option, or parameter, that can be set to a value.", 
                        "<code></code><br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ENPb|{;H>#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim help notation&nbsp;\"command\"", 
                        "vim", 
                        "help notation", 
                        "", 
                        "", 
                        "\"command\"\t", 
                        "", 
                        "A reference to a command that you can type.", 
                        "<code></code><br />", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E=-7f#@WNF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim g8", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "g8", 
                        "", 
                        "Print the hex values of the bytes used in the\n\t\t\tcharacter under the cursor, assuming it is in UTF-8 encoding.  This also shows composing characters.  The\n\t\t\tvalue of <code>maxcombine</code> doesn't matter.", 
                        "Example of a character with two composing characters:<div><br /></div><div>e0 b8 81 + e0 b8 b9 + e0 b9 89</div><div><br /></div><div>{not in Vi}</div><div>{only when compiled with the <code>+multi_byte</code> feature}</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bqrCsWBk7O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim 8g8", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "8g8", 
                        "", 
                        "Find an illegal UTF-8 byte sequence at or after the\n\t\t\tcursor.  This works in two situations:<div><br /></div><div>1. when <code>encoding</code> is any 8-bit encoding</div><div>2. when <code>encoding</code> is <code>utf-8</code> and <code>fileencoding</code> is\n\t\t\t   any 8-bit encoding</div><div><br /></div><div>Thus it can be used when editing a file that was\n\t\t\tsupposed to be UTF-8 but was read as if it is an 8-bit\n\t\t\tencoding because it contains illegal bytes.\n\t\t\tDoes not wrap around the end of the file.\n\t\t\tNote that when the cursor is on an illegal byte or the\n\t\t\tcursor is halfway a multi-byte character the command\n\t\t\twon't move the cursor.</div>", 
                        "<div>{not in Vi}</div><div>{only when compiled with the <code>+multi_byte</code> feature}</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N$<|Sh-}T}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim&nbsp;:!{cmd}", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":!<i>{cmd}</i>", 
                        "", 
                        "Execute <code><i>cmd</i></code>&nbsp;with the shell.  See also the <code> shell</code> and <code>shelltype</code> option.\n\t\t\tAny <code>!</code> in <code><i>cmd</i></code>&nbsp;is replaced with the previous\n\t\t\texternal command (see also <code>cpoptions</code>).  But not when\n\t\t\tthere is a backslash before the <code>!</code>, then that\n\t\t\tbackslash is removed.<div><br /></div><div>Example: <code>:!ls</code> followed by <code>:!echo ! \\! \\\\!</code> executes <code>echo ls ! \\!</code>.\n\t\t\tAfter the command has been executed, the timestamp of\n\t\t\tthe current file is checked.\n\t\t\tA <code>|</code> in <code><i>cmd</i></code>&nbsp;is passed to the shell, you cannot use\n\t\t\tit to append a Vim command. A newline character ends <code><i>cmd</i></code>, what follows is\n\t\t\tinterpreted as a following <code>:</code> command.  However, if\n\t\t\tthere is a backslash before the newline it is removed\n\t\t\tand <code><i>cmd</i></code>&nbsp;continues.  It doesn't matter how many\n\t\t\tbackslashes are before the newline, only one is\n\t\t\tremoved.\n\t\t\tOn Unix the command normally runs in a non-interactive\n\t\t\tshell.  If you want an interactive shell to be used\n\t\t\t(to use aliases) set <code>shellcmdflag</code> to <code>-ic</code>. Vim redraws the screen after the command is finished,\n\t\t\tbecause it may have printed any text.  This requires a\n\t\t\thit-enter prompt, so that you can read any messages.\n\t\t\tTo avoid this use:\n\t\t\t\t<code>:silent !<i>{cmd}</i></code>&nbsp;The screen is not redrawn then, thus you have to use&nbsp;<kbd>⌃L</kbd>&nbsp;or <code>:redraw!</code> if the command did display\n\t\t\tsomething.</div>", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n#F@/<^OF!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim&nbsp;:!!", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":!!", 
                        "", 
                        "Repeat last <code>:!{cmd}</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qArV*9@k!)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<b>stdout</b> represented by this number", 
                        "", 
                        "1", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yM*i7d+&)H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<b>stderr</b>&nbsp;represented by this number", 
                        "", 
                        "2", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eOvnEFXc)w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<!--anki-->redirect&nbsp;<b>stderr</b>&nbsp;to file", 
                        "", 
                        "<code>... 2&gt; <i>file</i></code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">grep da * 2&gt; grep-errors.txt\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU3MzU4MjIsICJpZCI6ICIxNDk1NzM1NTg1MzAwLTAwMiIsICJtZCI6ICIgICAgZ3JlcCBkYSAqIDImZ3Q7IGdyZXAtZXJyb3JzLnR4dFxuIn0=---->", 
                        "y", 
                        "", 
                        "http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-3.html"
                    ], 
                    "flags": 0, 
                    "guid": "lzQBCKZe,w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<!--anki-->redirect&nbsp;<b>stdout</b>&nbsp;to file", 
                        "", 
                        "<code>... &gt; <i>file</i></code>", 
                        "", 
                        "<div><code>ls -l &gt; ls-l.txt</code></div>", 
                        "y", 
                        "", 
                        "http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-3.html"
                    ], 
                    "flags": 0, 
                    "guid": "CH+QLafD0i", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<!--anki-->redirect&nbsp;<b>stdout</b>&nbsp;to&nbsp;<b>stderr</b>", 
                        "", 
                        "<code>...&nbsp;1&gt;&amp;2</code>", 
                        "", 
                        "<div><code>grep da * 1&gt;&amp;2</code></div>", 
                        "y", 
                        "", 
                        "http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-3.html"
                    ], 
                    "flags": 0, 
                    "guid": "bIuo@CHQ1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<!--anki-->redirect&nbsp;<b>stderr</b>&nbsp;to&nbsp;<b>stdout</b>", 
                        "", 
                        "<code>... 2&gt;&amp;1</code>", 
                        "", 
                        "<code>grep * 2&gt;&amp;1</code><div><br /></div><div>Here, the <i>stderr</i> portion of the command is sent to <i>stdout</i>, if you pipe to <code>less</code>, you'll see that lines that normally ‘disappear’ (as they are written to <i>stderr</i>) are being kept now (because they’re on <i>stdout</i>).&nbsp;</div>", 
                        "y", 
                        "", 
                        "http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-3.html"
                    ], 
                    "flags": 0, 
                    "guid": "yn<*rO!-Sz", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<!--anki-->redirect&nbsp;<b>stderr</b>&nbsp;and&nbsp;<b>stdout</b>&nbsp;to <b>file</b>", 
                        "", 
                        "<code>... &amp;&gt;&nbsp;<i>file</i></code>", 
                        "", 
                        "<div>This will place every output of a program to a file. This is suitable sometimes for cron entries, if you want a command to pass in absolute silence.</div><div><br /></div><div><code>rm -f $(find / -name core) &amp;&gt; /dev/null&nbsp;</code></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>This (thinking on the cron entry) will delete every file <code>core</code> in any directory. Notice that you should be pretty sure of what a command is doing if you are going to wipe its output.</div>", 
                        "y", 
                        "", 
                        "http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-3.html"
                    ], 
                    "flags": 0, 
                    "guid": "v:$}u@6gqU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code>file</code> containing <code>pattern</code> using <code>awk</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">awk <span style=\"color: #ed9d13\">'!/pattern/'</span> file &gt; temp <span style=\"color: #d0d0d0\">&amp;&amp;</span>\n    mv temp file\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEyNzEyNDEsICJpZCI6ICIxNDk1NzM2MzU0MzIyLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGF3ayAmYXBvczshL3BhdHRlcm4vJmFwb3M7IGZpbGUgJmd0OyB0ZW1wICZhbXA7JmFtcDtcbiAgICAgICAgbXYgdGVtcCBmaWxlXG4ifQ==---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/a/5413132/172602"
                    ], 
                    "flags": 0, 
                    "guid": "k/FNdXm>O$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code><i>file</i></code> containing <code><i>pattern</i></code> using Ruby", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">ruby -i.bak -ne <span style=\"color: #ed9d13\">'print if not /<i>pattern</i>/'</span> <i>file</i>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE0NDM1NzgsICJpZCI6ICIxNDk1NzM2NDk1MDEyLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHJ1YnkgLWkuYmFrIC1uZSAmYXBvcztwcmludCBpZiBub3QgL3BhdHRlcm4vJmFwb3M7IGZpbGVcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/a/5413132/172602"
                    ], 
                    "flags": 0, 
                    "guid": "J|6,cpBnnt", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code>file</code> containing <code>pattern</code> using <code>perl</code>", 
                        "", 
                        "<code>perl -ni.bak -e \"print unless /pattern/\" file</code>", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/a/5413132/172602"
                    ], 
                    "flags": 0, 
                    "guid": "budRcZ?MY~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code>file</code> containing <code>pattern</code> using <code>bash</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">while</span> <span style=\"color: #24909d\">read</span> -r line\n<span style=\"color: #6ab825; font-weight: bold\">do</span>\n  <span style=\"color: #d0d0d0\">[[</span> ! <span style=\"color: #40ffff\">$s</span> <span style=\"color: #d0d0d0\">=</span>~ pattern <span style=\"color: #d0d0d0\">]]</span> <span style=\"color: #d0d0d0\">&amp;&amp;</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"</span><span style=\"color: #40ffff\">$line</span><span style=\"color: #ed9d13\">\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">done</span> &lt;file &gt; o\nmv o file\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU3MzY1ODYsICJpZCI6ICIxNDk1NzM2NTQyMDc0LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHdoaWxlIHJlYWQgLXIgbGluZVxuICAgIGRvXG4gICAgICBbWyAhICRzID1+IHBhdHRlcm4gXV0gJmFtcDsmYW1wOyBlY2hvICZxdW90OyRsaW5lJnF1b3Q7XG4gICAgZG9uZSAmbHQ7ZmlsZSAmZ3Q7IG9cbiAgICBtdiBvIGZpbGVcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/a/5413132/172602"
                    ], 
                    "flags": 0, 
                    "guid": "Qd/kH$WBx,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code>file</code> containing <code>pattern</code> using GNU&nbsp;<code>grep</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">grep -v <span style=\"color: #ed9d13\">\"PATTERN\"</span> FILE &gt; temp<span style=\"color: #d0d0d0\">;</span>\nmv temp FILE\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA5NTE2MTMsICJpZCI6ICIxNDk1NzM2NjAwMTYzLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGdyZXAgLXYgJnF1b3Q7UEFUVEVSTiZxdW90OyBGSUxFICZndDsgdGVtcDtcbiAgICBtdiB0ZW1wIEZJTEVcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/a/5413132/172602"
                    ], 
                    "flags": 0, 
                    "guid": "Hn1BTcQC4}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code>file</code> containing <code>pattern</code> using&nbsp;<code>sed</code>", 
                        "", 
                        "<div><code>sed -i '/<i>pattern</i>/d' <i>file</i></code></div><div><code>sed -n '/<i>pattern</i>/!p' <i>file</i></code></div><div><br /></div><div>(printing the inverse is faster than actual deletion)</div><div><br /></div><div>the sed example have a different behaviour, it only greps! it should be something like <code>sed -n -i '/<i>pattern</i>/!p' <i>file</i></code></div>", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/a/5413132/172602"
                    ], 
                    "flags": 0, 
                    "guid": "q(-zpon?:7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "portable temp dir", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #40ffff\">mytmpdir</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">`</span>mktemp -d 2&gt;/dev/null <span style=\"color: #d0d0d0\">||</span> mktemp -d -t <span style=\"color: #ed9d13\">'mytmpdir'`</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYxNTg3NTYsICJpZCI6ICIxNDk1NzQxNjE1MDcyLTAwMSIsICJtZCI6ICIgICAgOjo6c2ggIFxuICAgIG15dG1wZGlyPWBta3RlbXAgLWQgMiZndDsvZGV2L251bGwgfHwgbWt0ZW1wIC1kIC10ICZhcG9zO215dG1wZGlyJmFwb3M7YFxuIn0=---->", 
                        "", 
                        "The following is what I ended up using to reliably create a temporary directory that works on both Linux and Darwin (all versions before Mac OS X 10.11), without hardcoding&nbsp;<code>$TMPDIR</code>&nbsp;or&nbsp;<code>/tmp</code>:<pre class=\"lang-sh prettyprint prettyprinted\"></pre><h3>Background:</h3><p>The GNU mktemp command requires no arguments. Plain&nbsp;<code>mktemp</code>&nbsp;will create a temporary file in the system temporary directory.</p><p>Plain&nbsp;<code>mktemp -d</code>&nbsp;will create a temporary directory, which is what you'd want to use on Linux.</p><pre class=\"lang-sh prettyprint prettyprinted\"><code><span class=\"pun\">(</span><span class=\"pln\">gnu</span><span class=\"pun\">-</span><span class=\"pln\">coreutils</span><span class=\"pun\">)</span><span class=\"pln\">$ man mktemp\n</span><span class=\"com\"># If DIR is not specified, uses $TMPDIR if set, else /tmp.</span></code></pre><p>By default it uses template&nbsp;<code>tmp.XXXXXXXXXX</code>&nbsp;expanded relative to the default temporary directory.</p><p>OSX's mktemp command requires this template, it has no default. The syntax for the template on OSX is compatible with that of GNU's. OSX's mktemp has a&nbsp;<code>-t</code>&nbsp;option that means something else. The&nbsp;<code>-t</code>&nbsp;option is documented as \"prefix\". It is expanded to&nbsp;<code>$TMPDIR/{prefix}.XXXXXXXX</code>, so it adds the Xs to it automatically (e.g.&nbsp;<code>mktemp -d -t example</code>&nbsp;could create&nbsp;<code>$TMPDIR/example.zEJZWCTQ</code>).</p><p>I was surprised to find that in various Linux environments&nbsp;<code>$TMPDIR</code>&nbsp;is&nbsp;<strong>not</strong>&nbsp;set by default (many tools support it when set, but still have to default to&nbsp;<code>/tmp</code>). Which meant passing&nbsp;<code>$TMPDIR/example.XXXXXXXX</code>&nbsp;to mktemp or mkdir was not an option (as it would cause the path to end up as a subdirectory of the root directory).</p><p>On OSX&nbsp;<code>$TMPDIR</code>&nbsp;is always set and (at least in the default shell) it is not set to&nbsp;<code>/tmp</code>&nbsp;(which is a symlink to&nbsp;<code>/private/tmp</code>) but to&nbsp;<code>/var/folders/dx/*****_*************/T</code>. So we should honour that if we can.</p><p>In conclusion the following is what I ended up using to reliably create a temporary directory that works on both Linux and Darwin (Mac OS X), without hardcoding&nbsp;<code>$TMPDIR</code>&nbsp;or&nbsp;<code>/tmp</code>:</p><pre class=\"lang-sh prettyprint prettyprinted\"><code><span class=\"pln\">mytmpdir</span><span class=\"pun\">=</span><span class=\"str\">`mktemp -d 2&gt;/dev/null || mktemp -d -t 'mytmpdir'`</span></code></pre><p>The first part is for Linux. This command will fail on Darwin (Mac OS X) with error status code&nbsp;<code>1</code>&nbsp;responding with \"usage: ...\". That's why we ignore stderr and instead then execute the Mac variant. The&nbsp;<code>mytmpdir</code>&nbsp;prefix is only used on Mac.</p>", 
                        "", 
                        "", 
                        "https://unix.stackexchange.com/a/84980/39419"
                    ], 
                    "flags": 0, 
                    "guid": "c:(pJD|DTR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>open</code> from pipe", 
                        "", 
                        "The <code>-f</code> command takes input from a STDIN pipe, creates a temporary file with it, then opens that in the specified app. You may have seen this yesterday in my tip for opening man pages in Preview. That trick uses PostScript output, but you can do the same with any type of data. Here’s a trick for pasting your current clipboard text to Marked.\n<div class=\"bogus-wrapper\"><notextile><figure class=\"code\"><figcaption><span></span></figcaption><div class=\"highlight\"><pre><code class=\"bash\"><span class=\"line\">pbpaste | open -f -a Marked<span class=\"se\">\\ </span>2\n</span></code></pre></div></figure></notextile></div>\n<p>Of course, Marked 2 can do that with just ⌘⇧V, so it’s less handy. Here’s a better one: combine a bunch of Markdown files in a folder into one temporary document with Markdown horizontal rules between them. I use this to quickly view all of my QuickQuestion answers from my nvALT folder (these filenames always start with “??”, adjust as needed):</p>\n<div class=\"bogus-wrapper\"><notextile><figure class=\"code\"><figcaption><span></span></figcaption><div class=\"highlight\"><pre><code class=\"bash\"><span class=\"line\">awk <span class=\"s1\">'FNR==1{print \"\\n---\\n\"}1'</span> <span class=\"se\">\\?\\?</span>*.md | open -f -a Marked<span class=\"se\">\\ </span>2\n</span></code></pre></div></figure></notextile></div>\n<p><span class=\"pullquote left\" data-pullquote=\"The awk trick is kind of cool on its own\">\nThe <code>awk</code> trick is kind of cool on its own. When you just use <code>cat</code>, you don’t get any separation between files, meaning that using it for Markdown output isn’t great. The command <code>awk 'FNR==1{print \"\\n---\\n1'</code> will take all of the input files and print them with <code>---</code> and newlines (or whatever you specify in the print command) between each one.</span></p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "http://brettterpstra.com/2014/08/06/shell-tricks-the-os-x-open-command/"
                    ], 
                    "flags": 0, 
                    "guid": "HEGEXxIYJc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "detecting file moves &amp; renames with <code>rsync</code>", 
                        "", 
                        "<p>There is a <code>––fuzzy</code> option to save bandwidth by building upon similar files on the target side, but only in the same directory. </p>\n<p>Do standard sync, then locally copy the tree as hardlinks, then sync both so hardlinks point correctly, then move.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEwNTcyNTEsICJpZCI6ICIxNDk1NzgzNzc3MzI1LTAwMiIsICJtZCI6ICJUaGVyZSBpcyBhIGBcdTIwMTNcdTIwMTNmdXp6eWAgb3B0aW9uIHRvIHNhdmUgYmFuZHdpZHRoIGJ5IGJ1aWxkaW5nIHVwb24gc2ltaWxhciBmaWxlcyBvbiB0aGUgdGFyZ2V0IHNpZGUsIGJ1dCBvbmx5IGluIHRoZSBzYW1lIGRpcmVjdG9yeS4gXG4gIFxuRG8gc3RhbmRhcmQgc3luYywgdGhlbiBsb2NhbGx5IGNvcHkgdGhlIHRyZWUgYXMgaGFyZGxpbmtzLCB0aGVuIHN5bmMgYm90aCBzbyBoYXJkbGlua3MgcG9pbnQgY29ycmVjdGx5LCB0aGVuIG1vdmUuXG4ifQ==---->", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avHP --delete-after ~/family/Photos remotebox:backups\n<span style=\"color: #24909d\">cd</span> ~/family\ncp -rlp Photos Photos-work\nrsync -avHP --delete-after --no-inc-recursive ~/family/Photos ~/family/Photos-work remotebox:backups\n</pre></div>\n<p>Finalize by:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">mv Photos Photos-OLD\nmv Photos-work Photos\n</pre></div>\n<ul>\n<li style=\"text-align: left; \">\n<blockquote>\n<p>I use a derivative of this method, by creating a separate hard-links directory with md5-filenames. This gets rid of any duplicate files as well. Any files in this hard links directory with link count 1 are removed. Any files in the albums tree without the same inode to be found in the hard links tree are hard-linked into the hard links tree by using an MD5 of the file. Before I rsync I update the hard links dir, so when my wife decides to make a beautiful photobook and copies and moves lots of photos around, my ADSL doesn't get swamped when backing up my local photo store.</p>\n</blockquote>\n</li>\n<li style=\"text-align: left; \">\n<blockquote>\n<p>I started out with a reorganized source directory, and to avoid a big copy to get the destination the same, I did something similar to this. I made a local hard-link copy of the source as described, then flattened the original and the remote copy with <code>find in -type f -print0 | xargs -0 mv -n -t flat</code>. This skips flattening files of the same name, which will just be recopied during the sync (most had unique names so this recopy was minor). Then I did as described in this blog entry and avoided a massive copy. At this point I then had original and copy in sync, so could in the future do as the blog describes.</p>\n</blockquote>\n</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU3ODQ0MDksICJpZCI6ICIxNDk1NzgzNzc3MzI1LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHJzeW5jIC1hdkhQIC0tZGVsZXRlLWFmdGVyIH4vZmFtaWx5L1Bob3RvcyByZW1vdGVib3g6YmFja3Vwc1xuICAgIGNkIH4vZmFtaWx5XG4gICAgY3AgLXJscCBQaG90b3MgUGhvdG9zLXdvcmtcbiAgICByc3luYyAtYXZIUCAtLWRlbGV0ZS1hZnRlciAtLW5vLWluYy1yZWN1cnNpdmUgfi9mYW1pbHkvUGhvdG9zIH4vZmFtaWx5L1Bob3Rvcy13b3JrIHJlbW90ZWJveDpiYWNrdXBzXG4gIFxuRmluYWxpemUgYnk6XG4gIFxuICAgIDo6OmJhc2hcbiAgICBtdiBQaG90b3MgUGhvdG9zLU9MRFxuICAgIG12IFBob3Rvcy13b3JrIFBob3Rvc1xuICBcbiAgXG4qICZndDsgSSB1c2UgYSBkZXJpdmF0aXZlIG9mIHRoaXMgbWV0aG9kLCBieSBjcmVhdGluZyBhIHNlcGFyYXRlIGhhcmQtbGlua3MgZGlyZWN0b3J5IHdpdGggbWQ1LWZpbGVuYW1lcy4gVGhpcyBnZXRzIHJpZCBvZiBhbnkgZHVwbGljYXRlIGZpbGVzIGFzIHdlbGwuIEFueSBmaWxlcyBpbiB0aGlzIGhhcmQgbGlua3MgZGlyZWN0b3J5IHdpdGggbGluayBjb3VudCAxIGFyZSByZW1vdmVkLiBBbnkgZmlsZXMgaW4gdGhlIGFsYnVtcyB0cmVlIHdpdGhvdXQgdGhlIHNhbWUgaW5vZGUgdG8gYmUgZm91bmQgaW4gdGhlIGhhcmQgbGlua3MgdHJlZSBhcmUgaGFyZC1saW5rZWQgaW50byB0aGUgaGFyZCBsaW5rcyB0cmVlIGJ5IHVzaW5nIGFuIE1ENSBvZiB0aGUgZmlsZS4gQmVmb3JlIEkgcnN5bmMgSSB1cGRhdGUgdGhlIGhhcmQgbGlua3MgZGlyLCBzbyB3aGVuIG15IHdpZmUgZGVjaWRlcyB0byBtYWtlIGEgYmVhdXRpZnVsIHBob3RvYm9vayBhbmQgY29waWVzIGFuZCBtb3ZlcyBsb3RzIG9mIHBob3RvcyBhcm91bmQsIG15IEFEU0wgZG9lc24mYXBvczt0IGdldCBzd2FtcGVkIHdoZW4gYmFja2luZyB1cCBteSBsb2NhbCBwaG90byBzdG9yZS5cbiogJmd0OyBJIHN0YXJ0ZWQgb3V0IHdpdGggYSByZW9yZ2FuaXplZCBzb3VyY2UgZGlyZWN0b3J5LCBhbmQgdG8gYXZvaWQgYSBiaWcgY29weSB0byBnZXQgdGhlIGRlc3RpbmF0aW9uIHRoZSBzYW1lLCBJIGRpZCBzb21ldGhpbmcgc2ltaWxhciB0byB0aGlzLiBJIG1hZGUgYSBsb2NhbCBoYXJkLWxpbmsgY29weSBvZiB0aGUgc291cmNlIGFzIGRlc2NyaWJlZCwgdGhlbiBmbGF0dGVuZWQgdGhlIG9yaWdpbmFsIGFuZCB0aGUgcmVtb3RlIGNvcHkgd2l0aCBgZmluZCBpbiAtdHlwZSBmIC1wcmludDAgfCB4YXJncyAtMCBtdiAtbiAtdCBmbGF0YC4gVGhpcyBza2lwcyBmbGF0dGVuaW5nIGZpbGVzIG9mIHRoZSBzYW1lIG5hbWUsIHdoaWNoIHdpbGwganVzdCBiZSByZWNvcGllZCBkdXJpbmcgdGhlIHN5bmMgKG1vc3QgaGFkIHVuaXF1ZSBuYW1lcyBzbyB0aGlzIHJlY29weSB3YXMgbWlub3IpLiBUaGVuIEkgZGlkIGFzIGRlc2NyaWJlZCBpbiB0aGlzIGJsb2cgZW50cnkgYW5kIGF2b2lkZWQgYSBtYXNzaXZlIGNvcHkuIEF0IHRoaXMgcG9pbnQgSSB0aGVuIGhhZCBvcmlnaW5hbCBhbmQgY29weSBpbiBzeW5jLCBzbyBjb3VsZCBpbiB0aGUgZnV0dXJlIGRvIGFzIHRoZSBibG9nIGRlc2NyaWJlcy5cbiJ9---->", 
                        "", 
                        "", 
                        "https://lincolnloop.com/blog/detecting-file-moves-renames-rsync/"
                    ], 
                    "flags": 0, 
                    "guid": "xo15ZH#;m;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls exit status 0", 
                        "ls", 
                        "exit status", 
                        "", 
                        "", 
                        "0", 
                        "", 
                        "OK", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K<z5P-:&MU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls exit status 1", 
                        "ls", 
                        "exit status", 
                        "", 
                        "", 
                        "1", 
                        "", 
                        "minor problems (e.g., cannot access subdirectory)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IkTQA&S:32", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls exit status 2", 
                        "ls", 
                        "exit status", 
                        "", 
                        "", 
                        "2", 
                        "", 
                        "serious trouble (e.g., cannot access command-line\n              argument)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A/S3(/)|$b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls", 
                        "<div>ls</div>", 
                        "<div><br /></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "List information about the FILEs (the current directory by default).\n       Sort entries alphabetically if none of <code>-cftuvSUX</code> nor <code>--sort</code> is\n       specified.", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "LF1`K&OMX`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls color", 
                        "ls", 
                        "", 
                        "", 
                        "--color[=<i>WHEN</i>]", 
                        "", 
                        "", 
                        "colorize the output; <i><code>WHEN</code></i> can be <code>always</code> (default if\n              omitted), <code>auto</code>, or <code>never</code>;        Using color to distinguish file types is disabled both by default and\n       with&nbsp;<code>--color=<i>never</i></code>.  With&nbsp;<code>--color=<i>auto</i></code>, <code>ls</code> emits color codes only\n       when standard output is connected to a terminal.  The <code>LS_COLORS</code>\n       environment variable can change the settings.  Use the <code>dircolors</code>\n       command to set it.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J3}o5r[E^W", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls block-size", 
                        "ls", 
                        "", 
                        "", 
                        "--block-size=<i>SIZE</i>", 
                        "", 
                        "", 
                        "scale sizes by <code><i>SIZE</i></code> before printing them; e.g., <code><strike>--block-size</strike>=M</code> prints sizes in units of 1,048,576 bytes; The <code><i>SIZE</i></code> argument is an integer and optional unit (example: <code>10K</code> is\n       10*1024).  Units are <code>K,M,G,T,P,E,Z,Y</code> (powers of 1024) or <code>KB,MB,...</code>\n       (powers of 1000).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HV0b5%kp~w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -a", 
                        "ls", 
                        "", 
                        "-a", 
                        "--all", 
                        "", 
                        "", 
                        "do not ignore entries starting with <code>.</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c?|lHN`NXu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -A", 
                        "ls", 
                        "", 
                        "-A", 
                        "--almost-all", 
                        "", 
                        "", 
                        "do not list implied <code>.</code> and <code>..</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f-UpM/p.BU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --author", 
                        "ls", 
                        "", 
                        "", 
                        "--author", 
                        "", 
                        "", 
                        "with <code>-l</code>, print the author of each file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H=}}k;?1d:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -b", 
                        "ls", 
                        "", 
                        "-b", 
                        "--escape", 
                        "", 
                        "", 
                        "print C-style escapes for nongraphic characters", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d3!JOZg^k>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -B", 
                        "ls", 
                        "", 
                        "-B", 
                        "--ignore-backups", 
                        "", 
                        "", 
                        "do not list implied entries ending with <code>~</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H32dYUu=^[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -c", 
                        "ls", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "", 
                        "with <code>-lt</code>: sort by, and show, ctime (time of last modification of file status information); with <code>-l</code>: show ctime and sort by name; otherwise: sort by ctime, newest first", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QPAVN<F/}Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -C", 
                        "ls", 
                        "", 
                        "-C", 
                        "", 
                        "", 
                        "", 
                        "list entries by columns", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pd&H|!sW_;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -d", 
                        "ls", 
                        "", 
                        "-d", 
                        "--directory", 
                        "", 
                        "", 
                        "list directories themselves, not their contents", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cx2>3]UWmR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -D", 
                        "ls", 
                        "", 
                        "-D", 
                        "--dired", 
                        "", 
                        "", 
                        "generate output designed for Emacs' dired mode", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qT4Vt0EH@#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -f", 
                        "ls", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "", 
                        "do not sort, enable <code>-aU</code>, disable <code>-ls --color</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mMo?D$FWj5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F", 
                        "ls", 
                        "", 
                        "-F", 
                        "--classify", 
                        "", 
                        "", 
                        "append indicator (one of <code>*/=&gt;@|</code>) to entries", 
                        "<ul>\n<li><code>@</code> means symbolic link (or that the file has extended attributes).</li>\n<li><code>*</code> means executable.</li>\n<li><code>=</code> means socket.</li>\n<li><code>|</code> means named pipe.</li>\n<li><code>&gt;</code> means door.</li>\n<li><code>/</code> means directory.</li></ul>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gd_N7G/o}(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --file-type", 
                        "ls", 
                        "", 
                        "", 
                        "--file-type", 
                        "", 
                        "", 
                        "like <code>--classify</code> except do not append <code></code><code>*</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ck1>3&=e;B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --format", 
                        "ls", 
                        "", 
                        "", 
                        "--format=<i>WORD</i>", 
                        "", 
                        "", 
                        "<code>across</code> (<code>-x</code>), <code>commas</code> (<code>-m</code>), <code>horizontal</code> (<code>-x</code>), <code>long</code> (<code>-l</code>), <code>single-column</code> (<code>-1</code>), <code>verbose</code> (<code>-l</code>), <code>vertical</code> (<code>-C</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hn4_ZqVds_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -1", 
                        "ls", 
                        "", 
                        "-1", 
                        "", 
                        "", 
                        "", 
                        "list one file per line.  Avoid <code>\\n</code> with <code>-q</code>&nbsp;or <code>-b</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BTa:y=!Q6}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --full-time", 
                        "ls", 
                        "", 
                        "", 
                        "--full-time", 
                        "", 
                        "", 
                        "like <code>-l --time-style</code><code>=full-iso</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j3?E$vwb~7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -g", 
                        "ls", 
                        "", 
                        "-g", 
                        "", 
                        "", 
                        "", 
                        "like <code>-l</code>, but do not list owner", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": ".Ulp/M_O!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --group-directories-first", 
                        "ls", 
                        "", 
                        "", 
                        "--group-directories-first", 
                        "", 
                        "", 
                        "group directories before files; can be augmented with a <code>--sort </code> option, but any use of --sort=<i>none</i> (<code>-U</code>) disables grouping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z/9=dPm]Ii", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --sort", 
                        "ls", 
                        "", 
                        "", 
                        "--sort=<i>WORD</i>", 
                        "", 
                        "", 
                        "sort by WORD instead of name: none (<code>-U</code>), size (<code>-S</code>), time (<code>-t</code>), version (<code>-v</code>), extension (<code>-X</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DiiT=Sfj[g", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -G", 
                        "ls", 
                        "", 
                        "-G", 
                        "--no-group", 
                        "", 
                        "", 
                        "in a long listing, don't print group names", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P3y&0UMxW2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -h", 
                        "ls", 
                        "", 
                        "-h", 
                        "--human-readable", 
                        "", 
                        "", 
                        "with <code>-l</code> and/or <code>-s</code>, print human readable sizes (e.g., 1K 234M 2G)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j9Oyy3sr@{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --si", 
                        "ls", 
                        "", 
                        "", 
                        "--si", 
                        "", 
                        "", 
                        "likewise, but use powers of 1000 not 1024", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HV0w`uWLrD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -H", 
                        "ls", 
                        "", 
                        "-H", 
                        "--dereference-command-line", 
                        "", 
                        "", 
                        "follow symbolic links listed on the command line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dFC)-7I_]{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --dereference-command-line-symlink-to-dir", 
                        "ls", 
                        "", 
                        "", 
                        "--dereference-command-line-symlink-to-dir", 
                        "", 
                        "", 
                        "follow each command line symbolic link that points to a directory", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eU,@(!+pbZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --hide", 
                        "ls", 
                        "", 
                        "", 
                        "--hide=<i>PATTERN</i>", 
                        "", 
                        "", 
                        "do not list implied entries matching shell PATTERN (overridden by <code>-a </code> or <code>-A</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qR;k/g9PPA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --indicator-style", 
                        "ls", 
                        "", 
                        "", 
                        "--indicator-style=<i>WORD</i>", 
                        "", 
                        "", 
                        "append indicator with style WORD to entry names: none (default), slash (<code>-p</code>), file-type (<code>--file-type</code>), classify (<code>-F</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KdH^x4i/XY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -i", 
                        "ls", 
                        "", 
                        "-i", 
                        "--inode", 
                        "", 
                        "", 
                        "print the index number of each file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q54l7kdyn|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -I", 
                        "ls", 
                        "", 
                        "-I", 
                        "--ignore=<i>PATTERN</i>", 
                        "", 
                        "", 
                        "do not list implied entries matching shell PATTERN", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gUc[c4omyg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -k", 
                        "ls", 
                        "", 
                        "-k", 
                        "--kibibytes", 
                        "", 
                        "", 
                        "default to 1024-byte blocks for disk usage", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h91pI$9reM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -l", 
                        "ls", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "", 
                        "use a long listing format", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "koEVPQJPU[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -L", 
                        "ls", 
                        "", 
                        "-L", 
                        "--dereference", 
                        "", 
                        "", 
                        "when showing file information for a symbolic link, show information for the file the link references rather than for the link itself", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q@g<?|G!@z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -m", 
                        "ls", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "", 
                        "fill width with a comma separated list of entries", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v4?rK|T>p3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -n", 
                        "ls", 
                        "", 
                        "-n", 
                        "--numeric-uid-gid", 
                        "", 
                        "", 
                        "like <code>-l</code>, but list numeric user and group IDs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u<FT$t)E69", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -N", 
                        "ls", 
                        "", 
                        "-N", 
                        "--literal", 
                        "", 
                        "", 
                        "print entry names without quoting", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ej-,qJ-8-1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -o", 
                        "ls", 
                        "", 
                        "-o", 
                        "", 
                        "", 
                        "", 
                        "like <code>-l</code>, but do not list group information", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PLUEmVW:)q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -p", 
                        "ls", 
                        "", 
                        "-p", 
                        "--indicator-style=<i>slash</i>", 
                        "", 
                        "", 
                        "append / indicator to directories", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H2XruD?[rg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -q", 
                        "ls", 
                        "", 
                        "-q", 
                        "--hide-control-chars", 
                        "", 
                        "", 
                        "print ? instead of nongraphic characters", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z1=9m<,]PP", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --show-control-chars", 
                        "ls", 
                        "", 
                        "", 
                        "--show-control-chars", 
                        "", 
                        "", 
                        "show nongraphic characters as-is (the default, unless program is <code>ls</code> and output is a terminal)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lzVcvi`DuL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -Q", 
                        "ls", 
                        "", 
                        "-Q", 
                        "--quote-name", 
                        "", 
                        "", 
                        "enclose entry names in double quotes", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fm=j9k^7UM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --quoting-style", 
                        "ls", 
                        "", 
                        "", 
                        "--quoting-style=<i>WORD</i>", 
                        "", 
                        "", 
                        "use quoting style WORD for entry names: literal, locale, shell, shell-always, shell-escape, shell-escape-always, c, escape", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pSLIhRQ.pY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -r", 
                        "ls", 
                        "", 
                        "-r", 
                        "--reverse", 
                        "", 
                        "", 
                        "reverse order while sorting", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CBA#iC[n:w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -R", 
                        "ls", 
                        "", 
                        "-R", 
                        "--recursive", 
                        "", 
                        "", 
                        "list subdirectories recursively", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c%s]eo8Xfo", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -s", 
                        "ls", 
                        "", 
                        "-s", 
                        "--size", 
                        "", 
                        "", 
                        "print the allocated size of each file, in blocks", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CWA&u=rh$u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -S", 
                        "ls", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "", 
                        "sort by file size, largest first", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PMZfnQdOX`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --time", 
                        "ls", 
                        "", 
                        "", 
                        "--time=<i>WORD</i>", 
                        "", 
                        "", 
                        "with <code>-l</code>, show time as WORD instead of default modification time: atime or access or use (<code>-u</code>); ctime or status (<code>-c</code>); also use specified time as sort key if <code>--sort</code>=<i>time</i> (newest first)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sa^u5UR#nu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --time-style", 
                        "ls", 
                        "", 
                        "", 
                        "--time-style=<i>STYLE</i>", 
                        "", 
                        "", 
                        "with <code>-l</code>, show times using style STYLE: full-iso, long-iso, iso, locale, or +FORMAT; FORMAT is interpreted like in <code>date</code>; if FORMAT is FORMAT1&lt;newline&gt;FORMAT2, then FORMAT1 applies to non-recent files and FORMAT2 to recent files; if STYLE is prefixed with <code>posix-</code>, STYLE takes effect only outside the POSIX locale", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yr?|c,+W:d", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -t", 
                        "ls", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "", 
                        "sort by modification time, newest first", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e-%B*<F@?8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -T", 
                        "ls", 
                        "", 
                        "-T", 
                        "--tabsize=<i>COLS</i>", 
                        "", 
                        "", 
                        "assume tab stops at each COLS instead of 8", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LnxDbJ^&aW", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -u", 
                        "ls", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "", 
                        "with <code>-lt</code>: sort by, and show, access time; with <code>-l</code>: show access time and sort by name; otherwise: sort by access time, newest first", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f?oYEO=u9o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -U", 
                        "ls", 
                        "", 
                        "-U", 
                        "", 
                        "", 
                        "", 
                        "do not sort; list entries in directory order", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u|MM7:i1[)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -v", 
                        "ls", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "", 
                        "natural sort of (version) numbers within text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kK.SV5);l1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -w", 
                        "ls", 
                        "", 
                        "-w", 
                        "--width=<i>COLS</i>", 
                        "", 
                        "", 
                        "set output width to COLS.  0 means no limit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MlE@t]Jt43", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -x", 
                        "ls", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "", 
                        "list entries by lines instead of by columns", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "glrjn^umL5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -X", 
                        "ls", 
                        "", 
                        "-X", 
                        "", 
                        "", 
                        "", 
                        "sort alphabetically by entry extension", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K7}@04h9=M", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -Z", 
                        "ls", 
                        "", 
                        "-Z", 
                        "--context", 
                        "", 
                        "", 
                        "print any security context of each file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ei8@7wH8s1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --help", 
                        "ls", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "", 
                        "display this help and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t%@*#{Pd(k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls --version", 
                        "ls", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "output version information and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mXk@Qh9CR?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "zsh umask", 
                        "zsh", 
                        "builtin", 
                        "", 
                        "", 
                        "umask", 
                        "", 
                        "Set to <i>mask</i>.  <i>mask</i> can be either an octal number or\n              a symbolic value as described in <code>chmod</code><code>(1)</code>.  If<i> mask</i> is  omitted,\n              the  current value is printed.  The <code>-S</code> option causes the mask to\n              be printed as a symbolic value.  Otherwise, the <i>mask</i> is  printed\n              as  an octal number.  Note that in the symbolic form the permissions you specify are those which are to be allowed (not denied)\n              to the users specified.<div><br /></div><div>Bash <code><strike>umask</strike></code> has <code>-p</code> option Zsh does not.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QAGzi@g#jv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>find</code> broken symlinks", 
                        "", 
                        "<div class=\"post-text\" itemprop=\"text\">\n<p>I'd strongly suggest <strong>not</strong> to use <code>find -L</code>  for the task (see below for explanation). Here are some other ways to do this:</p>\n<ul>\n<li><p>If you want to use a \"pure <code>find</code>\" method, it should rather look like this:</p>\n<pre><code>find . -xtype l\n</code></pre>\n<p>(<strong><code>xtype</code></strong> is a test performed on a dereferenced link) This may not be available in all versions of <code>find</code>, though. But there are other options as well;</p></li>\n<li><p>You can also exec <code>test -e</code> from within the <code>find</code> command:</p>\n<pre><code>find . -type l ! -exec test -e {} \\; -print\n</code></pre></li>\n<li><p>Even some <code>grep</code> trick could be better (i.e. <em>safer</em>) than <code>find -L</code>, but not exactly such as presented in the question (which greps in entire output lines, including filenames): </p>\n<pre><code> find . -type l -exec sh -c \"file -b {} | grep -q ^broken\" \\; -print\n</code></pre></li>\n</ul>\n<p>The <code>find -L</code> trick quoted <a href=\"https://unix.stackexchange.com/a/34253/9382\">by solo</a> from <a href=\"http://www.commandlinefu.com/commands/view/8260/find-broken-symlinks\" rel=\"noreferrer\">commandlinefu</a> looks nice and hacky, but it has one very <strong>dangerous pitfall</strong>: All the symlinks are followed. Consider directory with the contents presented below:</p>\n<pre><code>$ ls -l\ntotal 0\nlrwxrwxrwx 1 michal users  6 May 15 08:12 link_1 -&gt; nonexistent1\nlrwxrwxrwx 1 michal users  6 May 15 08:13 link_2 -&gt; nonexistent2\nlrwxrwxrwx 1 michal users  6 May 15 08:13 link_3 -&gt; nonexistent3\nlrwxrwxrwx 1 michal users  6 May 15 08:13 link_4 -&gt; nonexistent4\nlrwxrwxrwx 1 michal users 11 May 15 08:20 link_out -&gt; /usr/share/\n</code></pre>\n<p>If you run <code>find -L . -type l</code> in that directory, all <code>/usr/share/</code> would be searched as well (and that can take really long)<sup>1</sup>. <strong>For a <code>find</code> command that is \"immune to outgoing links\", don't use <code>-L</code></strong>. </p>\n<hr />\n<p><sup>1</sup> This may look like a minor inconvenience (the command will \"just\" take long to traverse all <code>/usr/share</code>)\n - but can have more severe consequences. For instance, consider chroot \nenvironments: They can exist in some subdirectory of the main filesystem\n and contain symlinks to absolute locations. Those links could seem to \nbe broken for the \"outside\" system, because they only point to proper \nplaces once you've entered the chroot. I also recall that some \nbootloader used symlinks under <code>/boot</code> that only made sense in an initial boot phase, when the boot partition was mounted as <code>/</code>.</p>\n<p>So if you use a <code>find -L</code> command to find and then delete broken symlinks from some harmless-looking directory, you might even break your system...</p></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://unix.stackexchange.com/questions/34248/how-can-i-find-broken-symlinks"
                    ], 
                    "flags": 0, 
                    "guid": "D2;*(3%T]Q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>bash</code> last argument parameter", 
                        "", 
                        "<code>${@: -1}</code><div><br /></div><div>Note that a negative offset must be separated\n from the colon by at least one space to avoid being confused with the \n<code>:-</code> expansion.</div><div><br /></div><div>Works in ksh and zsh also.</div>", 
                        "", 
                        "<pre class=\"lang-sh prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\">echo </span><span class=\"str\">\"${@: -1}\"</span></code></pre>", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/questions/1853946/getting-the-last-argument-passed-to-a-shell-script"
                    ], 
                    "flags": 0, 
                    "guid": "Fi{c+g|jR,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>bash</code> last argument by <code>for</code> hack", 
                        "", 
                        "<div class=\"post-text\" itemprop=\"text\">\n<p>This is a bit of a hack:</p>\n<pre class=\"lang-sh prettyprint prettyprinted\" style=\"\"><code><span class=\"kwd\">for</span><span class=\"pln\"> last</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"kwd\">do</span><span class=\"pln\"> true</span><span class=\"pun\">;</span><span class=\"pln\"> </span><span class=\"kwd\">done</span><span class=\"pln\">\necho $last</span></code></pre>\n<p>This one is also pretty portable (again, should work with bash, ksh \nand sh) and it doesn't shift the arguments, which could be nice.</p>\n<p>It uses the fact that <code>for</code> implicitly loops over the \narguments if you don't tell it what to loop over, and the fact that for \nloop variables aren't scoped: they keep the last value they were set to.</p></div>", 
                        "", 
                        "<pre class=\"lang-sh prettyprint prettyprinted\" style=\"\"><br /></pre>", 
                        "y", 
                        "", 
                        "https://stackoverflow.com/questions/1853946/getting-the-last-argument-passed-to-a-shell-script"
                    ], 
                    "flags": 0, 
                    "guid": "x6ok#8H2.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "POSIX true", 
                        "POSIX", 
                        "utility", 
                        "", 
                        "", 
                        "true", 
                        "", 
                        "This&nbsp;utility shall return with exit code zero.&nbsp;The special built-in utility <b>:</b> is\nsometimes more efficient.", 
                        "<blockquote>\n<p>This command is executed forever:</p>\n<pre><tt>while true\ndo\n    command\ndone\n</tt>\n</pre></blockquote>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L7{cRt<298", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash operator !", 
                        "bash", 
                        "operator", 
                        "", 
                        "", 
                        "!", 
                        "[ !&nbsp;<i>EXPR</i>&nbsp;]", 
                        "True if <code><i>EXPR</i></code> is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MVobu[+/cY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash operator ()", 
                        "bash", 
                        "operator", 
                        "", 
                        "", 
                        "(<i>...</i>)", 
                        "[ (&nbsp;<i>EXPR</i>&nbsp;) ]", 
                        "Returns the value of <code><i>EXPR</i></code>. This may be used to override the normal precedence of operators.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lt)~w&Sq5p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash operator -a", 
                        "bash", 
                        "operator", 
                        "", 
                        "", 
                        "-a", 
                        "[&nbsp;<i>EXPR1</i>&nbsp;-a&nbsp;<i>EXPR2</i>&nbsp;]", 
                        "True if both <code><i>EXPR1</i></code> and <code><i>EXPR2</i></code> are true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I8Q2N2O4Pd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash operator -o", 
                        "bash", 
                        "operator", 
                        "", 
                        "", 
                        "-o", 
                        "[&nbsp;<i>EXPR1</i>&nbsp;-o&nbsp;<i>EXPR2</i>&nbsp;]", 
                        "True if either&nbsp;<code><i>EXPR1</i></code> or&nbsp;<code><i>EXPR2</i></code> are true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i]9^]#orH_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -a", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-a", 
                        "[ -a&nbsp;<i>FILE</i>&nbsp;]", 
                        "<i>Deprecated.</i> True if <code><i>FILE</i></code> exists.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vchR4[f{WY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -b", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-b", 
                        "[ -b&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is a block-special file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LY*j@37LjT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -c", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-c", 
                        "[ -c&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is a character-special file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lmUw2DpST3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -d", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-d", 
                        "[ -d&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is a directory.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P1?.XNg.Yp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -e", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-e", 
                        "[ -e&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qGQTz*_8q?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -f", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-f", 
                        "[ -f&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is a regular file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P_aDc?4*_L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -g", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-g", 
                        "[ -g&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and its SGID bit is set.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yG;Eiqg<v0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -h", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-h", 
                        "[ -h&nbsp;<i>FILE</i>&nbsp;]", 
                        "<i>Sort of deprecated.</i> True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is a symbolic link.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fwRFwg?8~#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -k", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-k", 
                        "[ -k&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and its sticky bit is set.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l%a$Y%b|6`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -p", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-p", 
                        "[ -p&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and is a named pipe (FIFO).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k{XFFA?oAK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -r", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-r", 
                        "[ -r&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and is readable.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "io#kG:aMgt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -s", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-s", 
                        "[ -s&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and has a size greater than zero.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m]1mYWn?3=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -t", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-t", 
                        "[ -t&nbsp;<i>FD</i>&nbsp;]", 
                        "True if file descriptor <code><i>FD</i></code> is open and refers to a terminal.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rCHO$j}Y~C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -u", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-u", 
                        "[ -u&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and its SUID (set user ID) bit is set.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i,sF+S4)9/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -w", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-w", 
                        "[ -w&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and is writable.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MbEZe;E@fk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -x", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-x", 
                        "[ -x&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and is executable.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lKf_2#z(QY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -O", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-O", 
                        "[ -O&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and is owned by the effective user ID.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GCbP@{D,2k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -G", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-G", 
                        "[ -G&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is owned by the effective group ID.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N`8-T)6!,m", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -L", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-L", 
                        "[ -L&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE&nbsp;</i></code>exists and is a symbolic link.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j@Bqu)Pi*o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -N", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-N", 
                        "[ -N&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and has been modified since it was last read.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kUAnArls1V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -S", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-S", 
                        "[ -S&nbsp;<i>FILE</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE</i></code>&nbsp;exists and is a socket.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xr#&&xDfnK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -nt", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-nt", 
                        "[&nbsp;<i>FILE1</i>&nbsp;-nt&nbsp;<i>FILE2</i>&nbsp;]", 
                        "True if <code><i>FILE1</i></code> has been changed more recently than <code><i>FILE2</i></code> or if <code><i>FILE1</i></code> exists and <code><i>FILE2</i></code> does not.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pg2ts1emCV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -ot", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-ot", 
                        "[&nbsp;<i>FILE1</i>&nbsp;-ot&nbsp;<i>FILE2</i>&nbsp;]", 
                        "True if <code><i>FILE1</i></code> is older than <code><i>FILE2</i></code> or if <code><i>FILE2</i></code> exists and <code><i>FILE1</i></code> does not.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G:xZ)E*y_%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -ef", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-ef", 
                        "[&nbsp;<i>FILE1</i>&nbsp;-ef&nbsp;<i>FILE2</i>&nbsp;]", 
                        "True if&nbsp;<code><i>FILE1&nbsp;</i></code>and&nbsp;<code><i>FILE2&nbsp;</i></code>refer to the same device and inode numbers.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yXRzx9kb,O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -o", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-o", 
                        "[ -o&nbsp;<i>NAME</i>&nbsp;]", 
                        "True if shell option <code><i>NAME</i></code> is enabled.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "+1K1s|n;n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -z", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-z", 
                        "[ -z&nbsp;<i>STRING</i>&nbsp;]", 
                        "True if the length if&nbsp;<code><i>STRING</i></code>&nbsp;is zero.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D&wqO}jRa7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -n", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-n", 
                        "[ -n&nbsp;<i>STRING</i>&nbsp;] or [&nbsp;<i>STRING</i>&nbsp;]", 
                        "True if the length of&nbsp;<code><i>STRING</i></code>&nbsp;is non-zero.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w+)ktsWW@/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary ==", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "==", 
                        "[&nbsp;<i>STRING1</i>&nbsp;==&nbsp;<i>STRING2</i>&nbsp;]", 
                        "True if the strings are equal.", 
                        "<code>=</code>&nbsp;may be used instead of&nbsp;<code>==</code>&nbsp;for strict POSIX compliance.", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PBB-j*S*Cw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary !=", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "!=", 
                        "[&nbsp;<i>ARG1</i>&nbsp;!=&nbsp;<i>ARG2</i>&nbsp;]", 
                        "True if the <b><i>strings</i></b> are not equal.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iaRL}q[L0,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary <", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "&lt;", 
                        "[&nbsp;<i>STRING1</i>&nbsp;&lt;&nbsp;<i>STRING2</i>&nbsp;]", 
                        "True if&nbsp;<code><i>STRING1</i></code>&nbsp;sorts before&nbsp;<code><i>STRING2</i></code>&nbsp;lexicographically in the current locale.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t#CO0C7g$B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary >", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "&gt;", 
                        "[&nbsp;<i>STRING1</i>&nbsp;&gt;&nbsp;<i>STRING2</i>&nbsp;]", 
                        "True if&nbsp;<code><i>STRING1</i></code>&nbsp;sorts after&nbsp;<code><i>STRING2</i></code>&nbsp;lexicographically in the current locale.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Gbsl9q.;#u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -eq", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-eq", 
                        "[&nbsp;<i>ARG1</i>&nbsp;-eq&nbsp;<i>ARG2</i>&nbsp;]", 
                        "Arithmetic binary operator that returns true if&nbsp;<code><i>ARG1&nbsp;</i></code>is equal to <code><i>ARG2</i></code>. <code><i>ARG1</i></code> and <code><i>ARG2</i></code> are integers.<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dxDy7OOKU5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -ne", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-ne", 
                        "[&nbsp;<i>ARG1</i>&nbsp;-ne&nbsp;<i>ARG2</i>&nbsp;]", 
                        "Arithmetic binary operator that returns true if <code><i>ARG1</i></code> is not equal to <code><i>ARG2</i></code>. <code><i>ARG1</i></code> and <code><i>ARG2</i></code> are integers.<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vl;RfFC|B]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -lt", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-lt", 
                        "[&nbsp;<i>ARG1</i>&nbsp;-lt&nbsp;<i>ARG2</i>&nbsp;]", 
                        "Arithmetic binary operator that returns true if <code><i>ARG1</i></code> is less than <code><i>ARG2</i></code>. <code><i>ARG1</i></code> and <code><i>ARG2</i></code> are integers.<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xZfON@QjD,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -le", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-le", 
                        "[&nbsp;<i>ARG1</i>&nbsp;-le&nbsp;<i>ARG2</i>&nbsp;]", 
                        "Arithmetic binary operator that returns true if&nbsp;<code><i>ARG1&nbsp;</i></code>is less than or equal to <code><i>ARG2</i></code>. <code><i>ARG1</i></code> and <code><i>ARG2</i></code> are integers.<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e!lB{*2lNF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -gt", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-gt", 
                        "[&nbsp;<i>ARG1</i>&nbsp;-gt&nbsp;<i>ARG2</i>&nbsp;]", 
                        "Arithmetic binary operator that returns true if <code><i>ARG1</i></code> is greater than <code><i>ARG2</i></code>. <code><i>ARG1</i></code> and <code><i>ARG2</i></code> are integers.<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mcJ$#6O[Qc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash primary -ge", 
                        "bash", 
                        "primary", 
                        "", 
                        "", 
                        "-ge", 
                        "[&nbsp;<i>ARG1</i>&nbsp;-ge&nbsp;<i>ARG2</i>&nbsp;]", 
                        "Arithmetic binary operator that returns true if&nbsp;<code><i>ARG1&nbsp;</i></code>is greater than or equal to <code><i>ARG2</i></code>. <code><i>ARG1</i></code> and <code><i>ARG2</i></code> are integers.<br />", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O`S+nxI-<u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Bash positional parameters that require braces", 
                        "", 
                        "positional parameters consisting of more than a single digit", 
                        "", 
                        "<code>${10} $9</code>", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i7;+ItCP|(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin pwd -L", 
                        "pwd", 
                        "", 
                        "-L", 
                        "", 
                        "", 
                        "", 
                        "<div><div>Print the absolute pathname, which may contain symbolic links, of the current working directory.</div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b+%kNu+~lt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sh builtin pwd -P", 
                        "pwd", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "<div><div><div>Print the absolute pathname, which will not contain symbolic links, of the current working directory.</div></div></div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G0B7gFMcuV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash shorthand for&nbsp;<code>2&gt;&amp;1 |</code>", 
                        "", 
                        "<samp><code>|&amp;</code></samp>", 
                        "", 
                        "If&nbsp;<samp><code>|&amp;</code></samp>&nbsp;is used,&nbsp;<var>command1</var>’s standard error, in addition to its standard output, is connected to&nbsp;<var>command2</var>’s standard input through the pipe; it is shorthand for&nbsp;<code>2&gt;&amp;1 |</code>. This implicit redirection of the standard error to the standard output is performed after any redirections specified by the command.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N*S6eg%AgC", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "shell comment within command", 
                        "", 
                        "abuse backticks <code>`#comment`</code>&nbsp;or use parameter substitution <code>${IFS# comment}</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">echo </span>CommandName InputFiles <span style=\"color: #ed9d13\">`</span><span style=\"color: #999999; font-style: italic\">#1st comment` \\</span>\n    --option1 arg1 <span style=\"color: #ed9d13\">`</span><span style=\"color: #999999; font-style: italic\">#2nd comment` \\</span>\n    --option2 arg2 <span style=\"color: #ed9d13\">`</span><span style=\"color: #999999; font-style: italic\">#3rd comment`</span>\nsome_cmd --opt1 <span style=\"color: #ed9d13\">`</span><span style=\"color: #999999; font-style: italic\">#1st comment` --opt2 `#2nd comment` --opt3 `#3rd comment`</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY3MDMzMzYsICJpZCI6ICIxNDk2NzAyODEyNjQ4LTAwMiIsICJtZCI6ICIgICAgOjo6c2hcbiAgICBlY2hvIENvbW1hbmROYW1lIElucHV0RmlsZXMgYCMxc3QgY29tbWVudGAgXFxcbiAgICAgICAgLS1vcHRpb24xIGFyZzEgYCMybmQgY29tbWVudGAgXFxcbiAgICAgICAgLS1vcHRpb24yIGFyZzIgYCMzcmQgY29tbWVudGBcbiAgICBzb21lX2NtZCAtLW9wdDEgYCMxc3QgY29tbWVudGAgLS1vcHQyIGAjMm5kIGNvbW1lbnRgIC0tb3B0MyBgIzNyZCBjb21tZW50YFxuIn0=---->", 
                        "", 
                        "", 
                        "https://stackoverflow.com/a/12797512/172602"
                    ], 
                    "flags": 0, 
                    "guid": "NuYbrj%tPC", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash shebang", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999;font-style: italic\">#!/usr/bin/env bash</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY3MDcxMzgsICJpZCI6ICIxNDk2NzA3MTI2NDUxLTAwMSIsICJtZCI6ICIgICAgOjo6c2hcbiAgICAjIS91c3IvYmluL2VudiBiYXNoXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xQJ14b<<Hs", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -c -f new.tar --include='*foo*' @old.tgz", 
                        "tar -c -f&nbsp;<u>new.tar</u>&nbsp;--include='*<u>foo</u>*' @<u>old.tgz</u>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "create new archive&nbsp;<u><code>new.tar</code></u>&nbsp;containing only the entries from&nbsp;<u><code>old.tgz</code></u>&nbsp;containing the string <code>foo</code>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "sA0oxD=Pbe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s substitution ~", 
                        "tar -s", 
                        "pattern substitution", 
                        "", 
                        "", 
                        "~", 
                        "", 
                        "the match", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F~WdBqNILn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s substitution 1-9", 
                        "tar -s", 
                        "pattern substitution", 
                        "", 
                        "", 
                        "1-9", 
                        "", 
                        "the content of the corresponding captured group", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jr2QGIlL08", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s specifier g", 
                        "tar -s", 
                        "trailing specifier", 
                        "", 
                        "", 
                        "g", 
                        "", 
                        "matching should continue after the matched part and stopped on the first unmatched pattern", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N[^##*989G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s specifier s", 
                        "tar -s", 
                        "trailing specifier", 
                        "", 
                        "", 
                        "s", 
                        "", 
                        "pattern applies to the value of symbolic links", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E^JRYoB#Pt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s specifier p", 
                        "tar -s", 
                        "trailing specifier", 
                        "", 
                        "", 
                        "p", 
                        "", 
                        "print to&nbsp;<i>stderr</i>&nbsp;original and new path names after successful substitutions", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bV,!Uj|wOh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --no-null", 
                        "tar", 
                        "", 
                        "", 
                        "--no-null", 
                        "", 
                        "", 
                        "Disable the effect of any previous <code>--null</code> option", 
                        "<p>The <code>--no-null</code> option can be used if you need to read both <code>NUL</code>-terminated and newline-terminated files on the same command line. For example, if <code>flist</code> is a newline-terminated file, then the following command can be used to combine it with the above command:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find . -size +800 -print0 <span style=\"color: #d0d0d0\">|</span>\ntar -c -f big.tar --null -T - --no-null -T flist\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTcwMzk1OTQsICJpZCI6ICIxNDk3MDM5NTA4NjIzLTAwNyIsICJtZCI6ICJUaGUgYC0tbm8tbnVsbGAgb3B0aW9uIGNhbiBiZSB1c2VkIGlmIHlvdSBuZWVkIHRvIHJlYWQgYm90aCBgTlVMYC10ZXJtaW5hdGVkIGFuZCBuZXdsaW5lLXRlcm1pbmF0ZWQgZmlsZXMgb24gdGhlIHNhbWUgY29tbWFuZCBsaW5lLiBGb3IgZXhhbXBsZSwgaWYgYGZsaXN0YCBpcyBhIG5ld2xpbmUtdGVybWluYXRlZCBmaWxlLCB0aGVuIHRoZSBmb2xsb3dpbmcgY29tbWFuZCBjYW4gYmUgdXNlZCB0byBjb21iaW5lIGl0IHdpdGggdGhlIGFib3ZlIGNvbW1hbmQ6XG4gIFxuICAgIDo6OnNoXG4gICAgZmluZCAuIC1zaXplICs4MDAgLXByaW50MCB8XG4gICAgdGFyIC1jIC1mIGJpZy50YXIgLS1udWxsIC1UIC0gLS1uby1udWxsIC1UIGZsaXN0XG4ifQ==---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J-n-N&27U=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "extended attributes", 
                        "", 
                        "       Extended attributes are <code>name:value</code> pairs associated permanently with\n       files and directories, similar to the environment strings associated\n       with a process.  An attribute may be defined or undefined.  If it is\n       defined, its value may be empty or non-empty.<div><br /></div><div>Extended attributes are extensions to the normal attributes which are\n       associated with all inodes in the system (i.e., the <code>stat</code> data).\n       They are often used to provide additional functionality to a\n       filesystem—for example, additional security features such as Access\n       Control Lists (ACLs) may be implemented using extended attributes.\n\n       Users with search access to a file or directory may use <code>listxattr</code>&nbsp;to retrieve a list of attribute names defined for that file or\n       directory.\n\n       Extended attributes are accessed as atomic objects.  Reading\n       (<code>getxattr</code>) retrieves the whole value of an attribute and stores it\n       in a buffer.  Writing (<code>setxattr</code>) replaces any previous value with\n       the new value.\n\n       Space consumed for extended attributes may be counted towards the\n       disk quotas of the file owner and file group.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Bg_d+T!5-w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git: revert (reset) a single file", 
                        "", 
                        "<div><code>git checkout -- filename</code></div>", 
                        "", 
                        "<p>This one is hard to find out there so here it is. If you have an <strong>uncommitted</strong> change (its only in your working copy) that you wish to revert (in SVN terms) to the copy in your latest commit, do the following:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">git checkout filename\n</pre></div>\n<p>This will checkout the file from HEAD, overwriting your change. This command is also used to checkout branches, and you could happen to have a file with the same name as a branch. All is not lost, you will simply need to type:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">git checkout -- filename\n</pre></div>\n<p>You can also do this with files from other branches, and such. <code>man git-checkout</code> has the details.<br />\nThe rest of the Internet will tell you to use <code>git reset --hard</code>, but this resets <strong>all</strong> uncommitted changes you’ve made in your working copy. Type this with care.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTczMzk5NzQsICJpZCI6ICIxNDk3MzM5ODg4ODg3LTAwMiIsICJtZCI6ICJUaGlzIG9uZSBpcyBoYXJkIHRvIGZpbmQgb3V0IHRoZXJlIHNvIGhlcmUgaXQgaXMuIElmIHlvdSBoYXZlIGFuICoqdW5jb21taXR0ZWQqKiBjaGFuZ2UgKGl0cyBvbmx5IGluIHlvdXIgd29ya2luZyBjb3B5KSB0aGF0IHlvdSB3aXNoIHRvIHJldmVydCAoaW4gU1ZOIHRlcm1zKSB0byB0aGUgY29weSBpbiB5b3VyIGxhdGVzdCBjb21taXQsIGRvIHRoZSBmb2xsb3dpbmc6XG4gIFxuICAgIDo6OmJhc2hcbiAgICBnaXQgY2hlY2tvdXQgZmlsZW5hbWVcbiAgXG5UaGlzIHdpbGwgY2hlY2tvdXQgdGhlIGZpbGUgZnJvbSBIRUFELCBvdmVyd3JpdGluZyB5b3VyIGNoYW5nZS4gVGhpcyBjb21tYW5kIGlzIGFsc28gdXNlZCB0byBjaGVja291dCBicmFuY2hlcywgYW5kIHlvdSBjb3VsZCBoYXBwZW4gdG8gaGF2ZSBhIGZpbGUgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIGEgYnJhbmNoLiBBbGwgaXMgbm90IGxvc3QsIHlvdSB3aWxsIHNpbXBseSBuZWVkIHRvIHR5cGU6XG4gIFxuICAgIDo6OmJhc2hcbiAgICBnaXQgY2hlY2tvdXQgLS0gZmlsZW5hbWVcbiAgXG5Zb3UgY2FuIGFsc28gZG8gdGhpcyB3aXRoIGZpbGVzIGZyb20gb3RoZXIgYnJhbmNoZXMsIGFuZCBzdWNoLiBgbWFuIGdpdC1jaGVja291dGAgaGFzIHRoZSBkZXRhaWxzLlxuVGhlIHJlc3Qgb2YgdGhlIEludGVybmV0IHdpbGwgdGVsbCB5b3UgdG8gdXNlIGBnaXQgcmVzZXQgLS1oYXJkYCwgYnV0IHRoaXMgcmVzZXRzICoqYWxsKiogdW5jb21taXR0ZWQgY2hhbmdlcyB5b3VcdTIwMTl2ZSBtYWRlIGluIHlvdXIgd29ya2luZyBjb3B5LiBUeXBlIHRoaXMgd2l0aCBjYXJlLlxuIn0=---->", 
                        "", 
                        "", 
                        "http://www.norbauer.com/rails-consulting/notes/git-revert-reset-a-single-file.html"
                    ], 
                    "flags": 0, 
                    "guid": "JLuG+sfFBx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "commands having&nbsp;<code>-f</code> = <code>--force</code>", 
                        "", 
                        "<code>cp</code>, <code>mv</code>, <code>rm</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "http://tldp.org/LDP/abs/html/standard-options.html"
                    ], 
                    "flags": 0, 
                    "guid": "QDm9sA1bEk", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "commands having&nbsp;<code>-f</code> = <code>--file</code>", 
                        "", 
                        "<code>tar</code>, <code>gawk</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "http://tldp.org/LDP/abs/html/standard-options.html"
                    ], 
                    "flags": 0, 
                    "guid": "F%~jTRpeP:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F indicator @", 
                        "ls -F", 
                        "indicator", 
                        "", 
                        "", 
                        "@", 
                        "", 
                        "symbolic link or file has extended attributes", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i%N<|**^qM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F indicator *", 
                        "ls -F", 
                        "indicator", 
                        "", 
                        "", 
                        "*", 
                        "", 
                        "executable", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r6oMVXRjvw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F indicator =", 
                        "ls -F", 
                        "indicator", 
                        "", 
                        "", 
                        "=", 
                        "", 
                        "socket", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jCj1Z*~6/:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F indicator |", 
                        "ls -F", 
                        "indicator", 
                        "", 
                        "", 
                        "|", 
                        "", 
                        "named pipe", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yho3hz}Bao", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F indicator &gt;", 
                        "ls -F", 
                        "indicator", 
                        "", 
                        "", 
                        "&gt;", 
                        "", 
                        "door", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hr;Fr|Be=l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ls -F indicator /", 
                        "ls -F", 
                        "indicator", 
                        "", 
                        "", 
                        "/", 
                        "", 
                        "directory", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I0QdN*%N><", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newermm", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newermm <u>file</u>", 
                        "", 
                        "<i>Longest of three meaning:&nbsp;</i>True if the current file has a more recent&nbsp;<b>last modification time</b>&nbsp;than&nbsp;<u>file</u>.", 
                        "Equivalent&nbsp;to&nbsp;<code>-newer&nbsp;<u>file</u></code>&nbsp;and&nbsp;<code>-mnewer&nbsp;<u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MBGbjNTD.{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerBm", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerBm&nbsp;<u>file</u>", 
                        "", 
                        "<i>Longer of two meaning:</i> True if the current file has a more recent <b>inode creation time</b> than the <b>modification time</b> of <u>file</u>.", 
                        "Equivalent to <code>-Bnewer <u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gBhWgwxX}%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -neweram", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-neweram&nbsp;<u>file</u>", 
                        "", 
                        "<i></i><i>Longer of two meaning:</i>&nbsp;True if the current file has a more recent&nbsp;<b>access time</b>&nbsp;than the&nbsp;<b>modification time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "Equivalent to <code>-anewer <u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f6bA1W%/(/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newercm", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newercm&nbsp;<u>file</u>", 
                        "", 
                        "<i></i><i>Longer of two meaning:</i>&nbsp;True if the current file has a more recent&nbsp;<b>change time</b>&nbsp;than the&nbsp;<b>modification time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "Equivalent to <code>-cnewer <u>file</u></code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H18ZS<.cQ[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -neweraa", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-neweraa&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent&nbsp;<b>last access time</b>&nbsp;than&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OD93!z8h~n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerBB", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerBB&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent&nbsp;<b>inode creation time</b>&nbsp;than&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jN2y.T}o:z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newercc", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newercc&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent&nbsp;<b>change time</b>&nbsp;than&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t$P^eFkcI*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -neweraB", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-neweraB&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent&nbsp;<b>last access time</b>&nbsp;than the<b> inode creation&nbsp;</b><b>time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K~r~v`[Aqq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerac", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerac&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent&nbsp;<b>last access time</b>&nbsp;than the<b> change&nbsp;</b><b>time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Gy*b8Ql)/c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerBc", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerBc&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>inode creation&nbsp;time</b>&nbsp;than the<b> change&nbsp;</b><b>time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fDGYCrFkAO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerBa", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerBa&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>inode creation&nbsp;time</b>&nbsp;than the<b>&nbsp;</b><b>last access</b>&nbsp;<b>time</b>&nbsp;of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FOojCC9uu,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerca", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerca&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>change&nbsp;time</b>&nbsp;than the<b>&nbsp;</b><b>last access</b>&nbsp;<b>time</b> of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K>iGJ<57cc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newercB", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newercB&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>change&nbsp;time</b>&nbsp;than the<b>&nbsp;</b><b></b><b>inode creation</b>&nbsp;<b>time </b>of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ga$EQrxHMK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerma", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerma&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>modification&nbsp;time</b>&nbsp;than the&nbsp;<b>last access</b>&nbsp;<b>time </b>of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ny|Q#1O_B8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newermB", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newermB&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>modification&nbsp;time</b>&nbsp;than the&nbsp;<b>inode creation</b>&nbsp;<b>time </b>of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g65VYy!Tp|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newermc", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newermc&nbsp;<u>file</u>", 
                        "", 
                        "<i></i>True if the current file has a more recent <b>modification&nbsp;time</b>&nbsp;than the&nbsp;<b>change</b>&nbsp;<b>time </b>of&nbsp;<u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ux>Z,!;n:e", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerct", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerct", 
                        "", 
                        "True if the current file has a more recent&nbsp;<b>change&nbsp;time</b>&nbsp;than the&nbsp;date specified by interpreting&nbsp;<u>file</u>&nbsp;as a direct date specification of the form understood by <code>cvs</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d#]UQpuZ3K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerat", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerat", 
                        "", 
                        "True if the current file has a more recent <b>last access&nbsp;time</b>&nbsp;than the&nbsp;date specified by interpreting&nbsp;<u>file</u>&nbsp;as a direct date specification of the form understood by <code>cvs</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B8-!nOH%$D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerBt", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerBt", 
                        "", 
                        "True if the current file has a more recent <b>inode creation time</b>&nbsp;than the&nbsp;date specified by interpreting&nbsp;<code><i>file</i></code>&nbsp;as a direct date specification of the form understood by <code>cvs</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PRvH:C3q-w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newermt", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newermt", 
                        "", 
                        "True if the current file has a more recent <b>modification time</b>&nbsp;than the&nbsp;date specified by interpreting&nbsp;<u>file</u>&nbsp;as a direct date specification of the form understood by <code>cvs</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HsE-yZp*2)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>ps -aux</code> = <code>ps aux</code> ?", 
                        "", 
                        "No.", 
                        "", 
                        "The POSIX and UNIX standards require that <code>ps -aux</code>&nbsp;print all processes owned by a user\nnamed <i>x</i>, as well as printing all processes that would be selected by the <code>-a</code> option. If the user named <i>x</i>&nbsp;does not exist, some versions of&nbsp;<code>ps</code> may interpret\nthe command as&nbsp;<code>ps aux</code>&nbsp;instead and print a warning. This \nbehavior is intended to aid in transitioning old scripts and habits. It \nis fragile, subject to\nchange, and thus should not be relied upon.", 
                        "reverse", 
                        "", 
                        "https://linux.die.net/man/1/ps"
                    ], 
                    "flags": 0, 
                    "guid": "gY:N^d9iAm", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "ps"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find files and print only filenames", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find ./dir1 -type f -printf <span style=\"color: #ed9d13\">\"%f\\n\"</span>\nfind ./dir1 -type f -exec basename <span style=\"color: #d0d0d0\">{}</span> <span style=\"color: #ed9d13\">\\;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTgzNTE4MjEsICJpZCI6ICIxNDk4MzUxNjk2NDA0LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZpbmQgLi9kaXIxIC10eXBlIGYgLXByaW50ZiAmcXVvdDslZlxcbiZxdW90O1xuICAgIGZpbmQgLi9kaXIxIC10eXBlIGYgLWV4ZWMgYmFzZW5hbWUge30gXFw7XG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://stackoverflow.com/questions/5456120/how-to-only-get-file-name-with-linux-find"
                    ], 
                    "flags": 0, 
                    "guid": "t0B&ewNW{b", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -c", 
                        "sort", 
                        "alt long option", 
                        "-c", 
                        "--check", 
                        "sort --check=diagnose-first", 
                        "", 
                        "check for sorted input; do not sort", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wR$)Z~.9KU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -C", 
                        "sort", 
                        "alt long option", 
                        "-C", 
                        "--check=quiet", 
                        "", 
                        "", 
                        "like -c, but do not report first bad line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jJXTB;&i;M", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -b", 
                        "sort", 
                        "", 
                        "-b", 
                        "--ignore-leading-blanks", 
                        "", 
                        "", 
                        "ignore leading blanks", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d2}V?IzyLr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -d", 
                        "sort", 
                        "", 
                        "-d", 
                        "--dictionary-order", 
                        "", 
                        "", 
                        "consider only blanks and alphanumeric characters", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DoaexFh.SX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -f", 
                        "sort", 
                        "", 
                        "-f", 
                        "--ignore-case", 
                        "", 
                        "", 
                        "fold lower case to upper case characters", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GCFHKz6pD1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -g", 
                        "sort", 
                        "", 
                        "-g", 
                        "--general-numeric-sort", 
                        "", 
                        "", 
                        "compare according to general numerical value", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gOgGc@_I*%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -i", 
                        "sort", 
                        "", 
                        "-i", 
                        "--ignore-nonprinting", 
                        "", 
                        "", 
                        "consider only printable characters", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P8>16pxM~9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -M", 
                        "sort", 
                        "", 
                        "-M", 
                        "--month-sort", 
                        "", 
                        "", 
                        "compare (unknown) < 'JAN' < ... < 'DEC'", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cdoyX*^q?L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -h", 
                        "sort", 
                        "", 
                        "-h", 
                        "--human-numeric-sort", 
                        "", 
                        "", 
                        "compare human readable numbers (e.g., 2K 1G)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e1KE6Rv^yA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -n", 
                        "sort", 
                        "", 
                        "-n", 
                        "--numeric-sort", 
                        "", 
                        "", 
                        "compare according to string numerical value", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kaF1N*~!x2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -R", 
                        "sort", 
                        "", 
                        "-R", 
                        "--random-sort", 
                        "", 
                        "", 
                        "shuffle, but group identical keys.  See shuf(1)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gJtTAD>;g{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --random-source", 
                        "sort", 
                        "", 
                        "", 
                        "--random-source=FILE", 
                        "", 
                        "", 
                        "get random bytes from FILE", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c[>Oh8(=&a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -r", 
                        "sort", 
                        "", 
                        "-r", 
                        "--reverse", 
                        "", 
                        "", 
                        "reverse the result of comparisons", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NFP*5/~a`L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --sort", 
                        "sort", 
                        "", 
                        "", 
                        "--sort=WORD", 
                        "", 
                        "", 
                        "sort according to WORD: general-numeric -g, human-numeric -h, month -M, numeric -n, random -R, version -V", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tlsaL^Ust<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -V", 
                        "sort", 
                        "", 
                        "-V", 
                        "--version-sort", 
                        "", 
                        "", 
                        "natural sort of (version) numbers within text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D0`(b{nVJ5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --batch-size", 
                        "sort", 
                        "", 
                        "", 
                        "--batch-size=NMERGE", 
                        "", 
                        "", 
                        "merge at most NMERGE inputs at once; for more use temp files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w=Id9YNb~7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --compress-program", 
                        "sort", 
                        "", 
                        "", 
                        "--compress-program=PROG", 
                        "", 
                        "", 
                        "compress temporaries with PROG; decompress them with PROG -d", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vb3Xz4EIT9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --debug", 
                        "sort", 
                        "", 
                        "", 
                        "--debug", 
                        "", 
                        "", 
                        "annotate the part of the line used to sort, and warn about questionable usage to stderr", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K%91|U@@y?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --files0-from", 
                        "sort", 
                        "", 
                        "", 
                        "--files0-from=F", 
                        "", 
                        "", 
                        "read input from the files specified by NUL-terminated names in file F; If F is - then read names from standard input", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G9`%5xB{8v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -k", 
                        "sort", 
                        "", 
                        "-k&nbsp;<i>KEYDEF</i>", 
                        "--key=<i>KEYDEF</i>", 
                        "", 
                        "", 
                        "sort via a key; <code><i>KEYDEF</i></code> gives location and type", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jg>o/SXZK,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -m", 
                        "sort", 
                        "", 
                        "-m", 
                        "--merge", 
                        "", 
                        "", 
                        "merge already sorted files; do not sort", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gN3|X!~Vmf", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -o", 
                        "sort", 
                        "", 
                        "-o&nbsp;<i>FILE</i>", 
                        "--output=<i>FILE</i>", 
                        "", 
                        "", 
                        "write result to <code><i>FILE</i></code> instead of standard output", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lr`Jdq%g$_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -s", 
                        "sort", 
                        "", 
                        "-s", 
                        "--stable", 
                        "", 
                        "", 
                        "stabilize sort by disabling last-resort comparison", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iRUv2+HVq,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -S", 
                        "sort", 
                        "", 
                        "-S&nbsp;<i>SIZE</i>", 
                        "--buffer-size=<i>SIZE</i>", 
                        "", 
                        "", 
                        "use <code><i>SIZE</i></code> for main memory buffer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N<mA??bjFN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -t", 
                        "sort", 
                        "", 
                        "-t&nbsp;<i>SEP</i>", 
                        "--field-separator=<i>SEP</i>", 
                        "", 
                        "", 
                        "use <code><i>SEP</i></code> instead of non-blank to blank transition", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JYAB*)_LlA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -T", 
                        "sort", 
                        "", 
                        "-T&nbsp;<i>DIR</i>", 
                        "--temporary-directory=<i>DIR</i>", 
                        "", 
                        "", 
                        "use <code><i>DIR</i></code> for temporaries, not <code>$TMPDIR</code> or <code>/tmp</code>; multiple options specify multiple directories", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r>z_des)`U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --parallel", 
                        "sort", 
                        "", 
                        "", 
                        "--parallel<b>=</b><i>N</i>", 
                        "", 
                        "", 
                        "change the number of sorts run concurrently to <code><i>N</i></code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pn4<>jZL-T", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -u", 
                        "sort", 
                        "", 
                        "-u", 
                        "--unique", 
                        "", 
                        "", 
                        "with <code>-c</code>, check for strict ordering; without <code>-c</code>, output only the first of an equal run", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pu7i/hJ^.^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort -z", 
                        "sort", 
                        "", 
                        "-z", 
                        "--zero-terminated", 
                        "", 
                        "", 
                        "line delimiter is NUL, not newline", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hz.fL)(?4x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --help", 
                        "sort", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "", 
                        "display this help and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n&*j@7{^-l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort --version", 
                        "sort", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "output version information and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tD5y:IaK-4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "sort"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -a", 
                        "du", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "", 
                        "Display an entry for each file in a file hierarchy.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z5;F^zIHZI", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -c", 
                        "du", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "", 
                        "Display a grand total.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w?6GBSXRY^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -d", 
                        "du", 
                        "", 
                        "-d <u>depth</u>", 
                        "", 
                        "", 
                        "", 
                        "Display an entry for all files and directories <u><code>depth</code></u> directories deep.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N.SReg+Y}|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -H", 
                        "du", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "", 
                        "Symbolic links on the command line are followed, symbolic links in file hierarchies are not followed.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v;0jI+=,Sq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -h", 
                        "du", 
                        "", 
                        "-h", 
                        "", 
                        "", 
                        "", 
                        "\"Human-readable\" output. &nbsp;Use unit suffixes: Byte, Kilobyte, Megabyte, Gigabyte, Terabyte and Petabyte.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z2l7sAmI~j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -I", 
                        "du", 
                        "", 
                        "-I <u>mask</u>", 
                        "", 
                        "", 
                        "", 
                        "Ignore files and directories matching the specified <u><code>mask</code></u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zybn6eA=8b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -g", 
                        "du", 
                        "", 
                        "-g", 
                        "", 
                        "", 
                        "", 
                        "Display block counts in 1073741824-byte (1-Gbyte) blocks.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LbjV)@&jJ@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -k", 
                        "du", 
                        "", 
                        "-k", 
                        "", 
                        "", 
                        "", 
                        "Display block counts in 1024-byte (1-Kbyte) blocks.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "joTe?%y}&n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -L", 
                        "du", 
                        "", 
                        "-L", 
                        "", 
                        "", 
                        "", 
                        "Symbolic links on the command line and in file hierarchies are followed.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x09$#aNGJW", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -m", 
                        "du", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "", 
                        "Display block counts in 1048576-byte (1-Mbyte) blocks.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PS#R*3}&I-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -P", 
                        "du", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "No symbolic links are followed. &nbsp;This is the default.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H&}cPJ|VE/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -r", 
                        "du", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "", 
                        "Generate messages about directories that cannot be read, files that cannot be opened, and so on.  This\n             is the default case.  This option exists solely for conformance with X/Open Portability Guide Issue 4\n             (XPG4).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rQz$H%>xj]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -s", 
                        "du", 
                        "equivalent", 
                        "-s", 
                        "", 
                        "-d 0", 
                        "", 
                        "Display an entry for each specified file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l/Z%LJDgo^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du -x", 
                        "du", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "", 
                        "File system mount points are not traversed.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j{qH!*{+tL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "du", 
                        "du", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "    This utility displays the file system block usage for each file argument and for each directory in the file\n     hierarchy rooted in each directory argument.  If no file is specified, the block usage of the hierarchy rooted\n     in the current directory is displayed.\n<br /><br />\n     This utility counts the storage used by symbolic links and not the files they reference unless the <code>-H</code> or <code>-L</code>\n     option is specified.  If either the <code>-H</code> or <code>-L</code> options are specified, storage used by any symbolic links which\n     are followed is not counted or displayed.  If more than one of the <code>-H</code>, <code>-L</code>, and <code>-P</code> options is specified, the\n     last one given is used.\n<br /><br />\n     Files having multiple hard links are counted (and displayed) a single time per execution.  Directories having multiple hard links (typically Time Machine backups) are counted a single time per execution.", 
                        "<code>du [-H | -L | -P] [-a | -s | -d <u>depth</u>] [-c] [-h | -k | -m | -g] [-x] [-I <u>mask</u>] [<u>file</u> ...]</code>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "hA-mRs/Vzs", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sort folders by size", 
                        "", 
                        "&nbsp; &nbsp; :::bash<div>&nbsp; &nbsp; du --max-depth=1 /home/ | sort -n -r<div>&nbsp; &nbsp; du -h --summarize * | sort -h</div><div>&nbsp; &nbsp; du -h --max-depth=1 /home/ | sort -h -r</div></div>", 
                        "", 
                        "On non-Linux, you'll need to use <b>GNU</b> <code>sort</code> to get the <code>-h</code> option.  This is\n part of the <b>GNU</b> <code>coreutils</code> package, and might be called <code>gsort</code> on your \nsystem.", 
                        "reverse", 
                        "", 
                        "http://www.ducea.com/2006/05/14/tip-how-to-sort-folders-by-size-with-one-command-line-in-linux/"
                    ], 
                    "flags": 0, 
                    "guid": "q8VE4`SxS?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "du"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format flag %-", 
                        "date", 
                        "format flag", 
                        "", 
                        "", 
                        "%-", 
                        "", 
                        "do not pad the field", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "od3xin.ylW", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format flag %_", 
                        "date", 
                        "format flag", 
                        "", 
                        "", 
                        "%_", 
                        "", 
                        "(underscore) pad with spaces", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L}SE3$9Hkh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format flag %0", 
                        "date", 
                        "format flag", 
                        "", 
                        "", 
                        "%0", 
                        "", 
                        "pad with zeros", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bph0eGnt=?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format flag %^", 
                        "date", 
                        "format flag", 
                        "", 
                        "", 
                        "%^", 
                        "", 
                        "use upper case if possible", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k9Kbkjem??", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format flag %#", 
                        "date", 
                        "format flag", 
                        "", 
                        "", 
                        "%#", 
                        "", 
                        "use opposite case if possible", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e2#l~;Un^[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %%", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%%", 
                        "", 
                        "a literal <code>%</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "By=>;qLz]l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %a", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%a", 
                        "", 
                        "locale's abbreviated weekday name (e.g., Sun)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ke=i4f?bSS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %A", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%A", 
                        "", 
                        "locale's full weekday name (e.g., Sunday)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jg9~0qxus4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %b", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%b", 
                        "", 
                        "locale's abbreviated month name (e.g., Jan). same as&nbsp;<code>%h</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Loo_hq6AG!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %B", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%B", 
                        "", 
                        "locale's full month name (e.g., January)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "7U^]9=zyp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %c", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%c", 
                        "", 
                        "locale's date and time (e.g., Thu Mar 3 23:05:25 2005)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dRk4?m(Y:n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %C", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%C", 
                        "", 
                        "century; like <code>%Y</code>, except omit last two digits (e.g., 20)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DBQ|MY_5xt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %d", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%d", 
                        "", 
                        "day of month (e.g, 01)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uV@|O-GwIh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %D", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%D", 
                        "", 
                        "date; same as&nbsp;<code>%m/%d/%y</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "/+3)iS,Wl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %e", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%e", 
                        "", 
                        "day of month, space padded; same as <code>%_d</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iUKx(wp%s!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %F", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%F", 
                        "", 
                        "full date; same as <code>%Y-%m-%d</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ik#LC[Nk>>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %g", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%g", 
                        "", 
                        "last two digits of year of ISO week number (see <code>%G</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oWN/<KAo)p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %G", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%G", 
                        "", 
                        "year of ISO week number (see <code>%V</code>); normally useful only with <code>%V</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v7]2/>Es_N", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %h", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%h", 
                        "", 
                        "locale's abbreviated month name (e.g., Jan). same as <code>%b</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zce8EkI.,k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %H", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%H", 
                        "", 
                        "hour (00..23)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LTQY~Z}=&@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %I", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%I", 
                        "", 
                        "hour (01..12)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hv=fY?62D/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %j", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%j", 
                        "", 
                        "day of year (001..366)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BQ(mb%cw;%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %k", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%k", 
                        "", 
                        "hour ( 0..23)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PZ`TG]i+-Z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %l", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%l", 
                        "", 
                        "hour ( 1..12)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uDp<qxQALb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %m", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%m", 
                        "", 
                        "month (01..12)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w/=Gw-(cI.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %M", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%M", 
                        "", 
                        "minute (00..59)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "st7qrf!{$4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %n", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%n", 
                        "", 
                        "a newline", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nF[4%)yFjK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %N", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%N", 
                        "", 
                        "nanoseconds (000000000..999999999)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tbx.nL26ug", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %p", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%p", 
                        "", 
                        "locale's equivalent of either AM or PM; blank if not known", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yisz/~RS!{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %P", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%P", 
                        "", 
                        "like <code>%p</code>, but lower case", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pHY-a$,I(<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %r", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%r", 
                        "", 
                        "locale's 12-hour clock time (e.g., 11:11:04 PM)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wMq+au&P!d", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %R", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%R", 
                        "", 
                        "24-hour hour and minute; same as <code>%H:%M</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B4DOX}RWb^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %s", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%s", 
                        "", 
                        "seconds since 1970-01-01 00:00:00 UTC", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vLG|0:,Qc(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %S", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%S", 
                        "", 
                        "second (00..60)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MG[lnKE.^|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %t", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%t", 
                        "", 
                        "a tab", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x)fw?hG6=!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %T", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%T", 
                        "", 
                        "time; same as <code>%H:%M:%S</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rO!:~/DGZH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %u", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%u", 
                        "", 
                        "day of week (1..7); 1 is Monday", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b#n,N^h5[{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %U", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%U", 
                        "", 
                        "week number of year, with Sunday as first day of week (00..53)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H8fgVD~n]-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %V", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%V", 
                        "", 
                        "ISO week number, with Monday as first day of week (01..53)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xD#d7_?N|,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %w", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%w", 
                        "", 
                        "day of week (0..6); 0 is Sunday", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Oe<28umvzE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %W", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%W", 
                        "", 
                        "week number of year, with Monday as first day of week (00..53)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LJZeiVt5A=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %x", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%x", 
                        "", 
                        "locale's date representation (e.g., 12/31/99)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ma__xoep26", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %X", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%X", 
                        "", 
                        "locale's time representation (e.g., 23:13:48)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Inl:Q9UQ5V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %y", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%y", 
                        "", 
                        "last two digits of year (00..99)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l!afFjU(C;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %Y", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%Y", 
                        "", 
                        "year", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BmU2}Vk><-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %z", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%z", 
                        "", 
                        "+hhmm numeric timezone (e.g., -0400)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bP1bt8+jTp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %:z", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%:z", 
                        "", 
                        "+hh:mm numeric timezone (e.g., -04:00)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bMvfvBkoKS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %::z", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%::z", 
                        "", 
                        "+hh:mm:ss numeric time zone (e.g., -04:00:00)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K&u1BJZ2.*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %:::z", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%:::z", 
                        "", 
                        "numeric time zone with : to necessary precision (e.g., -04, +05:30)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HpR4(?3plk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date format %Z", 
                        "date", 
                        "format sequence", 
                        "", 
                        "", 
                        "%Z", 
                        "", 
                        "alphabetic time zone abbreviation (e.g., EDT)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "enY&9oK5dj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date -d", 
                        "date", 
                        "", 
                        "-d&nbsp;<i>STRING</i>", 
                        "--date=<i>STRING</i>", 
                        "", 
                        "", 
                        "display time described by <i><code>STRING</code></i>, not 'now'&nbsp;", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mg*tAOn>g", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date -f", 
                        "date", 
                        "", 
                        "-f&nbsp;<i>DATEFILE</i>", 
                        "--file=<i>DATEFILE</i>", 
                        "", 
                        "", 
                        "like <code>--date</code> once for each line of <code><i>DATEFILE</i></code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pWwZO%$Y{n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date -r", 
                        "date", 
                        "", 
                        "-r&nbsp;<i>FILE</i>", 
                        "--<b>reference</b>=<i>FILE</i>", 
                        "", 
                        "", 
                        "display the last modification time of&nbsp;<code><i>FILE</i></code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E-U9%+pq*-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date -R", 
                        "date", 
                        "", 
                        "-R", 
                        "--<b>rfc-2822</b>", 
                        "", 
                        "", 
                        "output date and time in <b>RFC 2822</b> format. Example: Mon, 07 Aug 2006 12:34:56 <b>-0600</b>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z/)^Sr97Bh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date&nbsp;--rfc-3339", 
                        "date", 
                        "", 
                        "", 
                        "<dt><b>--rfc-3339</b>=<i>TIMESPEC</i>\n</dt>", 
                        "", 
                        "", 
                        "output date and time in <b>RFC 3339</b> format. <code><i>TIMESPEC</i></code>='date', 'seconds', or \n'ns' for date and time to the indicated precision. Date and time \ncomponents are\nseparated by a single space: <code>2006-08-07 12:34:56-06:00</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lPr5*.X?E{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date -s", 
                        "date", 
                        "", 
                        "-s&nbsp;<b><i>STRING</i></b>", 
                        "<dt><b>--set=<i>STRING</i></b></dt>", 
                        "", 
                        "", 
                        "set time described by <code><i>STRING</i></code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cWskH_u8pk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date -u", 
                        "date", 
                        "long option alias", 
                        "-u", 
                        "<dt><b>--utc</b></dt>", 
                        "date --universal", 
                        "", 
                        "print or set Coordinated Universal Time", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H3B_dqcgb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date&nbsp;--help", 
                        "date", 
                        "", 
                        "", 
                        "<dt><b><br /></b></dt>", 
                        "", 
                        "", 
                        "display this help and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yw;[@`_Mq;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date&nbsp;--version", 
                        "date", 
                        "", 
                        "", 
                        "<dt><b><br /></b></dt>", 
                        "", 
                        "", 
                        "output version information and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w~#/DoFp98", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date", 
                        "date", 
                        "", 
                        "", 
                        "<dt><b><br /></b></dt>", 
                        "", 
                        "", 
                        "Display the current time in the given FORMAT, or set the system date.\n<div><br /></div><div>After any flags comes an optional field width, as a decimal number; then\n an optional modifier, which is either E to use the locale's alternate\nrepresentations if available, or O to use the locale's alternate numeric\n symbols if available.&nbsp;</div>", 
                        "<code>date [<i>OPTION</i>]... [+<i>FORMAT</i>]</code><div><code>date [-u|--utc|--universal] [<i>MMDDhhmm</i>[[<i>CC</i>]<i>YY</i>][.<i>ss</i>]]&nbsp;</code></div>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "n8+415/D2z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date string", 
                        "", 
                        "The <code>--date=<i>STRING</i></code> is a mostly free format human readable <code>date</code> string \nsuch as <code>Sun, 29 Feb 2004 16:21:42 -0800</code> or <code>2004-02-29 16:21:42</code>&nbsp;or even <code>next Thursday</code>. A <code>date</code>\n string may contain items indicating calendar date, time of day, time \nzone, day of\nweek, relative time, relative date, and numbers. An empty string \nindicates the beginning of the day. The <code>date</code> string format is more \ncomplex than is easily\ndocumented here but is fully described in the info documentation.\n", 
                        "", 
                        "", 
                        "", 
                        "<dt><b><br /></b></dt>", 
                        "https://linux.die.net/man/1/date"
                    ], 
                    "flags": 0, 
                    "guid": "G>Dcp|U(/,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "date"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -o", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expression</u>&nbsp;-o&nbsp;<u>expression</u>", 
                        "", 
                        "Logical OR operator,&nbsp;<b>POSIX</b>&nbsp;compliant. The expression evaluates to true if either expression is true. The second expression is not evaluated if the first expression is true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rZA}GVq46G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -a", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expression</u>&nbsp;-a&nbsp;<u>expression</u>", 
                        "", 
                        "Logical AND operator, explicit (does not have to be specified) and&nbsp;<b>POSIX</b>&nbsp;compliant. The expression evaluates to true if both expressions are true. The second expression is not evaluated if the first expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q5Eyj&}$h0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator ,", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expr1</u>,&nbsp;<u>expr2</u>", 
                        "", 
                        "List; both <code><u>expr1</u></code> and <code><u>expr2</u></code> are always evaluated. The value of&nbsp;<code><u>expr1</u></code>&nbsp;is discarded; the value of the list is the value of&nbsp;<code><u>expr2</u></code>.\nThe comma operator can be useful for searching for several different \ntypes of thing, but traversing the filesystem hierarchy only once. The <code>-fprintf</code>\naction can be used to list the various matched items into several different output files.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xcP(sQPl+T", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -d", 
                        "mapfile", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "", 
                        "The first character of <code>delim</code> is used to terminate each input line, rather than newline.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oQ5L<-cJ``", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -u", 
                        "mapfile", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "", 
                        "Read lines from file descriptor <code><i>fd</i></code>&nbsp;instead of the standard input.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xYgQCxfrdb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -t", 
                        "mapfile", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "", 
                        "Remove a trailing <code><i>delim</i></code> (default newline) from each line read.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m:apZ,,+2`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -s", 
                        "mapfile", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "", 
                        "Discard the first <code><i>count</i></code> lines read.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ma-+;(q$xZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -n", 
                        "mapfile", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "", 
                        "Copy at most <code><i>count</i></code> lines. If <code><i>count</i></code> is <code><i>0</i></code>, all lines are copied.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jyomAAaN8w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -O", 
                        "mapfile", 
                        "", 
                        "-O", 
                        "", 
                        "", 
                        "", 
                        "Begin assigning to array at index <code><i>origin</i></code>. The default index is <code><i>0</i></code>.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u4|T3f?%>B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -C", 
                        "mapfile", 
                        "", 
                        "-C", 
                        "", 
                        "", 
                        "", 
                        "Evaluate <code><i>callback</i></code> each time <code><i>quantum</i></code> lines are read. The <code><strike>-c</strike></code> option specifies <code><i>quantum</i></code>.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code><div><br /></div><div>If&nbsp;<code>-C</code>&nbsp;is specified without&nbsp;<code>-c</code>, the default <code><i>quantum</i></code> is <code>5000</code>. When<code>&nbsp;<i>callback</i></code>&nbsp;is evaluated, it is supplied the index of the next array element to be assigned and the line to be assigned to that element as additional arguments.&nbsp;<code><i>callback</i></code>&nbsp;is evaluated after the line is read but before the array element is assigned.</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q&4lgn[&MH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -c", 
                        "mapfile", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "", 
                        "Specify the number of lines read between each call to <code><i>callback</i></code>.", 
                        "<code>mapfile [-d <i>delim</i>] [-n <i>count</i>] [-O <i>origin</i>] [-s <i>count</i>] [-t] [-u <i>fd</i>] [-C <i>callback</i>] [-c <i>quantum</i>] [<i>array</i>]</code><div><br /></div><div>If&nbsp;<code>-C</code>&nbsp;is specified without&nbsp;<code>-c</code>, the default <code><i>quantum</i></code> is <code>5000</code>. When<code>&nbsp;<i>callback</i></code>&nbsp;is evaluated, it is supplied the index of the next array element to be assigned and the line to be assigned to that element as additional arguments.&nbsp;<code><i>callback</i></code>&nbsp;is evaluated after the line is read but before the array element is assigned.</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yT+!o9E{[J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash", 
                        "mapfile"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;unalias -a", 
                        "unalias", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "", 
                        "Remove all aliases.", 
                        "<code>unalias -a</code>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x^aN+xF/[3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt", 
                        "apt", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Advanced Package Tool is the command-line tool for handling packages. It provides a commandline interface for the package management of the system. See also <code>apt-get(8)</code> and <code>apt-cache(8)</code> for more low-level command options.", 
                        "<div><code>apt [-h] [-o=<u>config_string</u>] [-c=<u>config_file</u>] [-t=<u>target_release</u>] [-a=<u>architecture</u>]&nbsp;{list | search | show | update | install <u>pkg</u> [{=<u>pkg_version_number</u> | /<u>target_release</u>}]... &nbsp;| remove <u>pkg</u>... &nbsp;| upgrade | full-upgrade | edit-sources | {-v | --version} | {-h | --help}}</code></div>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "ASGY`^Z_ry", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt list", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "list", 
                        "", 
                        "Displays a list of packages. It supports shell pattern for matching package names and the following options: <code>--installed</code>, <code>--upgradable</code>, <code>--all-versions</code> are supported.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Aa2>;*rm4z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt list --installed", 
                        "apt list", 
                        "", 
                        "", 
                        "--installed", 
                        "", 
                        "", 
                        "Displays list of installed packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vq(ukU2saQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt list --upgradable", 
                        "apt list", 
                        "", 
                        "", 
                        "--upgradable", 
                        "", 
                        "", 
                        "Displays list of packages with updates available.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y_(GakOs_}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt list --all-versions", 
                        "apt list", 
                        "", 
                        "", 
                        "--all-versions", 
                        "", 
                        "", 
                        "Displays list of all versions of packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uJhA%khWg!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt search", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "search", 
                        "", 
                        "searches for the given term(s) and display matching packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jqpA6ot21a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt show", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "show", 
                        "", 
                        "shows the package information for the given package(s)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lo7P=]a~Hp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt install", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "install", 
                        "", 
                        "followed by one or more package names desired for installation or upgrading<div><br /></div><div>A specific version of a package can be selected for installation by following the package name with an equals and the version of the package to select. This will cause that version to be located and selected for install. Alternatively a specific distribution can be selected by following the package name with a slash and the version of the distribution or the Archive name\n           (<code>stable</code>, <code>testing</code>, <code>unstable</code>).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MNB@M_gJQ<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt remove", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "remove", 
                        "", 
                        "Identical to <code>install</code> except packages are removed instead of installed. Note removing a package leaves its configuration files on the system.<div><br /></div><div>If a plus sign is appended to the package name (with no intervening space), the identified package will be installed instead of removed.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cut`bct.B.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt edit-sources", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "edit-sources", 
                        "", 
                        "lets you edit your <code>sources.list</code> file and provides basic sanity checks", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D37n~39RCy", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt update", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "update", 
                        "", 
                        "used to resynchronize the package index files from their sources", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HjqKly<o#]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt upgrade", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "upgrade", 
                        "", 
                        "Used to install the newest versions of all packages currently installed on the system from the sources enumerated in <code>/etc/apt/sources.list</code>. New package will be installed, but existing package will never removed.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i$1Moss>[k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt full-upgrade", 
                        "apt", 
                        "cmd", 
                        "", 
                        "", 
                        "full-upgrade", 
                        "", 
                        "performs the function of upgrade but may also remove installed packages if that is required in order to resolve a package conflict", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fw(;3ZWkN/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt --help", 
                        "apt", 
                        "", 
                        "-h", 
                        "--help", 
                        "", 
                        "", 
                        "Show a short usage summary.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MDpoSp/f%[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt --version", 
                        "apt", 
                        "", 
                        "-v", 
                        "--version", 
                        "", 
                        "", 
                        "Show the program version.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w0=QWLS2?O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt --config-file", 
                        "apt", 
                        "", 
                        "-c=<u>config_file</u>", 
                        "--config-file=<u>config_file</u>", 
                        "", 
                        "", 
                        "Specify a configuration file to use. The program will read the default configuration file and then this configuration file. If configuration settings need to be set before the default configuration files are parsed specify a file with the <code> APT_CONFIG</code> environment variable. See <code>apt.conf(5)</code> for syntax information.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D9-AFqM61$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apt --option", 
                        "apt", 
                        "", 
                        "-o=<u>config_string</u>", 
                        "--option=<u>config_string</u>", 
                        "", 
                        "", 
                        "Set arbitrary configuration option(s). The syntax is <code>-o Foo::Bar=bar</code>. Can be used multiple times to set different options.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E)am^:.mzk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "overriding <code>apt</code> configuration file", 
                        "", 
                        "For boolean options you can use something like <code>-f-</code>,<code>--no-f</code>, <code>-f=no</code> or several other variations.", 
                        "", 
                        "", 
                        "reverse", 
                        "apt options&nbsp;", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BIM1*e}FC`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "apt", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "using&nbsp;<code>apt</code> in scripts", 
                        "", 
                        "The <code>apt(8)</code> commandline is designed as a end-user tool and it may change the output between versions. While it tries to not break backward compatibility there is no guarantee for it either. All features of <code>apt(8)</code> are available in <code>apt-cache(8)</code> and <code>apt-get(8)</code> via <b>APT options</b>. Please prefer using these commands in your scripts.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "..%/!%{;s", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>apt</code> vs. <code>apt-get</code>", 
                        "", 
                        "The <code> apt</code> command is meant to be pleasant for end users and does not need to be backward compatible like <code>apt-get</code>. Therefore some options are different:<div><br /></div><div><ul style=\"margin-left: 20px; \"><li>The option <code>DPkgPM::Progress-Fancy</code> is enabled.</li><li>The option <code>APT::Color</code> is enabled.</li><li>A new list command is available similar to <code>dpkg --list</code>.</li><li>The option upgrade has <code>--with-new-pkgs</code> enabled by default.</li></ul></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e=}v7=n8:C", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "apt"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;not-installed", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "not-installed", 
                        "", 
                        "The package is not installed on your system.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d3@Q!d%j=o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;config-files", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "config-files", 
                        "", 
                        "Only the configuration files of the package exist on the system.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n.e}W$nZ2o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;half-installed", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "half-installed", 
                        "", 
                        "The installation of the package has been started, but not completed for some reason.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dqlRYy$l]C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;unpacked", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "unpacked", 
                        "", 
                        "The package is unpacked, but not configured.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L`KMn_k,|V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;half-configured", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "half-configured", 
                        "", 
                        "The package is unpacked and configuration has been started, but not yet completed for some reason.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uh8l4>/G:T", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;triggers-awaited", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "triggers-awaited", 
                        "", 
                        "The package awaits trigger processing by another package.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t,7&YtapIK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;triggers-pending", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "triggers-pending", 
                        "", 
                        "The package has been triggered.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PAu>VXE<=d", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg state&nbsp;installed", 
                        "dpkg", 
                        "package state", 
                        "", 
                        "", 
                        "installed", 
                        "", 
                        "The package is unpacked and configured OK.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i*e(R#[3x}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg selection state&nbsp;install", 
                        "dpkg", 
                        "package selection state", 
                        "", 
                        "", 
                        "install", 
                        "", 
                        "The package is selected for installation.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Nc>g/l/>!j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg selection state&nbsp;hold", 
                        "dpkg", 
                        "package selection state", 
                        "", 
                        "", 
                        "hold", 
                        "", 
                        "The package is not handled by <code>dpkg</code>&nbsp;unless forced to do that with option <code>--force-hold</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ouX0}Z6Ief", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg selection state&nbsp;deinstall", 
                        "dpkg", 
                        "package selection state", 
                        "", 
                        "", 
                        "deinstall", 
                        "", 
                        "The package is selected for deinstallation (i.e. we want to remove all files, except configuration files).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j-z+}@S.kt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg selection state&nbsp;purge", 
                        "dpkg", 
                        "package selection state", 
                        "", 
                        "", 
                        "purge", 
                        "", 
                        "The package is selected to be purged (i.e. we want to remove everything from system directories, even configuration files).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DL..m1}lu_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg selection flag&nbsp;reinst-required", 
                        "dpkg", 
                        "package flag", 
                        "", 
                        "", 
                        "reinst-required", 
                        "", 
                        "<div>The package is marked as broken and requires reinstallation. These packages cannot be removed, unless forced with option&nbsp;<code>--force-remove-reinstreq</code>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oPFP?KCq6A", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg", 
                        "dpkg", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        " This is a tool to install, build, remove and manage Debian packages. The primary and more user-friendly front-end is <code>aptitude</code>. This tool &nbsp;is  controlled  entirely  via  command  line  parameters,  which consist of exactly one action and zero or more options. The action-parameter says what to do and\n       options control the behavior of the action in some way.<div><br /></div><div>This tool can also be used as a front-end to <code><strike>dpkg-deb</strike></code>&nbsp;and <code><strike>dpkg-query</strike></code>. The list of supported actions can be found later on in the ACTIONS section. If  any  such\n       action  is  encountered, this tool just runs <code><strike>dpkg-deb</strike></code> or <code><strike>dpkg-query</strike></code> with the parameters given to it, but no specific options are currently passed to them, to use any\n       such option the back-ends need to be called directly.</div>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "AdMvR/XEb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dpkg actions/options REMINDER", 
                        "dpkg", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Reminder to make cards for actions and options", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "b!er:X~NjS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "dpkg", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "see installed packages on Ubuntu", 
                        "", 
                        "The <code>apt</code> tool on Ubuntu 14.04 and above makes this very easy:&nbsp;<code>apt list --installed</code><div><br /></div><div>Otherwise:\n<code>dpkg --get-selections | grep -v deinstall</code></div><div><br /></div><div>Or:\n\n<code>dpkg [ -l | --list ] <u>package-name-pattern</u></code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r_Fvi)8Xh%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "backup settings and installed packages", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">dpkg --get-selections &gt; ~/Package.list\nsudo cp -R /etc/apt/sources.list* ~/\nsudo apt-key exportall &gt; ~/Repo.keys\nrsync --progress /home/<span style=\"color: #ed9d13\">`</span>whoami<span style=\"color: #ed9d13\">`</span> /path/to/user/profile/backup/here\n\n<span style=\"color: #999999; font-style: italic\">##  Reinstall</span>\nrsync --progress /path/to/user/profile/backup/here /home/<span style=\"color: #ed9d13\">`</span>whoami<span style=\"color: #ed9d13\">`</span>\nsudo apt-key add ~/Repo.keys\nsudo cp -R ~/sources.list* /etc/apt/\nsudo apt-get update\nsudo apt-get install dselect\nsudo dpkg --set-selections &lt; ~/Package.list\nsudo dselect\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDAzNDA0MTcsICJpZCI6ICIxNTAwMzQwMDkyNTIxLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGRwa2cgLS1nZXQtc2VsZWN0aW9ucyAmZ3Q7IH4vUGFja2FnZS5saXN0XG4gICAgc3VkbyBjcCAtUiAvZXRjL2FwdC9zb3VyY2VzLmxpc3QqIH4vXG4gICAgc3VkbyBhcHQta2V5IGV4cG9ydGFsbCAmZ3Q7IH4vUmVwby5rZXlzXG4gICAgcnN5bmMgLS1wcm9ncmVzcyAvaG9tZS9gd2hvYW1pYCAvcGF0aC90by91c2VyL3Byb2ZpbGUvYmFja3VwL2hlcmVcbiAgXG4gICAgIyMgIFJlaW5zdGFsbFxuICAgIHJzeW5jIC0tcHJvZ3Jlc3MgL3BhdGgvdG8vdXNlci9wcm9maWxlL2JhY2t1cC9oZXJlIC9ob21lL2B3aG9hbWlgXG4gICAgc3VkbyBhcHQta2V5IGFkZCB+L1JlcG8ua2V5c1xuICAgIHN1ZG8gY3AgLVIgfi9zb3VyY2VzLmxpc3QqIC9ldGMvYXB0L1xuICAgIHN1ZG8gYXB0LWdldCB1cGRhdGVcbiAgICBzdWRvIGFwdC1nZXQgaW5zdGFsbCBkc2VsZWN0XG4gICAgc3VkbyBkcGtnIC0tc2V0LXNlbGVjdGlvbnMgJmx0OyB+L1BhY2thZ2UubGlzdFxuICAgIHN1ZG8gZHNlbGVjdFxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v[a*;+6E-[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "check mail", 
                        "", 
                        "<div><code>less +G $MAIL\n</code></div><div><code><br /></code></div><div><code>mail</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q&o<fESz?j", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "truncate mail", 
                        "", 
                        "<div><code>&gt; $MAIL</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MGgvAm!}IR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "install", 
                        "", 
                        "Install packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "RfI6.r}x3,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip uninstall", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "uninstall", 
                        "", 
                        "Uninstall packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qALEYv3)(H", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip freeze", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "freeze", 
                        "", 
                        "Output installed packages in requirements format.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jr)4%{x1)a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip list", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "list", 
                        "", 
                        "List installed packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hsj&|]5JbN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip show", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "show", 
                        "", 
                        "Show information about installed packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B_Ea[7[Nz}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip search", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "search", 
                        "", 
                        "Search PyPI for packages.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AJZ:nXy-c&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip wheel", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "wheel", 
                        "", 
                        "Build wheels from your requirements.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FT!%%b)9at", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip help", 
                        "pip", 
                        "cmd", 
                        "", 
                        "", 
                        "help", 
                        "", 
                        "Show help for commands.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p<d&rq7V1B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip[3]", 
                        "pip[3]", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "A  Python package installer, recommended for installing Python packages which are not available in the Debian archive.  It can work with version control repositories (currently only Git, Mercurial, and Bazaar repositories), logs output extensively, and prevents partial installs by downloading all requirements before starting installation.<div><br /></div><div>On Debian, this command is used when installing packages for <b>Python 2</b>, while the command to use when installing packages for <b>Python 3</b> is the same but ends with <code>3</code>.</div>", 
                        "<div><code>pip &lt;command&gt; [options]</code></div><div><code>pip3 &lt;command&gt; [options]</code></div>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "M5`N-^%MRg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --help", 
                        "pip", 
                        "", 
                        "-h", 
                        "--help", 
                        "", 
                        "", 
                        "Show more detailed command help.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "djq03ROH/`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --verbose", 
                        "pip", 
                        "", 
                        "-v", 
                        "--verbose", 
                        "", 
                        "", 
                        "Give more output. Option is additive, and can be used up to 3 times.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "og6mh)F6}a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --version", 
                        "pip", 
                        "", 
                        "-V", 
                        "--version", 
                        "", 
                        "", 
                        "Show version and exit.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ua&>C;[I0s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --quiet", 
                        "pip", 
                        "", 
                        "-q", 
                        "--quiet", 
                        "", 
                        "", 
                        "Give less output.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k!U.8?}=gR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --log-file", 
                        "pip", 
                        "", 
                        "", 
                        "--log-file <u>path</u>", 
                        "", 
                        "", 
                        "Path to a verbose non-appending log, that only logs failures.  This log is active by default at <code>~/.pip/pip.log</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B/u3]juQP<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --log", 
                        "pip", 
                        "", 
                        "", 
                        "--log <u>path</u>", 
                        "", 
                        "", 
                        "Path to a verbose appending log.  This log is inactive by default.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q1`w9&c73}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --proxy", 
                        "pip", 
                        "", 
                        "", 
                        "--proxy <u>proxy</u>", 
                        "", 
                        "", 
                        "Specify a proxy in the form <code>[user:passwd@]proxy.server:port</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eGQa`a=B7D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --timeout", 
                        "pip", 
                        "", 
                        "", 
                        "--timeout <u>sec</u>", 
                        "", 
                        "", 
                        "Set the socket timeout (default 15 seconds).", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v@I.GnwL{>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --exists-action", 
                        "pip", 
                        "", 
                        "", 
                        "--exists-action <u>action</u>", 
                        "", 
                        "", 
                        "Default action when a path already exists: <code>(s)witch</code>, <code>(i)gnore</code>, <code>(w)ipe</code>, <code>(b)ackup</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s;=(?Xja5k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip --cert", 
                        "pip", 
                        "", 
                        "", 
                        "--cert <u>path</u>", 
                        "", 
                        "", 
                        "Path to alternate CA bundle.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "X3MGNW~Zw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --editable", 
                        "pip install", 
                        "", 
                        "-e <u>path/url</u>", 
                        "--editable <u>path/url</u>", 
                        "", 
                        "", 
                        "Install a project in editable mode (i.e.  setuptools \"develop mode\") from a local project path or a VCS url.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GZM_}pPtAR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --requirement", 
                        "pip install", 
                        "", 
                        "-r <u>file</u>", 
                        "--requirement <u>file</u>", 
                        "", 
                        "", 
                        "Install from the given requirements file.  This option can be used multiple times.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D$kBTEK0Sh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --build", 
                        "pip install", 
                        "", 
                        "-b <u>dir</u>", 
                        "--build <u>dir</u>", 
                        "", 
                        "", 
                        "Directory to unpack packages into and build in.  The default in a virtualenv is <code>&lt;venv path&gt;/build</code>.  The default for global installs is <code>&lt;OS temp dir&gt;/pip_build_&lt;username&gt;</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": ",Zq1CjoQ(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --target", 
                        "pip install", 
                        "", 
                        "-t <u>dir</u>", 
                        "--target <u>dir</u>", 
                        "", 
                        "", 
                        "Install packages into <code><u>dir</u></code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x7)5Fg2J5c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --download", 
                        "pip install", 
                        "", 
                        "-d <u>dir</u>", 
                        "--download <u>dir</u>", 
                        "", 
                        "", 
                        "Download packages into <code><u>dir</u></code> instead of installing them, regardless of what's already installed.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Qs_uf)]Dh$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --download-cache", 
                        "pip install", 
                        "", 
                        "", 
                        "--download-cache <u>dir</u>", 
                        "", 
                        "", 
                        "Cache downloaded packages in <code><u>dir</u></code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bi3{c]Wij{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --src", 
                        "pip install", 
                        "", 
                        "", 
                        "--src <u>dir</u>", 
                        "", 
                        "", 
                        "Directory to check out editable projects into.  The default in a virtualenv is <code>&lt;venv path&gt;/src</code>.  The default for global installs is <code>&lt;current dir&gt;/src</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w$|I^F7DV6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --upgrade", 
                        "pip install", 
                        "", 
                        "-U", 
                        "--upgrade", 
                        "", 
                        "", 
                        "Upgrade all packages to the newest available version.  This process is recursive regardless of whether a dependency is already satisfied.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G~/pr%TY_9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --force-reinstall", 
                        "pip install", 
                        "", 
                        "", 
                        "--force-reinstall", 
                        "", 
                        "", 
                        "When upgrading, reinstall all packages even if they are already up-to-date.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "npvur2o<b@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --ignore-installed", 
                        "pip install", 
                        "", 
                        "-I", 
                        "--ignore-installed", 
                        "", 
                        "", 
                        "Ignore the installed packages (reinstalling instead).", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P(~8:HWlJ!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --no-deps", 
                        "pip install", 
                        "", 
                        "", 
                        "--no-deps", 
                        "", 
                        "", 
                        "Don't install package dependencies.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xp(BtucXWS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --install-option", 
                        "pip install", 
                        "", 
                        "", 
                        "--install-option <u>options</u>", 
                        "", 
                        "", 
                        "Extra arguments to be supplied to the setup.py install command (use like <code><strike>--install-option</strike> =\"--install-scripts=/usr/local/bin\"</code>). Use multiple times to pass multiple options to <code>setup.py</code> install. If you are using an option with a directory path, be sure to use absolute path.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xRr8q`e~}m", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --global-option", 
                        "pip install", 
                        "", 
                        "", 
                        "--global-option <u>options</u>", 
                        "", 
                        "", 
                        "Extra global options to be supplied to the <code>setup.py</code> call before the install command.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bNjaXas4c|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --user", 
                        "pip install", 
                        "", 
                        "", 
                        "--user", 
                        "", 
                        "", 
                        "Install using the user scheme.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Eb*,j,YgL=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --egg", 
                        "pip install", 
                        "", 
                        "", 
                        "--egg", 
                        "", 
                        "", 
                        "Install packages as eggs, not ‘flat’, like <code>pip</code> normally does. This option is not about installing <i>from</i> eggs. <div><br /></div><div><b>WARNING:</b> Because this option overrides <code>pip</code>’s normal install logic, requirements files may not behave as expected.</div>", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f,;w-Ohe+q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --root", 
                        "pip install", 
                        "", 
                        "", 
                        "--root <u>dir</u>", 
                        "", 
                        "", 
                        "Install everything relative to this alternate root directory.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Mlda(lWlc[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --compile", 
                        "pip install", 
                        "", 
                        "", 
                        "--compile", 
                        "", 
                        "", 
                        "Compile <code>py</code> files to <code>pyc</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yWPkNPXR3X", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --no-compile", 
                        "pip install", 
                        "", 
                        "", 
                        "--no-compile", 
                        "", 
                        "", 
                        "Do not compile <code>py</code> files to <code>pyc</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dcf]Byb=%:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --no-use-wheel", 
                        "pip install", 
                        "", 
                        "", 
                        "--no-use-wheel", 
                        "", 
                        "", 
                        "Do not find and prefer wheel archives when searching indexes and find-links locations.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K96F5l[bp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --pre", 
                        "pip install", 
                        "", 
                        "", 
                        "--pre", 
                        "", 
                        "", 
                        "Include pre-release and development versions. By default, <code>pip</code> only finds stable versions.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FS;_83(,Rg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --no-clean", 
                        "pip install", 
                        "", 
                        "", 
                        "--no-clean", 
                        "", 
                        "", 
                        "Don’t clean up build directories.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oL9#dkPt1G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --index-url", 
                        "pip install", 
                        "", 
                        "-i <u>url</u>", 
                        "--index-url <u>url</u>", 
                        "", 
                        "", 
                        "Base URL of Python Package Index<div><i>Default: https://pypi.python.org/simple/</i></div>", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eqzitC2p9I", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --extra-index-url", 
                        "pip install", 
                        "", 
                        "", 
                        "--extra-index-url <u>url</u>", 
                        "", 
                        "", 
                        "Extra URLs of package indexes to use in addition to <code>--index-url</code>.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O@yfwb2API", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --no-index", 
                        "pip install", 
                        "", 
                        "", 
                        "--no-index", 
                        "", 
                        "", 
                        "Ignore package index (only looking at <code>--find-links</code> URLs instead).", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LcQ?:rl@)(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --find-links", 
                        "pip install", 
                        "", 
                        "-f <u>url</u>", 
                        "--find-links <u>url</u>", 
                        "", 
                        "", 
                        "If a url or path to an html file, then parse for links to archives. If a local path or <code>file://</code> url that’s a directory, then look for archives in the directory listing.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AUxC7QO9fu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --allow-external", 
                        "pip install", 
                        "", 
                        "", 
                        "--allow-external <u>package</u>", 
                        "", 
                        "", 
                        "Allow the installation of externally hosted files", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eS_jYFZfR*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --allow-all-external", 
                        "pip install", 
                        "", 
                        "", 
                        "--allow-all-external", 
                        "", 
                        "", 
                        "Allow the installation of all externally hosted files", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t5UO&hS}bK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --allow-unverified", 
                        "pip install", 
                        "", 
                        "", 
                        "--allow-unverified <u>package</u>", 
                        "", 
                        "", 
                        "Allow the installation of insecure and unverifiable files", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hw**QxE4~`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip install --process-dependency-links", 
                        "pip install", 
                        "", 
                        "", 
                        "--process-dependency-links", 
                        "", 
                        "", 
                        "Enable the processing of dependency links.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e$k98*=3fF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pip uninstall --requirement", 
                        "pip uninstall", 
                        "", 
                        "-r <u>file</u>", 
                        "--requirement <u>file</u>", 
                        "", 
                        "", 
                        "Uninstall all the packages listed in the given requirements file.  This option can be used multiple times.", 
                        "<div><br /></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v&N=yFA<hZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>pip install</code> installs packages from these", 
                        "", 
                        "<ul style=\"margin-left: 20px; \"><li>PyPI (a.k.a. The Cheeseshop) and other indexes, using requirements specifiers</li><li>VCS project urls</li><li>Local project directories</li><li>Local or remote source archives</li></ul>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oIzOAGS((y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>pip uninstall</code> fails on these", 
                        "", 
                        "<ul style=\"margin-left: 20px; \"><li>Pure distutils packages installed with <code>python setup.py install</code>, which leave behind no metadata to determine what files were installed</li><li>Script wrappers installed by <code>python setup.py develop</code></li></ul>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "<%<ZufS8(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "pip"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>diff</code> output of two commands", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">diff &lt;<span style=\"color: #d0d0d0\">(</span>ls old<span style=\"color: #d0d0d0\">)</span> &lt;<span style=\"color: #d0d0d0\">(</span>ls new<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDU4OTcsICJpZCI6ICIxNTAwNDA1ODYzODU4LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGRpZmYgJmx0OyhscyBvbGQpICZsdDsobHMgbmV3KVxuIn0=---->", 
                        "", 
                        "Also try:&nbsp;<code>echo &lt;(echo) &lt;(echo)</code>", 
                        "", 
                        "", 
                        "https://askubuntu.com/questions/229447/how-do-i-diff-the-output-of-two-commands"
                    ], 
                    "flags": 0, 
                    "guid": "zLwXS7.r{K", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "diff"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ignore errors", 
                        "", 
                        "<div>append&nbsp;&nbsp;<code>2&gt;/dev/null</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DfF$:sUWhg", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "make 10M file", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999;font-style: italic\"># three ways:</span>\nmkfile 10m 10.txt\ndd <span style=\"color: #6ab825; font-weight: bold\">if</span><span style=\"color: #d0d0d0\">=</span>/dev/zero <span style=\"color: #40ffff\">of</span><span style=\"color: #d0d0d0\">=</span>10.txt  <span style=\"color: #40ffff\">bs</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #3677a9\">1024</span>  <span style=\"color: #40ffff\">count</span><span style=\"color: #d0d0d0\">=</span>10240\ndd <span style=\"color: #6ab825; font-weight: bold\">if</span><span style=\"color: #d0d0d0\">=</span>/dev/zero <span style=\"color: #40ffff\">of</span><span style=\"color: #d0d0d0\">=</span>10.txt  <span style=\"color: #40ffff\">bs</span><span style=\"color: #d0d0d0\">=</span>1M  <span style=\"color: #40ffff\">count</span><span style=\"color: #d0d0d0\">=</span>10\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDkyMDYsICJpZCI6ICIxNTAwNDA5MTUwMTYwLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgICMgdGhyZWUgd2F5czpcbiAgICBta2ZpbGUgMTBtIDEwLnR4dFxuICAgIGRkIGlmPS9kZXYvemVybyBvZj0xMC50eHQgIGJzPTEwMjQgIGNvdW50PTEwMjQwXG4gICAgZGQgaWY9L2Rldi96ZXJvIG9mPTEwLnR4dCAgYnM9MU0gIGNvdW50PTEwXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N8LdV^DA,5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "make sound", 
                        "", 
                        "<div><code>tput bel</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E^1[2zMqGV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "extract with <code>tar</code> to directory", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">tar -zxvf <span style=\"color: #40ffff\">$FILE</span>.tar.gz -C <span style=\"color: #40ffff\">$DEST_PATH</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk0NTYsICJpZCI6ICIxNTAwNDA5MzMzODg0LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHRhciAtenh2ZiAkRklMRS50YXIuZ3ogLUMgJERFU1RfUEFUSFxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MEb%k)e~bU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "extract with <code>tar</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">tar -zxvf <span style=\"color: #40ffff\">$FILE</span>.tar.gz\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk0NzcsICJpZCI6ICIxNTAwNDA5NDY0NDk0LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHRhciAtenh2ZiAkRklMRS50YXIuZ3pcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f1dg<)GCMU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "compress directory with <code>tar</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">tar -zcvf <span style=\"color: #40ffff\">$FILE</span>.tar.gz <span style=\"color: #40ffff\">$PATH</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk0OTQsICJpZCI6ICIxNTAwNDA5NDc4ODQ4LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHRhciAtemN2ZiAkRklMRS50YXIuZ3ogJFBBVEhcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nhg)6xJV-d", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "tar"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "replace text in all found files", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find /var/www -type f -name <span style=\"color: #ed9d13\">\"*.html\"</span> -print0 <span style=\"color: #d0d0d0\">|</span> xargs -0 sed -i <span style=\"color: #ed9d13\">'s/OLD/NEW/g'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk3MzMsICJpZCI6ICIxNTAwNDA5NDk2NjQ1LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZpbmQgL3Zhci93d3cgLXR5cGUgZiAtbmFtZSAmcXVvdDsqLmh0bWwmcXVvdDsgLXByaW50MCB8IHhhcmdzIC0wIHNlZCAtaSAmYXBvcztzL09MRC9ORVcvZyZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g@qXVMXY[g", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find", 
                        "sed"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "replace text in a file", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sed -i <span style=\"color: #ed9d13\">'s/OLD/NEW/g'</span> pl.sql\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk3ODIsICJpZCI6ICIxNTAwNDA5NzU2NDcxLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNlZCAtaSAmYXBvcztzL09MRC9ORVcvZyZhcG9zOyBwbC5zcWxcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rMSuox!9M_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "sed"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "truncate file to first 100 lines with <code>sed</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sed -i <span style=\"color: #ed9d13\">'100,$ d'</span> filename\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk4MDEsICJpZCI6ICIxNTAwNDA5Nzg1MTU3LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNlZCAtaSAmYXBvczsxMDAsJCBkJmFwb3M7IGZpbGVuYW1lXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IC~|H`;~u/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "sed"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "count PHP errors in Apache log", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">time </span>cat /var/log/apache2/error.log <span style=\"color: #d0d0d0\">|</span>\n    sed -n <span style=\"color: #ed9d13\">'s/.*client 127.0.0.1]\\s\\(PHP .*\\)/\\1/p'</span> <span style=\"color: #d0d0d0\">|</span>\n    sort <span style=\"color: #d0d0d0\">|</span> uniq -c <span style=\"color: #d0d0d0\">|</span> sort -rn**\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEyMTAxOTgsICJpZCI6ICIxNTAwNDA5ODAzOTg4LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHRpbWUgY2F0IC92YXIvbG9nL2FwYWNoZTIvZXJyb3IubG9nIHxcbiAgICAgICAgc2VkIC1uICZhcG9zO3MvLipjbGllbnQgMTI3LjAuMC4xXVxcc1xcKFBIUCAuKlxcKS9cXDEvcCZhcG9zOyB8XG4gICAgICAgIHNvcnQgfCB1bmlxIC1jIHwgc29ydCAtcm4qKlxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P+)fj;~ohu", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "sed"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delete lines in <code>filename</code> containing <code>SEARCH</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sed -i <span style=\"color: #ed9d13\">'/SEARCH/d'</span> filename\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDk5MjgsICJpZCI6ICIxNTAwNDA5ODYwMzQ2LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNlZCAtaSAmYXBvczsvU0VBUkNIL2QmYXBvczsgZmlsZW5hbWVcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gtdi-86V-[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "sed"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "copy <code>infile</code>&nbsp;to <code>outfile</code> without lines containing <code>hello</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sed <span style=\"color: #ed9d13\">'/hello/d'</span> infile &gt; outfile\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MTAwMDMsICJpZCI6ICIxNTAwNDA5OTMxMTI4LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNlZCAmYXBvczsvaGVsbG8vZCZhcG9zOyBpbmZpbGUgJmd0OyBvdXRmaWxlXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tZrf^@Ikx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "sed"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find files owned by root", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find . -uid 0\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MTAwNzMsICJpZCI6ICIxNTAwNDEwMDA1MTk4LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZpbmQgLiAtdWlkIDBcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A0HSQIq;Hx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "change <code>root</code> owned files to <code>www-data</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sudo find . -uid <span style=\"color: #3677a9\">0</span> -exec chown www-data:www-data <span style=\"color: #d0d0d0\">{}</span> <span style=\"color: #ed9d13\">\\;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MTAxMDYsICJpZCI6ICIxNTAwNDEwMDc3MjMwLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHN1ZG8gZmluZCAuIC11aWQgMCAtZXhlYyBjaG93biB3d3ctZGF0YTp3d3ctZGF0YSB7fSBcXDtcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o>w]A~FR5^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Vim cut/copy and paste sequence", 
                        "", 
                        "<kbd>v</kbd>, or <kbd>V</kbd> for whole lines<div><kbd>d</kbd>&nbsp;for cut or <kbd>y</kbd> for copy</div><div><kbd>P</kbd> to paste before cursor or <kbd>p</kbd>&nbsp;after</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ABqo!X1D4M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing R", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "R", 
                        "", 
                        "Enter <b>Replace</b> mode: Each character you type replaces&nbsp;an existing character, starting with the character&nbsp;under the cursor. [Repeat the entered text <code><i>count</i>-1</code><span class=\"Apple-tab-span\" style=\"white-space:pre\"> </span>times.]&nbsp;(does not enter insert mode, but hit <kbd>Esc</kbd> to stop)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FDD[%h5N4n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "comment code blocks in <code>vim</code>", 
                        "", 
                        "<div class=\"_xXc\"><div class=\"_yXc\"><p>For commenting a block of text is almost the same: </p><ol><li>First, go to the first line you want to comment, press&nbsp;<kbd>⌃V</kbd>. This will put the editor in the <code>VISUAL BLOCK</code> mode.</li><li>Use down arrow key to select until the last line.</li><li>Press&nbsp;<kbd>⇧I</kbd>&nbsp;to put the editor in <code>INSERT</code> mode.</li><li>Press <kbd>#</kbd>&nbsp;to add a hash to the first line.</li><li>Press <kbd>Esc</kbd> (give it a second) to insert a <code>#</code>&nbsp;on all other selected lines. </li></ol><p>For the stripped-down version of <b>vim</b> shipped with Debian/Ubuntu by default, type <code>: s/^/#</code> in the third step instead.</p></div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://stackoverflow.com/a/1676690/172602"
                    ], 
                    "flags": 0, 
                    "guid": "kjKi,YlAf<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "uncomment code blocks in <code>vim</code>", 
                        "", 
                        "<div class=\"_xXc\"><div class=\"_yXc\">Put your cursor on the first <code>#</code> character, press <kbd>Ctrl</kbd><kbd>V</kbd> (or <kbd>Ctrl</kbd><kbd>Q</kbd> for gVim), and go down until the last commented line and press <kbd>x</kbd>, that will delete all the <code>#</code> characters vertically.</div><div class=\"_yXc\"><br /></div><div class=\"_yXc\">Or use “<code>r </code> ” to replace with space.</div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://stackoverflow.com/a/1676690/172602"
                    ], 
                    "flags": 0, 
                    "guid": "NYjvnY6Y8$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "use previous search results with regex replacement", 
                        "Vim concept", 
                        "<div>Search, then use empty pattern:</div><div><pre>/my complicated regexp\n:%s//replace with this/</pre></div>", 
                        "example", 
                        "", 
                        "", 
                        "", 
                        "https://stackoverflow.com/a/1295244/172602"
                    ], 
                    "flags": 0, 
                    "guid": "n0X<5Uyzlt", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "insert regex from previous search into replacement", 
                        "<div><br /></div>", 
                        "<div><span class=\"comment-copy\"><kbd>⌃R</kbd><code>/</code></span></div><!--anki-->", 
                        "", 
                        "<span class=\"comment-copy\">(See&nbsp;<code>:help i_CTRL-R</code>) Really useful for similar to above, but you want to capture part of the search results. (like this:&nbsp;</span><code>:%s/\\([fF]rank\\) and mary/marie and \\1/g</code>)", 
                        "", 
                        "", 
                        "https://stackoverflow.com/a/1295244/172602"
                    ], 
                    "flags": 0, 
                    "guid": "ly-cXO*F@d", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>:set expandtab</code>", 
                        "Vim option", 
                        "Insert spaces whenever tab is pressed. Also:&nbsp;<code>:set tabstop=4</code>", 
                        "description", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JtW1r$^n}J", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :retab", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":ret<i>[ab][!] [</i>new_tabstop<i>]</i>", 
                        "", 
                        "Replace all sequences of white-space containing a\n\t\t\t<tab> with new strings of white-space using the new\n\t\t\ttabstop value given.  If you do not specify a new\n\t\t\ttabstop size or it is zero, Vim uses the current value\n\t\t\tof <code>tabstop</code>.\n\t\t\tThe current value of <code>tabstop</code> is always used to\n\t\t\tcompute the width of existing tabs.\n\t\t\tWith <code>!</code>, Vim also replaces strings of only normal\n\t\t\tspaces with tabs where appropriate.\n\t\t\tWith <code>expandtab</code> on, Vim replaces all tabs with the\n\t\t\tappropriate number of spaces.\n\t\t\tThis command sets <code>tabstop</code> to the new value given,\n\t\t\tand if performed on the whole file, which is default,\n\t\t\tshould not make any visible change.\n\t\t\tCareful: This command modifies any </tab><tab> characters\n\t\t\tinside of strings in a C program.  Use <code>\\t</code> to avoid\n\t\t\tthis (that's a good habit anyway). <code>:retab!</code> may also change a sequence of spaces by\n\t\t\t</tab><tab> characters, which can mess up a <code>printf()</code>.</tab>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q}zSmWveKj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :only", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":only", 
                        "", 
                        "close all other split screens", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C/OeGPd+q:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command gi", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code><code>gi</code>", 
                        "", 
                        "start insertion mode with cursor where it was previously", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ofRQsHx:^e", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command g;", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code><code>g;</code>", 
                        "", 
                        "put cursor at point of last edit (can be repeated)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uOt5eXEN0W", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command g,", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code><code>g,</code>", 
                        "", 
                        "put cursor at point of next edit (can be repeated)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E^l{[{)uXT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ^X-F", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code><kbd>⌃X</kbd>F", 
                        "", 
                        "completes using filenames in the current directory", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ff%lTKaMWu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ^X-P", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃X</kbd>P", 
                        "", 
                        "completes using words in the current file with preference for previous words", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s7R.~pFK]<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ^X-N", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code><kbd>⌃X</kbd>N", 
                        "", 
                        "completes using words in the current file with preference for next words", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ky/a(U-Jn{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim option scrolloff", 
                        "vim", 
                        "option", 
                        "", 
                        "", 
                        "<code></code>scrolloff=9999", 
                        "", 
                        "cursor will always stay in the middle of the screen", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E73yy}.Ok}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim exiting :x", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code>:x", 
                        "", 
                        "exit after saving if changes", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u=]ku9`MSD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :shell", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<code></code>:shell", 
                        "", 
                        "launch shell console, <code>^d</code> when done", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MT0JGw611+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ^I", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃I</kbd>", 
                        "", 
                        "jump to next location (even across files)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lpb[>{}4sp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim command ^O", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<kbd>⌃O</kbd>", 
                        "", 
                        "jump to previous (old) location (even across files)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v:.UI^HIKu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "fix for accidentally typing <kbd>⌘R</kbd> in Vim", 
                        "", 
                        "<kbd>⌘R</kbd> causes the terminal to send a reset. Fix by clearing terminal from Vim:&nbsp;<code>:!clear</code>", 
                        "", 
                        "", 
                        "<br />", 
                        "", 
                        "https://superuser.com/q/800088/81094"
                    ], 
                    "flags": 0, 
                    "guid": "g;&*eEj;$^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor f", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "fC", 
                        "", 
                        "find next occurrence of <code>C</code>", 
                        "https://superuser.com/q/800088/81094", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H]<d^I_??*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor H", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "H", 
                        "", 
                        "cursor to highest line on screen (minus <code>scrolloff</code>?)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tB]E*=L@i,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor L", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "L", 
                        "", 
                        "cursor to lowest line on screen (minus <code>scrolloff</code>?)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Rg,0k5.(1;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor M", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "M", 
                        "", 
                        "cursor to middle line on screen", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hf;)$:_7}w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor z", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "z", 
                        "", 
                        "scroll view so cursor ends up in the center of the screen without changing position within the text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s!MH6$dmMf", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor t", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "t", 
                        "", 
                        "scroll view so cursor ends up at the top of the screen without changing position within the text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s/CBfh?;H3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor b", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "b", 
                        "", 
                        "scroll view so cursor ends up at the bottom of the screen without changing position within the text", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oI*|LwIvJ|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search *", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "*", 
                        "", 
                        "searches forward for next occurrence of identifier under cursor", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u<rbg+m;uf", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search #", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "#", 
                        "", 
                        "searches backward for previous occurrence of identifier under cursor", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N?>J5SAzYC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing &gt;aB", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "&gt;aB", 
                        "", 
                        "indent <code>{}</code> block", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JE3I~YQ0|k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing &gt;iB", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "&gt;iB", 
                        "", 
                        "indent contents of&nbsp;<code>{}</code> block", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iE?O~(D(SP", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>\\/</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>\\/</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">next line where the previously used search pattern matches</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Mt}cxT?MZH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>\\?</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>\\?</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">previous line where the previously used search pattern matches</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BHb.PkNTCv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>\\&amp;</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>\\&amp;</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">next line where the previously used substitute pattern matches</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sRBvu,*-Oi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>0;/that</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>0;/that</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">first line containing \"that\" (also matches in the first line)</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C@cZLHGZQD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search :<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>1;/that</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:1;/that</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">first line after line 1 containing \"that\"</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M8zd`N/?%W", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:21,25d</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:21,25d</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">delete lines 21 to 25 inclusive</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qipdkxWD~O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:$d</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:$d</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">delete the last line&nbsp;</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uwB;ciCyqE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:1,.-1d</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:1,.-1d</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">delete all lines before the current line</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j@-*`0Rl7%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:.+1,$d</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:.+1,$d</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">delete all lines after the current line</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h`[m~{Wt{Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:21,25t 30</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:21,25t 30</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">copy lines 21 to 25 inclusive to just after line 30</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iY4*rJkZfK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:$t 0</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:$t 0</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">copy the last line to before the first line</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w]s-62.!2*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:21,25m 30</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:21,25m 30</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">move lines 21 to 25 inclusive to just after line 30</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AxaaSv6F3>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:$m 0</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>:$m 0</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">move the last line to before the first line</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ee[hC,O4Rs", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>dtr</code></span>", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>dtr</code></span>", 
                        "", 
                        "<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\">delete until next <code>r</code></span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sI~b+H(eD!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>iw</code></span>", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "iw", 
                        "", 
                        "inside word", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vpdRTu/ig`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>aw</code></span>", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "aw", 
                        "", 
                        "around word", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A=HUIO~h]w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object&nbsp;<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>ap</code></span>", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "ap", 
                        "", 
                        "around paragraph", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s=juK|Rml<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i<span class=\"gbhIQYEUpn\" id=\"hSXSsPRh\"><code>p</code></span>", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "ip", 
                        "", 
                        "inside paragraph", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bSkwrA^<0@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object is", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "is", 
                        "", 
                        "inside sentence", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Oy=PLGgxn{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object as", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "as", 
                        "", 
                        "around sentence", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O<VaLPen+d", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object at", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "at", 
                        "", 
                        "around tag", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bk:S88oZPT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object it", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "it", 
                        "", 
                        "inside tag", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ywg,TU5*~C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a\"", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a\"", 
                        "", 
                        "a double quoted string&nbsp;within current line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ykyAa,}b,}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a'", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a'", 
                        "", 
                        "a single quoted string&nbsp;within current line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y9DCCA,hHy", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a`", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a`", 
                        "", 
                        "a back quoted string&nbsp;within current line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NTv^mr,;as", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i`", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i`", 
                        "", 
                        "inner back quoted string within current line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JzQMW_(hv{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i'", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i'", 
                        "", 
                        "inner single quoted string&nbsp;within current line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cBRIx.Yk$%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i\"", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i\"", 
                        "", 
                        "inner double quoted string&nbsp;within current line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m%epH$`r6P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i)", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i)", 
                        "", 
                        "inner parenthesized block ", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w!-GZ/M{+2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a)", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a)", 
                        "", 
                        "a parenthesized block (same as <code>a(</code> and <code>ab</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qnsa|OCfCl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a]", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a]", 
                        "", 
                        "a bracketed block ", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iI`&s|+7v!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i]", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i]", 
                        "", 
                        "inner bracketed block (same as <code>i[</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QlrfLH|l~z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i}", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i}", 
                        "", 
                        "inner braced block (same as <code>i{</code> and <code>iB</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dxYeana^<g", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a}", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a}", 
                        "", 
                        "a braced block (same as&nbsp;<code>a{</code>&nbsp;and&nbsp;<code>aB</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v|rV#gB&xR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a&gt;", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a&gt;", 
                        "", 
                        "an angle bracket block&nbsp;(same as&nbsp;<code>a&lt;</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NmhoFm[P2F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i&gt;", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i&gt;", 
                        "", 
                        "inner angle bracket block (same as <code>i&lt;</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jNc!hnK{uz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object ii", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "ii", 
                        "", 
                        "the current indentation level excluding the line above (requires Indent Object plugin)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ux3>l3&%ec", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object ai", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "ai", 
                        "", 
                        "the current indentation level and the line above (requires Indent Object plugin)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pod+])6nrS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "read lines from variable", 
                        "description", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">while</span> <span style=\"color: #24909d\">read</span> -r line<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">do</span>\n  <span style=\"color: #999999; font-style: italic\"># do stuff</span>\n<span style=\"color: #6ab825; font-weight: bold\">done</span> <span style=\"color: #d0d0d0\">&lt;&lt;&lt;</span> <span style=\"color: #ed9d13\">\"</span><span style=\"color: #40ffff\">$list</span><span style=\"color: #ed9d13\">\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA5Mjk1ODcsICJpZCI6ICIxNTAwOTI5MjYwNzM0LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHdoaWxlIHJlYWQgLXIgbGluZTsgZG9cbiAgICAgICMgZG8gc3R1ZmZcbiAgICBkb25lICZsdDsmbHQ7Jmx0OyAmcXVvdDskbGlzdCZxdW90O1xuIn0=---->", 
                        "Bash code", 
                        "", 
                        "", 
                        "", 
                        "https://superuser.com/a/284226/81094"
                    ], 
                    "flags": 0, 
                    "guid": "p*bu[i5[q9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "redirect command’s <code>stderr</code> to another’s <code>stdin</code>", 
                        "", 
                        "<code>|&amp;</code> (shorthand for&nbsp;<code>2&gt;&amp;1 |</code>)", 
                        "", 
                        "<var>command1</var>’s standard error, in addition to its standard output, is connected to&nbsp;<var>command2</var>’s standard input through the pipe; this implicit redirection is performed after any redirections specified by the command.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r!G)aa^Q*@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timing pipelines", 
                        "", 
                        "The reserved word&nbsp;<code>time</code>&nbsp;causes timing statistics to be printed for the pipeline once it finishes. The statistics currently consist of elapsed (wall-clock) time and user and system time consumed by the command’s execution. The&nbsp;<samp>-p</samp>&nbsp;option changes the output format to that specified by&nbsp;<small><b>POSIX</b></small>. When the shell is in&nbsp;<small><b>POSIX</b></small>&nbsp;mode, it does not recognize&nbsp;<code>time</code>&nbsp;as a reserved word if the next token begins with a&nbsp;<samp><code>-</code></samp>. The&nbsp;<code>TIMEFORMAT</code>&nbsp;variable may be set to a format string that specifies how the timing information should be displayed. The use of&nbsp;<code>time</code>&nbsp;as a reserved word permits the timing of shell builtins, shell functions, and pipelines. An external&nbsp;<code>time</code>&nbsp;command cannot time these easily.<div><br /></div><div>When the shell is in&nbsp;<small><b>POSIX</b></small>&nbsp;mode,&nbsp;<code>time</code>&nbsp;may be followed by a newline. In this case, the shell displays the total user and system time consumed by the shell and its children. The&nbsp;<code>TIMEFORMAT</code>&nbsp;variable may be used to specify the format of the time information.</div>", 
                        "", 
                        "<i><br /></i>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m=5_T*+=K;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Does shell wait for pipelines to complete?", 
                        "", 
                        "Yes,&nbsp;unless the pipeline is not executed asynchronously.", 
                        "", 
                        "<i><br /></i>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vy3$(GLAkI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Bash pipeline commands execute in what environments?", 
                        "", 
                        "Each command in a pipeline is executed in its own subshell.", 
                        "", 
                        "<i><br /></i>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D<OV7<:7Ti", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Bash pipeline exit status", 
                        "", 
                        "The exit status of the last command in the pipeline, unless the&nbsp;<code>pipefail</code>&nbsp;option is enabled, or if the reserved word&nbsp;<samp><code>!</code></samp>&nbsp;precedes the pipeline, in which case the exit status is the logical negation. The shell waits for all commands in the pipeline to terminate before returning a value.", 
                        "", 
                        "<i><br /></i>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g8|-3)]|RI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i{", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i{", 
                        "", 
                        "inner braced block (same as&nbsp;<code>i}</code>&nbsp;and&nbsp;<code>iB</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G6{tjDV$4-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a{", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a{", 
                        "", 
                        "a braced block (same as&nbsp;<code>a}</code>&nbsp;and&nbsp;<code>aB</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d5<+y+unK`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a(", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a(", 
                        "", 
                        "a parenthesized block (same as&nbsp;<code>a)</code>&nbsp;and&nbsp;<code>ab</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r))Ilt<+,R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i&lt;", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i&lt;", 
                        "", 
                        "inner angle bracket block (same as&nbsp;<code>i&gt;</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QkEsc/q(Rd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a&lt;", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a&lt;", 
                        "", 
                        "an angle bracket block&nbsp;(same as&nbsp;<code>a&gt;</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o@tc&@}fm]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object a[", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "a[", 
                        "", 
                        "a bracketed block (same as&nbsp;<code>a]</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DrBFdh$yfn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim text-object i[", 
                        "vim", 
                        "text-object", 
                        "", 
                        "", 
                        "i[", 
                        "", 
                        "inner bracketed block (same as&nbsp;<code>i]</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G!RxbM=[c#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim copy-paste [\"x]D", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>D", 
                        "", 
                        "Delete the characters under the cursor until end of line [and <code><i>count</i>-1</code>&nbsp;more lines] [into register&nbsp;<code><i>x</i></code>]; synonym for <code>d$</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "um@/g9y/M9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing [\"x]C", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<i>[\"x]</i>C", 
                        "", 
                        "Delete from the cursor position to the end of the<span class=\"Apple-tab-span\" style=\"white-space:pre\"> </span>line [and <code><i>count</i>-1</code> more lines] [into register <code><i>x</i></code>], and start insert; same as&nbsp;<code>c$</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CoDr4ZWzvX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert ^C", 
                        "vi", 
                        "insert cmd", 
                        "", 
                        "", 
                        "<kbd>⌃C</kbd>", 
                        "", 
                        "exit insert mode (same as&nbsp;<kbd>Esc</kbd>&nbsp;and&nbsp;<kbd>⌃[</kbd>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lN~{vuR0Cu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim insert ^[", 
                        "vi", 
                        "insert cmd", 
                        "", 
                        "", 
                        "<kbd>⌃[</kbd>", 
                        "", 
                        "exit insert mode (same as&nbsp;<kbd>Esc</kbd>&nbsp;and&nbsp;<kbd>⌃C</kbd>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kiI_+24AQ%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "list files recursively by size in Zsh", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">ls -ldU -- **/*<span style=\"color: #d0d0d0\">(</span>.OL<span style=\"color: #d0d0d0\">)</span>\n\nOr just list them:\n\n:::bash\nprint -rl -- **/*<span style=\"color: #d0d0d0\">(</span>.OL<span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p><code>.DOL</code> to include hidden files and directories</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEzMDA5NzIsICJpZCI6ICIxNTAxMzAwNTg4NDU1LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGxzIC1sZFUgLS0gKiovKiguT0wpXG4gIFxuICAgIE9yIGp1c3QgbGlzdCB0aGVtOlxuICBcbiAgICA6OjpiYXNoXG4gICAgcHJpbnQgLXJsIC0tICoqLyooLk9MKVxuICBcbiAgXG5gLkRPTGAgdG8gaW5jbHVkZSBoaWRkZW4gZmlsZXMgYW5kIGRpcmVjdG9yaWVzXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w%Mpg1uob3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "zsh"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "list files recursively by size using <code>find</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find . -type f -exec ls -lSd <span style=\"color: #d0d0d0\">{}</span> +\nfind . -type f -ls <span style=\"color: #d0d0d0\">|</span> sort -r -n -k7\n</pre></div>\n<p>If the file names may contain newline characters, with <strong>GNU</strong> find and <strong>GNU</strong> sort:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find . -type f -ls -printf <span style=\"color: #ed9d13\">'\\0'</span> <span style=\"color: #d0d0d0\">|</span> sort -zk7rn <span style=\"color: #d0d0d0\">|</span> tr -d <span style=\"color: #ed9d13\">'\\0'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEzMDExMTksICJpZCI6ICIxNTAxMzAwOTc5MDMyLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZpbmQgLiAtdHlwZSBmIC1leGVjIGxzIC1sU2Qge30gK1xuICAgIGZpbmQgLiAtdHlwZSBmIC1scyB8IHNvcnQgLXIgLW4gLWs3XG4gIFxuSWYgdGhlIGZpbGUgbmFtZXMgbWF5IGNvbnRhaW4gbmV3bGluZSBjaGFyYWN0ZXJzLCB3aXRoICoqR05VKiogZmluZCBhbmQgKipHTlUqKiBzb3J0OlxuICBcbiAgICA6OjpiYXNoXG4gICAgZmluZCAuIC10eXBlIGYgLWxzIC1wcmludGYgJmFwb3M7XFwwJmFwb3M7IHwgc29ydCAtems3cm4gfCB0ciAtZCAmYXBvcztcXDAmYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c/fE%J;jhk", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "repeat last command with replacement", 
                        "Bash concept", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">^WORD1^WORD2^\n!!:s/WORD1/WORD2\n!!:gs/WORD1/WORD2\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEzMDE0NjQsICJpZCI6ICIxNTAxMzAxMTY5NTIyLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIF5XT1JEMV5XT1JEMl5cbiAgICAhITpzL1dPUkQxL1dPUkQyXG4gICAgISE6Z3MvV09SRDEvV09SRDJcbiJ9---->", 
                        "example", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vBK:9QuKqq", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "bash"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor g_", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "g_", 
                        "", 
                        "move cursor to last non-blank character of line", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c4OH-*Fy1,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim cursor _", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "_", 
                        "", 
                        "move cursor to first non-blank character of line (same as <code>^</code>?)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i?Y;_T1Co)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search g*", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "g*", 
                        "", 
                        "searches forward for next occurrence of identifier under cursor, including partial matches", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zan*Cw3uz&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search g#", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "g#", 
                        "", 
                        "searches backward for previous occurrence of identifier under cursor, including partial matches", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b|OP=AJi?]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim search ?&lt;CR&gt;", 
                        "vi", 
                        "cmd", 
                        "", 
                        "", 
                        "?&lt;CR&gt;", 
                        "", 
                        "repeat last search, in the backward direction", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n4mz}ih5MU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "top e", 
                        "top", 
                        "cmd", 
                        "", 
                        "", 
                        "e", 
                        "", 
                        "cycle process list memory units", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B=g6|.la:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "top"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "top E", 
                        "top", 
                        "cmd", 
                        "", 
                        "", 
                        "E", 
                        "", 
                        "cycle&nbsp;summary bar&nbsp;memory units", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "glm%BCL+H>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "top"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "top W", 
                        "top", 
                        "cmd", 
                        "", 
                        "", 
                        "W", 
                        "", 
                        "write configuration to&nbsp;/home/user/.toprc", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HYkDJ:sD,,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "top"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>\\r</code> and <code>\\n</code> in <b>Vim</b>", 
                        "", 
                        "<code>\\n</code> matches an end of line (newline), whereas <code>\\r</code> matches a carriage return. On the other hand, in substitutions <code>\\n</code> inserts a null character whereas <code>\\r</code> inserts a newline (more precisely, it’s treated as the input <kbd>CR</kbd>).", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://stackoverflow.com/a/71334/172602"
                    ], 
                    "flags": 0, 
                    "guid": "sUx1n)5fQG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>\\v</code>&nbsp;and <code>\\V</code>&nbsp;in <b>Vim</b>", 
                        "", 
                        "<span class=\"TfvlQsubLq\" id=\"nSufLdDK\">Any Vim search pattern can include the special sequence <code>\\v</code> (very magic), and this will make every following character except _<code>a-zA-Z0-9</code>&nbsp;have special meaning. Using <code>\\V</code> has the opposite effect: all characters have their literal meaning and must be preceded by <code>\\</code> to activate their special meaning.</span><div><span class=\"TfvlQsubLq\" id=\"nSufLdDK\"><br /></span></div><div><span class=\"TfvlQsubLq\" id=\"nSufLdDK\"><span class=\"TfvlQsubLq\" id=\"nSufLdDK\"></span></span><p>Vim's default 'magic' setting makes characters have the same meaning as in grep, and <code>\\v</code> (very magic) makes them the same as the extended regular expressions used by egrep.\n</p><p>Regular expressions in scripts should <b>always</b> specify one of <code>\\v</code>, <code>\\m</code>, <code>\\M</code>, or <code>\\V</code>, to make them immune to the user's <code>'magic'</code> setting.\n</p><p>The <code>:substitute</code> command has the <code>:smagic</code> and <code>:snomagic</code> alternate forms (the same as <code>\\m</code> and <code>\\M</code>), so you can search and replace with <code>%sno/regex/new_text/g</code>. Alternatively, you might find it helpful to refine your regular expression by searching with <code>/\\v</code> first, then you can insert your regular expression by typing:\n</p><p><code>:s/&lt;Ctrl-R&gt;/</code>\n</p></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "http://vim.wikia.com/wiki/Simplifying_regular_expressions_using_magic_and_no-magic"
                    ], 
                    "flags": 0, 
                    "guid": "QU6aLpcX),", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git reset --hard", 
                        "git&nbsp;reset", 
                        "", 
                        "", 
                        "--hard", 
                        "", 
                        "<code>git reset --hard <i>[</i>HEAD<i>]</i></code>", 
                        "completely remove all staged and unstaged changes to tracked files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M|m=/%lClb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git clean", 
                        "git&nbsp;clean", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<code>git clean -dfx</code>", 
                        "Remove files that are not tracked.&nbsp;<span class=\"comment-copy\"><a href=\"http://git-scm.com/docs/git-clean\" rel=\"nofollow noreferrer\">git-scm.com/docs/git-clean</a>\n explains the git clean args differently. -f (force) is normally needed \nto get it to delete anything. -x also removes ignored files. -X only \nremoves ignored files. -d also removes untracked directories.</span>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "zSSx>=Jw.?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git checkout .", 
                        "git&nbsp;checkout .", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Undo unstaged changes in tracked files. Apparently doesn't touch staged changes and leaves untracked files alone.<div><br /></div><div><code>.</code> is a pathspec referring to the current working directory, which might be the root of the repo. From git-scm.com: <code>git checkout&nbsp;[&lt;tree-ish&gt;] [--] &lt;pathspec&gt;…</code> updates the named paths in the working tree from the index file or from a named &lt;tree-ish&gt;.</div>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "g{VxooRD*C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git stash", 
                        "git&nbsp;stash", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "revert working directory saving changes", 
                        "<p><code>-u</code> makes sure that newly added files (untracked) are also included.</p><p>afterward you get <strong>all</strong> your work back with <code>git stash pop</code></p>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "w18g+a4NV0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git stash -u", 
                        "git&nbsp;stash", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "", 
                        "newly added files (untracked) are also included", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w>p>BiF1om", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown", 
                        "chown", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Changes the user\nand/or group ownership of each given file. If only an owner (a user name\n or numeric user ID) is given, that user is made the owner of each given\n file, and the\nfiles' group is not changed. If the owner is followed by a colon and a \ngroup name (or numeric group ID), with no spaces between them, the group\n ownership of\nthe files is changed as well. If a colon but no group name follows the \nuser name, that user is made the owner of the files and the group of the\n files is\nchanged to that user's login group. If the colon and group are given, \nbut the owner is omitted, only the group of the files is changed; in \nthis case, performs the same function as <code>chgrp</code>. If only a colon is given, or if the entire operand is empty, neither the owner nor the group is\nchanged.", 
                        "Change the owner and/or group of each&nbsp;<code>FILE</code>&nbsp;to&nbsp;<code>OWNER</code>&nbsp;and/or&nbsp;<code>GROUP</code>. With&nbsp;<code>--reference</code>, change the owner and group of each&nbsp;<code>FILE</code>&nbsp;to those of&nbsp;<code>RFILE</code>.", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "J<Nf^IkTGg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --changes", 
                        "chown", 
                        "", 
                        "-c", 
                        "--changes", 
                        "", 
                        "", 
                        "output a diagnostic for <b>changed</b> files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nxrlAsOWHx", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --verbose", 
                        "chown", 
                        "", 
                        "-v", 
                        "--verbose", 
                        "", 
                        "", 
                        "output a diagnostic for <b>processed</b> files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KPez*o7R@*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --dereference", 
                        "chown", 
                        "", 
                        "", 
                        "--dereference", 
                        "", 
                        "", 
                        "affect the referent of each symbolic link (this is the default), rather than the symbolic link itself", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c&@p(Aa:7u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --no-dereference", 
                        "chown", 
                        "", 
                        "-h", 
                        "--no-dereference", 
                        "", 
                        "", 
                        "affect each symbolic link instead of any referenced file (useful only on systems that can change the ownership of a symlink)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ki9_OyCWe.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --from", 
                        "chown", 
                        "", 
                        "", 
                        "--from", 
                        "", 
                        "<code>--from=[<i>CURRENT_OWNER</i>]:[<i>CURRENT_GROUP</i>]</code>", 
                        "affect each symbolic link instead of any referenced file (useful only on systems that can change the ownership of a symlink)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CQ:!Zf(;y?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --no-preserve-root", 
                        "chown", 
                        "", 
                        "", 
                        "--no-preserve-root", 
                        "", 
                        "", 
                        "do not treat <code>/</code> specially (the default)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "is)mUM%,W2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --preserve-root", 
                        "chown", 
                        "", 
                        "", 
                        "--preserve-root", 
                        "", 
                        "", 
                        "fail to operate recursively on <code>/</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cswNE[%gB6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --quiet", 
                        "chown", 
                        "", 
                        "-f", 
                        "--quiet", 
                        "--silent", 
                        "", 
                        "suppress most error messages", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cEX~7+FeK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --reference", 
                        "chown", 
                        "", 
                        "", 
                        "--reference", 
                        "", 
                        "<code>--reference=<i>RFILE</i></code>", 
                        "use <i><code>RFILE</code>'s</i> owner and group rather than specifying <code><i>OWNER:GROUP</i></code> values", 
                        "<dt><b><br /></b></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t#OK`<6l@3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --recursive", 
                        "chown", 
                        "", 
                        "-R", 
                        "--recursive", 
                        "", 
                        "", 
                        "operate on files and directories recursively", 
                        "<dt><b><br /></b></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G<d^qxhsIw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --version", 
                        "chown", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "output version information and exit", 
                        "<dt><b><br /></b></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c6kQIs`t,i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown --help", 
                        "chown", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "", 
                        "display this help and exit", 
                        "<dt><b><br /></b></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ffe,Ng~BTz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown -H", 
                        "chown", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "", 
                        "Modifies how a hierarchy is traversed when the <code>-R</code> option is also specified:&nbsp;if a command line argument is a symbolic link to a directory, traverse it", 
                        "<dt>If more than one of <code>-H</code>, <code>-L</code> and <code>-P</code> is specified, only the final one takes effect.</dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i:S{5}/}~b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown -L", 
                        "chown", 
                        "", 
                        "-L", 
                        "", 
                        "", 
                        "", 
                        "Modifies how a hierarchy is traversed when the <code>-R</code> option is also specified:&nbsp;traverse every symbolic link to a directory encountered", 
                        "<dt>If more than one of <code>-H</code>, <code>-L</code> and <code>-P</code> is specified, only the final one takes effect.</dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x-hb~qe)mI", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chown -P", 
                        "chown", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "", 
                        "Modifies how a hierarchy is traversed when the <code>-R</code> option is also specified:&nbsp;do not traverse any symbolic links (default)", 
                        "<dt>If more than one of <code>-H</code>, <code>-L</code> and <code>-P</code> is specified, only the final one takes effect.</dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D2/_l$&M0%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :[N]new", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":<i>[N]</i>new", 
                        "", 
                        "Create a new window and start editing an empty file in it.\n\t\tMake new window <code>N</code> high (default is to use half the existing\n\t\theight). This behaves like a <code>:split</code>&nbsp;first, and then a <code>:e</code>&nbsp;command.", 
                        "<dt><br /></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P%ykKm]`O7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :ene[w]!", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":ene<i>[w]</i>!", 
                        "", 
                        "Edit a new, unnamed buffer.&nbsp;Discard any changes to&nbsp;the current buffer.", 
                        "<dt><br /></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v/*Y2pcO&V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :[N]vne[w]", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":<i>[N]</i>vne<i>[w]</i>", 
                        "", 
                        "<b>Split vertically</b> to create a new window and start editing an empty file in it. Make new window&nbsp;<code>N</code>&nbsp;high (default is to use half the existing height). This behaves like a&nbsp;<code>:split</code>&nbsp;first, and then a&nbsp;<code>:e</code>&nbsp;command.", 
                        "<dt><br /></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hc,,d9Fx0{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :tabnew", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        ":tabnew", 
                        "", 
                        "create new tab with an unnamed buffer", 
                        "<dt><br /></dt>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G3Ols(f3A0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id", 
                        "id", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Print user and group information for the specified <code><i>USERNAME</i></code> or for the current user.", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "j@}P]<?B/F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;-a", 
                        "id", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "", 
                        "ignore, for compatibility with non-<b>GNU</b> versions", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K<*SG+N=Z4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--context", 
                        "id", 
                        "", 
                        "-Z", 
                        "--context", 
                        "", 
                        "", 
                        "print only the security context of the current user", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "clTNo!53#[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--group", 
                        "id", 
                        "", 
                        "-g", 
                        "--group", 
                        "", 
                        "", 
                        "print only the effective group ID", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sh*P}RihX,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--groups", 
                        "id", 
                        "", 
                        "-G", 
                        "--groups", 
                        "", 
                        "", 
                        "print all group IDs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vJ4=9b,Q=z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--name", 
                        "id", 
                        "", 
                        "-n", 
                        "--name", 
                        "", 
                        "", 
                        "print a name instead of a number, for <code>-ugG</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cZKm<CxAdo", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--real", 
                        "id", 
                        "", 
                        "-r", 
                        "--real", 
                        "", 
                        "", 
                        "print the real ID instead of the effective ID, with&nbsp;<code>-ugG</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Li~9nVCv-q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--user", 
                        "id", 
                        "", 
                        "-u", 
                        "--user", 
                        "", 
                        "", 
                        "print only the effective user ID", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hprR`RAIP:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--help", 
                        "id", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "", 
                        "display this help and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ckNVmD&L|6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id&nbsp;--version", 
                        "id", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "output version information and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mk?PSDn<n1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "whoami", 
                        "whoami", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Print the user name associated with the current effective user ID. Same as <code>id -un</code>.", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "OAWdap!4{u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "whoami&nbsp;--version", 
                        "whoami", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "", 
                        "output version information and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ms8Lm&qTAn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "whoami&nbsp;--help", 
                        "whoami", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "", 
                        "display this help and exit", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x(.[w3qV58", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "id"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "take ownership of directory", 
                        "Shell concept", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sudo chown -R <span style=\"color: #ed9d13\">`</span>whoami<span style=\"color: #ed9d13\">`</span>:<span style=\"color: #ed9d13\">`</span>id -gn<span style=\"color: #ed9d13\">`</span> /var/www/html\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE5NzkxNzgsICJpZCI6ICIxNTAxOTc5MTIxNjU4LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHN1ZG8gY2hvd24gLVIgYHdob2FtaWA6YGlkIC1nbmAgL3Zhci93d3cvaHRtbFxuIn0=---->", 
                        "Shell command", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I8S}[nYG|w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "chown"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl configtest", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "configtest", 
                        "equivalent to&nbsp;<code>apachectl -t</code>", 
                        "Run a configuration file syntax test. It parses the configuration\nfiles and either reports <code>Syntax Ok</code>\nor detailed information about the particular syntax error.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dR8~m#ro0L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl startssl", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "startssl", 
                        "", 
                        "<b>(Removed)</b>&nbsp;To start <code class=\"program\">httpd</code> with SSL support, you should edit\nyour configuration file to include the relevant directives and then\nuse the normal <code>apachectl start</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ee>6VXAQqy", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl start", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "start", 
                        "equivalent to&nbsp;<code>apachectl -k start</code>", 
                        "Start the Apache <code class=\"program\">httpd</code> daemon.  Gives an error if it\nis already running.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IXr,^~_RN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl stop", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "stop", 
                        "equivalent to&nbsp;<code>apachectl -k stop</code>", 
                        "Stops the Apache <code class=\"program\">httpd</code> daemon.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nf9VbI/RN>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl restart", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "restart", 
                        "equivalent to&nbsp;<code>apachectl -k restart</code>", 
                        "Restarts the Apache <code class=\"program\">httpd</code> daemon.  If the daemon is\nnot running, it is started.  This command automatically checks the\nconfiguration files as in <code>configtest</code> before initiating\nthe restart to make sure the daemon doesn't die.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w8tbZ~|Uw&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl fullstatus", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "fullstatus", 
                        "", 
                        "Displays a full status report from <code class=\"module\">mod_status</code>.\nFor this to work, you need to have <code class=\"module\">mod_status</code> enabled\non your server and a text-based browser such as <code>lynx</code>\navailable on your system.  The URL used to access the status report\ncan be set by editing the <code>STATUSURL</code> variable in the\nscript.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LHF@f&QJ[t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl status", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "status", 
                        "", 
                        "Displays a brief status report.  Similar to the\n<code>fullstatus</code> option, except that the list of requests\ncurrently being served is omitted.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x;akF4X.k@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl graceful", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "graceful", 
                        "equivalent to&nbsp;<code>apachectl -k graceful</code>", 
                        "Gracefully restarts the Apache <code class=\"program\">httpd</code> daemon.  If the\ndaemon is not running, it is started.  This differs from a normal\nrestart in that currently open connections are not aborted.  A side\neffect is that old log files will not be closed immediately.  This\nmeans that if used in a log rotation script, a substantial delay may\nbe necessary to ensure that the old log files are closed before\nprocessing them.  This command automatically checks the configuration\nfiles as in <code>configtest</code> before initiating the\nrestart to make sure Apache doesn't die.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jg6`UU.(-&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl graceful-stop", 
                        "apachectl", 
                        "option", 
                        "", 
                        "", 
                        "graceful-stop", 
                        "equivalent to&nbsp;<code>apachectl -k graceful-stop</code>", 
                        "Gracefully stops the Apache <code class=\"program\">httpd</code> daemon.  \nThis differs from a normal stop in that currently open connections are not \naborted.  A side effect is that old log files will not be closed immediately.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B(s]okj*}x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apachectl", 
                        "apachectl", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "A front end to the Apache HyperText\n     Transfer Protocol (HTTP) server.  It is designed to help the\n     administrator control the functioning of the Apache\n     <code class=\"program\">httpd</code> daemon.", 
                        "<p>The <code>apachectl</code> script can operate in two modes.\n     First, it can act as a simple front-end to the <code class=\"program\">httpd</code>\n     command that simply sets any necessary environment variables and\n     then invokes <code class=\"program\">httpd</code>, passing through any command line\n     arguments.  Second, <code>apachectl</code> can act as a SysV init\n     script, taking simple one-word arguments like <code>start</code>,\n     <code>restart</code>, and <code>stop</code>, and translating them\n     into appropriate signals to <code class=\"program\">httpd</code>.</p>\n<p>If your Apache installation uses non-standard paths, you will\n     need to edit the <code>apachectl</code> script to set the\n     appropriate paths to the <code class=\"program\">httpd</code> binary.  You can also\n     specify any necessary <code class=\"program\">httpd</code> command line arguments.\n     See the comments in the script for details.</p>\n<p>The <code>apachectl</code> script returns a 0 exit value on\n     success, and &gt;0 if an error occurs.  For more details, view\n     the comments in the script.</p>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "IXTc)Tlt-a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "apache"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim editing v3e", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "v3e", 
                        "", 
                        "<span class=\"comment-copy\">visually select 3 words</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gzyN:VD]OH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern \\_s", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "\\_s", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">a whitespace (space or tab) or newline character</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oIN;`-KT$!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern \\_^", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "\\_^", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">the beginning of a line (zero width)&nbsp;</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nm6PtvY`{A", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern \\_$", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "\\_$", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">the end of a line (zero width)</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m)IUaLqT>B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern \\_.", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "\\_.", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">any character including a newline</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b!gmWh&3bA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern /abcd\\_$efgh", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "/abcd\\_$efgh", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">Finds nothing because <code>\\_$</code> is \"zero width\" so the search is looking for <code>abcdefgh</code> where <code>abcd</code> is also at end-of-line (which cannot occur).</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q3XRWM9GPl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern /abcd\\_^efgh", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "/abcd\\_^efgh", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">Finds nothing because <code>\\_^</code> is \"zero width\" so the search is looking for <code>abcdefgh</code> where <code>efgh</code> is also at beginning-of-line (which cannot occur).</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o>*1hG+U$[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim pattern \\{-}", 
                        "vim", 
                        "pattern", 
                        "", 
                        "", 
                        "\\{-}", 
                        "", 
                        "<span class=\"nxvHZMGwKZ\" id=\"FcXxsCrA\">matches as few as possible</span>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g*,#_o1EZZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vim :w !sudo tee %", 
                        "vim", 
                        "cmd", 
                        "", 
                        "", 
                        "<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><!--StartFragment-->:w !sudo tee %<!--EndFragment--></p>", 
                        "", 
                        "save file with <code>sudo</code>", 
                        "<code></code><code>%</code>&nbsp;means \"the current file name\"", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N%q1{xT`wQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apply new text width in<b> Vim</b>", 
                        "", 
                        "<code>gggqG</code>", 
                        "", 
                        "<ul><li><code>gg</code>: go to the beginning of buffer</li><li><code>gq</code>: reformat the text included in the motion</li><li><code>G</code>:&nbsp;go to the end of the buffer &nbsp;&nbsp;</li></ul>", 
                        "reverse", 
                        "", 
                        "https://stackoverflow.com/a/5139420/172602"
                    ], 
                    "flags": 0, 
                    "guid": "G[uy?8{n^y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "make each paragraph single line in<b> Vim</b>", 
                        "", 
                        "<code>:%norm vipJ</code>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "http://www.terminally-incoherent.com/blog/2013/06/17/using-vim-for-writing-prose/"
                    ], 
                    "flags": 0, 
                    "guid": "O7`/AN:;:p", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "vim"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "file", 
                        "file", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>This manual page documents version 5.04 of the <b>file</b> command.\n</p><p><b>file</b> tests each argument in an attempt to classify it. \nThere are three sets of tests, performed in this order: filesystem \ntests, magic tests, and\nlanguage tests. The <i>first</i> test that succeeds causes the file type to be printed.\n</p><p>The type printed will usually contain one of the words <i>text</i> (the file contains only printing characters and a few common control characters and is\nprobably safe to read on an ASCII terminal), <i>executable</i> (the file contains the result of compiling a program in a form understandable to some UNIX\nkernel or another), or <i>data</i> meaning anything else (data is usually 'binary' or non-printable). Exceptions are well-known file formats (core files, tar\narchives) that are known to contain binary data. When modifying magic files or the program itself, make sure to <i>preserve these keywords</i>.\n Users depend on\nknowing that all the readable files in a directory have the word 'text' \nprinted. Don't do as Berkeley did and change 'shell commands text' to \n'shell script'.\n\n</p><p>The filesystem tests are based on examining the return from a <b>stat</b>(2)\n system call. The program checks to see if the file is empty, or if it's\n some sort of\nspecial file. Any known file types appropriate to the system you are \nrunning on (sockets, symbolic links, or named pipes (FIFOs) on those \nsystems that\nimplement them) are intuited if they are defined in the system header \nfile\n</p><p>The magic tests are used to check for files with data in \nparticular fixed formats. The canonical example of this is a binary \nexecutable (compiled program)\na.out file, whose format is defined in <b>#include &lt;a.out.h&gt;</b><br />\nand possibly <b>#include &lt;exec.h&gt;</b><br />\nin the standard include directory. These files have a 'magic number' \nstored in a particular place near the beginning of the file that tells \nthe UNIX operating\nsystem that the file is a binary executable, and which of several types \nthereof. The concept of a 'magic' has been applied by extension to data \nfiles. Any file\nwith some invariant identifier at a small fixed offset into the file can\n usually be described in this way. The information identifying these \nfiles is read from\nthe compiled magic file <i>/usr/share/misc/magic.mgc</i>, or the files in the directory <i>/usr/share/misc/magic</i> if the compiled file does not exist. In\naddition, if <i>$HOME/.magic.mgc</i> or <i>$HOME/.magic</i> exists, it will be used in preference to the system magic files. If <i>/etc/magic</i> exists, it\nwill be used together with other magic files.\n</p><p>If a file does not match any of the entries in the magic file, it\n is examined to see if it seems to be a text file. ASCII, ISO-8859-x, \nnon-ISO 8-bit\nextended-ASCII character sets (such as those used on Macintosh and IBM \nPC systems), UTF-8-encoded Unicode, UTF-16-encoded Unicode, and EBCDIC \ncharacter sets\ncan be distinguished by the different ranges and sequences of bytes that\n constitute printable text in each set. If a file passes any of these \ntests, its\ncharacter set is reported. ASCII, ISO-8859-x, UTF-8, and extended-ASCII \nfiles are identified as 'text' because they will be mostly readable on \nnearly any\nterminal; UTF-16 and EBCDIC are only 'character data' because, while \nthey contain text, it is text that will require translation before it \ncan be read. In\naddition, <b>file</b> will attempt to determine other characteristics of\n text-type files. If the lines of a file are terminated by CR, CRLF, or \nNEL, instead of\nthe Unix-standard LF, this will be reported. Files that contain embedded\n escape sequences or overstriking will also be identified.\n</p><p>Once <b>file</b> has determined the character set used in a \ntext-type file, it will attempt to determine in what language the file \nis written. The language\ntests look for particular strings (cf. <b>#include &lt;names.h&gt;</b><br />\n) that can appear anywhere in the first few blocks of a file. For example, the keyword <i>.br</i> indicates that the file is most likely a <b>troff</b>(1) input file,\njust as the keyword <i>struct</i> indicates a C program. These tests are less reliable than the previous two groups, so they are performed last. The language\ntest routines also test for some miscellany (such as <b>tar</b>(1) archives).\n</p><p>Any file that cannot be identified as having been written in any of the character sets listed above is simply said to be 'data'.&nbsp;</p>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "x7]1<~f^HE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "file"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "count files with <code>ls</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">ls -lR <span style=\"color: #d0d0d0\">|</span> grep ^- <span style=\"color: #d0d0d0\">|</span> wc -l\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY4MzYwMjcsICJpZCI6ICIxNTA2ODM1ODE1OTcwLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGxzIC1sUiB8IGdyZXAgXi0gfCB3YyAtbFxuIn0=---->", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #40ffff\">$ </span>ls -l <span style=\"color: #d0d0d0\">|</span> grep ^-\n-rw-r--r--   <span style=\"color: #3677a9\">1</span> cgorichanaz staff <span style=\"color: #3677a9\">4823399224</span> Jun <span style=\"color: #3677a9\">22</span> 16:49 WhatsApp.zip\n-rw-r--r--   <span style=\"color: #3677a9\">1</span> cgorichanaz staff      <span style=\"color: #3677a9\">10717</span> Jul <span style=\"color: #3677a9\">17</span> 23:27 anki.html\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY4MzU5NjUsICJpZCI6ICIxNTA2ODM1ODE1OTcwLTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgICQgbHMgLWwgfCBncmVwIF4tXG4gICAgLXJ3LXItLXItLSAgIDEgY2dvcmljaGFuYXogc3RhZmYgNDgyMzM5OTIyNCBKdW4gMjIgMTY6NDkgV2hhdHNBcHAuemlwXG4gICAgLXJ3LXItLXItLSAgIDEgY2dvcmljaGFuYXogc3RhZmYgICAgICAxMDcxNyBKdWwgMTcgMjM6MjcgYW5raS5odG1sXG4ifQ==---->", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M}C?FcuLl,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "ls"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "count files with <code>tree</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">tree share/some/directory/ <span style=\"color: #d0d0d0\">|</span> tail -1\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY4MzYwODAsICJpZCI6ICIxNTA2ODM2MDI5OTkzLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHRyZWUgc2hhcmUvc29tZS9kaXJlY3RvcnkvIHwgdGFpbCAtMVxuIn0=---->", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #40ffff\">$ </span>tree share/some/directory/ <span style=\"color: #d0d0d0\">|</span> tail -1\n<span style=\"color: #3677a9\">558</span> directories, <span style=\"color: #3677a9\">853</span> files\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY4MzYwNzYsICJpZCI6ICIxNTA2ODM2MDI5OTkzLTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgICQgdHJlZSBzaGFyZS9zb21lL2RpcmVjdG9yeS8gfCB0YWlsIC0xXG4gICAgNTU4IGRpcmVjdG9yaWVzLCA4NTMgZmlsZXNcbiJ9---->", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m51%O@@nnq", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "tree"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "count files with <code>find</code>", 
                        "", 
                        "<div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; find . -type f | wc -l</div><div>&nbsp; &nbsp; find . -type f -ls | wc -l</div><div><br /></div><div>won't fail on newlines:</div><div><br /></div><div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; find . -type f -print0 | tr -d -c '\\0' | wc -c</div><div>&nbsp; &nbsp; find . -type f -printf . | wc -c</div>", 
                        "", 
                        "<div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; $ tree share/some/directory/ | tail -1</div><div>&nbsp; &nbsp; 558 directories, 853 files</div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "X3a5G)s.`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to include a pipe in&nbsp;<code>find -exec</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find ... -exec sh -c <span style=\"color: #ed9d13\">\"zcat {} | agrep -dEOE 'grep' \"</span> <span style=\"color: #ed9d13\">\\;</span>\n</pre></div>\n<p>Also consider pipe in top level shell, passing each to a subshell or using <code>xargs</code>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find ... -exec zcat <span style=\"color: #d0d0d0\">{}</span> <span style=\"color: #ed9d13\">\\;</span> <span style=\"color: #d0d0d0\">|</span> agrep -dEOE <span style=\"color: #ed9d13\">'grep'</span>\nfind ... -printf <span style=\"color: #ed9d13\">\"zcat %p | agrep -dEOE 'grep'\\n\"</span> <span style=\"color: #d0d0d0\">|</span> sh\nfind ... -print0 <span style=\"color: #d0d0d0\">|</span> xargs -0 zcat <span style=\"color: #d0d0d0\">|</span> agrep -dEOE <span style=\"color: #ed9d13\">'grep'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY4MzY3MDcsICJpZCI6ICIxNTA2ODM2Mjg4MDM4LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZpbmQgLi4uIC1leGVjIHNoIC1jICZxdW90O3pjYXQge30gfCBhZ3JlcCAtZEVPRSAmYXBvcztncmVwJmFwb3M7ICZxdW90OyBcXDtcbiAgXG5BbHNvIGNvbnNpZGVyIHBpcGUgaW4gdG9wIGxldmVsIHNoZWxsLCBwYXNzaW5nIGVhY2ggdG8gYSBzdWJzaGVsbCBvciB1c2luZyBgeGFyZ3NgOlxuICBcbiAgICA6OjpiYXNoXG4gICAgZmluZCAuLi4gLWV4ZWMgemNhdCB7fSBcXDsgfCBhZ3JlcCAtZEVPRSAmYXBvcztncmVwJmFwb3M7XG4gICAgZmluZCAuLi4gLXByaW50ZiAmcXVvdDt6Y2F0ICVwIHwgYWdyZXAgLWRFT0UgJmFwb3M7Z3JlcCZhcG9zO1xcbiZxdW90OyB8IHNoXG4gICAgZmluZCAuLi4gLXByaW50MCB8IHhhcmdzIC0wIHpjYXQgfCBhZ3JlcCAtZEVPRSAmYXBvcztncmVwJmFwb3M7XG4ifQ==---->", 
                        "", 
                        "<div><br /></div>", 
                        "", 
                        "", 
                        "https://stackoverflow.com/a/307167/172602"
                    ], 
                    "flags": 0, 
                    "guid": "fq>[JE1Pj3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "find"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>SIGHUP</code>", 
                        "", 
                        "signal hangup", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I^;yVP<*=r", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "difference between <code>nohup</code>, <code>disown</code> and <code>&amp;</code>", 
                        "", 
                        "<div class=\"post-text\" itemprop=\"text\">\n<p>Let's first look at what happens if a program is started from an interactive shell (connected to a terminal) without <code>&amp;</code> (and without any redirection). So let's assume you've just typed <code>foo</code>:</p>\n<ul>\n<li>The process running <code>foo</code> is created.</li>\n<li>The process inherits stdin, stdout, and stderr from the shell. Therefore it is also connected to the same terminal.</li>\n<li>If the shell receives a <code>SIGHUP</code>, it also sends a <code>SIGHUP</code> to the process (which normally causes the process to terminate).</li>\n<li>Otherwise the shell waits (is blocked) until the process terminates.</li>\n</ul>\n<p>Now, let's look what happens if you put the process in the background, that is, type <code>foo &amp;</code>:</p>\n<ul>\n<li>The process running <code>foo</code> is created.</li>\n<li>The process inherits stdout/stderr from the shell (so it still writes to the terminal).</li>\n<li>The process in principle also inherits stdin, but as soon as it tries to read from stdin, it is halted.</li>\n<li>It is put into the list of background jobs the shell manages, which means especially:\n\n<ul>\n<li>It is listed with <code>jobs</code> and can be accessed using <code>%n</code> (where <code>n</code> is the job number).</li>\n<li>It can be turned into a foreground job using <code>fg</code>, in which case it continues as if you would not have used <code>&amp;</code> on it (and if it was stopped due to trying to read from standard input, it now can proceed to read from the terminal).</li>\n<li>If the shell received a <code>SIGHUP</code>, it also sends a <code>SIGHUP</code>\n to the process. Depending on the shell and possibly on options set for \nthe shell, when terminating the shell it will also send a <code>SIGHUP</code> to the process.</li>\n</ul></li>\n</ul>\n<p>Now <code>disown</code> removes the job from the shell's job list, so all the subpoints above don't apply any more (including the process being sent a <code>SIGHUP</code> by the shell). However note that it <em>still</em> is connected to the terminal, so if the terminal is destroyed (which can happen if it was a pty, like those created by <code>xterm</code> or <code>ssh</code>, and the controlling program is terminated, by closing the xterm or terminating the <a href=\"http://en.wikipedia.org/wiki/Secure_Shell\">SSH</a> connection), the program will fail as soon as it tries to read from standard input or write to standard output.</p>\n<p>What <code>nohup</code> does, on the other hand, is to effectively separate the process from the terminal:</p>\n<ul>\n<li>It closes standard input (the program will <em>not</em> be able to read any input, even if it is run in the foreground.  it is not halted, but will receive an error code or <code>EOF</code>).</li>\n<li>It redirects standard output and standard error to the file <code>nohup.out</code>, so the program won't fail for writing to standard output if the terminal fails, so whatever the process writes is not lost.</li>\n<li>It prevents the process from receiving a <code>SIGHUP</code> (thus the name).</li>\n</ul>\n<p>Note that <code>nohup</code> does <em>not</em> remove the process from the shell's job control and also doesn't put it in the background (but since a foreground <code>nohup</code> job is more or less useless, you'd generally put it into the background using <code>&amp;</code>). For example, unlike with <code>disown</code>, the shell will still tell you when the nohup job has completed (unless the shell is terminated before, of course).</p>\n<p>So to summarize:</p>\n<ul>\n<li><code>&amp;</code> puts the job in the background, that is, makes it\n block on attempting to read input, and makes the shell not wait for its\n completion.</li>\n<li><code>disown</code> removes the process from the shell's job \ncontrol, but it still leaves it connected to the terminal. One of the \nresults is that the shell won't send it a <code>SIGHUP</code>. Obviously, it can only be applied to background jobs, because you cannot enter it when a foreground job is running.</li>\n<li><code>nohup</code> disconnects the process from the terminal, redirects its output to <code>nohup.out</code> and shields it from <code>SIGHUP</code>.\n One of the effects (the naming one) is that the process won't receive \nany sent NOHUP. It is completely independent from job control and could \nin principle be used also for foreground jobs (although that's not very \nuseful).</li>\n</ul></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://unix.stackexchange.com/a/148698/39419"
                    ], 
                    "flags": 0, 
                    "guid": "nSvoF]9,zB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "disown syntax", 
                        "", 
                        "<pre class=\"lang-sh prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\">foo </span><span class=\"pun\">&amp;</span><span class=\"pln\">\ndisown</span></code></pre><pre class=\"lang-sh prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\"><span class=\"comment-copy\"></span></span></code><code>foo &amp;! (not bash)</code></pre><pre class=\"lang-sh prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\"><span class=\"comment-copy\"></span></span></code><code><span class=\"comment-copy\"></span></code><code>foo &amp; disown</code></pre>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://unix.stackexchange.com/q/3886/39419"
                    ], 
                    "flags": 0, 
                    "guid": "kHi}LD9X<Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>disown</code> and <code>nohup</code>", 
                        "", 
                        "<span class=\"comment-copy\"><code>nohup</code> and <code>disown</code> both can be said to suppress <code>SIGHUP</code>, but in different ways. <code>nohup</code> makes the program ignore the signal initially (the program may change this). <code>nohup</code> also tries to arrange for the program not to have a controlling terminal, so that it won't be sent <code>SIGHUP</code> by the kernel when the terminal is closed. <code>disown</code> is purely internal to the shell; it causes the shell not to send <code>SIGHUP</code> when it terminates.</span>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://unix.stackexchange.com/a/3887/39419"
                    ], 
                    "flags": 0, 
                    "guid": "Cs@m</{wW2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "prevent killed message to shell", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sleep <span style=\"color: #3677a9\">20</span> <span style=\"color: #d0d0d0\">&amp;</span>\n<span style=\"color: #40ffff\">PID</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #40ffff\">$!</span>\n<span style=\"color: #24909d\">kill</span> -9 <span style=\"color: #40ffff\">$PID</span>\n<span style=\"color: #24909d\">wait</span> <span style=\"color: #40ffff\">$PID</span> 2&gt;/dev/null\n\nsleep <span style=\"color: #3677a9\">20</span> <span style=\"color: #d0d0d0\">&amp;</span>\n<span style=\"color: #40ffff\">PID</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #40ffff\">$!</span>\n<span style=\"color: #24909d\">disown</span> <span style=\"color: #40ffff\">$PID</span>\n<span style=\"color: #24909d\">kill</span> -9 <span style=\"color: #40ffff\">$PID</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDcxNDM3OTUsICJpZCI6ICIxNTA3MTQzNjUzMzU3LTAwMiIsICJtZCI6ICIgICAgOjo6c2hcbiAgICBzbGVlcCAyMCAmYW1wO1xuICAgIFBJRD0kIVxuICAgIGtpbGwgLTkgJFBJRFxuICAgIHdhaXQgJFBJRCAyJmd0Oy9kZXYvbnVsbFxuICBcbiAgICBzbGVlcCAyMCAmYW1wO1xuICAgIFBJRD0kIVxuICAgIGRpc293biAkUElEXG4gICAga2lsbCAtOSAkUElEXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://stackoverflow.com/q/8074904/172602"
                    ], 
                    "flags": 0, 
                    "guid": "ld:kI{0%,r", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --header", 
                        "curl", 
                        "", 
                        "-H", 
                        "--header", 
                        "", 
                        "", 
                        "<p class=\"level1\">(HTTP) Extra header to include in the request when \nsending HTTP to a server. You may specify any number of extra headers. \nNote that if you should add a custom header that has the same name as \none of the internal ones curl would use, your externally set header will\n be used instead of the internal one. This allows you to make even \ntrickier stuff than curl would normally do. You should not replace \ninternally set headers without knowing perfectly well what you're doing.\n Remove an internal header by giving a replacement without content on \nthe right side of the colon, as in: <code>-H \"Host:\"</code>. If you send the custom \nheader with no-value then its header must be terminated with a \nsemicolon, such as <code>-H \"X-Custom-Header;\"</code> to send <code>X-Custom-Header:</code>.\n</p><p class=\"level1\">curl will make sure that each header you add/replace is sent with the proper end-of-line marker, you should thus <span class=\"bold\">not</span> add that as a part of the header content: do not add newlines or carriage returns, they will only mess things up for you.\n</p><p class=\"level1\">Starting in 7.55.0, this option can take an \nargument in <code>@filename</code> style, which then adds a header for each line in \nthe input file. Using <code>@-</code> will make curl read the header file from stdin.\n</p><p class=\"level1\">See also the <code>-A</code>, <code>--user-agent</code> and <code>-e</code>, <code>--referer</code> options.\n</p><p class=\"level1\">Starting in 7.37.0, you need --proxy-header to send custom headers intended for a proxy.&nbsp;</p>", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">curl --header <span style=\"color: #ed9d13\">\"X-MyHeader: 123\"</span> www.google.com\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDcxNDQwMjQsICJpZCI6ICIxNTA3MTQzOTY5MzYxLTAwOCIsICJtZCI6ICIgICAgOjo6c2hcbiAgICBjdXJsIC0taGVhZGVyICZxdW90O1gtTXlIZWFkZXI6IDEyMyZxdW90OyB3d3cuZ29vZ2xlLmNvbVxuIn0=---->", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N7,i5=~bp7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --get", 
                        "curl", 
                        "", 
                        "-G", 
                        "--get", 
                        "", 
                        "", 
                        "<p class=\"level1\">When used, this option will make all data specified with <code>-d</code>, <code>--data</code>, <code>--data-binary</code> or <code>--data-urlencode</code>\n to be used in an HTTP GET request instead of the POST request that \notherwise would be used. The data will be appended to the URL with a <code>?</code> separator.\n</p><p class=\"level1\">If used in combination with <code>-I</code>, <code>--head</code>, the POST data will instead be appended to the URL with a HEAD request.\n</p><p class=\"level1\">If this option is used several times, only the \nfirst one is used. This is because undoing a GET doesn't make sense, but\n you should then instead enforce the alternative method you prefer.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qTi)Pi9wr^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --head", 
                        "curl", 
                        "", 
                        "-I", 
                        "--head", 
                        "", 
                        "", 
                        "(HTTP FTP FILE) Fetch the headers only! HTTP-servers feature the command\n HEAD which this uses to get nothing but the header of a document. When \nused on an FTP or FILE file, curl displays the file size and last \nmodification time only.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O;8jnsMktL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --<span class=\"nroffip\">hostpubmd5</span>", 
                        "curl", 
                        "", 
                        "", 
                        "--<span class=\"nroffip\">hostpubmd5</span>", 
                        "", 
                        "", 
                        "(SFTP SCP) Pass a string containing 32 hexadecimal \ndigits. The string should be the 128 bit MD5 checksum of the remote \nhost's public key, curl will refuse the connection with the host unless \nthe md5sums match.\nAdded in 7.17.1.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z1bdp6gN$G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --<span class=\"nroffip\">include</span>", 
                        "curl", 
                        "", 
                        "-i", 
                        "--<span class=\"nroffip\">include</span>", 
                        "", 
                        "", 
                        "<p class=\"level1\">Include the HTTP response headers in the output. The \nHTTP response headers can include things like server name, cookies, date\n of the document, HTTP version and more...\n</p><p class=\"level1\">To view the request headers, consider the <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#-v\">-v, --verbose</a> option.\n</p><p class=\"level1\">See also <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#-v\">-v, --verbose</a>.&nbsp;</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nepV4Orn96", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --<span class=\"nroffip\">ipv4</span>", 
                        "curl", 
                        "", 
                        "-4", 
                        "--<span class=\"nroffip\">ipv4</span>", 
                        "", 
                        "", 
                        "<p class=\"level1\"></p><p class=\"level1\">This option tells curl to resolve names to IPv4 addresses only, and not for example try IPv6.\n</p><p class=\"level1\">See also <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--http11\">--http1.1</a> and <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--http2\">--http2</a>. This option overrides <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#-6\">-6, --ipv6</a>.&nbsp;</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f^YP^:za$;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl --<span class=\"nroffip\">ipv6</span>", 
                        "curl", 
                        "", 
                        "-6", 
                        "--<span class=\"nroffip\">ipv6</span>", 
                        "", 
                        "", 
                        "<p class=\"level1\"></p><p class=\"level1\"></p><p class=\"level1\">This option tells curl to resolve names to IPv6 addresses only, and not for example try IPv4.\n</p><p class=\"level1\">See also <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--http11\">--http1.1</a> and <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--http2\">--http2</a>. This option overrides <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#-6\">-6, --ipv6</a>.&nbsp;</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L^}/zTBJHv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl&nbsp;--location", 
                        "curl", 
                        "", 
                        "-L", 
                        "--location", 
                        "", 
                        "", 
                        "<p class=\"level1\"></p><p class=\"level1\"></p><p class=\"level1\"></p><p class=\"level1\">(HTTP) If the server reports that the requested page \nhas moved to a different location (indicated with a Location: header and\n a 3XX response code), this option will make curl redo the request on \nthe new place. If used together with <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#-i\">-i, --include</a> or <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#-I\">-I, --head</a>,\n headers from all requested pages will be shown. When authentication is \nused, curl only sends its credentials to the initial host. If a redirect\n takes curl to a different host, it won't be able to intercept the \nuser+password. See also <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--location-trusted\">--location-trusted</a> on how to change this. You can limit the amount of redirects to follow by using the <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--max-redirs\">--max-redirs</a> option.\n</p><p class=\"level1\">When curl follows a redirect and the request is \nnot a plain GET (for example POST or PUT), it will do the following \nrequest with a GET if the HTTP response was 301, 302, or 303. If the \nresponse code was any other 3xx code, curl will re-send the following \nrequest using the same unmodified method.\n</p><p class=\"level1\">You can tell curl to not change the non-GET request method to GET after a 30x response by using the dedicated options for that: <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--post301\">--post301</a>, <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--post302\">--post302</a> and <a class=\"emphasis\" href=\"https://curl.haxx.se/docs/manpage.html#--post303\">--post303</a>.&nbsp;</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i}7h7`a(QH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "curl&nbsp;--output", 
                        "curl", 
                        "", 
                        "-o", 
                        "--output", 
                        "", 
                        "", 
                        "<p>Write output to <em><file></file></em> instead of <em>stdout</em>. If you are using <code>{}</code> or <code>[]</code> to fetch multiple documents, you can use <code>#</code> followed by a number in the <em><file></file></em> specifier. That variable will be replaced with the current string for the URL being fetched. Like in: </p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">curl http://<span style=\"color: #d0d0d0\">{</span>one,two<span style=\"color: #d0d0d0\">}</span>.example.com -o <span style=\"color: #ed9d13\">\"file_#1.txt\"</span>\n</pre></div>\n<p>or use several variables like: </p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">curl http://<span style=\"color: #d0d0d0\">{</span>site,host<span style=\"color: #d0d0d0\">}</span>.host<span style=\"color: #d0d0d0\">[</span>1-5<span style=\"color: #d0d0d0\">]</span>.com -o <span style=\"color: #ed9d13\">\"#1_#2\"</span>\n</pre></div>\n<p>You may use this option as many times as the number of URLs you have. For example, if you specify two URLs on the same command line, you can use it like this: </p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">curl -o aa example.com -o bb example.net\n</pre></div>\n<p>and the order of the <code>-o</code> options and the URLs doesn't matter, just that the first <code>-o</code> is for the first URL and so on, so the above command line can also be written as </p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">curl example.com example.net -o aa -o bb\n</pre></div>\n<p>See also the <code>--create-dirs</code> option to create the local directories dynamically. Specifying the output as <code>-</code> (a single dash) will force the output to be done to <em>stdout</em>. <br />\nSee also <code>-O</code>, <code>--remote-name</code> and <code>--remote-name-all</code> and <code>-J</code>, <code>--remote-header-name</code>. </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDcxNDQ5ODgsICJpZCI6ICIxNTA3MTQ0ODMxMDQ4LTAwNyIsICJtZCI6ICJXcml0ZSBvdXRwdXQgdG8gXyZsdDtmaWxlJmd0O18gaW5zdGVhZCBvZiBfc3Rkb3V0Xy4gSWYgeW91IGFyZSB1c2luZyBge31gIG9yIGBbXWAgdG8gZmV0Y2ggbXVsdGlwbGUgZG9jdW1lbnRzLCB5b3UgY2FuIHVzZSBgI2AgZm9sbG93ZWQgYnkgYSBudW1iZXIgaW4gdGhlIF8mbHQ7ZmlsZSZndDtfIHNwZWNpZmllci4gVGhhdCB2YXJpYWJsZSB3aWxsIGJlIHJlcGxhY2VkIHdpdGggdGhlIGN1cnJlbnQgc3RyaW5nIGZvciB0aGUgVVJMIGJlaW5nIGZldGNoZWQuIExpa2UgaW46IFxuICBcbiAgICA6OjpzaFxuICAgIGN1cmwgaHR0cDovL3tvbmUsdHdvfS5leGFtcGxlLmNvbSAtbyAmcXVvdDtmaWxlXyMxLnR4dCZxdW90OyBcbiAgXG5vciB1c2Ugc2V2ZXJhbCB2YXJpYWJsZXMgbGlrZTogXG4gIFxuICAgIDo6OnNoXG4gICAgY3VybCBodHRwOi8ve3NpdGUsaG9zdH0uaG9zdFsxLTVdLmNvbSAtbyAmcXVvdDsjMV8jMiZxdW90OyBcbiAgXG5Zb3UgbWF5IHVzZSB0aGlzIG9wdGlvbiBhcyBtYW55IHRpbWVzIGFzIHRoZSBudW1iZXIgb2YgVVJMcyB5b3UgaGF2ZS4gRm9yIGV4YW1wbGUsIGlmIHlvdSBzcGVjaWZ5IHR3byBVUkxzIG9uIHRoZSBzYW1lIGNvbW1hbmQgbGluZSwgeW91IGNhbiB1c2UgaXQgbGlrZSB0aGlzOiBcbiAgXG4gICAgOjo6c2hcbiAgICBjdXJsIC1vIGFhIGV4YW1wbGUuY29tIC1vIGJiIGV4YW1wbGUubmV0IFxuICBcbmFuZCB0aGUgb3JkZXIgb2YgdGhlIGAtb2Agb3B0aW9ucyBhbmQgdGhlIFVSTHMgZG9lc24mYXBvczt0IG1hdHRlciwganVzdCB0aGF0IHRoZSBmaXJzdCBgLW9gIGlzIGZvciB0aGUgZmlyc3QgVVJMIGFuZCBzbyBvbiwgc28gdGhlIGFib3ZlIGNvbW1hbmQgbGluZSBjYW4gYWxzbyBiZSB3cml0dGVuIGFzIFxuICBcbiAgICA6OjpzaFxuICAgIGN1cmwgZXhhbXBsZS5jb20gZXhhbXBsZS5uZXQgLW8gYWEgLW8gYmIgXG4gIFxuU2VlIGFsc28gdGhlIGAtLWNyZWF0ZS1kaXJzYCBvcHRpb24gdG8gY3JlYXRlIHRoZSBsb2NhbCBkaXJlY3RvcmllcyBkeW5hbWljYWxseS4gU3BlY2lmeWluZyB0aGUgb3V0cHV0IGFzIGAtYCAoYSBzaW5nbGUgZGFzaCkgd2lsbCBmb3JjZSB0aGUgb3V0cHV0IHRvIGJlIGRvbmUgdG8gX3N0ZG91dF8uIFxuU2VlIGFsc28gYC1PYCwgYC0tcmVtb3RlLW5hbWVgIGFuZCBgLS1yZW1vdGUtbmFtZS1hbGxgIGFuZCBgLUpgLCBgLS1yZW1vdGUtaGVhZGVyLW5hbWVgLiBcbiJ9---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KVA2=9?20H", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "count lines in all files of a type, not in aggregate", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">find . -name <span style=\"color: #ed9d13\">'*.php'</span> <span style=\"color: #d0d0d0\">|</span> xargs wc -l\n<span style=\"color: #999999; font-style: italic\"># Bash or Zsh:</span>\nwc -l **/*.php\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDcxNDk1NzAsICJpZCI6ICIxNTA3MTQ5NDM2NTQxLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZpbmQgLiAtbmFtZSAmYXBvczsqLnBocCZhcG9zOyB8IHhhcmdzIHdjIC1sXG4gICAgIyBCYXNoIG9yIFpzaDpcbiAgICB3YyAtbCAqKi8qLnBocFxuIn0=---->", 
                        "", 
                        "<code>shopt -s globstar</code> required for <code>**</code> to be recursive", 
                        "", 
                        "", 
                        "https://stackoverflow.com/q/1358540/172602"
                    ], 
                    "flags": 0, 
                    "guid": "U2Ym[),t{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "count lines in all files of a type in aggregate", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span> find ./ -name <span style=\"color: #ed9d13\">'*.php'</span> -print0 <span style=\"color: #d0d0d0\">|</span> xargs -0 cat <span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">|</span> wc -l\n</pre></div>\n<p>If you need more than one name filter, I've found that (at least with the MSYSGit version of find), you need extra parens:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span> find . <span style=\"color: #ed9d13\">\\(</span> -name <span style=\"color: #ed9d13\">'*.h'</span> -o -name <span style=\"color: #ed9d13\">'*.cpp'</span> <span style=\"color: #ed9d13\">\\)</span> -print0 <span style=\"color: #d0d0d0\">|</span> xargs -0 cat <span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">|</span> wc -l\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDcxNDk4NDQsICJpZCI6ICIxNTA3MTQ5NTg3NDQ4LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgICggZmluZCAuLyAtbmFtZSAmYXBvczsqLnBocCZhcG9zOyAtcHJpbnQwIHwgeGFyZ3MgLTAgY2F0ICkgfCB3YyAtbFxuICBcbklmIHlvdSBuZWVkIG1vcmUgdGhhbiBvbmUgbmFtZSBmaWx0ZXIsIEkmYXBvczt2ZSBmb3VuZCB0aGF0IChhdCBsZWFzdCB3aXRoIHRoZSBNU1lTR2l0IHZlcnNpb24gb2YgZmluZCksIHlvdSBuZWVkIGV4dHJhIHBhcmVuczpcbiAgXG4gICAgOjo6YmFzaFxuICAgICggZmluZCAuIFxcKCAtbmFtZSAmYXBvczsqLmgmYXBvczsgLW8gLW5hbWUgJmFwb3M7Ki5jcHAmYXBvczsgXFwpIC1wcmludDAgfCB4YXJncyAtMCBjYXQgKSB8IHdjIC1sXG4ifQ==---->", 
                        "", 
                        "<br />", 
                        "", 
                        "", 
                        "https://stackoverflow.com/q/1358540/172602"
                    ], 
                    "flags": 0, 
                    "guid": "n+@Ce3tyyd", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "curl"
                    ]
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [
                {
                    "__type__": "Deck", 
                    "children": [], 
                    "crowdanki_uuid": "a69e2b7a-6d5b-11e6-adf3-8c705a50cbf0", 
                    "deck_config_uuid": "a69e3016-6d5b-11e6-adf3-8c705a50cbf0", 
                    "desc": "Please see the <a href='https://ankiweb.net/shared/info/2107904924'>shared deck page</a> for more info.", 
                    "dyn": 0, 
                    "extendNew": 9, 
                    "extendRev": 50, 
                    "media_files": [], 
                    "mid": 1408638528289, 
                    "name": "General Information", 
                    "notes": [
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the main characteristic of a  <b>distributed\n                  version control system\n                  (DVCS)</b>?", 
                                "", 
                                "A distributed version control system has no\n                  central server which\n                  stores the data. Every local copy contains the full history of the\n                  source code.\n                  \n               ", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "b#GLS`mD*f", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does the use of a\n                  <b>DVCS</b> require a\n                  central\n                  code\n                  repository?\n                  \n               ", 
                                "", 
                                "No.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "CPlCr{/4m(", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Where does Git\n                  <b>commit</b> file changes to?<br />", 
                                "", 
                                "To the local repository.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "O9BDWhx,@(", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens when you <b>clone</b> a\n                  repository with                    Git?", 
                                "", 
                                "An exact copy of the\n                  repository is created locally.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Dkiv9+0iTX", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does the local clone of a remote repository include the\n                  complete history of the source code?", 
                                "", 
                                "Yes.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "M,[&ZR-I$S", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What's the meaning of <b>master branch</b>?", 
                                "", 
                                "The \"master\" in Git is the default branch, which generally represents the most stable code.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "bm{uO(^4b/", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>commit</b>?", 
                                "", 
                                "A commit is a pointer to a spot&nbsp;(revision)&nbsp;on the code history.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "LknXA>P{gu", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How are Git commits <b>identified</b>?", 
                                "", 
                                "Instead of numbering commits, Git uses the code contents of the commit to create a unique, 40 character SHA-1 hash.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "M!|;;-isLS", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does a branch created in a repository,&nbsp;which was cloned from another repository, need to have a&nbsp;counterpart in the&nbsp;remote repository?<br /> ", 
                                "", 
                                "No it doesn't.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "cr,S-na/4y", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which two steps are neccessary to persist modifications on a file in the repository?<br />", 
                                "", 
                                "1. Staging (mark the file to be relevant for Git) = adding the file to the index.<br />2. Commiting: storing the changes in the Git repository.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wp*ChGY&nd", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the term <b>staging</b> describe?", 
                                "", 
                                "Marking changes as relevant for the version control, by adding them to the index.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s2b*|BtuO2", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>Revision</b>?<br />", 
                                "", 
                                "A revision represents a version of the source code. Git identifies\n                                               revisions\n                                               with SHA-1 IDs using a commit object. SHA-1 IDs are 160 bits long and are\n                                               represented\n                                               in\n                                               hexadecimal. The latest version can be addressed\n                                               via\n                                               HEAD, the version before that via\n                                               HEAD~1\n                                               and so on.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "DF$yg5cnTs", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "In which file does Git store <b>global settings</b>?<br />", 
                                "", 
                                "In the <b>.gitconfig</b> file.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "cq9}90`8%l", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which file tells Git which files and directories to <b>ignore</b>?<br />", 
                                "", 
                                "<pre>.gitignore</pre>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "p{@pLqf8~)", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between <b>local .gitignore</b> and <b>global .gitignore</b> files, regarding visibility?<br />", 
                                "", 
                                "The local\n               .gitignore\n               file can be committed into the Git repository and\n               therefore is visible\n               to everyone who clones the repository. The\n               global\n               .gitignore\n               file is only\n               locally visible.\n               \n            ", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "bALcFrS[,0", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How are <b>empty directories</b> handled under Git version control / by common practice?", 
                                "", 
                                "Git ignores empty directories, i.e. it does not put them under version control. Common practice for tracking an empty directory though, is to put a file called <b>.gitkeep</b> into such a directory.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "julVRci`rj", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the command <b>git reflog</b>&nbsp;do?<br />", 
                                "", 
                                "It displays the history of the complete changes of the current branch, based on the HEAD revision.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s$go8!a4M`", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does <b>git reflog</b>&nbsp;also contain deleted commits?", 
                                "", 
                                "Yes.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "o7*md3rMpY", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How is the <b>default branch</b> called in Git?<br />", 
                                "", 
                                "Master.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "KQ=K|X^!V@", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the term <b>merging</b>&nbsp;describe?<br />", 
                                "", 
                                "The process of combining changes of two branches.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "IMAr1$Qa%~", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>merge conflict</b>?<br />", 
                                "", 
                                "A merge conflict occurs, if two people have modified the same content and Git cannot automatically determine how both changes should be applied.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u}r83:+:~S", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the <b>rebase</b>&nbsp;command do?<br>", 
                                "", 
                                "In general terms - rewrites history. E.g: Combining several commits into<br>                  one commit. Or replaying changes from one branch on top of the other.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ioQ[YMk002", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What functionality does the <b>stash</b> command add?<br />", 
                                "", 
                                "Saving the current uncommmitted changes and&nbsp;checkout&nbsp;the last committed revision. This allows pulling-in the latest changes or to develop an urgent fix. Afterwards the stashed changes can be restored, which will reapply the changes to the current version of the source code.<br /> ", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i`-!UI5`9n", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What's the rule of thumb, concerning the <b>stash</b>&nbsp;command?<br />", 
                                "", 
                                "It should be the exception to using Git. Typically you would create new branches for new features and switch between branches.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "My4;,HZvH:", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>patch file</b>?<br />", 
                                "", 
                                "A text file that contains changes to the source code.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "m5arfU*|ZX", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is an <b>alias</b> in Git?", 
                                "", 
                                "An alias in Git allows you to setup your own Git command. E.g. you can define an alias which is a short form of your own favorite commands or you can combine several commands with an alias.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "PE`j{-UNE?", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Name two <b>transport types</b>&nbsp;that are supported protocols for Git checkouts", 
                                "", 
                                "The native Git protocol is <b>git</b>, alternatively the <b>http</b> protocol is also supported.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BKdJz<y,i?", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens in regards to naming of the original repository, when <b>cloning</b> a remote repository?<br />", 
                                "", 
                                "The original repository will automatically be called \"origin\".<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "xDNKnks;P;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the possibility of using the <b>HTTP protocol</b> with Git especially helpful for?", 
                                "", 
                                "If a firewall blocks all requests other than http.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ykx4hD1f`?", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which are the two variants of <b>ssh keys</b>?<br />", 
                                "", 
                                "Public and private.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K5v/_?3y;F", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does <b>rev~</b> stand for?", 
                                "", 
                                "The first parent of a revision \"rev\"", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "NvGA`?8=%", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the starting point of the scope of <b>.gitignore</b> files?", 
                                "", 
                                "They define ignore definitions for the whole directory tree, starting from the point where the .gitignore file itself resides.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "op.FKBEm<w", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What's the difference between <b>git pull</b> and <b>git fetch</b>? (<span style=\" font-style: normal; font-weight: normal;\">In the simplest terms)</span>", 
                                "", 
                                "git pull does a git fetch followed by a git merge.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "j@2Mww$9I{", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between <b>git commit</b> and <b>git push</b>?", 
                                "", 
                                "<b>commit:</b> adding changes to the repository.<div><b>push</b>: to transfer the last commit(s) to a remote server</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "n/=o]SCdPT", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the <b>head</b> in Git?", 
                                "", 
                                "The head is a pointer to the current branch, which is in turn the last commit you made or checked out into your working directory.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Dgx!t", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the <b>index</b> in Git?", 
                                "", 
                                "It's a snapshot of changes contained in your next commit, this way it's the \"<b>proposed next commit</b>\".", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "KRd1.", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does <b>head^</b> mean?", 
                                "", 
                                "It means the first parent of the tip of the current branch.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "gTh:E.xGT7", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between <b>head~</b> and <b>head^</b> ?", 
                                "", 
                                "&nbsp;~&lt;n&gt; means the revision that is the &lt;n&gt;th generation ancestor of the named revision, following only the first parents.<div>^&lt;n&gt; means the &lt;n&gt;th parent of that revision.</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "oSbQ@6YX3O", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "marked"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a local version control system?", 
                                "", 
                                "A database of changes kept on the same computer as the files being versioned.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "lyLiO", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How is a distributed version control system different from others?", 
                                "", 
                                "Every client has a full backup of all the data.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "vL>PF", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the \"snapshot\" concept?", 
                                "", 
                                "In Git, the data is more like a stream of complete snapshots of a mini filesystem rather than a list of file changes like you'll see in SVN, Perforce, etc.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "[=E+4", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why are most git operations so fast?<br>", 
                                "", 
                                "They happen on the local disk, rather than over a network<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "nWWq:b)^~N", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How does git maintain file integrity?<br>", 
                                "", 
                                "Everything is SHA-1 checksummed and stored not by filename, but rather hash value of each file's contents.<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "j-w#1jS:X.", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are the 3 git states your files can reside in?<br>", 
                                "", 
                                "committed, modified, and staged<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "C4^;Av:G|V", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does it mean when a file is in the \"committed\" state?<br>", 
                                "", 
                                "The data is safely stored in your local database<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "d1B#YWuY@B", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does it mean if a file is in the \"modified\" state?<br>", 
                                "", 
                                "You have changed the file, but not yet committed it.<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B*=9usvjro", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does it mean if a file is in the \"staged\" state?<br>", 
                                "", 
                                "You have marked a file in its current state to go into the next commit snapshot.<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fZB+bI=,I[", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are the 3 sections of a git project?<br />", 
                                "", 
                                "the Git directory (repository), the working directory, and the staging area<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "exQD~)OGAp", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "marked"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is stored in the Git directory?<br>", 
                                "", 
                                "The metadata and object database for your project<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tE7lTjYc[[", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is copied when you clone a repository from another computer?<br>", 
                                "", 
                                "the Git directory<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "k,m+XqcVpU", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the working directory?<br>", 
                                "", 
                                "A single checkout of one version of the project. These files are pulled out of the compressed database in the git directory and placed on disk for you to use and modify.<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K.$%A~oaD9", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the staging area?", 
                                "", 
                                "It is a file in the git directory that stores information about what goes into the next commit. It is sometimes referred to as the \"index\".", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "L41A}A*]ro", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the 3-step basic git workflow?", 
                                "", 
                                "1. modify files in working directory<div>2. stage files, adding snapshots of them to the staging area</div><div>3. commit, which takes the files in the staging area and stores that snapshot permanently to your git directory</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "F*ctH#)=J&", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Where are the three places that git config variables can be stored?", 
                                "", 
                                "1. systemwide: &nbsp;/etc/gitconfig<div>2. per user: ~/.gitconfig or ~/.config/git/config</div><div>3. per project: .git/config</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u(@cQ<B8CM", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option do you pass to git config to modify system-level configs?", 
                                "", 
                                "--system", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i})V+Dzh9J", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option do you pass to git config to make changes for specific to your user?", 
                                "", 
                                "--global", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BarEPJKq84", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are three ways to get help on a git verb?", 
                                "", 
                                "1. git help &lt;verb&gt;<div>2. git &lt;verb&gt; --help</div><div>3. man git-&lt;verb&gt;</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "O`8m5XL4n_", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you get a copy of an existing git repository, say https://github.com/libgit2/libgit2<span style=\"line-height: 1.1;\">?</span><br>", 
                                "", 
                                "git clone&nbsp;https://github.com/libgit2/libgit2", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "o=}nL8EYm$", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are a couple different transfer protocols used by git?", 
                                "", 
                                "https://<div>git://</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "A}1)?]T`vM", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between a tracked and untracked file?", 
                                "", 
                                "Tracked files are all files that were in the last snapshot. They can be unmodified, modified, or staged. Untracked files are not in the latest snapshot or staged.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q`hDEs1([I", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why is it possible for a tracked file to be both in staging and modified state?", 
                                "", 
                                "Because the staged version is the contents of the file at the exact time you ran \"git add\" to stage the file. You have to run \"git add\" again if you've modified it and want to stage the latest contents of the file.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Ft&|}kHYmQ", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What file is used to ignore some untracked files?", 
                                "", 
                                ".gitignore", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "A(Pz~1U7<!", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the default shortname for cloned repositories?", 
                                "", 
                                "origin", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "t;V;(s*,@A", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How does git fetch affect your local repository?", 
                                "", 
                                "It pulls the data, but does not merge or modify your working copy. To actually merge, it must be manually done.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Pj#|SXYy$f", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is stored in a git commit object?", 
                                "", 
                                "* pointer to the snapshot of the staged content<div>* author's name and email</div><div>* commit message</div><div>* pointer to the commit(s) directly before this one</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s]So><?rVW", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a branch in terms of git commit objects?", 
                                "", 
                                "A lightweight movable pointer to one of the commits", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B0mlW%vB3_", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the name of the special pointer which tells you which local branch you're currently on?", 
                                "", 
                                "HEAD", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wx>?/9M3;E", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens to the HEAD pointer when you create a new branch?", 
                                "", 
                                "Nothing, it continues to point to the existing branch (such as master, if you haven't changed it yet). It does not switch to the new branch automatically.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "rSIJ1yGYe", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens to the working directory when you switch branches?", 
                                "", 
                                "The files are updated to reflect the last commit of the branch. If it cannot be updated cleanly, git will not let you switch.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "uZYKi_w!c;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why is a git branch cheap?", 
                                "", 
                                "A branch is a simple file that contains the 40 character SHA-1 checksum of the commit it points to.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i}td:;X-$8", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a \"fast-forward\" merge?", 
                                "", 
                                "When you try to merge a commit that can be reached by following the first commit's history, git will simply move the pointer forward because there is no divergent work to merge together. This is known as a \"fast-forward\" merge.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "rVbh7YpG/J", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a merge commit?", 
                                "", 
                                "When two divergent branches are merged, git creates a new snapshot and a new commit that points to it. A merge commit has more than one parent.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "I_KQ5^#C&9", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How is git different in dealing with the merge base when merging branches?", 
                                "", 
                                "Git determines the best common ancestor to use for its merge base, which is a lot simpler than many other VCSes.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tgr3Vb|<^/", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the leading * character mean in the output of git branch?", 
                                "", 
                                "It indicates the branch you have currently checked out (that HEAD points to).", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B@=#&gvD8$", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the name used for a branching workflow where sets of commits graduate to a more stable silo when they're fully tested?<br>", 
                                "", 
                                "progressive-stability branching<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z/@Lr]Q(#S", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the name for a short-lived branch for a single particular feature or related work?<br>", 
                                "", 
                                "topic branch<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i!X._o?lw1", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are remote branches?<br>", 
                                "", 
                                "Pointers to the state of branches in remote repositories. They are local branches that you cannot move.<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "G#8JF}nb2h", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "When are remote branch pointers updated?<br>", 
                                "", 
                                "They are automatically moved when you do any network communication.<br>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "J6*@RPtUh1", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "When you fetch a remote branch, will it automatically set up a local branch with the same name?", 
                                "", 
                                "No. You must either merge it or create your own branch from it.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q5})51ApH+", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the shorthand for referencing the tracking remote and branch?", 
                                "", 
                                "@{u} or @{upstream}", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tK3qT-!z5k", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "marked"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How does rebasing affect the commit history differently than a merge?", 
                                "", 
                                "A rebase will make the commit history look linear/clean rather than a bunch of branch merges. This is often done to make sure your commits apply cleanly to a remote branch.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "zcp*jH9a&8", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What one tip should you follow to avoid a drawback of rebasing?", 
                                "", 
                                "Do not rebase commits that exist outside of your repository.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ATWa!RS=Z&", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a good general rule for deciding when to rebase or to merge?", 
                                "", 
                                "Rebase local changes you haven't shared yet in order to clean up, but never rebase anything you pushed somewhere.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "xN+rNGwU1e", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a \"bare repository\"?", 
                                "", 
                                "A repository that doesn't contain a working directory", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "uN=LqKN.,h", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }
                    ]
                }, 
                {
                    "__type__": "Deck", 
                    "children": [], 
                    "crowdanki_uuid": "a6a24430-6d5b-11e6-adf3-8c705a50cbf0", 
                    "deck_config_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
                    "desc": "Please see the <a href='https://ankiweb.net/shared/info/'>shared deck page</a> for more info.", 
                    "dyn": 0, 
                    "extendNew": 1, 
                    "extendRev": 50, 
                    "media_files": [], 
                    "mid": "1467568254113", 
                    "name": "Commands", 
                    "notes": [
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>initialize a new, empty repository</b> in the current working directory?", 
                                "<pre>git init</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "vd<-:IY:nA", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What command is used to configure the local user's email (\"email\"), that are used when committing to Git repositories?", 
                                "<pre><span style=\"font-family: Arial\">git config --global user.email \"email\"</span></pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Oy*>$5ZF=,", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does this command do:&nbsp;<b>git add . &nbsp;</b>", 
                                "", 
                                "It adds everything inside the current working directory to the index.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "bFER[=-<|E", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which commands are needed to <b>add</b> <b>all .js files </b>to the local Git repository?", 
                                "<pre>git add *.js</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ybvT<[dy(K", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>commit</b> to the local repository, including a <b>commit message </b>(\"message\")?", 
                                "<pre>git commit -m \"message\"</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "db&Hk]Np30", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command prints&nbsp;&nbsp;the <b>current state</b> of your code/repository?", 
                                "<pre style=\"text-align: justify;\">git status</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "yl]3.#F=wd", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which Git command is used to <b>list the existing branches</b>?", 
                                "<pre>git branch</pre>", 
                                "", 
                                "Ommitting all options to the \"git branch\" command, will list the existing branches."
                            ], 
                            "flags": 0, 
                            "guid": "xx=?AKe[yR", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>creates</b> a new branch (\"branchname\")?", 
                                "<pre>git branch branchname</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "P~gJ-(ZRpb", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will switch to the branch \"myotherbranch\"?", 
                                "<pre style=\"line-height: 25px;\">git checkout myotherbranch</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "A;K+h*%{g+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What commands will join everything from the branch \"bigIdea\" to be part of the \"master\" branch?", 
                                "", 
                                "<pre>git checkout master</pre>\n<pre>git merge bigIdea</pre>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "xj?aKvn]u;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will delete (even) an unmerged branch (\"branchname\")?", 
                                "git branch -D branchname", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "cy@|.4O)Rb", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the existing <b>global Git settings</b>?<br />", 
                                "<pre>git config --list</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "gCNrkn8>}D", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command shows<b> commit logs </b>(list of all commits, starting with newest)?<br />", 
                                "<pre>git log</pre>", 
                                "<div>For each commit the following info would be displayed</div>1. SHA-1 identifier<br />2. Author and Email<br />3. Date + time of the commit<br />4. Commit message header", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "F.SR4G,Gfi", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays all <b>changes to tracked files since the last commit</b>?<br />", 
                                "<pre>git diff</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "gz>^p#~9is", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the changes in a <b>specific commit </b>(\"commitid\")?", 
                                "<pre>git show commitid</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Km<`;Sy=)R", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the <b>change history</b> of a specific file (\"filename\")?", 
                                "<pre>git log filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "c|}&67Vq<k", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays which commit and author modified a file (\"filename\") on a line by line basis?", 
                                "<pre>git blame filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "zhQu]56^%W", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command deletes a file (\"filename\")&nbsp;from the working directory and at the same time marks it for the next commit?<br />", 
                                "<pre>git rm filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "jPCDaOPH-e", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the existing defined <b>remote repositories</b>?<br />", 
                                "<pre>git remote</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BW0mPtV2np", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>cleans</b>&nbsp;untracked changes in the working directory?", 
                                "<pre>git clean -f</pre>", 
                                "optional:<div>-d to remove untracked directories</div><div>-x remove also \"ignored files\"</div>", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tLncJ/l5g8", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can you <b>revert a deleted or changed file </b>(\"filename\")<b> that has not yet been added to the index</b>?<br />", 
                                "git checkout filename", 
                                "Add -- after checkout to avoid naming conflicts if you have tag or branch with the same name", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fB~P#a9Rr9", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can you checkout older revisions of your source code (revision \"commitid\")?<br />", 
                                "git checkout commitid", 
                                "Via checking out specific commit id", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "mO83Khi,Bp", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command removes an added file (\"filename\") from the index again?<br />", 
                                "<pre>git reset filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "r9_$:6`{&]", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can all changes of a commit (\"commitid\") be reverted and a new commit be recorded, which documents that the other commit was reverted?<br />", 
                                "<pre>git revert commitid</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "IkdEc`A5@C", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command lists the <b>available tags</b>?<br />", 
                                "<pre>git tag</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "C%6YFoMT|@", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command creates a <b>new tag </b>(\"tagname\") <b>with a description&nbsp;</b>(description)?", 
                                "<pre>git tag tagname -m 'description'</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "QXr(!z{!JN", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>check out a specific tag </b>(\"tagname\")?", 
                                "<pre>git checkout tagname</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "px*W<u78A!", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command / parameter <b>lists all branches, including remote</b> branches?", 
                                "<pre>git branch -a</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Lh{-~`~T,3", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>creates a new branch </b>(branchname)<b> and switches to it</b>?", 
                                "git checkout -b branchname", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "M|AX8qt~>O", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command would <b>delete </b>the local \"testing\" branch (if it is merged)?<br />", 
                                "<pre>git branch -d testing</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "E$0ONs0VO;", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>merges differences</b> of the \"testing\" branch into the current active branch?<br />", 
                                "<pre>git merge testing</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BX2UBkW5(_", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which default Git tool exists for <b>resolving conflicts</b>, which command starts it?<br />", 
                                "git mergetool", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wV]w?R>lcp", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command would <b>start interactive rebase </b>of the last seven commits?", 
                                "<pre>git rebase -i HEAD~7</pre>", 
                                "", 
                                "More info on interactive mode here:&nbsp;<a href=\"https://git-scm.com/docs/git-rebase\">https://git-scm.com/docs/git-rebase</a>"
                            ], 
                            "flags": 0, 
                            "guid": "rYX3zdLiLv", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays <b>which commit deleted a specific file </b>(\"filename\")?<br />", 
                                "<pre>git log -- filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "qT8-CD>aCh", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the <b>--</b> option in <b>git log</b>&nbsp;used for?<br />", 
                                "", 
                                "To see the commit history for a file, even if the file has been deleted.<br />", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "en>uh_WPEG", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will define an alias \"add-commit\", which<br />                  combines<br /> <b>git add . -A</b><br />                  and<br /> <b>git commit</b>?", 
                                "<pre class=\"programlisting\">git config --global alias.add-commit <span class=\"hl-string\">'!git add . -A &amp;&amp; git commit'</span></pre>", 
                                "! is to specify that it's an external command", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "v4!4YvMOyH", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the command do: <b>git reset --soft HEAD~</b>", 
                                "", 
                                "Undo the last commit. The affected files will be back on stage again.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Bb9(y,?O!N", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does <b>git reset --hard HEAD~</b>&nbsp;do? (instead of HEAD~ it could be also a commit SHA-1 or another reference)", 
                                "", 
                                "Undo the last commit, unstage files AND undo any changes in the working directory. (Not tracked files won't be affected)", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "e?#@Ae7yYi", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which parameter allows you to <b>stage an ignored file</b>?", 
                                "<pre>--force</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "t#C`2kFJh%", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which Git command <b>newly stages a specific file </b>(\"filename\")?", 
                                "<pre>git add filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "F9hBmh|l1!", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>undo the checking-in of an unwanted change </b>in a file \"filename\"&nbsp;(remove the respective file from the index), but keep the changes in the filesystem?", 
                                "<pre>git reset filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K&{Me3,SpN", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between:<br><pre>git checkout -f</pre> and <pre>git reset --hard HEAD</pre>?", 
                                "", 
                                "None, with these parameters they do exactly the same.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "v*,Ks", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Remove main.txt from staging but keep in working (untrack file, after this and commit file would be remove from repo)", 
                                "git rm --cached main.txt", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q+7&uzQT|w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command / parameter changes the message of the last commit? (for \"newmessage\")<br />", 
                                "<code>git commit --amend -m \"newmessage\"</code><br />", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "PI~KTfs,vb", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Clone an existing repository (address: \"url\")", 
                                "git clone url", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "G82n[7RC-w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create a new local repository", 
                                "git init", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "q@#s*s3u]g", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Add some (allows you interactively to choose which) changes in <i>file</i> to the next commit", 
                                "git add -p <i>file</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "PMP7kE]98_", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Commit all local changes in tracked files", 
                                "git commit -a", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u.R(/o`lN5", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Commit previously staged changes", 
                                "git commit", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "CD?#JCMZQT", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Change the last commit [only before pushing]", 
                                "git commit --amend", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "AuqfF!TJF|", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show changes over time (diffs) for a specific file (\"filename\")", 
                                "git log -p <i>filename</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "LXatc~.8(T", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Switch HEAD to <i>branch</i>", 
                                "git checkout<i>&nbsp;branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "oQvc(-wSfJ", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create a new branch (name \"nbranch\") based on current HEAD", 
                                "git branch n<i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "D@AO#)N}^n", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create a new tracking branch (\"tbranch\") based on a remote branch (\"rbranch\")", 
                                "git branch --track t<i>branch</i> <i>rbranch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "iSDwh!LidQ", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Delete a local branch (\"branch\")", 
                                "git branch -d <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "kFL]Z[c?WW", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Mark the current commit with a tag (\"tagname\")", 
                                "git tag <i>tagname</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s!ZB.hS(-G", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show information about a remote&nbsp;(\"origin\")", 
                                "git remote show <i>origin</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tF=*UV)5N=", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Add remote server 'url' with shortname 'myurl'", 
                                "git remote add myurl url", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "HoFoQWIJch", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Download all changes from <i>remote&nbsp;</i>(\"origin\")&nbsp;but don't integrate into HEAD", 
                                "git fetch <i>origin</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fANXqT[p/F", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Download changes from remote&nbsp;(\"origin\")&nbsp;branch \"branch\" and directly merge into HEAD", 
                                "git pull <i>origin</i> <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u82$&koLO+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Publish local changes (for a branch \"branch\") on a remote (\"origin\")", 
                                "git push <i>origin</i>&nbsp;<i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Ln4&)EH3[6", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Delete a \"branch\" on the remote&nbsp;(\"origin\") (old way)", 
                                "git push <i>origin</i>&nbsp;:<i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "b:dG)*p%)g", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Publish your tags", 
                                "git push --tags", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "lapc;rQKP$", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Merge <i>branch</i> into your current HEAD", 
                                "git merge <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "AKq80IBb}P", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Rebase your current HEAD onto <i>branch</i>", 
                                "git rebase <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "J<:a=e?`oZ", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Abort a rebase", 
                                "git rebase --abort", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q8k(Cko^;c", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Continue a rebase after resolving conflicts", 
                                "git rebase --continue", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "P}-RgapC#;", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Use your configured merge tool to solve conflicts", 
                                "git mergetool", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ktUT0Y8n@/", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Use your editor to manually solve conflicts during merge/rebase and after resolving mark file as resolved with:", 
                                "", 
                                "git add <i>resolved-file or</i><div>git rm <i>resolved-file</i></div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "x:&=qX<?g[", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "marked"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Discard all local changes in working directory", 
                                "git reset --hard HEAD", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z4bjQlX^a)", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Discard local changes in a specific file (\"filename\")", 
                                "git checkout&nbsp;<i>filename</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "AiXZD7qnCt", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset your HEAD pointer to some previous <i>commit</i> (and discard all changes since then)", 
                                "git reset --hard <i>commit</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i[4p_Cw|hU", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset your HEAD pointer to some previous commit, and preserve all changes as unstaged changes", 
                                "git reset <i>commit</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "f.*![R]E|?", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset your HEAD pointer to some previous commit (\"commit\") and preserve uncommited local changes", 
                                "git reset --keep <i>commit</i>", 
                                "If a file that is different between &lt;commit&gt; and HEAD has local changes, reset is aborted.", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "R|LmdnJ,y", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What tool is used to get and set configuration variables that control how git looks and operates?", 
                                "git config", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fxZQIT(,(b", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What .gitignore pattern would you use to ignore all .txt files in the doc folder?", 
                                "doc/**/*.txt", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/gitignore\">https://git-scm.com/docs/gitignore</a>"
                            ], 
                            "flags": 0, 
                            "guid": "EADNWO/y%=", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can you skip the staging area for modified, tracked files when doing a commit?", 
                                "git commit -a", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "v].?TQ-:3w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you delete a <i>file</i> that has been modified and already added to the staging area?", 
                                "git rm -f file", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "t-q}2tG:=X", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you rename or move a file in git (\"src\" to \"target\")?", 
                                "git mv src target", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "hwwyi_%Pd8", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are some of the options to view the commit log history in different formats?", 
                                "", 
                                "--pretty=[oneline | short | full | fuller]<div>--pretty=format:\"...\"</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "mqXLAB~pFz", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you view the history for author jdoe with keyword potato in the commit message made in the last two weeks that added or removed a reference to the function mashThePotato that were not merges?", 
                                "", 
                                "git log --author jdoe --grep potato --all-match -SmashThePotato --since=2.weeks --no-merges", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "eh}B.z/n^;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why is git reset considered safe without \"--hard\" option?", 
                                "", 
                                "It only affects your staging area", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "JC%^;+L+{p", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you tag revision 0123abc with the name v1.0?", 
                                "git tag v1.0 0123abc", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wi-I)r_kC{", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens if you try to delete a branch with \"git branch -d &lt;name&gt;\" that has not yet been merged?", 
                                "", 
                                "It will fail, and offer -D if you really want to lose your branch.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u)(3>G(PkD", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "If you want to use a different name than \"origin\" (eg \"norig\") for the remote when cloning a repository (\"repo\"), what parameter would you use?<br />", 
                                "git clone -o norig repo<br />", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ce?E649%xX", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you share a local branch called \"badname\" as \"goodname\" on a remote called \"origin\"?<br>", 
                                "git push origin badname:goodname<br>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K7n]nn1&|k", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you set up a credential cache so that you don't have to keep typing your password for git push?", 
                                "git config --global credential.helper cache", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "p2[Clw3O~<", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "If you have a local branch and you want it to use a remote branch (say origin/hotfix) as upstream, how would you set it?", 
                                "git branch -u origin/hotfix", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "m8|o{YV!nU", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you see what tracking branches you have set up?", 
                                "git branch -vv", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "LRM3~SSVl%", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you delete a remote branch (\"serverfix\") from the server (\"origin\")?", 
                                "git push origin --delete serverfix", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Igy_c!s=?[", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you use rebase to apply master changes to branch b1, then apply b1 changes to master? The result being a linear history.", 
                                "", 
                                "<div># method: 1</div>git checkout b1<div>git rebase master</div><div>git checkout master</div><div>git merge b1</div><div><br /></div><div># method: 2</div><div>git rebase b1 master</div><div>git checkout master</div><div>git merge b1</div>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BU,]d;k1vy", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "If you have changes on commits that no longer exist upstream (due to a remote rebase), how can you pull in those changes and avoid conflicts that would happen with git pull origin/master?", 
                                "<div>git pull --rebase origin/master</div>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "r&Du}9yV]>", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are limitations of the command that changes the message of the last commit (<span style=\"font-family: monospace\">git commit --amend</span>)?", 
                                "", 
                                "It only works before the commit has been pushed to remote repo.", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "p}K},k:N*K", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What command is used to configure the local user's name (\"Name\"), that are used when committing to Git repositories?", 
                                "<pre>git config --global user.name \"Name\"</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tc$Es;:D1%", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show what file would be delited with \"git clean\" (dry run)", 
                                "git clean -n", 
                                "(or --dry-run)", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "e%>lbo,!2:", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "marked", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option should you add to \"git clean\" in order to remove untracked directories", 
                                "-d", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q`Z}4EnZK~", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option should you add to \"git clean\" in order to remove \"ignored\" files", 
                                "-x", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "dk~4Dx5y5N", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will&nbsp;<b>show the entire history (</b>including renames<b>)&nbsp;</b>for the file (\"filename\")?", 
                                "<pre>git log --follow -p filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "k`%2n:=CjO", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<b>Create a stash</b>&nbsp;with uncommitted changes (analogous to save uncommited changes, and do reset hard)", 
                                "git stash", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ez-t2N[Xx1", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<b>Reapply the stashed changes</b>&nbsp;<b>and</b>&nbsp;<b>delete the stash&nbsp;</b>from the list of stashes", 
                                "git stash pop", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "h?w8D]L^FH", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<b>Reapply the stashed changes</b>&nbsp;without deleting<b>&nbsp;stash&nbsp;</b>from the list of stashes", 
                                "git stash apply", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s]W5g${#u#", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show git stash stack (list of stashes)", 
                                "git stash list", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Pd,w:x7/_-", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show branches already merged into current branch", 
                                "git branch --merged", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "r6fVPW{|To", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show branches not yet merged into current branch", 
                                "git branch --no-merged", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "c@|3gg#;C]", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Rebase master onto develop without checking it out", 
                                "git rebase master develop", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "zi:*@|txPH", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show remote servers with URL displayed", 
                                "git remote -v", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B*+[Z2P7KB", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Rename remote 'server1' to 'server2'", 
                                "git remote rename server1 server2", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ti2E88+S5G", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Remove remote 'server1'", 
                                "git remote rm server1", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "NeFQQhW5^#", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show last two commits with diffs", 
                                "git log -p -2", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "jEwY}^Te}u", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show commit logs with stats", 
                                "git log --stat", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "8.]Jh.QO$", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<div>Show commit logs one per line</div>", 
                                "git log --pretty=oneline", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Nt[d(Wa#l9", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show commit logs with ascii graph", 
                                "git log --graph", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "N3Nv.H3g;i", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show commit log for the last week", 
                                "git log --since=1.week", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K9W#BB4D6c", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<div>Show prev commits for each lines 10-15 of file.rb</div>", 
                                "git blame -L 10,15 file.rb", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "DpA{?G=4xx", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reapply stash 2", 
                                "git stash apply stash@{2}", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ASur]9.2r1", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reapply stashed changes along with the changes in index (staging the changes, for example)", 
                                "git stash apply --index", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z0v]ev^m&4", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Drop stash 2", 
                                "git stash drop stash@{2}", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K?U.M_8qGm", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create branch 'mybranch' from stash", 
                                "git stash branch mybranch", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "frj9MIHYN;", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Delete all stashes", 
                                "git stash clear", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "vMkxJ_N}WR", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show what's staged but not yet committed", 
                                "git diff --staged", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "C=%4u;E{qS", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Start binary search of commits to find bad commit", 
                                "git bisect start", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "I;|,m~EPM+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Mark current commit as broken during bisect", 
                                "git bisect bad", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "snS(|j2h+c", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<div>Mark current commit as good during bisect</div>", 
                                "git bisect good", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "nV[EjN,:@f", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Mark v2.2 as last known good commit during bisect (beginning of binary search)", 
                                "git bisect good v2.2", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "B&(BK&(f`i", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you initiate bisect algorithm in git (several commands)", 
                                "", 
                                "<div><div>Suppose you are trying to find the commit that broke a feature that was known to work in version v2.6.13-rc2 of your project. You start a bisect session as follows:</div><div><br /></div><div>$ git bisect start</div><div>$ git bisect bad # Current version is bad</div><div>$ git bisect good v2.6.13-rc2 # v2.6.13-rc2 is known to be good</div></div><div><br /></div><a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>", 
                                "", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z+Mb^@:H2B", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset to original&nbsp;HEAD when finished with bisect", 
                                "git bisect reset", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "zT>)P:<]^A", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Run 'test.sh' on each commit during bisect (automates designation of commit as \"good\" or \"bad\")", 
                                "git bisect run test.sh", 
                                "Note that the script should exit with code 0 if the current source code is good/old, and exit with a code between 1 and 127 (inclusive), except 125, if the current source code is bad/new.", 
                                "<div><a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a></div>"
                            ], 
                            "flags": 0, 
                            "guid": "P375+&ZLLM", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Search the working directory for \"foo()\"", 
                                "git grep \"foo()\"", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "w/@P4=C{XI", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "View all the merge conflicts (if your working tree is in corresponding state)", 
                                "git diff", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "goZxIb4w*t", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "See differences between two commits (\"commitid1\", \"commitid2\")", 
                                "git diff commitid1 commitid2", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wb7|*(on45", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "See the files (only filenames) changed between two commits (\"commitid1\", \"commitid2\")", 
                                "git diff&nbsp;--name-only&nbsp;commitid1 commitid2&nbsp;", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "D-cA<mm5S>", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Undo non-pushed commits (if you are tracking branch origin/master)", 
                                "git reset origin/master", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "j+p@19O^.m", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Apply a patch (\"patchname.patch\")", 
                                "<div>git apply -v patchname.patch</div>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "nsS,t6r6k~", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Re-checkout file (\"filename\") or files specified by path to version specified by <i>rev</i> (which may be specified using a SHA1 commit ID, branch name, or tag), overwriting any local changes.", 
                                "git checkout rev filename", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "rZOpQ[aZ<4", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Check out the client branch, figure out the patches from the common ancestor of the client and server branches (the common ancestor branched from master in the past), and then replay the patches from client that are not into common ancestor onto master.", 
                                "git rebase --onto master server client", 
                                "", 
                                "Here are some diargrams:&nbsp;<a href=\"https://git-scm.com/book/ch3-6.html\">https://git-scm.com/book/ch3-6.html</a>"
                            ], 
                            "flags": 0, 
                            "guid": "dOe.P/`?3w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create alias \"co\" for git checkout", 
                                "git config --global alias.co checkout", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q00f>K3|x]", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Add \"unstage\" alias to git (for current user)", 
                                "git config --global alias.unstage 'reset HEAD --'", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "H+[B`$4X}+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Filter commit by author ('jdoe') in git log", 
                                "git log --author jdoe", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "OK9(#LMJ]r", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Filter commit by presense of \"pattern\" in commit message in git log", 
                                "git log --grep pattern", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Oe9~pAq==p", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What parameter of git log should you use to specify that you want to see only commits matching all given patterns (with --grep option)?", 
                                "--all-match", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "L%bpn*{MB[", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Look for differences whose patch text contains added/removed lines that match &lt;regex&gt;.", 
                                "git log -G&lt;regex&gt;", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-log\">https://git-scm.com/docs/git-log</a>"
                            ], 
                            "flags": 0, 
                            "guid": "D]39x!74>j", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Stash all changes (including untracked and ignored files)", 
                                "git stash --all", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-stash\">https://git-scm.com/docs/git-stash</a>"
                            ], 
                            "flags": 0, 
                            "guid": "bf+S])w`{#", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Stash files in repo including untracked files (but not ignored ones)", 
                                "git stash&nbsp;--include-untracked", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-stash\">https://git-scm.com/docs/git-stash</a>"
                            ], 
                            "flags": 0, 
                            "guid": "H[wLNmJhnn", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Start git stash interactive mode (allows you to &nbsp;interactively select changes, that would be stashed)", 
                                "git stash -p", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-stash\">https://git-scm.com/docs/git-stash</a>"
                            ], 
                            "flags": 0, 
                            "guid": "tnbnb&KWxw", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show status of the repository, ignoring untracked files", 
                                "git status -uno", 
                                "or&nbsp;--untracked-files=no. Other options - normal (Shows untracked files and directories),&nbsp;all (default, Also shows individual files in untracked directories).", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "sG?>pdX-Dy", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }
                    ]
                }
            ], 
            "crowdanki_uuid": "a69dcedc-6d5b-11e6-adf3-8c705a50cbf0", 
            "deck_config_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "name": "git", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/branches</code>", 
                        "", 
                        "A deprecated way to store shorthands that specify URL to the <code>git fetch</code>, <code>git pull</code> and <code>git push</code> commands is to store a file in <code><strike>branches</strike>/&lt;name&gt;</code> and give the name to the command in the place of the repository argument.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "ei)f8yjx;v", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/COMMIT_EDITMSG</code>", 
                        "", 
                        "This is the last commit message. It’s not actually used by Git at all, but it is for your reference after you have made a commit.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "j`x$0&Ri>Z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/config</code>", 
                        "", 
                        "<div>This is the main Git configuration file. It keeps specific Git options for your project, such as your remotes, push configurations, tracking branches and more. Your configuration will be loaded first from this file, then from a <code>~/.gitconfig</code> file and then from an <code>/etc/gitconfig</code> file, if they exist.</div>", 
                        "", 
                        "<p>A exemplary content of this file is:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">[core]</span>\n      <span style=\"color: #bbbbbb\">repositoryformatversion</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">0</span>\n<span style=\"color: #ed9d13\">      filemode = false</span>\n<span style=\"color: #ed9d13\">      bare = false</span>\n<span style=\"color: #ed9d13\">      logallrefupdates = true [remote \"origin\"]</span>\n<span style=\"color: #ed9d13\">      url = git@github.com:user/test.git</span>\n<span style=\"color: #ed9d13\">      fetch = +refs/heads/*:refs/remotes/origin/*</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTg3MTQwNTksICJpZCI6ICIxNDk4NzEzOTM0ODU3LTAwMiIsICJtZCI6ICJBIGV4ZW1wbGFyeSBjb250ZW50IG9mIHRoaXMgZmlsZSBpczpcbiAgXG4gIFxuICAgIFtjb3JlXVxuICAgICAgICAgIHJlcG9zaXRvcnlmb3JtYXR2ZXJzaW9uID0gMFxuICAgICAgICAgIGZpbGVtb2RlID0gZmFsc2VcbiAgICAgICAgICBiYXJlID0gZmFsc2VcbiAgICAgICAgICBsb2dhbGxyZWZ1cGRhdGVzID0gdHJ1ZSBbcmVtb3RlICZxdW90O29yaWdpbiZxdW90O11cbiAgICAgICAgICB1cmwgPSBnaXRAZ2l0aHViLmNvbTp1c2VyL3Rlc3QuZ2l0XG4gICAgICAgICAgZmV0Y2ggPSArcmVmcy9oZWFkcy8qOnJlZnMvcmVtb3Rlcy9vcmlnaW4vKlxuIn0=---->", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "IL!Z`W`GGy", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/description</code>", 
                        "", 
                        "<div>If you’re using gitweb or invoking git instaweb, this will show when you have viewed your repository or the list of all versioned repositories.</div>", 
                        "", 
                        "<div><br /></div>", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "w*B8_~b>Fl", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/gitweb</code>", 
                        "", 
                        "<div>A folder with the GIT web scripts. They allow you to browse the git repository using a web browser.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "wO5WbqB|8[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/HEAD</code>", 
                        "", 
                        "<div>This file holds a reference to the branch you are currently on. This tells Git what to use as the parent of your next commit.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "Moo*O3%t)?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/hooks/</code>", 
                        "", 
                        "<div>This directory contains shell scripts that are invoked after the corresponding Git commands. For example, after you run a commit, Git will try to execute the post-commit script.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "L;qQv.v+O%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/index</code>", 
                        "", 
                        "<div>binary file containing a sorted list of path names, each with permissions and the SHA-1 of a blob object</div><div><br /></div><div>Its content can be listed through:</div><div><pre>git ls-files --stage\n100644 e69de29bb2d1d6434b8b29ae775ad8c2e48c5391 0 &nbsp; &nbsp;README</pre></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "ib{P+c?i(D", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/logs/</code>", 
                        "", 
                        "<div>Keeps records of changes made to refs.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "sS]Q!<_&oY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/objects/</code>", 
                        "", 
                        "<div>In this directory the data of your Git objects is stored – all the contents of the files you have ever checked in, your commits, trees and tag objects. The files are stored by their SHA-1 values. The first two characters are for the subdirectory and the next 38 are the filename.&nbsp;</div>", 
                        "", 
                        "For example, if the SHA-1 for a blob we’ve checked in is <code>a576fac355dd17e39fd2671b010e36299f713b4d</code> the path to the corresponding file is:<div><code><br /></code></div><div><code>[GIT_DIR]/objects/a5/76fac355dd17e39fd2671b010e36299f713b4d</code></div>", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "OxG`<C^+b{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/ORIG_HEAD</code>", 
                        "", 
                        "<div>This is the previous state of <code>HEAD</code>.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "ny5O%6NZ7%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/packed-refs</code>", 
                        "", 
                        "<div>The file consists of packed heads and tags. It is useful for an efficient repository access.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "jON<`,%gnO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>.git/refs/</code>", 
                        "", 
                        "<div>This directory normally contains three subfolders – <code>heads</code>, <code>remotes</code> and <code>tags</code>. There you will find the corresponding local branches, remote branches and tags files.</div>", 
                        "", 
                        "For example, if you create a production branch, the file <code>.git/refs/heads/production</code> will be created and will contain the SHA-1 of the latest branch commit.", 
                        "reverse", 
                        "", 
                        "https://www.siteground.com/tutorials/git/directory.htm"
                    ], 
                    "flags": 0, 
                    "guid": "IKHGr;q.%Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "git"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "git ls-files --stage", 
                        "git ls-files", 
                        "", 
                        "", 
                        "--stage", 
                        "", 
                        "", 
                        "show index files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EEw&*cq,4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "456d7d99-443a-11e7-a268-2c56dc924912", 
            "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 1000, 
            "extendRev": 50, 
            "media_files": [], 
            "mid": "1475043240989", 
            "name": "RegEx", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters", 
                        "", 
                        "<div>\n<tt class=\"code\"><span class=\"regexerr\">\\</span></tt> (backslash)<br />\n<tt class=\"code\"><span class=\"regexspecial\">^</span></tt> (caret)<br />\n<tt class=\"code\"><span class=\"regexspecial\">$</span></tt> (dollar sign)<br />\n<tt class=\"code\"><span class=\"regexspecial\">.</span></tt> (period or dot)<br />\n<tt class=\"code\"><span class=\"regexerr\">|</span></tt> (vertical bar or pipe symbol)<br />\n<tt class=\"code\"><span class=\"regexerr\">?</span></tt> (question mark)<br />\n<tt class=\"code\"><span class=\"regexerr\">*</span></tt> (asterisk or star)<br />\n<tt class=\"code\"><span class=\"regexerr\">+</span></tt> (plus sign)<br />\n<tt class=\"code\"><span class=\"regexerr\">()</span></tt> (parentheses)<br />\n<tt class=\"code\"><span class=\"regexerr\">[</span></tt> (opening square bracket)<br />\n<tt class=\"code\"><span class=\"regexplain\">{</span></tt> (opening curly brace)</div>", 
                        "", 
                        "<p>Most metacharacters are errors when used alone. If you want to use any of these characters as a literal in a regex, you need to escape them with a backslash. If you forget to escape a special character where its use is not allowed, such as in&nbsp;<tt class=\"code\"><span class=\"regexerr\">+</span><span class=\"regexplain\">1</span></tt>, then you will get an error message.</p><p>Most regular expression flavors treat the brace&nbsp;<tt class=\"code\"><span class=\"regexplain\">{</span></tt>&nbsp;as a literal character, unless it is part of a repetition operator like&nbsp;<tt class=\"code\"><span class=\"regexplain\">a</span><span class=\"regexspecial\">{1,3}</span></tt>. So you generally do not need to escape it with a backslash, though you can do so if you want. An exception to this rule is in Java, which requires all literal braces to be escaped.</p><p>All other characters should not be escaped with a backslash because the backslash is also a special character. The backslash in combination with a literal character can create a regex token with a special meaning.</p><p>Escaping a single metacharacter with a backslash works in all regular expression flavors.&nbsp;Some flavors also support the&nbsp;<tt class=\"code\"><span class=\"regexmeta\">\\Q</span><span class=\"regexplain\">…</span><span class=\"regexmeta\">\\E</span></tt>&nbsp;escape sequence.</p>", 
                        "reverse", 
                        "regex metacharacters, special characters", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NiL%VR;O-P", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|?*+()[</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexplain\">{</span></tt> (opening curly brace)\n<br /><br />\nMost regular expression flavors treat the brace <tt class=\"code\"><span class=\"regexplain\">{</span></tt> as a literal character, unless it is part of a repetition operator like <tt class=\"code\"><span class=\"regexplain\">a</span><span class=\"regexspecial\">{1,3}</span></tt>. So you generally do not need to escape it with a backslash, though you can do so if you want. An exception to this rule is in&nbsp;Java, which requires all literal braces to be escaped.", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J.UytBnpRb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|?*+(){</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">[</span></tt>&nbsp;(opening square bracket)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NfL=Rms.b@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|?*+([{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">)</span></tt>&nbsp;(closing parenthesis)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F0$IX}fxJD", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|?*+)[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">(</span></tt>&nbsp;(opening parenthesis)", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pFcu?m/C>H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|?*()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">+</span></tt>&nbsp;(plus sign)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u8,d[iH`II", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|?+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">*</span></tt>&nbsp;(asterisk or star)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m*Q%Yt2KtD", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.|*+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">?</span></tt>&nbsp;(question mark)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E@AD}G}f~U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$.?*+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">|</span></tt>&nbsp;(vertical bar or pipe symbol)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PJpKtpnO7|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^$|?*+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">.</span></tt>&nbsp;(period or dot)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h%%9WgaCso", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\^.|?*+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">$</span></tt>&nbsp;(dollar sign)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HBmHy!3CIo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\$.|?*+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">^</span></tt>&nbsp;(caret)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k~>rgFHMKO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>^$.|?*+()[{</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">\\</span></tt>&nbsp;(backslash)<br />", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hL#KpW0m]_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>\\$|*([</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">^</span></tt>&nbsp;(caret)<br />\n<tt class=\"code\"><span class=\"regexspecial\">.</span></tt>&nbsp;(period or dot)<br />\n<tt class=\"code\"><span class=\"regexerr\">?</span></tt>&nbsp;(question mark)<br />\n<tt class=\"code\"><span class=\"regexerr\">+</span></tt>&nbsp;(plus sign)<br />\n<tt class=\"code\"><span class=\"regexerr\">)</span></tt>&nbsp;(closing parenthesis)<br />\n<tt class=\"code\"><span class=\"regexplain\">{</span></tt>&nbsp;(opening curly brace)<br />\n", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MwvIth^6nL", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters other than <code>^.?+){</code>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexerr\">\\</span></tt>&nbsp;(backslash)<br /><tt class=\"code\"><span class=\"regexspecial\">$</span></tt>&nbsp;(dollar sign)<br /><tt class=\"code\"><span class=\"regexerr\">|</span></tt>&nbsp;(vertical bar or pipe symbol)<br /><tt class=\"code\"><span class=\"regexerr\">*</span></tt>&nbsp;(asterisk or star)<br /><tt class=\"code\"><span class=\"regexerr\">(</span></tt>&nbsp;(opening parenthesis)<br /><tt class=\"code\"><span class=\"regexerr\">[</span></tt>&nbsp;(opening square bracket)", 
                        "", 
                        "<span class=\"regexerr\">\\</span><span class=\"regexspecial\">^$.</span><span class=\"regexerr\">|?*+()[</span><span class=\"regexplain\">{</span>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x?CqWTJ1fI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter basic escape", 
                        "", 
                        "Escaping a single metacharacter with <tt class=\"code\"><span class=\"regexerr\">\\</span></tt> (a backslash) works in all regular expression flavors.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w0Q_Q$PIX~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter alternate escape sequence", 
                        "", 
                        "<p></p><p>Characters between&nbsp;<tt class=\"code\"><span class=\"regexmeta\">\\Q</span></tt>&nbsp;and&nbsp;<tt class=\"code\"><span class=\"regexmeta\">\\E</span></tt>&nbsp;are interpreted literally.&nbsp;<tt class=\"code\"><span class=\"regexmeta\">\\E</span></tt>&nbsp;may be omitted at the end of the regex.</p>", 
                        "", 
                        "<p><tt class=\"code\"><span class=\"regexmeta\">\\Q</span><span class=\"regexplain\">*\\d+*</span><span class=\"regexmeta\">\\E</span></tt>&nbsp;matches the literal text&nbsp;<tt class=\"match\">*\\d+*</tt>.&nbsp;</p><p><tt class=\"code\"><span class=\"regexmeta\">\\Q</span><span class=\"regexplain\">*\\d+*</span></tt>&nbsp;is the same as&nbsp;<tt class=\"code\"><span class=\"regexmeta\">\\Q</span><span class=\"regexplain\">*\\d+*</span><span class=\"regexmeta\">\\E</span></tt>.</p><p>This syntax is supported by the JGsoft engine, Perl, PCRE, PHP, Delphi, Java, both inside and outside character classes. Java 4 and 5 have bugs that cause&nbsp;<tt class=\"code\"><span class=\"regexmeta\">\\Q</span><span class=\"regexplain\">…</span><span class=\"regexmeta\">\\E</span></tt>&nbsp;to misbehave, however, so you shouldn’t use this syntax with Java. Boost supports it outside character classes, but not inside.</p>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N,JbCQch`i", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ASCII control characters&nbsp;tokens", 
                        "", 
                        "Many regex flavors also support the tokens <tt class=\"code\"><span class=\"regexspecial\">\\cA</span></tt> through <tt class=\"code\"><span class=\"regexspecial\">\\cZ</span></tt> to insert ASCII control characters. The letter after the backslash is always a lowercase c. The second letter is an uppercase letter A through Z, to indicate Control+A through Control+Z. These are equivalent to <tt class=\"code\"><span class=\"regexspecial\">\\x01</span></tt> through <tt class=\"code\"><span class=\"regexspecial\">\\x1A</span></tt> (26 decimal).  Most flavors allow the second letter to be lowercase, with no difference in meaning. Only Java requires the A to Z to be uppercase. <p>Using characters other than letters after<tt>\\c</tt>is not recommended because the behavior is inconsistent between applications.</p>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">\\cM</span></tt> matches a carriage return, just like <tt class=\"code\"><span class=\"regexspecial\">\\r</span></tt>, <tt class=\"code\"><span class=\"regexspecial\">\\x0D</span></tt>, and <tt class=\"code\"><span class=\"regexspecial\">\\u000D</span></tt>.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h1@,#@G]SK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Unicode&nbsp;tokens", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">\\u<i>FFFF</i></span></tt>&nbsp;or&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\x{<i>FFFF</i>}</span></tt>", 
                        "", 
                        "If your regular expression engine supports Unicode, you can use&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\uFFFF</span></tt>&nbsp;or&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\x{FFFF}</span></tt>&nbsp;to insert a Unicode character. The euro currency sign occupies Unicode code point U+20AC. If you cannot type it on your keyboard, you can insert it into a regular expression with&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\u20AC</span></tt>&nbsp;or&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\x{20AC}</span></tt>. See the tutorial section on Unicode for more details on matching Unicode code points.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q{jzT~6rL|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "8-bit code pages character tokens", 
                        "", 
                        "regex token <code>\\x<i>NN</i></code>", 
                        "", 
                        "If your regex engine works with 8-bit code pages instead of Unicode, then you can include any character in your regular expression if you know its position in the character set that you are working with. In the Latin-1 character set, the copyright symbol is character&nbsp;<b>0xA9</b>. So to search for the copyright symbol, you can use&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\xA9</span></tt>. Another way to search for a tab is to use&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\x09</span></tt>. Note that the leading zero is required.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wk9fKI*)Db", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "octal basic escapes", 
                        "", 
                        "Many applications also support octal escapes in the form of <tt class=\"code\"><span class=\"regexspecial\">\\0377</span></tt> or <tt class=\"code\"><span class=\"regexspecial\">\\377</span></tt>, where 377 is the octal representation of the character's position in the character set (255 decimal in this case). There is a lot of variation between regex flavors as to the number of octal digits allowed or required after the backslash, whether the leading zero is required or not allowed, and whether <tt class=\"code\"><span class=\"regexspecial\">\\0</span></tt> without additional digits matches a NULL byte. In some flavors this causes complications as <tt class=\"code\"><span class=\"regexspecial\">\\1</span></tt> to <tt class=\"code\"><span class=\"regexspecial\">\\77</span></tt> can be octal escapes 1 to 63 (decimal) or backreferences 1 to 77 (decimal), depending on how many capturing groups there are in the regex. Therefore, using these octal escapes in regexes is strongly discouraged. Use hexadecimal escapes instead.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q(X12|[k7S", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "octal new escapes", 
                        "", 
                        "Perl 5.14, PCRE 8.34, PHP 5.5.10, and R 3.0.3 support a new syntax <tt class=\"code\"><span class=\"regexspecial\">\\o{377}</span></tt> for octal escapes. You can have any number of octal digits between the curly braces, with or without leading zero. There is no confusion with backreferences and literal digits that follow are cleanly separated by the closing curly brace. Do be careful to only put octal digits between the curly braces. In Perl, <tt class=\"code\"><span class=\"regexspecial\">\\o{whatever}</span></tt> is not an error but matches a NULL byte.<div><br /></div><div>The JGsoft flavor originally supported octal escapes in the form of <tt class=\"code\"><span class=\"regexspecial\">\\0377</span></tt>. JGsoft V2 supports <tt class=\"code\"><span class=\"regexspecial\">\\o{377}</span></tt> and treats <tt class=\"code\"><span class=\"regexerr\">\\0377</span></tt> as an error.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oG15Ia<p_B", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Unicode escapes in Python gotchas", 
                        "", 
                        "A similar issue exists in Python <b>3.2</b> and prior with the Unicode escape <tt class=\"code\"><span class=\"regexspecial\">\\uFFFF</span></tt>. Python has supported this syntax as part of (Unicode) string literals ever since Unicode support was added to Python. But Python’s <code>re</code> module only supports <tt class=\"code\"><span class=\"regexspecial\">\\uFFFF</span></tt> starting with Python <b>3.3</b>. In Python <b>3.2</b> and earlier, <tt class=\"code\"><span class=\"regexspecial\">\\uFFFF</span></tt> works when you add your regex as a literal (Unicode) string to your Python code. But when your Python <b>3.2</b> script reads the regex from a file or user input, <tt class=\"code\"><span class=\"regexescaped\">\\u</span><span class=\"regexplain\">FFFF</span></tt> matches <tt class=\"match\">uFFFF</tt> literally as the regex engine sees <tt class=\"code\"><span class=\"regexescaped\">\\u</span></tt> as an escaped literal <tt class=\"code\"><span class=\"regexplain\">u</span></tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lPpOo?s&vK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "regex engine main types", 
                        "", 
                        "text-directed and regex-directed", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ewWG3:F)9x", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "How does a regex-directed regex engine work?", 
                        "", 
                        "It walks through the regex, attempting to match the next token in the regex to the next character. If a match is found, the engine advances through the regex and the subject string. If a token fails to match, the engine backtracks to a previous position in the regex and the subject string where it can try a different path through the regex.", 
                        "", 
                        "Modern regex flavors using regex-directed engines have lots of features such as atomic grouping and possessive quantifiers that allow you to control this backtracking.&nbsp;Nearly all modern regex flavors are based on regex-directed engines. This is because certain very useful features, such as lazy quantifiers and backreferences, can only be implemented in regex-directed engines.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OHH^oxI%];", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "How a text-directed regex engine works", 
                        "", 
                        "It walks through the subject string, attempting all permutations of the regex before advancing to the next character in the string.", 
                        "", 
                        "It never backtracks.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "il[!ffRJo-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Do regex engines return rightmost or leftmost matches?", 
                        "", 
                        "leftmost", 
                        "", 
                        "<div>This is a very important point to understand:&nbsp;a regex engine always returns the&nbsp;<i>leftmost</i>&nbsp;match, even if a \"better\" match could be found later. When applying a regex to a string, the engine starts at the first character of the string. It tries all possible permutations of the regular expression at the first character. Only if all possibilities have been tried and found to fail, does the engine continue with the second character in the text. Again, it tries all possible permutations of the regex, in exactly the same order. The result is that the regex engine returns the&nbsp;<i>leftmost</i>&nbsp;match.</div><div><br /></div><div>When applying&nbsp;<tt class=\"code\"><span class=\"regexplain\">cat</span></tt>&nbsp;to&nbsp;<tt class=\"string\">He captured a catfish for his cat.</tt>, the engine tries to match the first token in the regex&nbsp;<tt class=\"code\"><span class=\"regexplain\">c</span></tt>&nbsp;to the first character in the match&nbsp;<tt class=\"string\">H</tt>. This fails. There are no other possible permutations of this regex, because it merely consists of a sequence of literal characters. So the regex engine tries to match the&nbsp;<tt class=\"code\"><span class=\"regexplain\">c</span></tt>&nbsp;with the&nbsp;<tt class=\"string\">e</tt>. This fails too, as does matching the&nbsp;<tt class=\"code\"><span class=\"regexplain\">c</span></tt>&nbsp;with the space. Arriving at the 4th character in the string,&nbsp;<tt class=\"code\"><span class=\"regexplain\">c</span></tt>&nbsp;matches&nbsp;<tt class=\"match\">c</tt>. The engine then tries to match the second token&nbsp;<tt class=\"code\"><span class=\"regexplain\">a</span></tt>&nbsp;to the 5th character,&nbsp;<tt class=\"match\">a</tt>. This succeeds too. But then,&nbsp;<tt class=\"code\"><span class=\"regexplain\">t</span></tt>&nbsp;fails to match&nbsp;<tt class=\"string\">p</tt>. At that point, the engine knows the regex cannot be matched starting at the 4th character in the string. So it continues with the 5th:&nbsp;<tt class=\"string\">a</tt>. Again,&nbsp;<tt class=\"code\"><span class=\"regexplain\">c</span></tt>&nbsp;fails to match here and the engine carries on. At the 15th character in the string,&nbsp;<tt class=\"code\"><span class=\"regexplain\">c</span></tt>&nbsp;again matches&nbsp;<tt class=\"match\">c</tt>. The engine then proceeds to attempt to match the remainder of the regex at character 15 and finds that&nbsp;<tt class=\"code\"><span class=\"regexplain\">a</span></tt>&nbsp;matches&nbsp;<tt class=\"match\">a</tt>&nbsp;and&nbsp;<tt class=\"code\"><span class=\"regexplain\">t</span></tt>&nbsp;matches&nbsp;<tt class=\"match\">t</tt>.<p>The entire regular expression could be matched starting at character 15. The engine is \"eager\" to report a match. It therefore reports the first three letters of catfish as a valid match. The engine never proceeds beyond this point to see if there are any \"better\" matches. The first match is considered good enough.</p></div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pl(kKxu_;c", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class basic syntax", 
                        "", 
                        "Simply place the characters you want to match between square brackets.&nbsp;A character class matches only a single character.&nbsp;The order of the characters inside a character class does not matter.<p>Use a hyphen inside a character class to specify a range of characters. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span></tt> matches a <i>single</i> digit between 0 and 9. You can use more than one range. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">f</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">F</span><span class=\"regexccopen\">]</span></tt> matches a single hexadecimal digit, case insensitively. You can combine ranges and single characters. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">f</span><span class=\"regexccliteral\">x</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">F</span><span class=\"regexccliteral\">X</span><span class=\"regexccopen\">]</span></tt> matches a hexadecimal digit or the letter X. Again, the order of the characters and the ranges does not matter.</p>", 
                        "", 
                        "", 
                        "", 
                        "regex character class basic syntax, character set", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cr`b|-dT^q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "negated character class syntax", 
                        "", 
                        "Typing a caret after the opening square bracket negates the character class. The result is that the character class matches any character that is <i>not</i> in the character class. Unlike the dot, negated character classes also match (invisible) line break characters. If you don't want a negated character class to match line breaks, you need to include the line break characters in the class. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">\\r</span><span class=\"regexccspecial\">\\n</span><span class=\"regexccopen\">]</span></tt> matches any character that is not a digit or a line break. <p>It is important to remember that a negated character class still must match a character. <tt class=\"code\"><span class=\"regexplain\">q</span><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">u</span><span class=\"regexccopen\">]</span></tt> does <em>not</em> mean: \"a q not followed by a u\". It means: \"a q followed by a character that is not a u\". It does not match the q in the string <tt class=\"string\">Iraq</tt>. It does match the q and the space after the q in <tt class=\"string\">Iraq is a country</tt>. Indeed: the space becomes part of the overall match, because it is the \"character that is not a u\" that is matched by the negated character class in the above regexp. If you want the regex to match the q, and only the q, in both strings, you need to use negative lookahead: <tt class=\"code\"><span class=\"regexplain\">q</span><span class=\"regexnest1\">(?!</span><span class=\"regexplain\">u</span><span class=\"regexnest1\">)</span></tt>.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yD=v}.n%Bq", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Does <code>[^0-9]</code> match linebreaks?", 
                        "", 
                        "Yes", 
                        "", 
                        "Negated character classes also match (invisible) line break characters. If you don’t want a negated character class to match line breaks, you need to include the line break characters in the class.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">\\r</span><span class=\"regexccspecial\">\\n</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches any character that is not a digit or a line break.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l_W|^u#G31", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Do metacharacters always need to be escaped?", 
                        "", 
                        "<div>No, not usually in character classes.</div>", 
                        "", 
                        "In most regex flavors, the only special characters or metacharacters inside a character class are the closing bracket&nbsp;<tt>]</tt>, the backslash&nbsp;<tt>\\</tt>, the caret&nbsp;<tt>^</tt>, and the hyphen&nbsp;<tt>-</tt>. The usual metacharacters are normal characters inside a character class, and do not need to be escaped by a backslash. To search for a star or plus, use&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">+*</span><span class=\"regexccopen\">]</span></tt>. Your regex will work fine if you escape the regular metacharacters inside a character class, but doing so significantly reduces readability.<p>To include a backslash as a character without any special meaning inside a character class, you have to escape it with another backslash.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\\\</span><span class=\"regexccliteral\">x</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches a backslash or an x. The closing bracket&nbsp;<tt>]</tt>, the caret&nbsp;<tt>^</tt>&nbsp;and the hyphen&nbsp;<tt>-</tt>&nbsp;can be included by escaping them with a backslash, or by placing them in a position where they do not take on their special meaning. The POSIX and GNU flavors are an exception. They treat backslashes in character classes as literal characters. So with these flavors, you can't escape anything in character classes.</p>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gEyD.FkI^+", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to include <code>^</code> in a character class", 
                        "", 
                        "To include an unescaped caret as a literal, place it anywhere except right after the opening bracket. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">x^</span><span class=\"regexccopen\">]</span></tt> matches an x or a caret. <div><br /></div><div>The caret&nbsp;<tt><code></code><code></code><code>^</code></tt>&nbsp;can also be included by escaping it with a backslash. The&nbsp;POSIX&nbsp;and&nbsp;GNU&nbsp;flavors are an exception. They treat backslashes in character classes as literal characters. So with these flavors, you can't escape anything in character classes.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cy2-pnwcm$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to include <code></code><code>\\</code> in a character class", 
                        "", 
                        "To include a backslash as a character without any special meaning inside a character class, you have to escape it with another backslash.<div><br /></div><div>The POSIX and GNU flavors are an exception. They treat backslashes in character classes as literal characters. So with these flavors, you can't escape anything in character classes.</div>", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\\\</span><span class=\"regexccliteral\">x</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches a backslash or an x.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "chkRSW|9`Z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to include <code>]</code>&nbsp;in a character class", 
                        "", 
                        "The closing bracket <tt><code></code><code>]</code></tt>&nbsp;can be included by escaping it with a backslash.<div><br /></div><div>The POSIX and GNU flavors are an exception. They treat backslashes in character classes as literal characters. So with these flavors, you can't escape anything in character classes.<div><br /></div><div>You can include an unescaped closing bracket by placing it right after the opening bracket, or right after the negating caret. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">]x</span><span class=\"regexccopen\">]</span></tt> matches a closing bracket or an x. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">]x</span><span class=\"regexccopen\">]</span></tt> matches any character that is not a closing bracket or an x. This does not work in JavaScript, which treats <tt class=\"code\"><span class=\"regexccopen\">[]</span></tt> as an empty character class that always fails to match, and <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccopen\">]</span></tt> as a negated empty character class that matches any single character. Ruby treats empty character classes as an error. So both JavaScript and Ruby require closing brackets to be escaped with a backslash to include them as literals in a character class.</div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CH<hA0PwSp", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to include <code>-</code>&nbsp;in a character class", 
                        "", 
                        "The hyphen <code>-</code> can be included by escaping it with a backslash or by placing it in a position where it does not take on its special meaning.<div><br /></div><div>The POSIX and GNU flavors are an exception. They treat backslashes in character classes as literal characters. So with these flavors, you can't escape anything in character classes.</div><div><br /></div><div>The hyphen can be included right after the opening bracket, or right before the closing bracket, or right after the negating caret. Both <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">-x</span><span class=\"regexccopen\">]</span></tt> and <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">x</span><span class=\"regexccliteral\">-</span><span class=\"regexccopen\">]</span></tt> match an x or a hyphen. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">-x</span><span class=\"regexccopen\">]</span></tt> and <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">x</span><span class=\"regexccliteral\">-</span><span class=\"regexccopen\">]</span></tt> match any character thas is not an x or a hyphen. This works in all flavors discussed in this tutorial. Hyphens at other positions in character classes where they can't form a range may be interpreted as literals or as errors. Regex flavors are quite inconsistent about this.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BXP[#C+H^a", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Does repeating&nbsp;a character class only match repeated characters?", 
                        "", 
                        "If you repeat a character class by using the <tt class=\"code\"><span class=\"regexspecial\">?</span></tt>, <tt class=\"code\"><span class=\"regexspecial\">*</span></tt> or <tt class=\"code\"><span class=\"regexspecial\">+</span></tt> operators, you're repeating the entire character class.&nbsp;If you want to repeat the matched character, use backreferences.", 
                        "", 
                        "The regex&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">+</span></tt>&nbsp;can match&nbsp;<tt class=\"match\">837</tt>&nbsp;as well as&nbsp;<tt class=\"match\">222</tt>.<br /><div><tt class=\"code\"><span class=\"regexnest1\">(</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">\\1</span><span class=\"regexspecial\">+</span></tt>&nbsp;matches&nbsp;<tt class=\"match\">222</tt>&nbsp;but not&nbsp;<tt class=\"string\">837</tt>. When applied to the string&nbsp;<tt class=\"string\">833337</tt>, it matches&nbsp;<tt class=\"match\">3333</tt>&nbsp;in the middle of this string. If you do not want that, you need to use&nbsp;lookaround.</div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QP;x+V.js$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "exclude characters of&nbsp;one class from another class", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">class</span><span class=\"regexccopen\">-[</span><span class=\"regexccliteral\">subtract</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt><div><br /></div><div>Character class subtraction supported by XML Schema, XPath, .NET (version 2.0 and later), and JGsoft.</div>", 
                        "", 
                        "<p>If the character after a hyphen is an opening bracket, these flavors interpret the hyphen as the subtraction operator rather than the range operator. You can use the full character class syntax within the subtracted character class.</p><p>The character class&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccopen\">-[</span><span class=\"regexccliteral\">aeiuo</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches a single letter that is not a vowel. In other words: it matches a single consonant. Without character class subtraction or intersection, the only way to do this would be to list all consonants:&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">b</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">d</span><span class=\"regexccrange\">f</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">h</span><span class=\"regexccrange\">j</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">n</span><span class=\"regexccrange\">p</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">t</span><span class=\"regexccrange\">v</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccopen\">]</span></tt>.</p><p>The character class&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\p{Nd}</span><span class=\"regexccopen\">-[</span><span class=\"regexccspecial\">^</span><span class=\"regexccspecial\">\\p{IsThai}</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches any single Thai digit. The base class matches any Unicode digit. All non-Thai characters are subtracted from that class.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\p{Nd}</span><span class=\"regexccopen\">-[</span><span class=\"regexccspecial\">\\P{IsThai}</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;does the same.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\p{IsThai}</span><span class=\"regexccopen\">-[</span><span class=\"regexccspecial\">^</span><span class=\"regexccspecial\">\\p{Nd}</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;and&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\p{IsThai}</span><span class=\"regexccopen\">-[</span><span class=\"regexccspecial\">\\P{Nd}</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;also match a single Thai digit by subtracting all non-digits from the Thai characters.</p>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hk2~=<UWms", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "exclude characters of&nbsp;two classes from another class", 
                        "", 
                        "While you can use nested character class subtraction, you cannot subtract two classes sequentially. To subtract ASCII characters and Greek characters from a class with all Unicode letters, combine the ASCII and Greek characters into one class, and subtract that, as in <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\p{L}</span><span class=\"regexccopen\">-[</span><span class=\"regexccspecial\">\\p{IsBasicLatin}</span><span class=\"regexccspecial\">\\p{IsGreek}</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>.<div><br /></div><div>Character class subtraction supported by&nbsp;<b>XML Schema</b>,&nbsp;<b>XPath</b>,&nbsp;<b>.NET</b>&nbsp;(version 2.0 and later), and&nbsp;<b>JGsoft</b>.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C5pB1/,*Vv", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can character class subtractions be nested?", 
                        "", 
                        "Yes, assuming character class subtractions are supported in the first place.", 
                        "", 
                        "Since you can use the full character class syntax within the subtracted character class, you can subtract a class from the class being subtracted.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">-[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">-[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">3</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;first subtracts&nbsp;<tt>0-3</tt>&nbsp;from&nbsp;<tt>0-6</tt>, yielding&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">-[</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>, or&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">3</span><span class=\"regexccrange\">7</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span></tt>, which matches any character in the string&nbsp;<tt class=\"string\">0123789</tt>.<p>The class subtraction must always be the last element in the character class.&nbsp;<tt>[0-9-[4-6]a-f]</tt>&nbsp;is not a valid regular expression. It should be rewritten as&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">f</span><span class=\"regexccopen\">-[</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>. The subtraction works on the whole class. E.g.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\p{Ll}</span><span class=\"regexccspecial\">\\p{Lu}</span><span class=\"regexccopen\">-[</span><span class=\"regexccspecial\">\\p{IsBasicLatin}</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches all uppercase and lowercase Unicode letters, except any ASCII letters. The&nbsp;<tt>\\p{IsBasicLatin}</tt>&nbsp;is subtracted from the combination of&nbsp;<tt>\\p{Ll}\\p{Lu}</tt>&nbsp;rather than from&nbsp;<tt>\\p{Lu}</tt>&nbsp;alone. This regex will not match&nbsp;<tt class=\"string\">abc</tt>.</p><p>Character class subtraction supported by&nbsp;<b>XML Schema</b>,&nbsp;<b>XPath</b>,&nbsp;<b>.NET</b>&nbsp;(version 2.0 and later), and&nbsp;<b>JGsoft</b>.</p>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p>WH,#PPHa", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class negation or subtraction handled first?", 
                        "", 
                        "<div>negation</div>", 
                        "", 
                        "The character class&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">1234</span><span class=\"regexccopen\">-[</span><span class=\"regexccliteral\">3456</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>&nbsp;is both negated and subtracted from. In all flavors that support character class subtraction, the base class is negated before it is subtracted from. This class should be read as \"(not 1234) minus 3456\". Thus this character class matches any character other than the digits 1, 2, 3, 4, 5, and 6.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w2p10E,Q<Q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class subtraction in nonsupporting flavors", 
                        "", 
                        "<div>Usually not an error, but not as intended. For example,&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccliteral\">-[aeiuo</span><span class=\"regexccopen\">]</span><span class=\"regexplain\">]</span></tt>&nbsp;looks like a class containing some redundant characters followed by a literal closing bracket.</div><div><br /></div><div>Character class subtraction supported by <b>XML Schema</b>, <b>XPath</b>, <b>.NET</b> (version 2.0 and later), and <b>JGsoft</b>.</div>", 
                        "", 
                        "Note that a regex like&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccliteral\">-[aeiuo</span><span class=\"regexccopen\">]</span><span class=\"regexplain\">]</span></tt>&nbsp;does not cause any errors in most regex flavors that do not support character class subtraction. But it won't match what you intended either. In most flavors, this regex consists of a character class followed by a literal&nbsp;<tt class=\"code\"><span class=\"regexccopen\">]</span></tt>. The character class matches a character that is either in the range a-z, or a hyphen, or an opening bracket, or a vowel. Since the a-z range and the vowels are redundant, you could write this character class as&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccliteral\">-[</span><span class=\"regexccopen\">]</span></tt>&nbsp;or&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">-[</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccopen\">]</span></tt>&nbsp;in Perl. A hyphen after a range is treated as a literal character, just like a hyphen immediately after the opening bracket. This is true in the XML, .NET and JGsoft flavors too.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccliteral\">-_</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches a lowercase letter, a hyphen or an underscore in these flavors.<p>Strictly speaking, this means that the character class subtraction syntax is incompatible with Perl and the majority of other regex flavors. But in practice there's no difference. Using non-alphanumeric characters in character class ranges is very bad practice because it relies on the order of characters in the ASCII character table. That makes the regular expression hard to understand for the programmer who inherits your work. While&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">[</span><span class=\"regexccopen\">]</span></tt>&nbsp;would match any upper case letter or an opening square bracket in Perl, this regex is much clearer when written as&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccliteral\">[</span><span class=\"regexccopen\">]</span></tt>. The former regex would cause an error with the XML, .NET and JGsoft flavors, because they interpret&nbsp;<tt>-[]</tt>&nbsp;as an empty subtracted class, leaving an unbalanced&nbsp;<tt>[</tt>.</p>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l$:kBRLLd#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class multiple intersection", 
                        "", 
                        "You can intersect the same class more than once. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt> is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">]</span></tt> as those are the only digits present in all three parts of the intersection. In Java and Ruby you can write the same regex as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>, <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>, <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt>, or just <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">6</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccrange\">4</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span></tt>. The nested square brackets are only needed if one of the parts of the intersection is negated. <p>If you do not use square brackets around the right hand part of the intersection, then there is no confusion that the entire remainder of the character class is the right hand part of the intersection. If you do use the square brackets, you could write something like <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9&amp;&amp;[</span><span class=\"regexccliteral\">12]</span><span class=\"regexccliteral\">56</span><span class=\"regexccopen\">]</span></tt>. In Ruby, this is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccliteral\">1256</span><span class=\"regexccopen\">]</span></tt>. But Java has bugs that cause it to treat this as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccliteral\">56</span><span class=\"regexccopen\">]</span></tt>, completely ignoring the nested brackets.</p> <p>PowerGREP does not allow anything after the nested <tt class=\"code\"><span class=\"regexccopen\">]</span></tt>. The characters <tt class=\"code\"><span class=\"regexerr\">56</span></tt> in <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccliteral\">12</span><span class=\"regexccopen\">]</span><span class=\"regexerr\">56</span><span class=\"regexccopen\">]</span></tt> are an error. This way there is no ambiguity about their meaning.</p> <p>You also shouldn't put <tt class=\"code\"><span class=\"regexccspecial\">&amp;&amp;</span></tt> at the very start or very end of the regex. Ruby treats <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccopen\">]</span></tt> and <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span></tt> as intersections with an empty class, which matches no characters at all. Java ignores leading and trailing <tt class=\"code\"><span class=\"regexccspecial\">&amp;&amp;</span></tt> operators. PowerGREP treats them as literal ampersands.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J/l/VfBI:1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class intersection and negation", 
                        "", 
                        "The character class <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">1234</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccliteral\">3456</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt> is both negated and intersected. In Java and PowerGREP, negation takes precedence over intersection. Java and PowerGREP read this regex as \"(not 1234) and 3456\". Thus in Java and PowerGREP this class is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">56</span><span class=\"regexccopen\">]</span></tt> and matches the digits 5 and 6. In Ruby, intersection takes precedence over negation. Ruby reads <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">1234</span><span class=\"regexccspecial\">&amp;&amp;</span><span class=\"regexccliteral\">3456</span><span class=\"regexccopen\">]</span></tt> as \"not (1234 and 3456)\". Thus in Ruby this class is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">34</span><span class=\"regexccopen\">]</span></tt> which matches anything except the digits 3 and 4. <p>If you want to negate the right hand side of the intersection, then you must use square brackets. Those automatically control precedence. So Java, PowerGREP, and Ruby all read <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">1234</span><span class=\"regexccopen\">&amp;&amp;[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">3456</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">]</span></tt> as \"1234 and (not 3456)\". Thus this regex is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">12</span><span class=\"regexccopen\">]</span></tt>.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mi?8`|NKu`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class shorthand <code>\\d</code>", 
                        "", 
                        " <tt class=\"code\"><span class=\"regexspecial\">\\d</span></tt> is short for <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span></tt>. In most flavors that support Unicode, <tt class=\"code\"><span class=\"regexspecial\">\\d</span></tt> includes all digits from all scripts. Notable exceptions are Java, JavaScript, and PCRE. These Unicode flavors match only ASCII digits with <tt class=\"code\"><span class=\"regexspecial\">\\d</span></tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nC{)Ej<=Ym", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class shorthand <code>\\w</code>", 
                        "", 
                        "<i>word characters</i>: always <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccliteral\">_</span><span class=\"regexccopen\">]</span></tt> and sometimes Unicode", 
                        "", 
                        "<span class=\"regexspecial\">\\w</span>&nbsp;stands for \"word character\". It always matches the ASCII characters&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccliteral\">_</span><span class=\"regexccopen\">]</span></tt>. Notice the inclusion of the underscore and digits. In most flavors that support Unicode,&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\w</span></tt>&nbsp;includes many characters from other scripts. There is a lot of inconsistency about which characters are actually included. Letters and digits from alphabetic scripts and ideographs are generally included. Connector punctuation other than the underscore and numeric symbols that aren't digits may or may not be included. XML Schema and XPath even include all symbols in&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\w</span></tt>. Again, Java, JavaScript, and PCRE match only ASCII characters with&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\w</span></tt>.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QkBmoEjskg", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "character class shorthand <code>\\s</code>", 
                        "", 
                        "<span class=\"regexspecial\">\\s</span> stands for \"whitespace character\". Again, which characters this actually includes, depends on the regex flavor. In all flavors discussed in this tutorial, it includes <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">&nbsp;</span><span class=\"regexccspecial\">\\t</span><span class=\"regexccspecial\">\\r</span><span class=\"regexccspecial\">\\n</span><span class=\"regexccspecial\">\\f</span><span class=\"regexccopen\">]</span></tt>. That is: <tt class=\"code\"><span class=\"regexspecial\">\\s</span></tt> matches a space, a tab, a line break, or a form feed. Most flavors also include the vertical tab, with Perl (prior to version 5.18) and PCRE (prior to version 8.34) being notable exceptions. In flavors that support Unicode, <tt class=\"code\"><span class=\"regexspecial\">\\s</span></tt> normally includes all characters from the Unicode \"separator\" category. Java and PCRE are exceptions once again. But JavaScript does match all Unicode whitespace with <tt class=\"code\"><span class=\"regexspecial\">\\s</span></tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jZN#xR(Uj:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can shorthand character classes be used inside brackets?", 
                        "", 
                        "Yes.", 
                        "", 
                        "Shorthand character classes can be used both inside and outside the square brackets.&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">\\d</span></tt>&nbsp;matches a whitespace character followed by a digit.&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\s</span><span class=\"regexccspecial\">\\d</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches a single character that is either whitespace or a digit. When applied to&nbsp;<tt class=\"string\">1&nbsp;+&nbsp;2&nbsp;=&nbsp;3</tt>, the former regex matches&nbsp;<tt class=\"match\">&nbsp;2</tt>&nbsp;(space two), while the latter matches&nbsp;<tt class=\"match\">1</tt>&nbsp;(one).&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\d</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">f</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">F</span><span class=\"regexccopen\">]</span></tt>&nbsp;matches a hexadecimal digit, and is equivalent to&nbsp;<tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">f</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">F</span><span class=\"regexccopen\">]</span></tt>&nbsp;if your flavor only matches ASCII characters with&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\d</span></tt>.", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nKCgP-0<I,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Which shorthand character classes can be negated by capitalizing?", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">\\D</span></tt> is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccspecial\">\\d</span><span class=\"regexccopen\">]</span></tt>, <tt class=\"code\"><span class=\"regexspecial\">\\W</span></tt> is short for <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccspecial\">\\w</span><span class=\"regexccopen\">]</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\S</span></tt> is the equivalent of <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccspecial\">\\s</span><span class=\"regexccopen\">]</span></tt>. <p>Be careful when using the negated shorthands inside square brackets. <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\D</span><span class=\"regexccspecial\">\\S</span><span class=\"regexccopen\">]</span></tt> is <em>not</em> the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccspecial\">\\d</span><span class=\"regexccspecial\">\\s</span><span class=\"regexccopen\">]</span></tt>. The latter matches any character that is neither a digit nor whitespace. It matches <tt class=\"match\">x</tt>, but not <tt class=\"string\">8</tt>. The former, however, matches any character that is either not a digit, or is not whitespace. Because all digits are not whitespace, and all whitespace characters are not digits, <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\D</span><span class=\"regexccspecial\">\\S</span><span class=\"regexccopen\">]</span></tt> matches any character; digit, whitespace, or otherwise.</p><p>See also: <code>\\N</code></p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f2A~O8!S[2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "shorthand character classes for horizontal and vertical whitespace", 
                        "", 
                        "Perl 5.10 introduced <tt class=\"code\"><span class=\"regexspecial\">\\h</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt>. <tt class=\"code\"><span class=\"regexspecial\">\\h</span></tt> matches horizontal whitespace, which includes the tab and all characters in the \"space separator\" Unicode category. It is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\t</span><span class=\"regexccspecial\">\\p{Zs}</span><span class=\"regexccopen\">]</span></tt>. <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> matches \"vertical whitespace\", which includes all characters treated as line breaks in the Unicode standard. It is the same as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\n</span><span class=\"regexccspecial\">\\cK</span><span class=\"regexccspecial\">\\f</span><span class=\"regexccspecial\">\\r</span><span class=\"regexccspecial\">\\x85</span><span class=\"regexccspecial\">\\x{2028}</span><span class=\"regexccspecial\">\\x{2029}</span><span class=\"regexccopen\">]</span></tt>. <p>PCRE also supports <tt class=\"code\"><span class=\"regexspecial\">\\h</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> starting with version 7.2. PHP does as of version 5.2.2, Java as of version 8, and the JGsoft engine as of version 2. Boost supports <tt class=\"code\"><span class=\"regexspecial\">\\h</span></tt> starting with version 1.42. No version of Boost supports <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> as a shorthand.</p> <p>In many other regex flavors, <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> matches only the vertical tab character. Perl, PCRE, and PHP never supported this, so they were free to give <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> a different meaning. Java 4 to 7 and JGsoft V1 did use <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> to match only the vertical tab. Java 8 and JGsoft V2 changed the meaning of this token anyway. The vertical tab is also a vertical whitespace character. To avoid confusion, the above paragraph uses <tt class=\"code\"><span class=\"regexspecial\">\\cK</span></tt> to represent the vertical tab.</p> <p>Ruby 1.9 and later have their own version of <tt class=\"code\"><span class=\"regexspecial\">\\h</span></tt>. It matches a single hexadecimal digit just like <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">f</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">F</span><span class=\"regexccopen\">]</span></tt>. <tt class=\"code\"><span class=\"regexspecial\">\\v</span></tt> is a vertical tab in Ruby.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k{xm1+(sP*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "XML character classes", 
                        "", 
                        "XML Schema, XPath, and JGsoft V2 regular expressions support four more shorthands that aren't supported by any other regular expression flavors. <tt class=\"code\"><span class=\"regexspecial\">\\i</span></tt> matches any character that may be the first character of an XML name. <tt class=\"code\"><span class=\"regexspecial\">\\c</span></tt> matches any character that may occur after the first character in an XML name. <tt class=\"code\"><span class=\"regexspecial\">\\I</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\C</span></tt> are the respective negated shorthands. Note that the <tt class=\"code\"><span class=\"regexspecial\">\\c</span></tt> shorthand syntax conflicts with the control character syntax used in many other regex flavors. <p>You can use these four shorthands both inside and outside character classes using the bracket notation. They're very useful for validating XML references and values in your XML schemas. The regular expression <tt class=\"code\"><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span></tt> matches an XML name like <tt class=\"match\">xml:schema</tt>.</p> <p>The regex <tt class=\"code\"><span class=\"regexplain\">&lt;</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">&gt;</span></tt> matches an opening XML tag without any attributes. <tt class=\"code\"><span class=\"regexplain\">&lt;/</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">&gt;</span></tt> matches any closing tag. <tt class=\"code\"><span class=\"regexplain\">&lt;</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexnest1\">(</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">=</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexnest2\">(</span><span class=\"regexplain\">\"</span><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">\"</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">\"</span><span class=\"regexnest2\">|</span><span class=\"regexplain\">'</span><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">'</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">'</span><span class=\"regexnest2\">)</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">*</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">&gt;</span></tt> matches an opening tag with any number of attributes. Putting it all together, <tt class=\"code\"><span class=\"regexplain\">&lt;</span><span class=\"regexnest1\">(</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexnest2\">(</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">=</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexnest3\">(</span><span class=\"regexplain\">\"</span><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">\"</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">\"</span><span class=\"regexnest3\">|</span><span class=\"regexplain\">'</span><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">'</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">'</span><span class=\"regexnest3\">)</span><span class=\"regexnest2\">)</span><span class=\"regexspecial\">*</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">/</span><span class=\"regexspecial\">\\i</span><span class=\"regexspecial\">\\c</span><span class=\"regexspecial\">*</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">\\s</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">&gt;</span></tt> matches either an opening tag with attributes or a closing tag.</p> <p>No other regex flavors discussed in this tutorial support XML character classes. If your XML files are plain ASCII , you can use <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">_:</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccopen\">]</span></tt> for <tt class=\"code\"><span class=\"regexspecial\">\\i</span></tt> and <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">-._:</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span></tt> for <tt class=\"code\"><span class=\"regexspecial\">\\c</span></tt>. If you want to allow all Unicode characters that the XML standard allows, then you will end up with some pretty long regexes. You would have to use <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">:</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccliteral\">_</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccrange\">\\u00C0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u00D6</span><span class=\"regexccrange\">\\u00D8</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u00F6</span><span class=\"regexccrange\">\\u00F8</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u02FF</span><span class=\"regexccrange\">\\u0370</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u037D</span><span class=\"regexccrange\">\\u037F</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u1FFF</span><span class=\"regexccrange\">\\u200C</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u200D</span><span class=\"regexccliteral\"><br /> </span><span class=\"regexccrange\">\\u2070</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u218F</span><span class=\"regexccrange\">\\u2C00</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u2FEF</span><span class=\"regexccrange\">\\u3001</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\uD7FF</span><span class=\"regexccrange\">\\uF900</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\uFDCF</span><span class=\"regexccrange\">\\uFDF0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\uFFFD</span><span class=\"regexccopen\">]</span></tt> instead of <tt class=\"code\"><span class=\"regexspecial\">\\i</span></tt> and <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccliteral\">-.</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccliteral\">:</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccliteral\">_</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccspecial\">\\u00B7</span><span class=\"regexccrange\">\\u00C0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u00D6</span><span class=\"regexccrange\">\\u00D8</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u00F6</span><span class=\"regexccrange\">\\u00F8</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u037D</span><span class=\"regexccrange\">\\u037F</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u1FFF</span><span class=\"regexccrange\">\\u200C</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u200D</span><span class=\"regexccliteral\"><br /> </span><span class=\"regexccspecial\">\\u203F</span><span class=\"regexccspecial\">\\u2040</span><span class=\"regexccrange\">\\u2070</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u218F</span><span class=\"regexccrange\">\\u2C00</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\u2FEF</span><span class=\"regexccrange\">\\u3001</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\uD7FF</span><span class=\"regexccrange\">\\uF900</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\uFDCF</span><span class=\"regexccrange\">\\uFDF0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">\\uFFFD</span><span class=\"regexccopen\">]</span></tt> instead of <tt class=\"code\"><span class=\"regexspecial\">\\c</span></tt>.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q#Zm3^zHZG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "reason for the one exception to dot matching everything", 
                        "", 
                        "The first tools that used regular expressions were line-based. They would read a file line by line, and apply the regular expression separately to each line. The effect is that with these tools, the string could never contain line breaks, so the dot could never match them.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hW&o{gHIr^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "flavors without option to make dot match linebreaks", 
                        "", 
                        "<b>JavaScript</b> and <b>VBScript</b> do not have an option to make the dot match line break characters. In those languages, you can use a character class such as <tt class=\"code\"><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">\\s</span><span class=\"regexccspecial\">\\S</span><span class=\"regexccopen\">]</span></tt> to match any character.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s.!4KcS_Mc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dot matches linebreaks in this Perl mode", 
                        "", 
                        "single-line mode", 
                        "", 
                        "In Perl, the mode where the dot also matches line breaks is called \"single-line mode\". This is a bit unfortunate, because it is easy to mix up this term with \"multi-line mode\". Multi-line mode only affects anchors, and single-line mode only affects the dot. You can activate single-line mode by adding an s after the regex code, like this:&nbsp;<tt class=\"code\">m/^regex$/s;</tt>.<div><br /></div><div><p>Other languages and regex libraries have adopted Perl's terminology. When using the regex classes of the .NET framework, you activate this mode by specifying&nbsp;<tt class=\"code\">RegexOptions.Singleline</tt>, such as in&nbsp;<tt class=\"code\">Regex.Match(\"string\", \"regex\", RegexOptions.Singleline)</tt>.</p></div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c_VTGvmx&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dot matches linebreaks in Boost when?", 
                        "", 
                        "In all of Boost's regex grammars the dot matches line breaks by default. Boost's ECMAScript grammar allows you to turn this off with <tt>regex_constants::no_mod_m</tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v@.YF,+$H-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "linebreaks in&nbsp;std::regex, XML Schema and XPath", 
                        "", 
                        "<p>In these flavors, line breaks include:</p>\n<ul>\n<li style=\"text-align: left; \">newline, <code>\\n</code></li>\n<li style=\"text-align: left; \">carriage return, <code>\\r</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTA5NzAsICJpZCI6ICIxNDk1NDA5OTEyMDM3LTAwMSIsICJtZCI6ICJJbiB0aGVzZSBmbGF2b3JzLCBsaW5lIGJyZWFrcyBpbmNsdWRlOlxuICBcbiogbmV3bGluZSwgYFxcbmBcbiogY2FycmlhZ2UgcmV0dXJuLCBgXFxyYFxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CIVP$*mOME", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "line breaks in&nbsp;JavaScript", 
                        "", 
                        "<p>In these flavors, line breaks include:</p>\n<ul>\n<li style=\"text-align: left; \">newline, <code>\\n</code></li>\n<li style=\"text-align: left; \">carriage return, <code>\\r</code></li>\n<li style=\"text-align: left; \">Unicode line separator, <code>\\u2028</code></li>\n<li style=\"text-align: left; \">Unicode page separator, <code>\\u2029</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTA5ODgsICJpZCI6ICIxNDk1NDEwNTcyNzE2LTAwMSIsICJtZCI6ICJJbiB0aGVzZSBmbGF2b3JzLCBsaW5lIGJyZWFrcyBpbmNsdWRlOlxuICBcbiogbmV3bGluZSwgYFxcbmBcbiogY2FycmlhZ2UgcmV0dXJuLCBgXFxyYFxuKiBVbmljb2RlIGxpbmUgc2VwYXJhdG9yLCBgXFx1MjAyOGBcbiogVW5pY29kZSBwYWdlIHNlcGFyYXRvciwgYFxcdTIwMjlgXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cXru_.aU@J", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "line breaks in&nbsp;Java", 
                        "", 
                        "<p>In these flavors, line breaks include:</p>\n<ul>\n<li style=\"text-align: left; \">newline, <code>\\n</code></li>\n<li style=\"text-align: left; \">carriage return, <code>\\r</code></li>\n<li style=\"text-align: left; \">Unicode line separator, <code>\\u2028</code></li>\n<li style=\"text-align: left; \">Unicode page separator, <code>\\u2029</code></li>\n<li style=\"text-align: left; \">Latin-1 next line control character, <code>\\u0085</code> </li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTEwMDksICJpZCI6ICIxNDk1NDEwOTQ2NTMzLTAwMSIsICJtZCI6ICJJbiB0aGVzZSBmbGF2b3JzLCBsaW5lIGJyZWFrcyBpbmNsdWRlOlxuICBcbiogbmV3bGluZSwgYFxcbmBcbiogY2FycmlhZ2UgcmV0dXJuLCBgXFxyYFxuKiBVbmljb2RlIGxpbmUgc2VwYXJhdG9yLCBgXFx1MjAyOGBcbiogVW5pY29kZSBwYWdlIHNlcGFyYXRvciwgYFxcdTIwMjlgXG4qIExhdGluLTEgbmV4dCBsaW5lIGNvbnRyb2wgY2hhcmFjdGVyLCBgXFx1MDA4NWAgIFxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C/4U*E^9F1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "line breaks in&nbsp;Boost", 
                        "", 
                        "<p>In these flavors, line breaks include:</p>\n<ul>\n<li style=\"text-align: left; \">newline, <code>\\n</code></li>\n<li style=\"text-align: left; \">carriage return, <code>\\r</code></li>\n<li style=\"text-align: left; \">Unicode line separator, <code>\\u2028</code></li>\n<li style=\"text-align: left; \">Unicode page separator, <code>\\u2029</code></li>\n<li style=\"text-align: left; \">Latin-1 next line control character, <code>\\u0085</code> </li>\n<li style=\"text-align: left; \">form feed, <code>\\f</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTEwNDUsICJpZCI6ICIxNDk1NDExMDExNzk3LTAwMSIsICJtZCI6ICJJbiB0aGVzZSBmbGF2b3JzLCBsaW5lIGJyZWFrcyBpbmNsdWRlOlxuICBcbiogbmV3bGluZSwgYFxcbmBcbiogY2FycmlhZ2UgcmV0dXJuLCBgXFxyYFxuKiBVbmljb2RlIGxpbmUgc2VwYXJhdG9yLCBgXFx1MjAyOGBcbiogVW5pY29kZSBwYWdlIHNlcGFyYXRvciwgYFxcdTIwMjlgXG4qIExhdGluLTEgbmV4dCBsaW5lIGNvbnRyb2wgY2hhcmFjdGVyLCBgXFx1MDA4NWAgIFxuKiBmb3JtIGZlZWQsIGBcXGZgXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mo7smBTI>M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "line breaks in&nbsp;Delphi and JGsoft", 
                        "", 
                        "<p>In these flavors, line breaks include all Unicode line breaks:</p>\n<ul>\n<li style=\"text-align: left; \">newline, <code>\\n</code></li>\n<li style=\"text-align: left; \">carriage return, <code>\\r</code></li>\n<li style=\"text-align: left; \">Unicode line separator, <code>\\u2028</code></li>\n<li style=\"text-align: left; \">Unicode page separator, <code>\\u2029</code></li>\n<li style=\"text-align: left; \">Latin-1 next line control character, <code>\\u0085</code> </li>\n<li style=\"text-align: left; \">form feed, <code>\\f</code></li>\n<li style=\"text-align: left; \">vertical tab, <code>\\v</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTEwOTEsICJpZCI6ICIxNDk1NDExMDUyNzQyLTAwMSIsICJtZCI6ICJJbiB0aGVzZSBmbGF2b3JzLCBsaW5lIGJyZWFrcyBpbmNsdWRlIGFsbCBVbmljb2RlIGxpbmUgYnJlYWtzOlxuICBcbiogbmV3bGluZSwgYFxcbmBcbiogY2FycmlhZ2UgcmV0dXJuLCBgXFxyYFxuKiBVbmljb2RlIGxpbmUgc2VwYXJhdG9yLCBgXFx1MjAyOGBcbiogVW5pY29kZSBwYWdlIHNlcGFyYXRvciwgYFxcdTIwMjlgXG4qIExhdGluLTEgbmV4dCBsaW5lIGNvbnRyb2wgY2hhcmFjdGVyLCBgXFx1MDA4NWAgIFxuKiBmb3JtIGZlZWQsIGBcXGZgXG4qIHZlcnRpY2FsIHRhYiwgYFxcdmBcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kM[!>`5+m(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "line breaks in&nbsp;.NET", 
                        "", 
                        "<p>In these flavors, line breaks include only the newline, <code>\\n</code>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTExNTcsICJpZCI6ICIxNDk1NDExMDkzOTQ0LTAwMSIsICJtZCI6ICJJbiB0aGVzZSBmbGF2b3JzLCBsaW5lIGJyZWFrcyBpbmNsdWRlIG9ubHkgdGhlIG5ld2xpbmUsIGBcXG5gLlxuIn0=---->", 
                        "", 
                        ".NET is notably absent from the list of flavors that treat characters other than <tt class=\"code\"><span class=\"regexspecial\">\\n</span></tt> as line breaks. Unlike scripting languages that have their roots in the UNIX world, .NET is a Windows development framework that does not automatically strip carriage return characters from text files that it reads. If you read a Windows text file as a whole into a string, it will contain carriage returns. If you use the regex <tt class=\"code\"><span class=\"regexplain\">abc</span><span class=\"regexspecial\">.</span><span class=\"regexspecial\">*</span></tt> on that string, without setting RegexOptions.SingleLine, then it will match <tt class=\"match\">abc</tt> plus all characters that follow on the same line, plus the carriage return at the end of the line, but without the newline after that.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m)Z(5KQQbO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "line breaks options", 
                        "", 
                        "Some flavors allow you to control which characters should be treated as line breaks. Java has the UNIX_LINES option which makes it treat only <tt class=\"code\"><span class=\"regexspecial\">\\n</span></tt> as a line break. PCRE has options that allow you to choose between <tt class=\"code\"><span class=\"regexspecial\">\\n</span></tt> only, <tt class=\"code\"><span class=\"regexspecial\">\\r</span></tt> only, <tt class=\"code\"><span class=\"regexspecial\">\\r</span><span class=\"regexspecial\">\\n</span></tt>, or all Unicode line breaks. <p>On POSIX systems, the POSIX locale determines which characters are line breaks. The C locale treats only the newline <tt class=\"code\"><span class=\"regexspecial\">\\n</span></tt> as a line break. Unicode locales support all Unicode line breaks.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D^X[S;efj-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "shorthand character class for anything not line break", 
                        "", 
                        "Perl 5.12 and PCRE 8.10 introduced <tt class=\"code\"><span class=\"regexspecial\">\\N</span></tt> which matches any single character that is not a line break, just like the dot does. Unlike the dot, <tt class=\"code\"><span class=\"regexspecial\">\\N</span></tt> is not affected by \"single-line mode\". <tt class=\"code\"><span class=\"regexmeta\">(?</span><span class=\"regexmeta\">s</span><span class=\"regexmeta\">)</span><span class=\"regexspecial\">\\N</span><span class=\"regexspecial\">.</span></tt> turns on single-line mode and then matches any character that is not a line break followed by any character regardless of whether it is a line break. <p>PCRE's options that control which characters are treated as line breaks affect <tt class=\"code\"><span class=\"regexspecial\">\\N</span></tt> in exactly the same way as they affect the dot.</p> <p>PHP 5.3.4 and R 2.14.0 also support <tt class=\"code\"><span class=\"regexspecial\">\\N</span></tt> as their regex support is based on PCRE 8.10 or later. JGsoft V2 also supports <tt class=\"code\"><span class=\"regexspecial\">\\N</span></tt>.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o{1tC@N%X8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what regex anchors match", 
                        "", 
                        "positions before, after or between characters", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "U$eSW*Ik[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what regex anchor <code>^</code> matches", 
                        "", 
                        "This anchor matches the position before the first character in the string.", 
                        "", 
                        "Applying&nbsp;<tt class=\"code\"><span class=\"regexspecial\">^</span><span class=\"regexplain\">a</span></tt>&nbsp;to&nbsp;<tt class=\"string\">abc</tt>&nbsp;matches&nbsp;<tt class=\"match\">a</tt>.&nbsp;<tt class=\"code\"><span class=\"regexspecial\">^</span><span class=\"regexplain\">b</span></tt>&nbsp;does not match&nbsp;<tt class=\"string\">abc</tt>&nbsp;at all, because the&nbsp;<tt class=\"code\"><span class=\"regexplain\">b</span></tt>&nbsp;cannot be matched right after the start of the string, matched by&nbsp;<tt class=\"code\"><span class=\"regexspecial\">^</span></tt>.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FYC!cDDzB,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what regex anchor <code>$</code> matches", 
                        "", 
                        "This anchor matches right after the last character in the string.", 
                        "", 
                        " <tt class=\"code\"><span class=\"regexplain\">c</span><span class=\"regexspecial\">$</span></tt> matches <tt class=\"match\">c</tt> in <tt class=\"string\">abc</tt>, while <tt class=\"code\"><span class=\"regexplain\">a</span><span class=\"regexspecial\">$</span></tt> does not match at all.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hu<_[,%%!t", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what regex consisting solely of anchors can&nbsp;match", 
                        "", 
                        "zero-length matches", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y0)!7hv|)_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "to trim trailing and leading whitespace&nbsp;in Perl", 
                        "", 
                        "<p><code>s/^\\s+|\\s+$//g</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTIwOTEsICJpZCI6ICIxNDk1NDExODk4MjA5LTAwMSIsICJtZCI6ICJgcy9eXFxzK3xcXHMrJC8vZ2BcbiJ9---->", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #40ffff\">$input</span> <span style=\"color: #d0d0d0\">=~</span> <span style=\"color: #ed9d13\">s/^\\s+|\\s+$//g</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTIwNDksICJpZCI6ICIxNDk1NDExODk4MjA5LTAwMiIsICJtZCI6ICIgICAgOjo6cGVybFxuICAgICRpbnB1dCA9fiBzL15cXHMrfFxccyskLy9nXG4ifQ==---->", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t#>;VTT.!V", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors ^ and $ always match lines in which flavors?", 
                        "", 
                        "In text editors like EditPad Pro or GNU Emacs, and regex tools like PowerGREP, the caret and dollar always match at the start and end of each line. This makes sense because those applications are designed to work with entire files, rather than short strings. In Ruby and std::regex the caret and dollar also always match at the start and end of each line.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D+Nf1FyH.w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors <code>^</code> and <code>$</code> default to matching lines in which flavors?", 
                        "Regex concept", 
                        "In&nbsp;Boost&nbsp;they match at the start and end of each line by default. Boost allows you to turn this off with&nbsp;<tt>regex_constants::no_mod_m</tt>&nbsp;when using the ECMAScript grammar.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pYcl8Fv`=u", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors ^ and $ default to not matching lines in which flavors?", 
                        "", 
                        "For all major flavors aside from text editors like EditPad Pro or GNU Emacs; regex tools like PowerGREP;&nbsp;Ruby,&nbsp;std::regex&nbsp;and&nbsp;Boost, you have to explicitly activate this extended functionality. It is traditionally called \"multi-line mode\". In Perl, you do this by adding an <code>m</code> after the regex code, like this: <tt class=\"code\">m/^regex$/m;</tt>. In .NET, the anchors match before and after newlines when you specify <tt class=\"code\">RegexOptions.Multiline</tt>, such as in <tt class=\"code\">Regex.Match(\"string\", \"regex\", RegexOptions.Multiline)</tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fFs}7-}[NG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors ^ and $ when CRLF occur in pairs", 
                        "", 
                        "For anchors there's an additional consideration when CR and LF occur as a pair and the regex flavor treats both these characters as line breaks. <b>Delphi</b>, <b>Java</b>, and the <b>JGsoft</b> flavor treat CRLF as an indivisible pair. <tt class=\"code\"><span class=\"regexspecial\">^</span></tt> matches after CRLF and <tt class=\"code\"><span class=\"regexspecial\">$</span></tt> matches before CRLF, but neither match in the middle of a CRLF pair. <i><b>JavaScript</b> and <b>XPath</b> treat CRLF pairs as two line breaks.</i> <tt class=\"code\"><span class=\"regexspecial\">^</span></tt> matches in the middle of and after CRLF, while <tt class=\"code\"><span class=\"regexspecial\">$</span></tt> matches before and in the middle of CRLF.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sw$K+)yHqI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors for start and end of string", 
                        "", 
                        "<span class=\"regexspecial\">\\A</span> only ever matches at the start of the string. Likewise, <tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt> only ever matches at the end of the string. These two tokens never match at line breaks. This is true in all regex flavors discussed in this tutorial, even when you turn on \"multiline mode\". In EditPad Pro and PowerGREP, where the caret and dollar always match at the start and end of lines, <tt class=\"code\"><span class=\"regexspecial\">\\A</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt> only match at the start and the end of the entire file. <p>do not support <tt class=\"code\"><span class=\"regexspecial\">\\A</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>. You're stuck with using the caret and dollar for this purpose.</p> <p>The GNU extensions to POSIX regular expressions use <tt class=\"code\"><span class=\"regexspecial\">\\`</span></tt> (backtick) to match the start of the string, and <tt class=\"code\"><span class=\"regexspecial\">\\'</span></tt> (single quote) to match the end of the string.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eV#mNtc1Gu", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors&nbsp;and single line break terminated strings", 
                        "", 
                        "<div>Because Perl returns a string with a newline at the end when reading a line from a file, Perl's regex engine matches <tt class=\"code\"><span class=\"regexspecial\">$</span></tt> at the position before the line break at the end of the string even when multi-line mode is turned off. Perl also matches <tt class=\"code\"><span class=\"regexspecial\">$</span></tt> at the very end of the string, regardless of whether that character is a line break. So <tt class=\"code\"><span class=\"regexspecial\">^</span><span class=\"regexspecial\">\\d</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">$</span></tt> matches <tt class=\"match\">123</tt> whether the subject string is <tt class=\"string\">123</tt> or <tt class=\"string\">123\\n</tt>.</div><p>Most modern regex flavors have copied this behavior. That includes .NET, Java, PCRE, Delphi, PHP, and Python. This behavior is independent of any settings such as \"multi-line mode\".</p> <p>In all these flavors except Python, <tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt> also matches before the final line break. If you only want a match at the absolute very end of the string, use <tt class=\"code\"><span class=\"regexspecial\">\\z</span></tt> (lower case z instead of upper case Z). <tt class=\"code\"><span class=\"regexspecial\">\\A</span><span class=\"regexspecial\">\\d</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\z</span></tt> does not match <tt class=\"string\">123\\n</tt>. <tt class=\"code\"><span class=\"regexspecial\">\\z</span></tt> matches after the line break, which is not matched by the shorthand character class.</p> <p>In Python, <tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt> matches only at the very end of the string. Python does not support <tt class=\"code\"><span class=\"regexspecial\">\\z</span></tt>.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Oe+uS/s7&)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors&nbsp;and multiple line break terminated strings", 
                        "", 
                        "<div><div>If a string ends with multiple line breaks and multi-line mode is off then&nbsp;<tt class=\"code\"><span class=\"regexspecial\">$</span></tt>&nbsp;only matches before the last of those line breaks in all flavors where it can match before the final break. The same is true for&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>&nbsp;regardless of multi-line mode.</div><p>Boost is the only exception. In Boost,&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>&nbsp;can match before any number of trailing line breaks as well as at the very end of the string. So if the subject string ends with three line breaks, Boost's&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>&nbsp;has four positions that it can match at. Like in all other flavors, Boost's&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>&nbsp;is independent of multi-line mode. Boost's&nbsp;<tt class=\"code\"><span class=\"regexspecial\">$</span></tt>&nbsp;only matches at the very end of the string when you turn off multi-line mode (which is on by default in Boost).</p></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ej<5K3)lTV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "What positions are word boundaries?", 
                        "", 
                        "<ul>\n<li style=\"text-align: left; \">Before the first character in the string, if the first character is a word character.</li>\n<li style=\"text-align: left; \">After the last character in the string, if the last character is a word character.</li>\n<li style=\"text-align: left; \">Between two characters in the string, where one is a word character and the other is not a word character.</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0MTM2NDUsICJpZCI6ICIxNDk1NDEzNjA2NDg1LTAwMSIsICJtZCI6ICIqIEJlZm9yZSB0aGUgZmlyc3QgY2hhcmFjdGVyIGluIHRoZSBzdHJpbmcsIGlmIHRoZSBmaXJzdCBjaGFyYWN0ZXIgaXMgYSB3b3JkIGNoYXJhY3Rlci5cbiogQWZ0ZXIgdGhlIGxhc3QgY2hhcmFjdGVyIGluIHRoZSBzdHJpbmcsIGlmIHRoZSBsYXN0IGNoYXJhY3RlciBpcyBhIHdvcmQgY2hhcmFjdGVyLlxuKiBCZXR3ZWVuIHR3byBjaGFyYWN0ZXJzIGluIHRoZSBzdHJpbmcsIHdoZXJlIG9uZSBpcyBhIHdvcmQgY2hhcmFjdGVyIGFuZCB0aGUgb3RoZXIgaXMgbm90IGEgd29yZCBjaGFyYWN0ZXIuXG4ifQ==---->", 
                        "", 
                        "Simply put: <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt> allows you to perform a \"whole words only\" search using a regular expression in the form of <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexplain\">word</span><span class=\"regexspecial\">\\b</span></tt>. A \"word character\" is a character that can be used to form words. All characters that are not \"word characters\" are \"non-word characters\".", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wx@`6=qL{}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what anchor <code>\\b</code> matches", 
                        "", 
                        "This metacharacter&nbsp;matches at a position that is called a \"word boundary\". This match is zero-length.<div><br /></div><div>Exactly which characters are word characters depends on the regex flavor you're working with. In most flavors, characters that are matched by the short-hand character class <tt class=\"code\"><span class=\"regexspecial\">\\w</span></tt> are the characters that are treated as word characters by word boundaries. Java is an exception. <b>Java</b> supports Unicode for this metacharacter&nbsp;but not for <tt class=\"code\"><span class=\"regexspecial\">\\w</span></tt>.</div>", 
                        "", 
                        "Since digits are considered to be word characters,&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexplain\">4</span><span class=\"regexspecial\">\\b</span></tt>&nbsp;can be used to match a 4 that is not part of a larger number. This regex does not match&nbsp;<tt class=\"string\">44 sheets of a4</tt>. So saying \"<tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt>&nbsp;matches before and after an alphanumeric sequence\" is more exact than saying \"before and after a word\".<div><p><b>Exception</b></p><p>In Tcl,&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt>&nbsp;matches a backspace character, just like&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\x08</span></tt>&nbsp;in most regex flavors (including Tcl's).&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt>&nbsp;matches a single backslash character in Tcl, just like&nbsp;<tt class=\"code\"><span class=\"regexescaped\">\\\\</span></tt>&nbsp;in all other regex flavors (and Tcl too).</p></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cp|^vGo*;(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what anchor <code>\\B</code> matches", 
                        "", 
                        "This metacharacter matches at any position between two word characters as well as at any position between two non-word characters.", 
                        "", 
                        "<span class=\"regexspecial\">\\B</span> is the negated version of <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt>. <tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt> matches at every position where <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt> does not.<div><p><b>Exception</b></p><p>In Tcl,&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt>&nbsp;matches a backspace character, just like&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\x08</span></tt>&nbsp;in most regex flavors (including Tcl's).&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt>&nbsp;matches a single backslash character in Tcl, just like&nbsp;<tt class=\"code\"><span class=\"regexescaped\">\\\\</span></tt>&nbsp;in all other regex flavors (and Tcl too).</p></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hd[{)=,W7.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "word boundaries in&nbsp;Tcl", 
                        "", 
                        "Word boundaries, as described above, are supported by most regular expression flavors. Notable exceptions are the POSIX and XML Schema flavors, which don't support word boundaries at all. Tcl uses a different syntax. <p>In Tcl, <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt> matches a backspace character, just like <tt class=\"code\"><span class=\"regexspecial\">\\x08</span></tt> in most regex flavors (including Tcl's). <tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt> matches a single backslash character in Tcl, just like <tt class=\"code\"><span class=\"regexescaped\">\\\\</span></tt> in all other regex flavors (and Tcl too).</p> <p>Tcl uses the letter \"y\" instead of the letter \"b\" to match word boundaries. <tt class=\"code\"><span class=\"regexspecial\">\\y</span></tt> matches at any word boundary position, while <tt class=\"code\"><span class=\"regexspecial\">\\Y</span></tt> matches at any position that is not a word boundary. These Tcl regex tokens match exactly the same as <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt> in Perl-style regex flavors. They don't discriminate between the start and the end of a word.</p> <p>Tcl has two more word boundary tokens that do discriminate between the start and end of a word. <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> matches only at the start of a word. That is, it matches at any position that has a non-word character to the left of it, and a word character to the right of it. It also matches at the start of the string if the first character in the string is a word character. <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt> matches only at the end of a word. It matches at any position that has a word character to the left of it, and a non-word character to the right of it. It also matches at the end of the string if the last character in the string is a word character.</p> <p>The only regex engine that supports Tcl-style word boundaries (besides Tcl itself) is the JGsoft engine. In PowerGREP and EditPad Pro, <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt> are Perl-style word boundaries, while <tt class=\"code\"><span class=\"regexspecial\">\\y</span></tt>, <tt class=\"code\"><span class=\"regexspecial\">\\Y</span></tt>, <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt> are Tcl-style word boundaries.</p> <p>In most situations, the lack of <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt> tokens is not a problem. <tt class=\"code\"><span class=\"regexspecial\">\\y</span><span class=\"regexplain\">word</span><span class=\"regexspecial\">\\y</span></tt> finds \"whole words only\" occurrences of \"word\" just like <tt class=\"code\"><span class=\"regexspecial\">\\m</span><span class=\"regexplain\">word</span><span class=\"regexspecial\">\\M</span></tt> would. <tt class=\"code\"><span class=\"regexspecial\">\\M</span><span class=\"regexplain\">word</span><span class=\"regexspecial\">\\m</span></tt> could never match anywhere, since <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt> never matches at a position followed by a word character, and <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> never at a position preceded by one. If your regular expression needs to match characters before or after <tt class=\"code\"><span class=\"regexspecial\">\\y</span></tt>, you can easily specify in the regex whether these characters should be word characters or non-word characters. If you want to match any word, <tt class=\"code\"><span class=\"regexspecial\">\\y</span><span class=\"regexspecial\">\\w</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\y</span></tt> gives the same result as <tt class=\"code\"><span class=\"regexspecial\">\\m</span><span class=\"regexspecial\">.</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\M</span></tt>. Using <tt class=\"code\"><span class=\"regexspecial\">\\w</span></tt> instead of the dot automatically restricts the first <tt class=\"code\"><span class=\"regexspecial\">\\y</span></tt> to the start of a word, and the second <tt class=\"code\"><span class=\"regexspecial\">\\y</span></tt> to the end of a word. Note that <tt class=\"code\"><span class=\"regexspecial\">\\y</span><span class=\"regexspecial\">.</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\y</span></tt> would not work. This regex matches each word, and also each sequence of non-word characters between the words in your subject string. That said, if your flavor supports <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt>, the regex engine could apply <tt class=\"code\"><span class=\"regexspecial\">\\m</span><span class=\"regexspecial\">\\w</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\M</span></tt> slightly faster than <tt class=\"code\"><span class=\"regexspecial\">\\y</span><span class=\"regexspecial\">\\w</span><span class=\"regexspecial\">+</span><span class=\"regexspecial\">\\y</span></tt>, depending on its internal optimizations.</p> <p>If your regex flavor supports lookahead and lookbehind, you can use <tt class=\"code\"><span class=\"regexnest1\">(?&lt;!</span><span class=\"regexspecial\">\\w</span><span class=\"regexnest1\">)</span><span class=\"regexnest1\">(?=</span><span class=\"regexspecial\">\\w</span><span class=\"regexnest1\">)</span></tt> to emulate Tcl's <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> and <tt class=\"code\"><span class=\"regexnest1\">(?&lt;=</span><span class=\"regexspecial\">\\w</span><span class=\"regexnest1\">)</span><span class=\"regexnest1\">(?!</span><span class=\"regexspecial\">\\w</span><span class=\"regexnest1\">)</span></tt> to emulate <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt>. Though quite a bit more verbose, these lookaround constructs match exactly the same as Tcl's word boundaries.</p> <p>If your flavor has lookahead but not lookbehind, and also has Perl-style word boundaries, you can use <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexnest1\">(?=</span><span class=\"regexspecial\">\\w</span><span class=\"regexnest1\">)</span></tt> to emulate Tcl's <tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexnest1\">(?!</span><span class=\"regexspecial\">\\w</span><span class=\"regexnest1\">)</span></tt> to emulate <tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt>. <tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt> matches at the start or end of a word, and the lookahead checks if the next character is part of a word or not. If it is we're at the start of a word. Otherwise, we're at the end of a word.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u1W0pXpXBf", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "word boundaries in&nbsp;GNU", 
                        "", 
                        "<div>This flavor has extensions that&nbsp;support the&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt>&nbsp;and&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt>&nbsp;word boundaries, and it&nbsp;also uses its own syntax for start-of-word and end-of-word boundaries. <tt class=\"code\"><span class=\"regexspecial\">\\&lt;</span></tt> matches at the start of a word, like&nbsp;<b>Tcl</b>’s&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\m</span></tt>. <tt class=\"code\"><span class=\"regexspecial\">\\&gt;</span></tt> matches at the end of a word, like&nbsp;<b>Tcl</b>’s&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\M</span></tt>.</div><div><p><b>Boost</b> also treats <tt class=\"code\"><span class=\"regexspecial\">\\&lt;</span></tt> and <tt class=\"code\"><span class=\"regexspecial\">\\&gt;</span></tt> as word boundaries when using the <b>ECMAScript</b>, <b>extended</b>, <b><code>egrep</code></b>, or <b><code>awk</code></b> grammar.</p></div>", 
                        "", 
                        "The <b>GNU</b> extensions to <b>POSIX</b> regular expressions add support for the&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\b</span></tt>&nbsp;and&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\B</span></tt>&nbsp;word boundaries.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HTybPod8CU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "word boundaries in&nbsp;POSIX", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexspecial\">[[:&lt;:]]</span></tt>&nbsp;and <tt class=\"code\"><span class=\"regexspecial\">[[:&gt;:]]</span></tt>", 
                        "", 
                        "This flavor defines&nbsp;<tt class=\"code\"><span class=\"regexspecial\">[[:&lt;:]]</span></tt>&nbsp;as a start-of-word boundary and&nbsp;<tt class=\"code\"><span class=\"regexspecial\">[[:&gt;:]]</span></tt>&nbsp;as an end-of-word boundary. Though the syntax is borrowed from the same standard’s&nbsp;bracket expressions, these tokens are word boundaries that have nothing to do with and cannot be used inside character classes.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b9J%dVVFI0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter <code></code><code>|</code>", 
                        "", 
                        "This operator indicates alternation, to match a single regular expression out of several possible regular expressions.&nbsp;The alternation operator has the lowest precedence of all regex operators. That is, it tells the regex engine to match either everything to the left of it, or everything to the right of it. If you want to limit the reach of the alternation, you need to use parentheses for grouping.", 
                        "", 
                        "If you want to search for the literal text&nbsp;<tt class=\"code\"><span class=\"regexplain\">cat</span></tt>&nbsp;or&nbsp;<tt class=\"code\"><span class=\"regexplain\">dog</span></tt>, separate both options with a vertical bar or pipe symbol:&nbsp;<tt class=\"code\"><span class=\"regexplain\">cat</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">dog</span></tt>. If you want more options, simply expand the list:&nbsp;<tt class=\"code\"><span class=\"regexplain\">cat</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">dog</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">mouse</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">fish</span></tt>.<p>If we want to improve the first example to match whole words only, we would need to use&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">cat</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">dog</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">\\b</span></tt>. This tells the regex engine to find a&nbsp;word boundary, then either&nbsp;<tt class=\"code\"><span class=\"regexplain\">cat</span></tt>&nbsp;or&nbsp;<tt class=\"code\"><span class=\"regexplain\">dog</span></tt>, and then another word boundary. If we had omitted the parentheses then the regex engine would have searched for a word boundary followed by&nbsp;<tt class=\"code\"><span class=\"regexplain\">cat</span></tt>, or,&nbsp;<tt class=\"code\"><span class=\"regexplain\">dog</span></tt>&nbsp;followed by a word boundary.</p>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B6k!?ImC}V", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Does order of alternates matter?", 
                        "", 
                        "The regex engine is eager and&nbsp;stops searching as soon as it finds a valid match. The consequence is that in certain situations, the order of the alternatives matters. Suppose you want to use a regex to match a list of function names in a programming language: <code>Get</code>, <code>GetValue</code>, <code>Set</code> or <code>SetValue</code>. The obvious solution is <tt class=\"code\"><span class=\"regexplain\">Get</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">GetValue</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">Set</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">SetValue</span></tt>. Let's see how this works out when the string is <tt class=\"string\">SetValue</tt>. <p>The regex engine starts at the first token in the regex, <tt class=\"code\"><span class=\"regexplain\">G</span></tt>, and at the first character in the string, <tt class=\"string\">S</tt>. The match fails. However, the regex engine studied the entire regular expression before starting. So it knows that this regular expression uses alternation, and that the entire regex has not failed yet. So it continues with the second option, being the second <tt class=\"code\"><span class=\"regexplain\">G</span></tt> in the regex. The match fails again. The next token is the first <tt class=\"code\"><span class=\"regexplain\">S</span></tt> in the regex. The match succeeds, and the engine continues with the next character in the string, as well as the next token in the regex. The next token in the regex is the <tt class=\"code\"><span class=\"regexplain\">e</span></tt> after the <tt class=\"code\"><span class=\"regexplain\">S</span></tt> that just successfully matched. <tt class=\"code\"><span class=\"regexplain\">e</span></tt> matches <tt class=\"match\">e</tt>. The next token, <tt class=\"code\"><span class=\"regexplain\">t</span></tt> matches <tt class=\"match\">t</tt>.</p> <p>At this point, the third option in the alternation has been successfully matched. Because the regex engine is eager, it considers the entire alternation to have been successfully matched as soon as one of the options has. In this example, there are no other tokens in the regex outside the alternation, so the entire regex has successfully matched <tt class=\"match\">Set</tt> in <tt class=\"string\">SetValue</tt>.</p> <p>Contrary to what we intended, the regex did not match the entire string. There are several solutions. One option is to take into account that the regex engine is eager, and change the order of the options. If we use <tt class=\"code\"><span class=\"regexplain\">GetValue</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">Get</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">SetValue</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">Set</span></tt>, <tt class=\"code\"><span class=\"regexplain\">SetValue</span></tt> is attempted before <tt class=\"code\"><span class=\"regexplain\">Set</span></tt>, and the engine matches the entire string. We could also combine the four options into two and use the question mark to make part of them optional: <tt class=\"code\"><span class=\"regexplain\">Get</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">Value</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">?</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">Set</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">Value</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">?</span></tt>. Because the question mark is greedy, <tt class=\"code\"><span class=\"regexplain\">SetValue</span></tt> is be attempted before <tt class=\"code\"><span class=\"regexplain\">Set</span></tt>.</p> <p>The best option is probably to express the fact that we only want to match complete words. We do not want to match Set or SetValue if the string is <tt class=\"string\">SetValueFunction</tt>. So the solution is <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">Get</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">GetValue</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">Set</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">SetValue</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">\\b</span></tt> or <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">Get</span><span class=\"regexnest2\">(</span><span class=\"regexplain\">Value</span><span class=\"regexnest2\">)</span><span class=\"regexspecial\">?</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">Set</span><span class=\"regexnest2\">(</span><span class=\"regexplain\">Value</span><span class=\"regexnest2\">)</span><span class=\"regexspecial\">?</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">\\b</span></tt>. Since all options have the same end, we can optimize this further to <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">Get</span><span class=\"regexnest1\">|</span><span class=\"regexplain\">Set</span><span class=\"regexnest1\">)</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">Value</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">?</span><span class=\"regexspecial\">\\b</span></tt>.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P@H<L?<w0Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "alternates in text-directed engines", 
                        "", 
                        "Alternation is where regex-directed and text-directed engines differ. When a text-directed engine attempts <tt class=\"code\"><span class=\"regexplain\">Get</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">GetValue</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">Set</span><span class=\"regexspecial\">|</span><span class=\"regexplain\">SetValue</span></tt> on <tt class=\"string\">SetValue</tt>, it tries all permutations of the regex at the start of the string. It does so efficiently, without any backtracking. It sees that the regex can find a match at the start of the string, and that the matched text can be either <tt class=\"string\">Set</tt> or <tt class=\"string\">SetValue</tt>. Because the text-directed engine evaluates the regex as a whole, it has no concept of one alternative being listed before another. But it has to make a choice as to which match to return. It always returns the longest match, in this case <tt class=\"match\">SetValue</tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v6I8wn}/6O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "When is longest alternate required?", 
                        "", 
                        "The <b>POSIX</b> standard leaves it up to the implementation to choose a text-directed or regex-directed engine. A BRE that includes backreferences needs to be evaluated using a regex-directed engine. But a BRE without backreferences or an ERE can be evaluated using a text-directed engine. But the POSIX standard does mandate that the longest match be returned, even when a regex-directed engine is used. Such an engine cannot be eager. It has to continue trying all alternatives even after a match is found, in order to find the longest one. This can result in very poor performance when a regex contains multiple quantifiers or a combination of quantifiers and alternation, as all combinations have to be tried to find the longest match. <p>The <b>Tcl</b> and <b>GNU</b> flavors also work this way.</p>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gy^f&sVFlo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter <code>?</code> (quantifier)", 
                        "", 
                        "This metacharacter is a quantifier and makes the preceding token in the regular expression optional.&nbsp;You can make several tokens optional by grouping them together using parentheses, and placing this metacharacter&nbsp;after the closing parenthesis.&nbsp;You can write a regular expression that matches many alternatives by including more than one of this metacharacter.", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexplain\">colo</span><span class=\"regexplain\">u</span><span class=\"regexspecial\">?</span><span class=\"regexplain\">r</span></tt>&nbsp;matches both&nbsp;<tt class=\"match\">colour</tt>&nbsp;and&nbsp;<tt class=\"match\">color</tt>.<div><tt class=\"code\"><span class=\"regexplain\">Nov</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">ember</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">?</span></tt>&nbsp;matches&nbsp;<tt class=\"match\">Nov</tt>&nbsp;and&nbsp;<tt class=\"match\">November</tt>.</div><div><tt class=\"code\"><span class=\"regexplain\">Feb</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">ruary</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">?</span><span class=\"regexplain\">&nbsp;23</span><span class=\"regexnest1\">(</span><span class=\"regexplain\">rd</span><span class=\"regexnest1\">)</span><span class=\"regexspecial\">?</span></tt>&nbsp;matches&nbsp;<tt class=\"match\">February 23rd</tt>,&nbsp;<tt class=\"match\">February 23</tt>,&nbsp;<tt class=\"match\">Feb 23rd</tt>&nbsp;and&nbsp;<tt class=\"match\">Feb 23</tt>.</div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r>N%*SbhZ6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters&nbsp;<code>{}</code>", 
                        "", 
                        "This pair of metacharacters can also make something optional.&nbsp;", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexplain\">colo</span><span class=\"regexplain\">u</span><span class=\"regexspecial\">{0,1}</span><span class=\"regexplain\">r</span></tt>&nbsp;is the same as&nbsp;<tt class=\"code\"><span class=\"regexplain\">colo</span><span class=\"regexplain\">u</span><span class=\"regexspecial\">?</span><span class=\"regexplain\">r</span></tt><div><br /></div>\nThe syntax is <tt>{<i>min</i>,<i>max</i>}</tt>, where <i>min</i> is zero or a positive integer number indicating the minimum number of matches, and <i>max</i> is an integer equal to or greater than <i>min</i> indicating the maximum number of matches. If the comma is present but <i>max</i> is omitted, the maximum number of matches is infinite. So <tt class=\"code\"><span class=\"regexspecial\">{0,1}</span></tt> is the same as <tt class=\"code\"><span class=\"regexspecial\">?</span></tt>, <tt class=\"code\"><span class=\"regexspecial\">{0,}</span></tt> is the same as <tt class=\"code\"><span class=\"regexspecial\">*</span></tt>, and <tt class=\"code\"><span class=\"regexspecial\">{1,}</span></tt> is the same as <tt class=\"code\"><span class=\"regexspecial\">+</span></tt>. Omitting both the comma and <i>max</i> tells the engine to repeat the token exactly <i>min</i> times. <p>You could use <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">1</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">{3}</span><span class=\"regexspecial\">\\b</span></tt> to match a number between 1000 and 9999. <tt class=\"code\"><span class=\"regexspecial\">\\b</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">1</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">{2,4}</span><span class=\"regexspecial\">\\b</span></tt> matches a number between 100 and 99999. Notice the use of the word boundaries.</p>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hi)lt~QdI^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacters&nbsp;<code>{}</code> in&nbsp;POSIX BRE&nbsp;and&nbsp;GNU BRE", 
                        "", 
                        "These flavors require backslashes to&nbsp;<em>give</em>&nbsp;curly braces their special meaning:&nbsp;<tt class=\"code\"><span class=\"regexplain\">colo</span><span class=\"regexplain\">u</span><span class=\"regexspecial\">\\{0,1\\}</span><span class=\"regexplain\">r</span></tt>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kFN2>.$r^:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter&nbsp;<code>*</code>", 
                        "", 
                        "This repetition operator or quantifier&nbsp;tells the engine to attempt to match the preceding token zero or more times.", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexplain\">&lt;</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccopen\">]</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">*</span><span class=\"regexplain\">&gt;</span></tt> matches an HTML tag without any attributes. The angle brackets are literals. The first character class matches a letter. The second character class matches a letter or digit. The star repeats the second character class. Because we used the star, it's OK if the second character class matches nothing. So our regex will match a tag like <tt class=\"match\">&lt;B&gt;</tt>. When matching <tt class=\"match\">&lt;HTML&gt;</tt>, the first character class will match <tt class=\"match\">H</tt>. The star will cause the second character class to be repeated three times, matching <tt class=\"match\">T</tt>, <tt class=\"match\">M</tt> and <tt class=\"match\">L</tt> with each step. <p>I could also have used <tt class=\"code\"><span class=\"regexplain\">&lt;</span><span class=\"regexccopen\">[</span><span class=\"regexccrange\">A</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">Z</span><span class=\"regexccrange\">a</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">z</span><span class=\"regexccrange\">0</span><span class=\"regexccrange\">-</span><span class=\"regexccrange\">9</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">+</span><span class=\"regexplain\">&gt;</span></tt>. I did not, because this regex would match <tt class=\"match\">&lt;1&gt;</tt>, which is not a valid HTML tag. But this regex may be sufficient if you know the string you are searching through does not contain any such invalid tags.</p>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dcN+GUP7&7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter <code>+</code>", 
                        "", 
                        "This repetition operator or quantifier&nbsp;tells the engine to attempt to match the preceding token once or more.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fim?0aq9V@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter&nbsp;<code>?</code>&nbsp;(laziness)", 
                        "", 
                        "This operator makes the preceding operator lazy instead of greedy.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u[a>p_w<Z9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "metacharacter&nbsp;<code>?</code>&nbsp;can make these&nbsp;quantifiers lazy", 
                        "", 
                        "<code>+</code>, <code>*</code>, <code>{min,max}</code>, <code>?</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F/f*&$RAuw", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "laziness alternative that avoids backtracking", 
                        "", 
                        "greedy <code>+</code> and a negated character class", 
                        "", 
                        "<tt class=\"code\"><span class=\"regexplain\">&lt;</span><span class=\"regexccopen\">[</span><span class=\"regexccspecial\">^</span><span class=\"regexccliteral\">&gt;</span><span class=\"regexccopen\">]</span><span class=\"regexspecial\">+</span><span class=\"regexplain\">&gt;</span></tt>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hk?mNLP3%C", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "repeating&nbsp;<code>\\Q…\\E</code>&nbsp;escape sequences", 
                        "", 
                        "The <code>\\Q…\\E</code> sequence escapes a string of characters, matching them as literal characters. The escaped characters are treated as individual characters. If you place a quantifier after the <tt>\\E</tt>, it will only be applied to the last character. E.g. if you apply <tt class=\"code\"><span class=\"regexmeta\">\\Q</span><span class=\"regexplain\">*\\d+*</span><span class=\"regexmeta\">\\E</span><span class=\"regexspecial\">+</span></tt> to <tt class=\"string\">*\\d+**\\d+*</tt>, the match will be <tt class=\"match\">*\\d+**</tt>. Only the asterisk is repeated. Java 4 and 5 have a bug that causes the whole <code>\\Q…E</code> sequence to be repeated, yielding the whole subject string as the match. This was fixed in Java 6.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B9548~q;~_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchors <wbr><code>\\`</code> and <code>\\'</code></wbr>", 
                        "", 
                        "The <b>GNU</b> extensions to <b>POSIX</b> regular expressions use these&nbsp;to match the start and&nbsp;end of the string.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ra-{VL;ZnD", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what does <code>^\\d+$</code> match for string <code>123\\n</code>?", 
                        "", 
                        "<code>123</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i{(bT-noxk", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what does <code>^\\d+$</code> match for string <code>123</code>?", 
                        "", 
                        "<code>123</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ci{D{4y713", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "does what&nbsp;<code>^\\d+$</code> matches for string <code>123\\n</code>&nbsp;change in multiline mode?", 
                        "", 
                        "No, it matches <code>123</code> independent of the mode.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z~eEGR;Rir", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "does&nbsp;<code>\\A\\d+\\z</code> match string <code>123\\n</code> in Python?", 
                        "", 
                        "No.<div><br /></div><div>Python does not support&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\z</span></tt>&nbsp;and&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>&nbsp;matches only at the very end of the string.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J>iMw,?,a{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "does&nbsp;<code>\\A\\d+\\z</code> match string <code>123\\n</code>?", 
                        "", 
                        "No.<div><br /></div><div><tt class=\"code\"><span class=\"regexspecial\">\\z</span></tt>&nbsp;matches after the line break, which is not matched by the shorthand character class.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z;^~tZ=p%o", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "does&nbsp;<code>\\A\\d+\\Z</code> match string <code>123\\n</code>?", 
                        "", 
                        "Yes, except in Python.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O8Vo<rLvdP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "does&nbsp;<code>\\A\\d+\\Z</code> match string <code>123\\n</code> in Python?", 
                        "", 
                        "No.<div><br /></div><div>In Python,&nbsp;<tt class=\"code\"><span class=\"regexspecial\">\\Z</span></tt>&nbsp;matches only at the very end of the string.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G.:dIR3ZVK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchor that only ever matches the start of the string", 
                        "", 
                        "regex anchor&nbsp;<code>\\A</code>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ueP66ufW{*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchor that only ever matches the end of the string", 
                        "", 
                        "regex anchor&nbsp;<code>\\Z</code>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cg,k3`RK8#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchor <code>\\Z</code> matches line breaks when?", 
                        "", 
                        "never", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fP99N:g2+8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "anchor <code>\\A</code> matches line breaks when?", 
                        "", 
                        "never", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "RcZ`(KXX|5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "flavors that do not support&nbsp;<code>\\A</code> or <code>\\Z</code>", 
                        "<b></b><b>{{c1::JavaScript}}</b><div><b>{{c2::POSIX}}</b></div><div><b>{{c3::XML}}</b></div><div><b>{{c4::XPath}}</b></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y|d9@Ls_YT", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "flavors that&nbsp;treat <code>\\</code> in character classes as literal characters", 
                        "", 
                        "<b>POSIX</b> and <b>GNU</b>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iwe9}|u=:s", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "regex metacharacters", 
                        "<code>{{c1::\\}}{{c2::^}}{{c3::$}}{{c4::.}}{{c5::|}}{{c6::?}}{{c7::*}}{{c8::+}}{{c9::(}}{{c10::)}}{{c11::[}}{{c12::{}}</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l60RoUDPv)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Why most regex flavors don't have anchors for both start and end of word", 
                        "", 
                        "Any position between characters can never be both at the start and at the end of a word. Using only one operator makes things easier.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o&gK}]CV64", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "regex"
                    ]
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "f3d42b35-7658-11e7-9395-2c56dc924912", 
            "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [
                "maze-graph.jpg", 
                "Omega_fn.png", 
                "55850ad542e28fb99a2a0341bf87cd9e1fc0f65c.png", 
                "470px-Binary_Search_Depiction.svg.png", 
                "theta_fn.png", 
                "501211c02f4c6765f60f23842450e1151cfd9c89.png", 
                "034be7b46471c73c91b5604ac68b36aaf84fce24.png", 
                "4bb2176ed6ce60d104f9f83ab32ebc8bdb1f689b.png", 
                "latex-3178edf93769a26b67bba7adafaf51cb577d6b79.png"
            ], 
            "mid": "1478588625100", 
            "name": "CS", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "linearithmic", 
                        "function type", 
                        "<code><i>n&nbsp;</i>log​<sub>k</sub><i> ​​n</i></code><br /><div style=\"font-style: italic; \"><img src=\"034be7b46471c73c91b5604ac68b36aaf84fce24.png\" /></div>", 
                        "form", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ELPlCL9=8M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "exponential", 
                        "function type", 
                        "<code>x<sup>k​​<i>n</i></sup></code>", 
                        "form", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bg0O^}>7<:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "polynomial", 
                        "function type", 
                        "<span style=\"white-space: nowrap\"><span><code>x&nbsp;<i>n</i><sup>k​​</sup></code><br /><span style=\"border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-color: initial; clip: rect(0px 0px 0px 0px); height: 1px; margin-top: -1px; margin-right: -1px; margin-bottom: -1px; margin-left: -1px; overflow-x: hidden; overflow-y: hidden; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: absolute; width: 1px; \"><sup>n, space, log, start subscript, 2, end subscript,&nbsp;</sup></span></span></span>", 
                        "form", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nyqo-g<zgx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "logarithmic", 
                        "function type", 
                        "<code>log​<sub>k</sub>&nbsp;<i>​​n</i></code><br /><div><span style=\"white-space: nowrap\"><span><i><img src=\"55850ad542e28fb99a2a0341bf87cd9e1fc0f65c.png\" /><br /></i><span style=\"border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-color: initial; clip: rect(0px 0px 0px 0px); height: 1px; margin-top: -1px; margin-right: -1px; margin-bottom: -1px; margin-left: -1px; overflow-x: hidden; overflow-y: hidden; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: absolute; width: 1px; \"><sup>n, space, log, start subscript, 2, end subscript,&nbsp;</sup></span></span></span></div>", 
                        "form", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k9*)&94)`-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "function types in order of growth", 
                        "", 
                        "<ol>\n<li style=\"text-align: left; \">Constant</li>\n<li style=\"text-align: left; \">Logarithmic</li>\n<li style=\"text-align: left; \">Linear</li>\n<li style=\"text-align: left; \">Linearithmic</li>\n<li style=\"text-align: left; \">Polynomial</li>\n<li style=\"text-align: left; \">Exponential</li>\n</ol><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE0NTE0MDMsICJpZCI6ICIxNTAxNDUxMjU5NTk3LTAwMiIsICJtZCI6ICIxLiBDb25zdGFudFxuMS4gTG9nYXJpdGhtaWNcbjEuIExpbmVhclxuMS4gTGluZWFyaXRobWljXG4xLiBQb2x5bm9taWFsXG4xLiBFeHBvbmVudGlhbFxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qGvJ~X}a5)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "route finding: maze", 
                        "algorithm", 
                        "<div><img src=\"maze-graph.jpg\" /></div>", 
                        "", 
                        "<li data-reactid=\"260\">Start on the goal square. How far is the goal from the goal? Zero steps, mark the goal with the number 0.</li><li data-reactid=\"262\">Find\n all squares in the maze that are exactly one step away from the goal. \nMark them with the number 1. In this maze, if the goal is the exit \nsquare, then there is only one square that is exactly one step away.</li><li data-reactid=\"264\">Now\n find all squares in the maze that are exactly two steps away from the \ngoal. These squares are one step away from those marked 1 and have not \nyet been marked. Mark these squares with the number 2.</li><li data-reactid=\"266\">Mark\n all squares in the maze that are exactly three steps away from the \ngoal. These squares are one step away from those marked 2 and have not \nyet been marked. Mark these squares with the number 3.</li><li data-reactid=\"268\">Keep marking squares in the maze in order of increasing distance from the goal. After marking squares with the number <span style=\"white-space:nowrap\" data-reactid=\"270\"><span data-reactid=\"271\"></span><span data-reactid=\"272\"><span data-reactid=\"273\"></span><span aria-hidden=\"true\" data-reactid=\"274\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\"> k </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span style=\"border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;\" data-reactid=\"275\">k</span></span><span data-reactid=\"276\"></span></span>, mark with the number <span style=\"white-space:nowrap;\" data-reactid=\"278\"><span data-reactid=\"279\"></span><span data-reactid=\"280\"><span data-reactid=\"281\"></span><span aria-hidden=\"true\" data-reactid=\"282\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>k</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\"> k+1 </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span><span class=\"mbin\">+</span><span class=\"mord mathrm\">1</span></span></span></span></span><span style=\"border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;\" data-reactid=\"283\">k, plus, 1</span></span><span data-reactid=\"284\"></span></span> all squares that are one step away from those marked <span style=\"white-space:nowrap;\" data-reactid=\"286\"><span data-reactid=\"287\"></span><span data-reactid=\"288\"><span data-reactid=\"289\"></span><span aria-hidden=\"true\" data-reactid=\"290\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\"> k </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"strut\" style=\"height:0.69444em;\"></span><span class=\"strut bottom\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\" style=\"margin-right:0.03148em;\">k</span></span></span></span></span><span style=\"border:0;clip:rect(0,0,0,0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px;\" data-reactid=\"291\">k</span></span><span data-reactid=\"292\"></span></span> and have not yet been marked.</li>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b!w_v/g2o9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "linear search", 
                        "algorithm", 
                        "<span class=\"_Tgc\">sequentially check each element of the list for the \ntarget value until a match is found or until all the elements have been \nsearched</span>", 
                        "", 
                        "", 
                        "reverse", 
                        "<span class=\"_Tgc\">linear (or&nbsp;sequential) search</span>", 
                        "<cite class=\"_Rm\" style=\"font-style: normal;\">https://en.wikipedia.org/wiki/Linear_search</cite>"
                    ], 
                    "flags": 0, 
                    "guid": "ge)jj3E{|U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "binary search", 
                        "algorithm", 
                        "Search algorithm that finds the position of a target value within a sorted array by comparing the target value to the middle element of the array; if they are unequal, the half in which the target cannot lie is eliminated and the search continues on the remaining half until it is successful. If the search ends with the remaining half being empty, the target is not in the array.<div><div class=\"mw-mmv-image\"><img src=\"470px-Binary_Search_Depiction.svg.png\" /></div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "binary search, half-interval search, logarithmic search, binary chop", 
                        "<cite class=\"_Rm\" style=\"font-style: normal;\">https://en.wikipedia.org/wiki/Binary_search_algorithm</cite>"
                    ], 
                    "flags": 0, 
                    "guid": "wN,/,h/?#}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "binary search complexity", 
                        "", 
                        "At worst logarithmic time, making <code><i>O</i>(lg&nbsp;<i>n</i>)</code> comparisons, where <code><i>n</i></code> is the number of elements in the array, the <code><i>O</i></code> is Big O notation, and <code>lg</code> is the logarithm. Takes constant (<code><i>O</i>(1)</code>) space, meaning that the space taken by the algorithm is the same for any number of elements in the array.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<cite class=\"_Rm\" style=\"font-style: normal;\">https://en.wikipedia.org/wiki/Binary_search_algorithm</cite>"
                    ], 
                    "flags": 0, 
                    "guid": "K!}qMn}|]&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "priority queue", 
                        "", 
                        "Abstract data type like a regular queue or stack data structure but where each element has an associated&nbsp;priority. An element with high priority is served before an element with low priority. If two elements have the same priority, they are served according to their order in the queue.", 
                        "", 
                        "<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><!--StartFragment-->While priority queues are often implemented with heaps, they are conceptually distinct from heaps. A priority queue is an abstract concept like \"a list\" or \"a map\"; just as a list can be implemented with a linked list or an array, a priority queue can be implemented with a heap or a variety of other methods such as an unordered array.<!--EndFragment--></p>", 
                        "reverse", 
                        "", 
                        "<cite class=\"_Rm\" style=\"font-style: normal;\">https://en.wikipedia.org/wiki/Priority_queue</cite>"
                    ], 
                    "flags": 0, 
                    "guid": "tAjh*AAKi9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<span style=\"white-space: nowrap\"><span><span aria-hidden=\"false\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">Big-Theta:&nbsp;</span></span></span></span></span></span></span><code>Θ(<i>n</i>)</code>", 
                        "notation", 
                        "<div><strong>asymptotically</strong> (matters for only large values of&nbsp;<span style=\"white-space: nowrap\"><span><span aria-hidden=\"true\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\"><i><code>n</code></i></span></span></span></span></span></span></span>) <strong>tight bound</strong>&nbsp;(within constant factor above and below) on the running time</div><span style=\"white-space: nowrap; \"><span><span style=\"border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-color: initial; clip: rect(0px 0px 0px 0px); height: 1px; margin-top: -1px; margin-right: -1px; margin-bottom: -1px; margin-left: -1px; overflow-x: hidden; overflow-y: hidden; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: absolute; width: 1px; \">n</span></span></span><div><div><img src=\"theta_fn.png\" /></div></div>", 
                        "", 
                        "(say \"big-Theta of <span style=\"white-space: nowrap\"><span><span aria-hidden=\"true\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\"><i>n</i></span></span></span></span></span><span style=\"border: 0px none; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px;\">n</span></span><span></span></span>\" or just \"Theta of<span style=\"white-space: nowrap;\"><span><span aria-hidden=\"true\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><annotation encoding=\"application/x-tex\">&nbsp;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><i><span class=\"strut\" style=\"height:0.43056em;\"></span><span class=\"strut bottom\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"base textstyle uncramped\"><span class=\"mord mathit\">n</span></span></i></span></span></span><span style=\"border: 0px none; clip: rect(0px, 0px, 0px, 0px); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px;\">n</span></span><span></span></span>\")", 
                        "reverse", 
                        "", 
                        "https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/big-big-theta-notation"
                    ], 
                    "flags": 0, 
                    "guid": "eW:tPu-L&_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<span style=\"white-space: nowrap\"><span><span aria-hidden=\"false\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">Big-O:&nbsp;</span></span></span></span></span></span></span><code>O(<i>n</i>)</code>", 
                        "notation", 
                        "<div class=\"clearfix\"><div class=\"perseus-renderer perseus-renderer-responsive\"><div class=\"paragraph\" data-perseus-paragraph-index=\"0\"><div class=\"paragraph\"><strong>asymptotic</strong>&nbsp;(matters for only large values of&nbsp;<span style=\"white-space: nowrap\"><span><span aria-hidden=\"true\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\"><i><code>n</code></i></span></span></span></span></span></span></span>)&nbsp;<b>upper</b><strong>&nbsp;bound</strong>&nbsp;on the running time</div><div class=\"paragraph\"><img src=\"501211c02f4c6765f60f23842450e1151cfd9c89.png\" /></div></div></div></div>", 
                        "", 
                        "(say \"big-O of \n<code><i>f</i>(<i>n</i>)</code>\" or just \"O of&nbsp;<code><i>f</i>(<i>n</i>)</code>\")<div><br /></div><div><!--anki-->Running time of binary search is&nbsp;<em>always</em>&nbsp;<code><i>O</i>(lg <i>n</i>)</code>. Worst case running time is&nbsp;<code>Θ(lg <i>n</i>)</code>.</div>", 
                        "reverse", 
                        "", 
                        "https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/big-big-theta-notation"
                    ], 
                    "flags": 0, 
                    "guid": "f!:Yk.k6ur", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<span style=\"white-space: nowrap\"><span><span aria-hidden=\"false\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">Big-Omega:&nbsp;</span></span></span></span></span></span></span><code>Ω(<i>n</i>)</code>", 
                        "notation", 
                        "<div class=\"clearfix\"><div class=\"perseus-renderer perseus-renderer-responsive\"><div class=\"paragraph\" data-perseus-paragraph-index=\"0\"><div class=\"paragraph\"><div class=\"clearfix\"><div class=\"perseus-renderer perseus-renderer-responsive\"><div class=\"paragraph\" data-perseus-paragraph-index=\"0\"><div class=\"paragraph\"><strong>asymptotic</strong>&nbsp;(matters for only large values of&nbsp;<span style=\"white-space: nowrap\"><span><span aria-hidden=\"true\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathit\"><i><code>n</code></i></span></span></span></span></span></span></span>)&nbsp;<b>lower</b><strong>&nbsp;bound</strong>&nbsp;on the running time</div><div class=\"paragraph\"><img src=\"Omega_fn.png\" /></div></div></div></div></div></div></div></div>", 
                        "", 
                        "(say \"big-Omega of \n<code><i>f</i>(<i>n</i>)</code>\" or just \"Omega of&nbsp;<code><i>f</i>(<i>n</i>)</code>\")<div><br /></div><div>Just as&nbsp;<code>Θ(<i>f(n)</i>)</code>&nbsp;automatically implies&nbsp;<span style=\"white-space: nowrap\"><span><code><i>O</i>(<i>f(n)</i>)</code><span style=\"border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-color: initial; clip: rect(0px 0px 0px 0px); height: 1px; margin-top: -1px; margin-right: -1px; margin-bottom: -1px; margin-left: -1px; overflow-x: hidden; overflow-y: hidden; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: absolute; width: 1px; \">O, left parenthesis, f, left parenthesis, n, right parenthesis, right parenthesis</span></span><span></span></span>, it also automatically implies&nbsp;<code>Ω(<i>f(n)</i>)</code>. So we can say that the worst-case running time of binary search is&nbsp;<span style=\"white-space: nowrap; \"><span><code>Ω(lg <i>n</i>)</code><span style=\"border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-color: initial; clip: rect(0px 0px 0px 0px); height: 1px; margin-top: -1px; margin-right: -1px; margin-bottom: -1px; margin-left: -1px; overflow-x: hidden; overflow-y: hidden; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: absolute; width: 1px; \"></span></span><span></span></span>.</div>", 
                        "reverse", 
                        "", 
                        "https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/big-big-theta-notation"
                    ], 
                    "flags": 0, 
                    "guid": "cW#KcEXN%A", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "asymptotic relationship between <code>lg&nbsp;n</code> and <code>log​<sub>8​​</sub>&nbsp;n</code>", 
                        "", 
                        "<code><i>lg</i>&nbsp;<i>n</i></code> is <code>O(<i>log​<sub>8</sub>​​&nbsp;n</i>)</code>,  <code>Ω(<i>log​<sub>8</sub>​​&nbsp;n</i>)</code> and  <code>Θ(<i>log​<sub>8</sub>​&nbsp;n</i>)</code>", 
                        "", 
                        "<div>[$]\\log_8 n = \\frac{1}{\\lg 8} {\\lg n}[/$]</div><div><br /></div>The functions differ by a constant, so can be considered equal.<div><img src=\"4bb2176ed6ce60d104f9f83ab32ebc8bdb1f689b.png\" /></div>", 
                        "", 
                        "", 
                        "https://www.khanacademy.org/computing/computer-science/algorithms/asymptotic-notation/a/big-big-theta-notation"
                    ], 
                    "flags": 0, 
                    "guid": "n*O?w{^*T^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms", 
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "selection sort", 
                        "algorithm", 
                        "repeatedly selects the smallest remaining element and swaps it into place", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">swap</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #6ab825; font-weight: bold\">function</span><span style=\"color: #d0d0d0\">(array,</span> <span style=\"color: #d0d0d0\">firstIndex,</span> <span style=\"color: #d0d0d0\">secondIndex)</span> <span style=\"color: #d0d0d0\">{</span>\n    <span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">temp</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">array[firstIndex];</span>\n    <span style=\"color: #d0d0d0\">array[firstIndex]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">array[secondIndex];</span>\n    <span style=\"color: #d0d0d0\">array[secondIndex]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">temp;</span>\n<span style=\"color: #d0d0d0\">};</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">indexOfMinimum</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #6ab825; font-weight: bold\">function</span><span style=\"color: #d0d0d0\">(array,</span> <span style=\"color: #d0d0d0\">startIndex)</span> <span style=\"color: #d0d0d0\">{</span>\n    <span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">minValue</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">array[startIndex];</span>\n    <span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">minIndex</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">startIndex;</span>\n    <span style=\"color: #6ab825; font-weight: bold\">for</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">minIndex</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #d0d0d0\">&lt;</span> <span style=\"color: #d0d0d0\">array.length;</span> <span style=\"color: #d0d0d0\">i++)</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #6ab825; font-weight: bold\">if</span><span style=\"color: #d0d0d0\">(array[i]</span> <span style=\"color: #d0d0d0\">&lt;</span> <span style=\"color: #d0d0d0\">minValue)</span> <span style=\"color: #d0d0d0\">{</span>\n            <span style=\"color: #d0d0d0\">minIndex</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">i;</span>\n            <span style=\"color: #d0d0d0\">minValue</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">array[i];</span>\n        <span style=\"color: #d0d0d0\">}</span>\n    <span style=\"color: #d0d0d0\">}</span> \n    <span style=\"color: #6ab825; font-weight: bold\">return</span> <span style=\"color: #d0d0d0\">minIndex;</span>\n<span style=\"color: #d0d0d0\">};</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">selectionSort</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #6ab825; font-weight: bold\">function</span><span style=\"color: #d0d0d0\">(array)</span> <span style=\"color: #d0d0d0\">{</span>\n    <span style=\"color: #6ab825; font-weight: bold\">for</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #6ab825; font-weight: bold\">var</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #d0d0d0\">&lt;</span> <span style=\"color: #d0d0d0\">array.length;</span> <span style=\"color: #d0d0d0\">i++){</span>\n        <span style=\"color: #d0d0d0\">swap(array,</span> <span style=\"color: #d0d0d0\">i,</span> <span style=\"color: #d0d0d0\">indexOfMinimum(array,i));</span>\n    <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">};</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE1NjQ4NjQsICJpZCI6ICIxNTAxNTY0NTk0NjM4LTAwNCIsICJtZCI6ICIgICAgOjo6anNcbiAgICB2YXIgc3dhcCA9IGZ1bmN0aW9uKGFycmF5LCBmaXJzdEluZGV4LCBzZWNvbmRJbmRleCkge1xuICAgICAgICB2YXIgdGVtcCA9IGFycmF5W2ZpcnN0SW5kZXhdO1xuICAgICAgICBhcnJheVtmaXJzdEluZGV4XSA9IGFycmF5W3NlY29uZEluZGV4XTtcbiAgICAgICAgYXJyYXlbc2Vjb25kSW5kZXhdID0gdGVtcDtcbiAgICB9O1xuICBcbiAgICB2YXIgaW5kZXhPZk1pbmltdW0gPSBmdW5jdGlvbihhcnJheSwgc3RhcnRJbmRleCkge1xuICAgICAgICB2YXIgbWluVmFsdWUgPSBhcnJheVtzdGFydEluZGV4XTtcbiAgICAgICAgdmFyIG1pbkluZGV4ID0gc3RhcnRJbmRleDtcbiAgICAgICAgZm9yKHZhciBpID0gbWluSW5kZXggKyAxOyBpICZsdDsgYXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGlmKGFycmF5W2ldICZsdDsgbWluVmFsdWUpIHtcbiAgICAgICAgICAgICAgICBtaW5JbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgbWluVmFsdWUgPSBhcnJheVtpXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBcbiAgICAgICAgcmV0dXJuIG1pbkluZGV4O1xuICAgIH07IFxuICBcbiAgICB2YXIgc2VsZWN0aW9uU29ydCA9IGZ1bmN0aW9uKGFycmF5KSB7XG4gICAgICAgIGZvcih2YXIgaSA9IDA7IGkgJmx0OyBhcnJheS5sZW5ndGg7IGkrKyl7XG4gICAgICAgICAgICBzd2FwKGFycmF5LCBpLCBpbmRleE9mTWluaW11bShhcnJheSxpKSk7XG4gICAgICAgIH1cbiAgICB9O1xuIn0=---->", 
                        "reverse", 
                        "", 
                        "https://www.khanacademy.org/computing/computer-science/algorithms/sorting-algorithms/a/selection-sort-pseudocode"
                    ], 
                    "flags": 0, 
                    "guid": "SfTU)zTZN", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "selection sort complexity", 
                        "", 
                        "<div><span style=\"white-space: nowrap\"><span><span aria-hidden=\"false\"><span class=\"katex\"><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base textstyle uncramped\"><span class=\"mord mathrm\">Θ</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathit\">n</span><span class=\"msupsub\"><span class=\"vlist\"><span style=\"top:-0.363em;margin-right:0.05em;\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><span class=\"reset-textstyle scriptstyle uncramped mtight\"><span class=\"mord mathrm mtight\"><sup>2</sup></span></span></span><span class=\"baseline-fix\"><span class=\"fontsize-ensurer reset-size5 size5\"><span style=\"font-size:0em;\">​</span></span><sup>​</sup></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span><span style=\"border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-top-style: none; border-right-style: none; border-bottom-style: none; border-left-style: none; border-color: initial; clip: rect(0px 0px 0px 0px); height: 1px; margin-top: -1px; margin-right: -1px; margin-bottom: -1px; margin-left: -1px; overflow-x: hidden; overflow-y: hidden; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; position: absolute; width: 1px; \"></span></span><span></span></span> </div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://www.khanacademy.org/computing/computer-science/algorithms/sorting-algorithms/a/selection-sort-pseudocode"
                    ], 
                    "flags": 0, 
                    "guid": "ita(KU^D>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "insertion sort", 
                        "algorithm", 
                        "Sorting is typically done in-place, by iterating up the array, growing the sorted list behind it. At each array-position, it checks the value there against the largest value in the sorted list (which happens to be next to it, in the previous array-position checked). If larger, it leaves the element in place and moves to the next. If smaller, it finds the correct position within the sorted list, shifts all the larger values up to make a space, and inserts into that correct position.\n\nThe resulting array after k iterations has the property where the first <i>k</i> + 1 entries are sorted (\"+1\" because the first entry is skipped).", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "tLpuwYU+%R", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "insertion sort’s advantage over selection sort", 
                        "CS concept", 
                        "The former only scans as many elements as needed to determine the correct location of the <i>k</i>+1st element, while the latter must scan all remaining elements to find the absolute smallest element.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "x?<jYeB7uh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "selection sort’s advatage over insertion sort", 
                        "CS concept", 
                        "The latter will write to the array O(<i>n</i><sup>2</sup>) times, whereas the former will write only O(<span class=\"texhtml mvar\" style=\"font-style:italic\">n</span>)\n times. For this reason the former may be preferable in cases where \nwriting to memory is significantly more expensive than reading, such as \nwith EEPROM or flash memory.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "mY=JY(8QHo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "insertion sort complexity", 
                        "CS concept", 
                        "<ul style=\"margin-left: 20px; \"><li>Worst-case performance:&nbsp;О(<i>n<sup>2</sup></i>) comparisons, swaps</li><li>Best-case performance: &nbsp;O(<i>n</i>) comparisons, O(<i>1</i>) swaps</li><li>Average performance: &nbsp;О(<i>n<sup>2</sup></i>) comparisons, swaps</li><li>Worst-case space complexity: &nbsp;О(<i>n</i>) total, O(<i>1</i>) auxiliary</li></ul>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "bjnwST77k3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "when insertion sort beats quicksort", 
                        "CS concept", 
                        "typically when sorting less than between eight and twenty elements", 
                        "", 
                        "Some&nbsp;divide-and-conquer algorithms&nbsp;such as&nbsp;quicksort&nbsp;and&nbsp;mergesort&nbsp;sort by recursively dividing the list into smaller sublists which are then sorted. A useful optimization in practice for these algorithms is to use insertion sort for sorting small sublists, where insertion sort outperforms these more complex algorithms. The size of list for which insertion sort has the advantage varies by environment and implementation, but is typically between eight and twenty elements.", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "I6^:_i7^W)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "binary insertion sort", 
                        "CS concept", 
                        "Employs a <b>binary search</b> to determine the correct location to insert new elements, and therefore performs ⌈log<sub>2</sub>(<i>n</i>)⌉ comparisons in the worst case, which is O(<i>n</i> log <i>n</i>). The algorithm as a whole still has a running time of O(<i>n</i><sup>2</sup>) on average because of the series of swaps required for each insertion.<div><br /></div><div>The number of swaps can be reduced by calculating the position of \nmultiple elements before moving them. For example, if the target \nposition of two elements is calculated before they are moved into the \nright position, the number of swaps can be reduced by about 25% for \nrandom data. In the extreme case, this variant works similar to merge sort.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "os7e4yk==;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "binary merge sort", 
                        "CS concept", 
                        "Uses a <b>binary insertion sort</b> to sort groups of 32 elements, followed by a final sort using <b>merge sort</b>. It combines the speed of insertion sort on small data sets with the speed of merge sort on large data sets.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "F&V<|WSbc>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "library sort", 
                        "CS concept", 
                        "Leaves a small number of unused spaces (aka <b>gapped insertion sort</b>) spread throughout the array. The benefit is that insertions need only shift elements over until a gap is reached. The authors show that this sorting algorithm runs with high probability in O(<i>n</i>&nbsp;log&nbsp;<i>n</i>) time.<div><br /></div><div>If a&nbsp;skip list&nbsp;is used, the insertion time is brought down to O(log&nbsp;<i>n</i>), and swaps are not needed because the skip list is implemented on a linked list structure. The final running time for insertion would be O(<i>n</i>&nbsp;log&nbsp;<i>n</i>).</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "library sort", 
                        "https://en.wikipedia.org/wiki/Insertion_sort"
                    ], 
                    "flags": 0, 
                    "guid": "qq6)}@3CN%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "turtles", 
                        "CS concept", 
                        "small values near the end of the list", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "x%W77[V{Yv", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rabbits", 
                        "CS concept", 
                        "large values around the beginning of the list", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "s64Qt{`x)U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "radix sort", 
                        "CS concept", 
                        "Sorts numbers by processing individual digits. <i>n</i> numbers consisting of <i>k</i> digits each are sorted in O(<i>n</i> · <i>k</i>) time. Can process digits of each number either starting from the least significant digit (LSD) or starting from the most significant digit\n (MSD). The LSD algorithm first sorts the list by the least significant \ndigit while preserving their relative order using a stable sort. Then it\n sorts them by the next digit, and so on from the least significant to \nthe most significant, ending up with a sorted list. While the LSD sort requires the use of a stable sort, the MSD sort algorithm \ndoes not (unless stable sorting is desired). In-place MSD sort is \nnot stable. It is common for the counting sort algorithm to be used internally by this sort. A hybrid sorting approach, such as using insertion sort for small bins improves performance significantly.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "CbV3<Jg)%#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bucket sort", 
                        "CS concept", 
                        "Divide and conquer&nbsp;sorting algorithm that generalizes&nbsp;counting sort&nbsp;by partitioning an array into a finite number of buckets. Each bucket is then sorted individually, either using a different sorting algorithm, or by recursively applying this algorithm. Works best when the elements of the data set are evenly distributed across all buckets.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "k])`!OU/_0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "comb sort", 
                        "CS concept", 
                        "improves on bubble sort&nbsp;by&nbsp;eliminating&nbsp;turtles", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "DY4$Utf8U+", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bubble sort", 
                        "CS concept", 
                        "Starts at the beginning of the data set and compares the \nfirst two elements. If the first is greater than the second, it \nswaps them. It continues doing this for each pair of adjacent elements \nto the end of the data set. It then starts again with the first two \nelements, repeating until no swaps have occurred on the last pass.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "j/_;te4Vgl", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bubble sort complexity", 
                        "CS concept", 
                        "The algorithm’s average time and worst-case performance is O(<i>n</i><sup>2</sup>), so it is rarely used to sort large, unordered data sets.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "jWORIf5K`P", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "when bubble sort is appropriate", 
                        "CS concept", 
                        "When you need to sort a small number of items (where its \nasymptotic inefficiency is not a high penalty) or a list of any length that is nearly sorted (that is,\n the elements are not significantly out of place).", 
                        "", 
                        "For example, if any number of elements are out of place by only one position (e.g. 0123546789 and 1032547698), bubble sort's exchange will get them in order on the first pass, the second pass will find all elements in order, so the sort will take only 2<i>n</i>&nbsp;time.", 
                        "reverse", 
                        "", 
                        "https://en.wikipedia.org/wiki/Sorting_algorithm"
                    ], 
                    "flags": 0, 
                    "guid": "c<n|=r?9@y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "algorithms"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "binary search tree trick", 
                        "", 
                        "track max and min", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C^d3GH<Y9?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "64a91fca-7561-11e7-8488-a8667f30bd72", 
            "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "name": "HTTP Status Codes", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code Class 1xx", 
                        "HTTP/1.1 Status Code&nbsp;Class", 
                        "Informational", 
                        "", 
                        "<p>This class of status code indicates a provisional response,    consisting only of the Status-Line and optional headers, and is    terminated by an empty line. There are no required headers for this    class of status code. Since HTTP/1.0 did not define any 1xx status    codes, servers MUST NOT send a 1xx response to an HTTP/1.0 client    except under experimental conditions. </p> <p>    A client MUST be prepared to accept one or more 1xx status responses    prior to a regular response, even if the client does not expect a 100    (Continue) status message. Unexpected 1xx status responses MAY be    ignored by a user agent. </p> <p>    Proxies MUST forward 1xx responses, unless the connection between the    proxy and its client has been closed, or unless the proxy itself    requested the generation of the 1xx response. (For example, if a </p> <p>    proxy adds a \"Expect: 100-continue\" field when it forwards a request,    then it need not forward the corresponding 100 (Continue)    response(s).)</p>", 
                        "reverse", 
                        "1xx", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "O.P.iS5whK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 100", 
                        "HTTP/1.1 Status Code", 
                        "Continue", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>100 Continue</b></li><li><b>101 Switching Protocols</b></li><li>102 Processing (WebDAV)</li></ul></p><p>The client SHOULD continue with its request. This interim response is    used to inform the client that the initial part of the request has    been received and has not yet been rejected by the server. The client    SHOULD continue by sending the remainder of the request or, if the    request has already been completed, ignore this response. The server    MUST send a final response after the request has been completed. See    section <a rel=\"xref\" href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec8.html#sec8.2.3\">8.2.3</a> for detailed discussion of the use and handling of this    status code.</p>", 
                        "reverse", 
                        "100", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "ki~kl-x#ap", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 101", 
                        "HTTP/1.1 Status Code", 
                        "Switching Protocols", 
                        "", 
                        "<p></p><p></p><ul style=\"margin-left: 20px; \"><li><b>100 Continue</b></li><li><b>101 Switching Protocols</b></li><li>102 Processing (WebDAV)</li></ul><p></p><p>The server understands and is willing to comply with the client's    request, via the Upgrade message header field (section 14.42), for a    change in the application protocol being used on this connection. The    server will switch protocols to those defined by the response's    Upgrade header field immediately after the empty line which    terminates the 101 response. </p> <p>    The protocol SHOULD be switched only when it is advantageous to do    so. For example, switching to a newer version of HTTP is advantageous    over older versions, and switching to a real-time, synchronous    protocol might be advantageous when delivering resources that use    such features.&nbsp;</p>", 
                        "reverse", 
                        "101", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "qu^&2Zy^<~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code Class 2xx", 
                        "HTTP/1.1 Status Code&nbsp;Class", 
                        "Successful", 
                        "", 
                        "<p></p><p>This class of status code indicates that the client's request was    successfully received, understood, and accepted.&nbsp;</p>", 
                        "reverse", 
                        "2xx", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "qlrF#*p]J%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 200", 
                        "HTTP/1.1 Status Code", 
                        "OK", 
                        "", 
                        "<p></p><p></p><p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul></p><p>The request has succeeded. The information returned with the response    is dependent on the method used in the request, for example: </p> <p>    GET    an entity corresponding to the requested resource is sent in           the response; </p> <p>    HEAD   the entity-header fields corresponding to the requested           resource are sent in the response without any message-body; </p> <p>    POST   an entity describing or containing the result of the action; </p> <p>    TRACE  an entity containing the request message as received by the           end server.&nbsp;</p>", 
                        "reverse", 
                        "200", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "q3Q)qJb{?2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 201", 
                        "HTTP/1.1 Status Code", 
                        "Created", 
                        "", 
                        "<p></p><p></p><p></p><p></p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul><p></p><p>The request has been fulfilled and resulted in a new resource being    created. The newly created resource can be referenced by the URI(s)    returned in the entity of the response, with the most specific URI    for the resource given by a Location header field. The response    SHOULD include an entity containing a list of resource    characteristics and location(s) from which the user or user agent can    choose the one most appropriate. The entity format is specified by    the media type given in the Content-Type header field. The origin    server MUST create the resource before returning the 201 status code.    If the action cannot be carried out immediately, the server SHOULD    respond with 202 (Accepted) response instead. </p> <p>    A 201 response MAY contain an ETag response header field indicating    the current value of the entity tag for the requested variant just    created, see section <a rel=\"xref\" href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.19\">14.19</a>.&nbsp;</p>", 
                        "reverse", 
                        "201", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "w!+3TN(F1?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 202", 
                        "HTTP/1.1 Status Code", 
                        "Accepted", 
                        "HTTP/1.1 Status Description", 
                        "<p></p><p></p><p></p><p></p><p></p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul><p></p><p>The request has been accepted for processing, but the processing has    not been completed.  The request might or might not eventually be    acted upon, as it might be disallowed when processing actually takes    place. There is no facility for re-sending a status code from an    asynchronous operation such as this. </p> <p>    The 202 response is intentionally non-committal. Its purpose is to    allow a server to accept a request for some other process (perhaps a    batch-oriented process that is only run once per day) without    requiring that the user agent's connection to the server persist    until the process is completed. The entity returned with this    response SHOULD include an indication of the request's current status    and either a pointer to a status monitor or some estimate of when the    user can expect the request to be fulfilled.&nbsp;</p>", 
                        "reverse", 
                        "202", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "QhCj>-kCA>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 203", 
                        "HTTP/1.1 Status Code", 
                        "Non-Authoritative Information", 
                        "", 
                        "<p></p><p></p><p></p><p></p><p></p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul><p></p><p>The returned metainformation in the entity-header is not the    definitive set as available from the origin server, but is gathered    from a local or a third-party copy. The set presented MAY be a subset    or superset of the original version. For example, including local    annotation information about the resource might result in a superset    of the metainformation known by the origin server. Use of this    response code is not required and is only appropriate when the    response would otherwise be 200 (OK).</p>", 
                        "reverse", 
                        "203", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "MJmj0epSp$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 204", 
                        "HTTP/1.1 Status Code", 
                        "No Content", 
                        "", 
                        "<p></p><p></p><p></p><p></p><p></p><p></p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul><p></p><p>The server has fulfilled the request but does not need to return an    entity-body, and might want to return updated metainformation. The    response MAY include new or updated metainformation in the form of    entity-headers, which if present SHOULD be associated with the    requested variant. </p> <p>    If the client is a user agent, it SHOULD NOT change its document view    from that which caused the request to be sent. This response is    primarily intended to allow input for actions to take place without    causing a change to the user agent's active document view, although    any new or updated metainformation SHOULD be applied to the document    currently in the user agent's active view. </p> <p>    This response MUST NOT include a message-body, and thus is always    terminated by the first empty line after the header fields.&nbsp;</p>", 
                        "reverse", 
                        "204", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "m:0nV>2l=I", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 205", 
                        "HTTP/1.1 Status Code", 
                        "Reset Content", 
                        "", 
                        "<p></p><p></p><p></p><p></p><p></p><p></p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul><p></p><p>The server has fulfilled the request and the user agent SHOULD reset    the document view which caused the request to be sent. This response    is primarily intended to allow input for actions to take place via    user input, followed by a clearing of the form in which the input is    given so that the user can easily initiate another input action. The    response MUST NOT include an entity.</p>", 
                        "reverse", 
                        "205", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "ke%e_s9[[K", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 206", 
                        "HTTP/1.1 Status Code", 
                        "Partial Content", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>200 OK</b></li><li><b>201 Created</b></li><li><b>202 Accepted</b></li><li><b>203 Non-Authoritative Information</b></li><li><b>204 No Content</b></li><li><b>205 Reset Content</b></li><li><b>206 Partial Content</b></li><li>207 Multi-Status (WebDAV)</li><li>208 Already Reported (WebDAV)</li><li>226 IM Used</li></ul><p></p><p>The server has fulfilled the partial GET request for the resource. The request MUST have included a Range header field indicating the desired range, and MAY have included an If-Range header field to make the request conditional.</p><div><br /></div><div>The response MUST include the following header fields:</div><div><br /></div><div>- Either a Content-Range header field indicating the range included with this response, or a multipart/byteranges Content-Type including Content-Range fields for each part. If a Content-Length header field is present in the response, its value MUST match the actual number of OCTETs transmitted in the message-body.</div><div>- Date</div><div>- ETag and/or Content-Location, if the header would have been sent in a 200 response to the same request</div><div>- Expires, Cache-Control, and/or Vary, if the field-value might differ from that sent in any previous response for the same variant</div><div><br /></div><div>If this response is the result of an If-Range request that used a strong cache validator, the response SHOULD NOT include other entity-headers. If the response is the result of an If-Range request that used a weak validator, the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers. Otherwise, the response MUST include all of the entity-headers that would have been returned with a 200 (OK) response to the same request.</div><div><br /></div><div>A cache MUST NOT combine this response with other previously cached content if the ETag or Last-Modified headers do not match exactly.</div><div><br /></div><div>A cache that does not support the Range and Content-Range headers MUST NOT cache this response.</div><p></p>", 
                        "reverse", 
                        "206", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "f+A.t%Ht|x", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code Class 3xx", 
                        "HTTP/1.1 Status Code&nbsp;Class", 
                        "Redirection", 
                        "", 
                        "This class of status code indicates that further action needs to be taken by the user agent in order to fulfill the request. The action required MAY be carried out by the user agent without interaction with the user if and only if the method used in the second request is GET or HEAD. A client SHOULD detect infinite redirection loops, since such loops generate network traffic for each redirection.&nbsp;       <div><br /></div><div>Note: previous versions of this specification recommended a       maximum of five redirections. Content developers should be aware       that there might be clients that implement such a fixed       limitation.</div>", 
                        "reverse", 
                        "3xx", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "d>,kqtKAOZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 300", 
                        "HTTP/1.1 Status Code", 
                        "Multiple Choices", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul></p><p>The requested resource corresponds to any one of a set of    representations, each with its own specific location, and agent-    driven negotiation information (section 12) is being provided so that    the user (or user agent) can select a preferred representation and    redirect its request to that location. </p> <p>    Unless it was a HEAD request, the response SHOULD include an entity    containing a list of resource characteristics and location(s) from    which the user or user agent can choose the one most appropriate. The    entity format is specified by the media type given in the Content-    Type header field. Depending upon the format and the capabilities of </p> <p>    the user agent, selection of the most appropriate choice MAY be    performed automatically. However, this specification does not define    any standard for such automatic selection. </p> <p>    If the server has a preferred choice of representation, it SHOULD    include the specific URI for that representation in the Location    field; user agents MAY use the Location field value for automatic    redirection. This response is cacheable unless indicated otherwise.&nbsp;</p>", 
                        "reverse", 
                        "300", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "OT;yq/`$+T", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 301", 
                        "HTTP/1.1 Status Code", 
                        "Moved Permanently", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p>The requested resource has been assigned a new permanent URI and any future references to this resource SHOULD use one of the returned URIs. Clients with link editing capabilities ought to automatically re-link references to the Request-URI to one or more of the new references returned by the server, where possible. This response is cacheable unless indicated otherwise.<div><br /></div><div>The new permanent URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).</div><div><br /></div><div>If this status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.</div><div><br /></div><div>Note: When automatically redirecting a POST request after       receiving this status code, some existing HTTP/1.0 user agents       will erroneously change it into a GET request. </div>", 
                        "reverse", 
                        "301", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "c(TJ~V+=xO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 302", 
                        "HTTP/1.1 Status Code", 
                        "Found", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p>The requested resource resides temporarily under a different URI. Since the redirection might be altered on occasion, the client SHOULD continue to use the Request-URI for future requests. This response is only cacheable if indicated by a Cache-Control or Expires header field.<div><br /></div><div>The temporary URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s). &nbsp;</div><div><br /></div><div>If this status code is received in response to a request other than GET or HEAD, the user agent MUST NOT automatically redirect the request unless it can be confirmed by the user, since this might change the conditions under which the request was issued.&nbsp;       <div><br /></div><div>Note: RFC 1945 and RFC 2068 specify that the client is not allowed       to change the method on the redirected request.  However, most       existing user agent implementations treat this as if it were a 303       response, performing a GET on the Location field-value regardless       of the original request method. The status codes 303 and 307 have       been added for servers that wish to make unambiguously clear which       kind of reaction is expected of the client. </div></div>", 
                        "reverse", 
                        "302", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "wbv+ZFin>L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 303", 
                        "HTTP/1.1 Status Code", 
                        "See Other", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p>The response to the request can be found under a different URI and SHOULD be retrieved using a GET method on that resource. This method exists primarily to allow the output of a POST-activated script to redirect the user agent to a selected resource. The new URI is not a substitute reference for the originally requested resource. This response MUST NOT be cached, but the response to the second (redirected) request might be cacheable.<div><br /></div><div>The different URI SHOULD be given by the Location field in the response. Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext note with a hyperlink to the new URI(s).<div><br /></div><div>Note: Many pre-HTTP/1.1 user agents do not understand this       status. When interoperability with such clients is a concern, the       302 status code may be used instead, since most user agents react       to a 302 response as described here. </div></div>", 
                        "reverse", 
                        "303", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "Ini!lBP8%:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 304", 
                        "HTTP/1.1 Status Code", 
                        "Not Modified", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p>If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code. This response MUST NOT contain a message-body, and thus is always terminated by the first empty line after the header fields.<div><br /></div><div>The response MUST include the following header fields:       &nbsp;</div><div><br /></div><div>- Date, unless its omission is required by section 14.18.1</div><div><br /></div><div>If a clockless origin server obeys these rules, and proxies and clients add their own Date to any response received without one (as already specified by [RFC 2068], section 14.19), caches will operate correctly.</div><div><br /></div><div>- ETag and/or Content-Location, if the header would have been sent         in a 200 response to the same request</div><div>- Expires, Cache-Control, and/or Vary, if the field-value might         differ from that sent in any previous response for the same         variant</div><div><br /></div><div>If the conditional GET used a strong cache validator (see section 13.3.3), the response SHOULD NOT include other entity-headers. Otherwise (i.e., the conditional GET used a weak validator), the response MUST NOT include other entity-headers; this prevents inconsistencies between cached entity-bodies and updated headers.</div><div><br /></div><div>If this response indicates an entity not currently cached, then the cache MUST disregard the response and repeat the request without the conditional.</div><div><br /></div><div>If a cache uses receipt of this response to update a cache entry, the cache MUST update the entry to reflect any new field values given in the response. </div>", 
                        "reverse", 
                        "304", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "QE$>(5<j@M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 305", 
                        "HTTP/1.1 Status Code", 
                        "Use Proxy", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p>The requested resource MUST be accessed through the proxy given by the Location field. The Location field gives the URI of the proxy. The recipient is expected to repeat this single request via the proxy. These responses MUST only be generated by origin servers.<div><br /></div><div>Note: RFC 2068 was not clear that this response was intended to redirect a       single request, and to be generated by origin servers only.  Not       observing these limitations has significant security consequences. </div>", 
                        "reverse", 
                        "305", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "xX&Wf.jd|Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 306", 
                        "HTTP/1.1 Status Code", 
                        "(Unused)", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p>This status code was used in a previous version of the    specification, is no longer used, and the code is reserved.", 
                        "reverse", 
                        "306", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "P=o>n=`R,!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 307", 
                        "HTTP/1.1 Status Code", 
                        "Temporary Redirect", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>300 Multiple Choices</b></li><li><b>301 Moved Permanently</b></li><li><b>302 Found</b></li><li><b>303 See Other</b></li><li><b>304 Not Modified</b></li><li><b>305 Use Proxy</b></li><li><b>306 (Unused)</b></li><li><b>307 Temporary Redirect</b></li><li>308 Permanent Redirect (experimental)</li></ul><p></p><p>The requested resource resides temporarily under a different URI.    Since the redirection MAY be altered on occasion, the client SHOULD    continue to use the Request-URI for future requests.  This response    is only cacheable if indicated by a Cache-Control or Expires header    field. </p> <p>    The temporary URI SHOULD be given by the Location field in the    response. Unless the request method was HEAD, the entity of the    response SHOULD contain a short hypertext note with a hyperlink to    the new URI(s) , since many pre-HTTP/1.1 user agents do not    understand this status. Therefore, the note SHOULD contain the    information necessary for a user to repeat the original request on    the new URI. </p> <p>    If this status code is received in response to a request other    than GET or HEAD, the user agent MUST NOT automatically redirect the    request unless it can be confirmed by the user, since this might    change the conditions under which the request was issued.&nbsp;</p>", 
                        "reverse", 
                        "307", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "r7&TN8%YuY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code Class 4xx", 
                        "HTTP/1.1 Status Code&nbsp;Class", 
                        "Client Error", 
                        "", 
                        "<p></p><p>This class of status code is intended for cases in which the    client seems to have erred. Except when responding to a HEAD request,    the server SHOULD include an entity containing an explanation of the    error situation, and whether it is a temporary or permanent    condition. These status codes are applicable to any request method.    User agents SHOULD display any included entity to the user. </p> <p>    If the client is sending data, a server implementation using TCP    SHOULD be careful to ensure that the client acknowledges receipt of    the packet(s) containing the response, before the server closes the    input connection. If the client continues sending data to the server    after the close, the server's TCP stack will send a reset packet to    the client, which may erase the client's unacknowledged input buffers    before they can be read and interpreted by the HTTP application.&nbsp;</p>", 
                        "reverse", 
                        "4xx", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "k%:~~hlz%2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 400", 
                        "HTTP/1.1 Status Code", 
                        "Bad Request", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul><p></p><p>The request could not be understood by the server due to malformed    syntax. The client SHOULD NOT repeat the request without    modifications.&nbsp;</p>", 
                        "reverse", 
                        "400", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "eu2^m}-7Bs", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 401", 
                        "HTTP/1.1 Status Code", 
                        "Unauthorized", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The request requires user authentication. The response MUST include a    WWW-Authenticate header field containing a challenge    applicable to the requested resource. The client MAY repeat the    request with a suitable Authorization header field. If    the request already included Authorization credentials, then this response indicates that authorization has been refused for those    credentials. If this response contains the same challenge as the    prior response, and the user agent has already attempted    authentication at least once, then the user SHOULD be presented the    entity that was given in the response, since that entity might    include relevant diagnostic information. HTTP access authentication    is explained in \"HTTP Authentication: Basic and Digest Access    Authentication\".</p>", 
                        "reverse", 
                        "401", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "oR%4Nj=1>2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 402", 
                        "HTTP/1.1 Status Code", 
                        "Payment Required", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>This code is reserved for future use. </p>", 
                        "reverse", 
                        "402", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "Jh^)pBp{z/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 403", 
                        "HTTP/1.1 Status Code", 
                        "Forbidden", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The server understood the request, but is refusing to fulfill it.    Authorization will not help and the request SHOULD NOT be repeated.    If the request method was not HEAD and the server wishes to make    public why the request has not been fulfilled, it SHOULD describe the    reason for the refusal in the entity.  If the server does not wish to    make this information available to the client, the status code 404    (Not Found) can be used instead.  </p>", 
                        "reverse", 
                        "403", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "p;86n{bngk", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 404", 
                        "HTTP/1.1 Status Code", 
                        "Not Found", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The server has not found anything matching the Request-URI. No    indication is given of whether the condition is temporary or    permanent. The 410 (Gone) status code SHOULD be used if the server    knows, through some internally configurable mechanism, that an old    resource is permanently unavailable and has no forwarding address.    This status code is commonly used when the server does not wish to    reveal exactly why the request has been refused, or when no other    response is applicable.  </p>", 
                        "reverse", 
                        "404", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "P5`FT?<g2>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 405", 
                        "HTTP/1.1 Status Code", 
                        "Method Not Allowed", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The method specified in the Request-Line is not allowed for the    resource identified by the Request-URI. The response MUST include an    Allow header containing a list of valid methods for the requested    resource.   </p>", 
                        "reverse", 
                        "405", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "gC^6s={[eJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 406", 
                        "HTTP/1.1 Status Code", 
                        "Not Acceptable", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p>The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request.<div><br /></div><div>Unless it was a HEAD request, the response SHOULD include an entity containing a list of available entity characteristics and location(s) from which the user or user agent can choose the one most appropriate. The entity format is specified by the media type given in the Content-Type header field. Depending upon the format and the capabilities of the user agent, selection of the most appropriate choice MAY be performed automatically. However, this specification does not define any standard for such automatic selection.</div><div><br /></div><div>Note: HTTP/1.1 servers are allowed to return responses which are       not acceptable according to the accept headers sent in the       request. In some cases, this may even be preferable to sending this response. User agents are encouraged to inspect the headers of       an incoming response to determine if it is acceptable.</div><div><br /></div><div>If the response could be unacceptable, a user agent SHOULD temporarily stop receipt of more data and query the user for a decision on further actions. </div>", 
                        "reverse", 
                        "406", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "xvL$fAs8)H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 407", 
                        "HTTP/1.1 Status Code", 
                        "Proxy Authentication Required", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p>This code is similar to 401 (Unauthorized), but indicates that the client must first authenticate itself with the proxy. The proxy MUST return a Proxy-Authenticate header field containing a challenge applicable to the proxy for the requested resource. The client MAY repeat the request with a suitable Proxy-Authorization header field. HTTP access authentication is explained in \"HTTP Authentication: Basic and Digest Access Authentication\".", 
                        "reverse", 
                        "407", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "Lxv}?30`<l", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 408", 
                        "HTTP/1.1 Status Code", 
                        "Request Timeout", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p>The client did not produce a request within the time that the server    was prepared to wait. The client MAY repeat the request without    modifications at any later time.", 
                        "reverse", 
                        "408", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "t;zWXG=r<h", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 409", 
                        "HTTP/1.1 Status Code", 
                        "Conflict", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p>The request could not be completed due to a conflict with the current    state of the resource. This code is only allowed in situations where    it is expected that the user might be able to resolve the conflict    and resubmit the request. The response body SHOULD include enough </p> <p>    information for the user to recognize the source of the conflict.    Ideally, the response entity would include enough information for the    user or user agent to fix the problem; however, that might not be    possible and is not required. </p> <p>    Conflicts are most likely to occur in response to a PUT request. For    example, if versioning were being used and the entity being PUT    included changes to a resource which conflict with those made by an    earlier (third-party) request, the server might use this response    to indicate that it can't complete the request. In this case, the    response entity would likely contain a list of the differences    between the two versions in a format defined by the response    Content-Type.&nbsp;</p>", 
                        "reverse", 
                        "409", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "GA1fF1N]rB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 410", 
                        "HTTP/1.1 Status Code", 
                        "Gone", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The requested resource is no longer available at the server and no    forwarding address is known. This condition is expected to be    considered permanent. Clients with link editing capabilities SHOULD    delete references to the Request-URI after user approval. If the    server does not know, or has no facility to determine, whether or not    the condition is permanent, the status code 404 (Not Found) SHOULD be    used instead. This response is cacheable unless indicated otherwise. </p> <p>    This response is primarily intended to assist the task of web    maintenance by notifying the recipient that the resource is    intentionally unavailable and that the server owners desire that    remote links to that resource be removed. Such an event is common for    limited-time, promotional services and for resources belonging to    individuals no longer working at the server's site. It is not    necessary to mark all permanently unavailable resources as \"gone\" or    to keep the mark for any length of time -- that is left to the    discretion of the server owner.&nbsp;</p>", 
                        "reverse", 
                        "410", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "r?09Tzw#2W", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 411", 
                        "HTTP/1.1 Status Code", 
                        "Length Required", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The server refuses to accept the request without a defined Content-    Length. The client MAY repeat the request if it adds a valid    Content-Length header field containing the length of the message-body    in the request message.</p>", 
                        "reverse", 
                        "411", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "NvP&N_1)[k", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 412", 
                        "HTTP/1.1 Status Code", 
                        "Precondition Failed", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p>The precondition given in one or more of the request-header fields    evaluated to false when it was tested on the server. This response    code allows the client to place preconditions on the current resource    metainformation (header field data) and thus prevent the requested    method from being applied to a resource other than the one intended. </p>", 
                        "reverse", 
                        "412", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "e@efm.VoT?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 413", 
                        "HTTP/1.1 Status Code", 
                        "Request Entity Too Large", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p></p><p>The server is refusing to process a request because the request    entity is larger than the server is willing or able to process. The    server MAY close the connection to prevent the client from continuing    the request. </p> <p>    If the condition is temporary, the server SHOULD include a Retry-After header field to indicate that it is temporary and after what    time the client MAY try again.&nbsp;</p>", 
                        "reverse", 
                        "413", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "C3k5xRj3G7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 414", 
                        "HTTP/1.1 Status Code", 
                        "Request-URI Too Long", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p></p><p>The server is refusing to service the request because the Request-URI    is longer than the server is willing to interpret. This rare    condition is only likely to occur when a client has improperly    converted a POST request to a GET request with long query    information, when the client has descended into a URI \"black hole\" of    redirection (e.g., a redirected URI prefix that points to a suffix of    itself), or when the server is under attack by a client attempting to    exploit security holes present in some servers using fixed-length    buffers for reading or manipulating the Request-URI.&nbsp;</p>", 
                        "reverse", 
                        "414", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "OF^K7+Q9sY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 415", 
                        "HTTP/1.1 Status Code", 
                        "Unsupported Media Type", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p></p><p>The server is refusing to service the request because the entity of    the request is in a format not supported by the requested resource    for the requested method.</p>", 
                        "reverse", 
                        "415", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "OmK]Tjoq9;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 416", 
                        "HTTP/1.1 Status Code", 
                        "Requested Range Not Satisfiable", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p></p><p></p><p>A server SHOULD return a response with this status code if a request    included a Range request-header field, and none of    the range-specifier values in this field overlap the current extent    of the selected resource, and the request did not include an If-Range    request-header field. (For byte-ranges, this means that the first-    byte-pos of all of the byte-range-spec values were greater than the    current length of the selected resource.) </p> <p>    When this status code is returned for a byte-range request, the    response SHOULD include a Content-Range entity-header field    specifying the current length of the selected resource. This response MUST NOT use the multipart/byteranges content-    type.&nbsp;</p>", 
                        "reverse", 
                        "416", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "NP!jcWS>0_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 417", 
                        "HTTP/1.1 Status Code", 
                        "Expectation Failed", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>400 Bad Request</b></li><li><b>401 Unauthorized</b></li><li><b>402 Payment Required</b></li><li><b>403 Forbidden</b></li><li><b>404 Not Found</b></li><li><b>405 Method Not Allowed</b></li><li><b>406 Not Acceptable</b></li><li><b>407 Proxy Authentication Required</b></li><li><b>408 Request Timeout</b></li><li><b>409 Conflict</b></li><li><b>410 Gone</b></li><li><b>411 Length Required</b></li><li><b>412 Precondition Failed</b></li><li><b>413 Request Entity Too Large</b></li><li><b>414 Request-URI Too Long</b></li><li><b>415 Unsupported Media Type</b></li><li><b>416 Requested Range Not Satisfiable</b></li><li><b>417 Expectation Failed</b></li><li>418 I'm a teapot (RFC 2324)</li><li>420 Enhance Your Calm (Twitter)</li><li>422 Unprocessable Entity (WebDAV)</li><li>423 Locked (WebDAV)</li><li>424 Failed Dependency (WebDAV)</li><li>425 Reserved for WebDAV</li><li>426 Upgrade Required</li><li>428 Precondition Required</li><li>429 Too Many Requests</li><li>431 Request Header Fields Too Large</li><li>444 No Response (Nginx)</li><li>449 Retry With (Microsoft)</li><li>450 Blocked by Windows Parental Controls (Microsoft)</li><li>451 Unavailable For Legal Reasons</li><li>499 Client Closed Request (Nginx)</li></ul></p><p></p><p></p><p></p><p>The expectation given in an Expect request-header field could not be met by this server, or, if the server is a proxy,    the server has unambiguous evidence that the request could not be met    by the next-hop server.</p>", 
                        "reverse", 
                        "417", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "Now8HCXAWG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code Class 5xx", 
                        "HTTP/1.1 Status Code&nbsp;Class", 
                        "Server Error", 
                        "", 
                        "<p></p><p></p><p></p><p>These response status codes indicate cases in    which the server is aware that it has erred or is incapable of    performing the request. Except when responding to a HEAD request, the    server SHOULD include an entity containing an explanation of the    error situation, and whether it is a temporary or permanent    condition. User agents SHOULD display any included entity to the    user. These response codes are applicable to any request method.</p>", 
                        "reverse", 
                        "5xx", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "e6@T%z^`34", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 500", 
                        "HTTP/1.1 Status Code", 
                        "Internal Server Error", 
                        "", 
                        "<p></p><ul style=\"margin-left: 20px; \"><li><b>500 Internal Server Error</b></li><li><b>501 Not Implemented</b></li><li><b>502 Bad Gateway</b></li><li><b>503 Service Unavailable</b></li><li><b>504 Gateway Timeout</b></li><li><b>505 HTTP Version Not Supported</b></li><li>506 Variant Also Negotiates (Experimental)</li><li>507 Insufficient Storage (WebDAV)</li><li>508 Loop Detected (WebDAV)</li><li>509 Bandwidth Limit Exceeded (Apache)</li><li>510 Not Extended</li><li>511 Network Authentication Required</li><li>598 Network read timeout error</li><li>599 Network connect timeout error</li></ul><p></p><p>The server encountered an unexpected condition which prevented it    from fulfilling the request.</p>", 
                        "reverse", 
                        "500", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "wMVBzsUM{K", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 501", 
                        "HTTP/1.1 Status Code", 
                        "Not Implemented", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>500 Internal Server Error</b></li><li><b>501 Not Implemented</b></li><li><b>502 Bad Gateway</b></li><li><b>503 Service Unavailable</b></li><li><b>504 Gateway Timeout</b></li><li><b>505 HTTP Version Not Supported</b></li><li>506 Variant Also Negotiates (Experimental)</li><li>507 Insufficient Storage (WebDAV)</li><li>508 Loop Detected (WebDAV)</li><li>509 Bandwidth Limit Exceeded (Apache)</li><li>510 Not Extended</li><li>511 Network Authentication Required</li><li>598 Network read timeout error</li><li>599 Network connect timeout error</li></ul></p><p></p><p></p><p></p><p>The server does not support the functionality required to fulfill the    request. This is the appropriate response when the server does not    recognize the request method and is not capable of supporting it for    any resource.</p>", 
                        "reverse", 
                        "501", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "uub&jtBseS", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 502", 
                        "HTTP/1.1 Status Code", 
                        "Bad Gateway", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>500 Internal Server Error</b></li><li><b>501 Not Implemented</b></li><li><b>502 Bad Gateway</b></li><li><b>503 Service Unavailable</b></li><li><b>504 Gateway Timeout</b></li><li><b>505 HTTP Version Not Supported</b></li><li>506 Variant Also Negotiates (Experimental)</li><li>507 Insufficient Storage (WebDAV)</li><li>508 Loop Detected (WebDAV)</li><li>509 Bandwidth Limit Exceeded (Apache)</li><li>510 Not Extended</li><li>511 Network Authentication Required</li><li>598 Network read timeout error</li><li>599 Network connect timeout error</li></ul></p><p></p><p></p><p></p><p>The server, while acting as a gateway or proxy, received an invalid    response from the upstream server it accessed in attempting to    fulfill the request.</p>", 
                        "reverse", 
                        "502", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "tNdx6hI$Qi", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 503", 
                        "HTTP/1.1 Status Code", 
                        "Service Unavailable", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>500 Internal Server Error</b></li><li><b>501 Not Implemented</b></li><li><b>502 Bad Gateway</b></li><li><b>503 Service Unavailable</b></li><li><b>504 Gateway Timeout</b></li><li><b>505 HTTP Version Not Supported</b></li><li>506 Variant Also Negotiates (Experimental)</li><li>507 Insufficient Storage (WebDAV)</li><li>508 Loop Detected (WebDAV)</li><li>509 Bandwidth Limit Exceeded (Apache)</li><li>510 Not Extended</li><li>511 Network Authentication Required</li><li>598 Network read timeout error</li><li>599 Network connect timeout error</li></ul></p>The server is currently unable to handle the request due to a temporary overloading or maintenance of the server. The implication is that this is a temporary condition which will be alleviated after some delay. If known, the length of the delay MAY be indicated in a Retry-After header. If no Retry-After is given, the client SHOULD handle the response as it would for a 500 response.<div><br /></div><div>Note: The existence of this status code does not imply that a       server must use it when becoming overloaded. Some servers may wish       to simply refuse the connection. </div>", 
                        "reverse", 
                        "503", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "yoJTh{!k5i", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 504", 
                        "HTTP/1.1 Status Code", 
                        "Gateway Timeout", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>500 Internal Server Error</b></li><li><b>501 Not Implemented</b></li><li><b>502 Bad Gateway</b></li><li><b>503 Service Unavailable</b></li><li><b>504 Gateway Timeout</b></li><li><b>505 HTTP Version Not Supported</b></li><li>506 Variant Also Negotiates (Experimental)</li><li>507 Insufficient Storage (WebDAV)</li><li>508 Loop Detected (WebDAV)</li><li>509 Bandwidth Limit Exceeded (Apache)</li><li>510 Not Extended</li><li>511 Network Authentication Required</li><li>598 Network read timeout error</li><li>599 Network connect timeout error</li></ul></p>The server, while acting as a gateway or proxy, did not receive a timely response from the upstream server specified by the URI (e.g. HTTP, FTP, LDAP) or some other auxiliary server (e.g. DNS) it needed to access in attempting to complete the request.       &nbsp;<div><br /></div><div>Note: Note to implementors: some deployed proxies are known to       return 400 or 500 when DNS lookups time out. </div>", 
                        "reverse", 
                        "504", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "E.nSDrv(Fn", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTTP/1.1 Status Code 505", 
                        "HTTP/1.1 Status Code", 
                        "HTTP Version Not Supported", 
                        "", 
                        "<p><ul style=\"margin-left: 20px; \"><li><b>500 Internal Server Error</b></li><li><b>501 Not Implemented</b></li><li><b>502 Bad Gateway</b></li><li><b>503 Service Unavailable</b></li><li><b>504 Gateway Timeout</b></li><li><b>505 HTTP Version Not Supported</b></li><li>506 Variant Also Negotiates (Experimental)</li><li>507 Insufficient Storage (WebDAV)</li><li>508 Loop Detected (WebDAV)</li><li>509 Bandwidth Limit Exceeded (Apache)</li><li>510 Not Extended</li><li>511 Network Authentication Required</li><li>598 Network read timeout error</li><li>599 Network connect timeout error</li></ul></p>The server does not support, or refuses to support, the HTTP protocol    version that was used in the request message. The server is    indicating that it is unable or unwilling to complete the request    using the same major version as the client,&nbsp;other than with this error message. The response SHOULD contain    an entity describing why that version is not supported and what other    protocols are supported by that server.", 
                        "reverse", 
                        "505", 
                        "https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"
                    ], 
                    "flags": 0, 
                    "guid": "zBS9}{?UIE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "http"
                    ]
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "542bb6d1-35b7-11e7-88e0-2c56dc924912", 
            "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "mid": "1475043240989", 
            "name": "Python", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python byte code cache location", 
                        "", 
                        "<p><code>.pyc</code> files alongside <code>.py</code> files, or in 3.2 and later, in subdirectory named <code>__pycache__</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDYxMDksICJpZCI6ICIxNDg4Njg1OTc3NTkzLTAwMSIsICJtZCI6ICJgLnB5Y2AgZmlsZXMgYWxvbmdzaWRlIGAucHlgIGZpbGVzLCBvciBpbiAzLjIgYW5kIGxhdGVyLCBpbiBzdWJkaXJlY3RvcnkgbmFtZWQgYF9fcHljYWNoZV9fYFxuIn0=---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pP$JC^/bt.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can Python execute without <code>.py</code> file?", 
                        "", 
                        "Yes, if the <code>.pyc</code> files are present", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uQk.c.n>RE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python byte code is saved for which files?", 
                        "", 
                        "Anything imported, but not the top level file that is only run as a script.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N9zv~cK)!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python interactive interpreter automatically", 
                        "", 
                        "prints", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p#6owraIzU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Force Python to run a file again", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">from</span> <span style=\"color: #447fcf; text-decoration: underline\">imp</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #24909d\">reload</span>\n<span style=\"color: #999999; font-style: italic\"># not required to import in 2.X</span>\n<span style=\"color: #24909d\">reload</span><span style=\"color: #d0d0d0\">(_script_)</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">imp</span>\n<span style=\"color: #999999; font-style: italic\"># not required to import in 2.X</span>\n<span style=\"color: #d0d0d0\">imp.reload(_script_)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDYzMjMsICJpZCI6ICIxNDg4Njg3Mjc3NjEwLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgZnJvbSBpbXAgaW1wb3J0IHJlbG9hZFxuICAgICMgbm90IHJlcXVpcmVkIHRvIGltcG9ydCBpbiAyLlhcbiAgICByZWxvYWQoX3NjcmlwdF8pXG4gIFxuICAgIGltcG9ydCBpbXBcbiAgICAjIG5vdCByZXF1aXJlZCB0byBpbXBvcnQgaW4gMi5YXG4gICAgaW1wLnJlbG9hZChfc2NyaXB0XylcbiAgXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ls}jZoqY|N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Reading file with <b>exec</b> in Python", 
                        "", 
                        "<p>2.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">execfile</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'module.py'</span><span style=\"color: #d0d0d0\">)</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">exec</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'module.py'</span><span style=\"color: #d0d0d0\">))</span> <span style=\"color: #999999; font-style: italic\"># automatically reads</span>\n</pre></div>\n<p>3.X and 2.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">exec</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'module.py'</span><span style=\"color: #d0d0d0\">).read())</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDYzNTAsICJpZCI6ICIxNDg4Njg4NjIwNzQ0LTAwMSIsICJtZCI6ICIyLlg6XG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGV4ZWNmaWxlKCZhcG9zO21vZHVsZS5weSZhcG9zOylcbiAgXG4gICAgZXhlYyhvcGVuKCZhcG9zO21vZHVsZS5weSZhcG9zOykpICMgYXV0b21hdGljYWxseSByZWFkc1xuICBcbjMuWCBhbmQgMi5YOlxuICBcbiAgICA6OjpweXRob25cbiAgICBleGVjKG9wZW4oJmFwb3M7bW9kdWxlLnB5JmFwb3M7KS5yZWFkKCkpXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jHLr8)I|BP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>$ python -i m.py</code>", 
                        "", 
                        "Enter interactive interpreter mode after running script whether it ends successfully or not, allowing accessing variables and doing postmortem", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MM:+Y%T&<$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Number</b> examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #3677a9\">1234</span>\n<span style=\"color: #3677a9\">3.1415</span>\n<span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">+</span><span style=\"color: #3677a9\">4j</span>\n<span style=\"color: #3677a9\">0b111</span>\n<span style=\"color: #d0d0d0\">Decimal()</span>\n<span style=\"color: #d0d0d0\">Fraction()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY0MDcsICJpZCI6ICIxNDg4Njg5NzExNTIyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgMTIzNFxuICAgIDMuMTQxNVxuICAgIDMrNGpcbiAgICAwYjExMVxuICAgIERlY2ltYWwoKVxuICAgIEZyYWN0aW9uKClcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bwhY0w+nkh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>String</b> examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">'spam'</span>\n<span style=\"color: #ed9d13\">\"Bob's\"</span>\n<span style=\"color: #d0d0d0\">b</span><span style=\"color: #ed9d13\">'a\\x01c'</span>\n<span style=\"color: #ed9d13\">u'sp\\xc4m'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY0NDcsICJpZCI6ICIxNDg4NjkxMzM5NjQyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmFwb3M7c3BhbSZhcG9zO1xuICAgICZxdW90O0JvYiZhcG9zO3MmcXVvdDtcbiAgICBiJmFwb3M7YVxceDAxYyZhcG9zO1xuICAgIHUmYXBvcztzcFxceGM0bSZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J-ceq.f8TM", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>List</b> examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'three'</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #3677a9\">4.5</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">))</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2NjgsICJpZCI6ICIxNDg4NjkxMzkxNDkxLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgWzEsIFsyLCAmYXBvczt0aHJlZSZhcG9zO10sIDQuNV1cbiAgICBsaXN0KHJhbmdlKDEwKSlcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x}=%t0`:9,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Dictionary</b> examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'food'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'taste'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'yum'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #24909d\">dict</span><span style=\"color: #d0d0d0\">(hours=</span><span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2NzcsICJpZCI6ICIxNDg4NjkxNDI5MTAzLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgeyZhcG9zO2Zvb2QmYXBvczs6ICZhcG9zO3NwYW0mYXBvczssICZhcG9zO3Rhc3RlJmFwb3M7OiAmYXBvczt5dW0mYXBvczt9XG4gICAgZGljdChob3Vycz0xMClcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m!EMC.HUOh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Tuple</b> examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'U'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #24909d\">tuple</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">namedtuple</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2ODksICJpZCI6ICIxNDg4NjkxNDY2MDAyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgKDEsICZhcG9zO3NwYW0mYXBvczssIDQsICZhcG9zO1UmYXBvczspXG4gICAgdHVwbGUoJmFwb3M7c3BhbSZhcG9zOylcbiAgICBuYW1lZHR1cGxlXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dl[7B{yE<&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>File </b>examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'eggs.txt'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">r'C:\\ham.bin'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'wb'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2OTgsICJpZCI6ICIxNDg4NjkxNDk4NjA4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgb3BlbigmYXBvcztlZ2dzLnR4dCZhcG9zOylcbiAgICBvcGVuKHImYXBvcztDOlxcaGFtLmJpbiZhcG9zOywgJmFwb3M7d2ImYXBvczspXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "or^Q4U(>,;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Set</b> examples", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">set</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'abc'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'c'</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3MDUsICJpZCI6ICIxNDg4NjkxNTQ5NzM2LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgc2V0KCZhcG9zO2FiYyZhcG9zOylcbiAgICB7JmFwb3M7YSZhcG9zOywgJmFwb3M7YiZhcG9zOywgJmFwb3M7YyZhcG9zO31cbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rS1G?P$R?:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python other core types", 
                        "", 
                        "<code>Boolean</code>s, <code>type</code>s, <code>None</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K+JxW4f)XR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python program unit types", 
                        "", 
                        "Functions, modules, classes", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ak_5DHRpnP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python implementation-related types", 
                        "", 
                        "Compiled code, stack tracebacks", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g9r4~i+nEU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python has type declarations?", 
                        "", 
                        "no", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ck?B4yY~Aj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python exponentiation operator", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #3677a9\">2</span> <span style=\"color: #d0d0d0\">**</span> <span style=\"color: #3677a9\">100</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NDYsICJpZCI6ICIxNDg4NjkxNzU3MDM0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgMiAqKiAxMDBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cW|si*]Wvh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python slice of all but last", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">S[:-</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NjUsICJpZCI6ICIxNDg4NjkyMDU2MDI5LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgU1s6LTFdXG4ifQ==---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d^ateNJA5a", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python repetition", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">*</span> <span style=\"color: #3677a9\">8</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NzIsICJpZCI6ICIxNDg4NjkyMzk0MTQzLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgUyAqIDhcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OBv@tllTLS", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python string concatentation", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #ed9d13\">'ing'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NzcsICJpZCI6ICIxNDg4NjkyNTM5NzYyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgUyArICZhcG9zO2luZyZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BU&93~0EDK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Are strings mutable?", 
                        "", 
                        "no", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qDC2mrXBh]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python core mutable types", 
                        "", 
                        "lists, dictionaries, sets, <code>bytearray</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "krR_0G3e*p", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python core immutable types", 
                        "", 
                        "numbers, strings, tuples<div>also,&nbsp;<code>frozenset</code> is immutable variant of <code>set</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i*-{Yo*E|_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python type that allows in place text changes", 
                        "", 
                        "<p>2.6+, 3.0+, only supports 8 bit wide characters:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">bytearray</span><span style=\"color: #d0d0d0\">(b</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B.extend(b</span><span style=\"color: #ed9d13\">'eggs'</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #999999; font-style: italic\"># 'b' needed in 3.X, not 2.X</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #999999; font-style: italic\"># B[i] = ord(x) works here too</span>\n<span style=\"color: #24909d\">bytearray</span><span style=\"color: #d0d0d0\">(b</span><span style=\"color: #ed9d13\">'spameggs'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B.decode()</span> <span style=\"color: #999999; font-style: italic\"># translate to normal string</span>\n<span style=\"color: #ed9d13\">'spameggs'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4NDgsICJpZCI6ICIxNDg4NjkyNzQ3OTg5LTAwMSIsICJtZCI6ICIyLjYrLCAzLjArLCBvbmx5IHN1cHBvcnRzIDggYml0IHdpZGUgY2hhcmFjdGVyczpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEIgPSBieXRlYXJyYXkoYiZhcG9zO3NwYW0mYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IEIuZXh0ZW5kKGImYXBvcztlZ2dzJmFwb3M7KSAjICZhcG9zO2ImYXBvczsgbmVlZGVkIGluIDMuWCwgbm90IDIuWFxuICAgICZndDsmZ3Q7Jmd0OyBCICMgQltpXSA9IG9yZCh4KSB3b3JrcyBoZXJlIHRvb1xuICAgIGJ5dGVhcnJheShiJmFwb3M7c3BhbWVnZ3MmYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IEIuZGVjb2RlKCkgIyB0cmFuc2xhdGUgdG8gbm9ybWFsIHN0cmluZ1xuICAgICZhcG9zO3NwYW1lZ2dzJmFwb3M7XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>YZJl#;fm", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python basic substring search operation", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'Spam'</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">S.find(</span><span style=\"color: #ed9d13\">'pa'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #3677a9\">1</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU2OTc1NDgsICJpZCI6ICIxNDg4NjkzMDA0ODg0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IFMgPSAmYXBvcztTcGFtJmFwb3M7XG4gICAgJmd0OyZndDsmZ3Q7IFMuZmluZCgmYXBvcztwYSZhcG9zOylcbiAgICAxXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "RbEo@jDd_/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python string formatting expression", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">'%s, eggs, and %s'</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'SPAM!'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #999999; font-style: italic\"># works in 2.X and 3.X</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4NzQsICJpZCI6ICIxNDg4NjkzMDk2MTk0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmFwb3M7JXMsIGVnZ3MsIGFuZCAlcyZhcG9zOyAlICgmYXBvcztzcGFtJmFwb3M7LCAmYXBvcztTUEFNISZhcG9zOylcbiAgICAjIHdvcmtzIGluIDIuWCBhbmQgMy5YXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g/?d7i(tiz", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python string formatting method", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999;font-style: italic\"># works in 2.6+ and 3.0+</span>\n<span style=\"color: #ed9d13\">'{0}, eggs, and {1}'</span><span style=\"color: #d0d0d0\">.format(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'SPAM!'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>Numbers optional:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999; font-style: italic\"># works in 2.7+ and 3.1+</span>\n<span style=\"color: #ed9d13\">'{}, eggs, and {}'</span><span style=\"color: #d0d0d0\">.format(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'SPAM!'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4ODksICJpZCI6ICIxNDg4NjkzMjM1MzY4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgIyB3b3JrcyBpbiAyLjYrIGFuZCAzLjArXG4gICAgJmFwb3M7ezB9LCBlZ2dzLCBhbmQgezF9JmFwb3M7LmZvcm1hdCgmYXBvcztzcGFtJmFwb3M7LCAmYXBvcztTUEFNISZhcG9zOylcbiAgXG5OdW1iZXJzIG9wdGlvbmFsOlxuICBcbiAgICA6OjpweXRob25cbiAgICAjIHdvcmtzIGluIDIuNysgYW5kIDMuMStcbiAgICAmYXBvczt7fSwgZWdncywgYW5kIHt9JmFwb3M7LmZvcm1hdCgmYXBvcztzcGFtJmFwb3M7LCAmYXBvcztTUEFNISZhcG9zOylcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PH1Vy=}10q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python: list all attributes available for any object", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">dir</span><span style=\"color: #d0d0d0\">(S)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5MjUsICJpZCI6ICIxNDg4NjkzMzUxODM0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgZGlyKFMpXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ncu(.H4)/?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python raw string literal", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">r'C:\\text\\new'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5MzAsICJpZCI6ICIxNDg4Njk0OTQ4NjAyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgciZhcG9zO0M6XFx0ZXh0XFxuZXcmYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v*_i*VaI-M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python multiline string", 
                        "", 
                        "<p>Use three quotes or doublequotes</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">msg</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"\"\"</span>\n<span style=\"color: #ed9d13\">aaaaaa</span>\n<span style=\"color: #ed9d13\">bbb''''bbbbb\"\"bbbbb'bbbbb</span>\n<span style=\"color: #ed9d13\">ccccc</span>\n<span style=\"color: #ed9d13\">\"\"\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NDUsICJpZCI6ICIxNDg4Njk1NjUxMTY0LTAwMSIsICJtZCI6ICJVc2UgdGhyZWUgcXVvdGVzIG9yIGRvdWJsZXF1b3Rlc1xuICBcbiAgICA6OjpweXRob25cbiAgICBtc2cgPSAmcXVvdDsmcXVvdDsmcXVvdDtcbiAgICBhYWFhYWFcbiAgICBiYmImYXBvczsmYXBvczsmYXBvczsmYXBvcztiYmJiYiZxdW90OyZxdW90O2JiYmJiJmFwb3M7YmJiYmJcbiAgICBjY2NjY1xuICAgICZxdW90OyZxdW90OyZxdW90O1xuICBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jI9i%N8DIj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python strings and Unicode", 
                        "", 
                        "<p><b>3.X</b>, normal <code>str</code> strings support Unicode:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'sp\\xc4m'</span> <span style=\"color: #999999; font-style: italic\"># but in 2.X this works like 3.X byte strings</span>\n<span style=\"color: #ed9d13\">'spām'</span>\n</pre></div>\n<p><b>3.X</b> byte strings are raw bytes, also works in <b>2.6+</b>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">b</span><span style=\"color: #ed9d13\">'a\\x01c'</span>\n<span style=\"color: #d0d0d0\">b</span><span style=\"color: #ed9d13\">'a\\x01c'</span>\n</pre></div>\n<p><b>2.X</b> Unicode literal also works in <b>3.3+</b>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">u'sp\\u00c4m'</span>\n<span style=\"color: #ed9d13\">'spām'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NjQsICJpZCI6ICIxNDg4Njk1Njk0NzI2LTAwMSIsICJtZCI6ICIzLlgsIG5vcm1hbCBgc3RyYCBzdHJpbmdzIHN1cHBvcnQgVW5pY29kZTpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICZhcG9zO3NwXFx4YzRtJmFwb3M7ICMgYnV0IGluIDIuWCB0aGlzIHdvcmtzIGxpa2UgMy5YIGJ5dGUgc3RyaW5nc1xuICAgICZhcG9zO3NwXHUwMTAxbSZhcG9zO1xuICBcbjMuWCBieXRlIHN0cmluZ3MgYXJlIHJhdyBieXRlcywgYWxzbyB3b3JrcyBpbiAyLjYrOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgYiZhcG9zO2FcXHgwMWMmYXBvcztcbiAgICBiJmFwb3M7YVxceDAxYyZhcG9zO1xuICBcbjIuWCBVbmljb2RlIGxpdGVyYWwgYWxzbyB3b3JrcyBpbiAzLjMrOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgdSZhcG9zO3NwXFx1MDBjNG0mYXBvcztcbiAgICAmYXBvcztzcFx1MDEwMW0mYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Er=rpeUuFM", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python short Unicode escape", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">\\<span style=\"color: #d0d0d0\">u</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NzAsICJpZCI6ICIxNDg4Njk2NDYxODc3LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgXFx1XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tz?%D5xwnB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python long Unicode escape", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">\\<span style=\"color: #d0d0d0\">U</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NzQsICJpZCI6ICIxNDg4Njk2NDg4NzExLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgXFxVXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oc67},ng?T", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python 2.X/3.X files differences regarding Unicode", 
                        "", 
                        "In 3.X, text files implement named encodings and accept and return <code>str</code> strings, but binary files instead deal in bytes strings for raw binary data.<div><br /></div><div>In 2.X, normal files' content is <code>str</code> bytes, and a special codecs module handles Unicode and represents content with the unicode type</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m<Yq=}sL5L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>List</b> description", 
                        "", 
                        "The Python list object is the most general <i>sequence</i> provided by the language. Lists are <b>positionally ordered</b> collections of arbitrarily typed objects, and they have no fixed size and are <b>mutable</b>.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AH(1E[abK{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python list comprehension expression example", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">M</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">],[</span><span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">],[</span><span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">8</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">9</span><span style=\"color: #d0d0d0\">]]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[row[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">row</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">M]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">8</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[row[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">row</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">M</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">row[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #3677a9\">2</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">8</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEwNTY1ODMsICJpZCI6ICIxNDg4Njk4NDgyMTI4LTAwMiIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IE0gPSBbWzEsMiwzXSxbNCw1LDZdLFs3LDgsOV1dXG4gICAgJmd0OyZndDsmZ3Q7IGNvbDIgPSBbcm93WzFdIGZvciByb3cgaW4gTV1cbiAgICAmZ3Q7Jmd0OyZndDsgY29sMlxuICAgIFsyLCA1LCA4XVxuICBcbiAgICAmZ3Q7Jmd0OyZndDsgY29sMiA9IFtyb3dbMV0gZm9yIHJvdyBpbiBNIGlmIHJvd1sxXSAlIDIgPT0gMF1cbiAgICAmZ3Q7Jmd0OyZndDsgY29sMlxuICAgIFsyLCA4XVxuICBcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B<v-6Rj$`*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python expressions to collect values need wrapping in collection in <b>3.X</b>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">))</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEwNTY3MjMsICJpZCI6ICIxNDg4Njk4NzczMzM1LTAwMiIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IGxpc3QocmFuZ2UoNCkpXG4gICAgWzAsIDEsIDIsIDNdXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C<z|cUR{ZY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python generator from comprehension", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">G</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">sum</span><span style=\"color: #d0d0d0\">(row)</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">row</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">M)</span> <span style=\"color: #999999; font-style: italic\"># wrap in parentheses</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">next</span><span style=\"color: #d0d0d0\">(G)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDcwMTMsICJpZCI6ICIxNDg4Njk5OTU5MDI4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEcgPSAoc3VtKHJvdykgZm9yIHJvdyBpbiBNKSAjIHdyYXAgaW4gcGFyZW50aGVzZXNcbiAgICAmZ3Q7Jmd0OyZndDsgbmV4dChHKVxuIn0=---->", 
                        "", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B9HY5ZV,p(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python comprehension syntax can make sets and dictionaries in which versions?", 
                        "", 
                        "<p><strong>2.7</strong> and <strong>3.X</strong>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #24909d\">sum</span><span style=\"color: #d0d0d0\">(M[i])</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">)}</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">15</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">24</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDcwMjEsICJpZCI6ICIxNDg4NzAwMDUzOTg3LTAwMSIsICJtZCI6ICIqKjIuNyoqIGFuZCAqKjMuWCoqOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsge3N1bShNW2ldKSBmb3IgaSBpbiByYW5nZSgzKX1cbiAgICB7MDogNiwgMTogMTUsIDI6IDI0fVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z=4.YnfSMp", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>dictionaries</b>", 
                        "", 
                        "<p>Dictionaries are the only mapping type in Python's core objects set, and are also mutable: like lists, they may be changed in place and can grow and shrink on demand.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">D = {'food': 'Spam', 'quantity': 4, 'color': 'pink'}\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU2OTc1ODMsICJpZCI6ICIxNDg4NzAwMzQwMzE1LTAwMSIsICJtZCI6ICJEaWN0aW9uYXJpZXMgYXJlIHRoZSBvbmx5IG1hcHBpbmcgdHlwZSBpbiBQeXRob24mYXBvcztzIGNvcmUgb2JqZWN0cyBzZXQsIGFuZCBhcmUgYWxzbyBtdXRhYmxlOiBsaWtlIGxpc3RzLCB0aGV5IG1heSBiZSBjaGFuZ2VkIGluIHBsYWNlIGFuZCBjYW4gZ3JvdyBhbmQgc2hyaW5rIG9uIGRlbWFuZC5cbiAgXG4gICAgRCA9IHsmYXBvcztmb29kJmFwb3M7OiAmYXBvcztTcGFtJmFwb3M7LCAmYXBvcztxdWFudGl0eSZhcG9zOzogNCwgJmFwb3M7Y29sb3ImYXBvczs6ICZhcG9zO3BpbmsmYXBvczt9XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y}:cQ?sNTG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python dictionary key existence test", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'f'</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">D</span>\n<span style=\"color: #24909d\">False</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #6ab825; font-weight: bold\">not</span> <span style=\"color: #ed9d13\">'f'</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">D:</span>\n       <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'missing'</span><span style=\"color: #d0d0d0\">)</span>\n\n<span style=\"color: #d0d0d0\">missing</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTc4NTkzMDksICJpZCI6ICIxNDg4NzAwNTgyMTk2LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICZhcG9zO2YmYXBvczsgaW4gRFxuICAgIEZhbHNlXG4gIFxuICAgICZndDsmZ3Q7Jmd0OyBpZiBub3QgJmFwb3M7ZiZhcG9zOyBpbiBEOlxuICAgICAgICAgICBwcmludCgmYXBvczttaXNzaW5nJmFwb3M7KVxuICBcbiAgICBtaXNzaW5nXG4gIFxuIn0=---->", 
                        "", 
                        "<p>Can also avoid accessing nonexistent by using <code>get()</code> method, conditional index with a default, or in <strong>2.X</strong> <code>has_key()</code> method, or <code>try</code> statement, or <code>if</code>/<code>else</code> ternary</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTc4NTkzNDAsICJpZCI6ICIxNDg4NzAwNTgyMTk2LTAwMiIsICJtZCI6ICJDYW4gYWxzbyBhdm9pZCBhY2Nlc3Npbmcgbm9uZXhpc3RlbnQgYnkgdXNpbmcgYGdldCgpYCBtZXRob2QsIGNvbmRpdGlvbmFsIGluZGV4IHdpdGggYSBkZWZhdWx0LCBvciBpbiAqKjIuWCoqIGBoYXNfa2V5KClgIG1ldGhvZCwgb3IgYHRyeWAgc3RhdGVtZW50LCBvciBgaWZgL2BlbHNlYCB0ZXJuYXJ5XG4ifQ==---->", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B&DyqD-huo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python sorted dictionary keys", 
                        "", 
                        "<p>Use dictionary <code>keys()</code> method and sort with list <code>sort()</code> method, then step through result with for loop.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYwMDAxNzQsICJpZCI6ICIxNDg4NzAwODk2NzAzLTAwMSIsICJtZCI6ICJVc2UgZGljdGlvbmFyeSBga2V5cygpYCBtZXRob2QgYW5kIHNvcnQgd2l0aCBsaXN0IGBzb3J0KClgIG1ldGhvZCwgdGhlbiBzdGVwIHRocm91Z2ggcmVzdWx0IHdpdGggZm9yIGxvb3AuXG4ifQ==---->", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">Ks</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(D.keys())</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">Ks.sort()</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'c'</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">key</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">Ks:</span>\n        <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(key,</span> <span style=\"color: #ed9d13\">'=&gt;'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">D[key])</span> <span style=\"color: #999999; font-style: italic\"># 3.X print, in 2.X remove parentheses</span>\n\n<span style=\"color: #d0d0d0\">a</span> <span style=\"color: #d0d0d0\">=&gt;</span> <span style=\"color: #3677a9\">1</span>\n<span style=\"color: #d0d0d0\">b</span> <span style=\"color: #d0d0d0\">=&gt;</span> <span style=\"color: #3677a9\">2</span>\n<span style=\"color: #d0d0d0\">c</span> <span style=\"color: #d0d0d0\">=&gt;</span> <span style=\"color: #3677a9\">3</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYwMDAxNzAsICJpZCI6ICIxNDg4NzAwODk2NzAzLTAwMiIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEtzID0gbGlzdChELmtleXMoKSlcbiAgICAmZ3Q7Jmd0OyZndDsgS3Muc29ydCgpXG4gICAgWyZhcG9zO2EmYXBvczssICZhcG9zO2ImYXBvczssICZhcG9zO2MmYXBvcztdXG4gICAgJmd0OyZndDsmZ3Q7IGZvciBrZXkgaW4gS3M6XG4gICAgICAgICAgICBwcmludChrZXksICZhcG9zOz0mZ3Q7JmFwb3M7LCBEW2tleV0pICMgMy5YIHByaW50LCBpbiAyLlggcmVtb3ZlIHBhcmVudGhlc2VzXG4gIFxuICAgIGEgPSZndDsgMVxuICAgIGIgPSZndDsgMlxuICAgIGMgPSZndDsgM1xuIn0=---->", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C#4ha/?cyd", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>Python <b>Tuple</b></div>", 
                        "", 
                        "<div>immutable sequence, usually coded with parentheses instead of square brackets, which is built by commas</div>", 
                        "", 
                        "<p>Parentheses aren't needed where commas don't otherwise matter, such as:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">T</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3.0</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">11</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">22</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">33</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">T[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #3677a9\">3.0</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYwMDAwODIsICJpZCI6ICIxNDg4NzAyNzA5NjA3LTAwMiIsICJtZCI6ICJQYXJlbnRoZXNlcyBhcmVuJmFwb3M7dCBuZWVkZWQgd2hlcmUgY29tbWFzIGRvbiZhcG9zO3Qgb3RoZXJ3aXNlIG1hdHRlciwgc3VjaCBhczpcbiAgXG4gIFxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgVCA9ICZhcG9zO3NwYW0mYXBvczssIDMuMCwgWzExLCAyMiwgMzNdXG4gICAgJmd0OyZndDsmZ3Q7IFRbMV1cbiAgICAzLjBcbiAgXG4ifQ==---->", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E+^E{{baU)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>set</b> syntax", 
                        "", 
                        "<p>New in <b>3.X</b> and <b>2.7</b>, <i>set</i>s use <code>{...}</code>, as they are like keys in a valueless <i>dictionary</i>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">set</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'h'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X,</span> <span style=\"color: #d0d0d0\">Y</span>\n<span style=\"color: #d0d0d0\">({</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'p'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'s'</span><span style=\"color: #d0d0d0\">},</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'h'</span><span style=\"color: #d0d0d0\">})</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">&amp;</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># intersection</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">|</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># union</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'h'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'p'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'s'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># difference</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'p'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'s'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># superset</span>\n<span style=\"color: #24909d\">False</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDczODksICJpZCI6ICIxNDg4NzA1NjM1MDExLTAwMSIsICJtZCI6ICJOZXcgaW4gMy5YIGFuZCAyLjcsIHNldHMgdXNlIGB7Li4ufWAsIGFzIHRoZXkgYXJlIGxpa2Uga2V5cyBpbiBhIHZhbHVlbGVzcyBkaWN0aW9uYXJ5OlxuICBcbiAgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgICZndDsmZ3Q7Jmd0OyBYID0gc2V0KCZhcG9zO3NwYW0mYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IFkgPSB7JmFwb3M7aCZhcG9zOywgJmFwb3M7YSZhcG9zOywgJmFwb3M7bSZhcG9zO31cbiAgICAmZ3Q7Jmd0OyZndDsgWCwgWVxuICAgICh7JmFwb3M7bSZhcG9zOywgJmFwb3M7YSZhcG9zOywgJmFwb3M7cCZhcG9zOywgJmFwb3M7cyZhcG9zO30sIHsmYXBvczttJmFwb3M7LCAmYXBvczthJmFwb3M7LCAmYXBvcztoJmFwb3M7fSlcbiAgICAmZ3Q7Jmd0OyZndDsgWCAmYW1wOyBZICMgaW50ZXJzZWN0aW9uXG4gICAgeyZhcG9zO20mYXBvczssICZhcG9zO2EmYXBvczt9XG4gICAgJmd0OyZndDsmZ3Q7IFggfCBZICMgdW5pb25cbiAgICB7JmFwb3M7bSZhcG9zOywgJmFwb3M7aCZhcG9zOywgJmFwb3M7YSZhcG9zOywgJmFwb3M7cCZhcG9zOywgJmFwb3M7cyZhcG9zO31cbiAgICAmZ3Q7Jmd0OyZndDsgWCAtIFkgIyBkaWZmZXJlbmNlXG4gICAgeyZhcG9zO3AmYXBvczssICZhcG9zO3MmYXBvczt9XG4gICAgJmd0OyZndDsmZ3Q7IFggJmd0OyBZICMgc3VwZXJzZXRcbiAgICBGYWxzZVxuICBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rA*xJ>i$`u", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python objects and names commonly initialized with this value", 
                        "", 
                        "<p><code>None</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc0MDAsICJpZCI6ICIxNDg4NzA2NTg2Mzc4LTAwMSIsICJtZCI6ICJgTm9uZWBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r$Q<Yb~IB%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <code><b>Boolean</b></code>s", 
                        "", 
                        "<p><code>True</code> and <code>False</code> objects, essentially just <code>0</code> and <code>1</code> with custom display logic</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNTM0NTAsICJpZCI6ICIxNDg4NzA2NjgwNzc2LTAwMSIsICJtZCI6ICJgVHJ1ZWAgYW5kIGBGYWxzZWAgb2JqZWN0cywgZXNzZW50aWFsbHkganVzdCBgMGAgYW5kIGAxYCB3aXRoIGN1c3RvbSBkaXNwbGF5IGxvZ2ljXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cNhZ_qsS~:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python type differences 2.X and 3.X", 
                        "", 
                        "<p>2.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #24909d\">type</span> <span style=\"color: #ed9d13\">'list'</span><span style=\"color: #d0d0d0\">&gt;</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L))</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #24909d\">type</span> <span style=\"color: #ed9d13\">'type'</span><span style=\"color: #d0d0d0\">&gt;</span>\n</pre></div>\n<p>3.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">class</span> <span style=\"color: #a61717; background-color: #e3d2d2\">'</span><span style=\"color: #447fcf; text-decoration: underline\">list</span><span style=\"color: #ed9d13\">'&gt;</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L))</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">class</span> <span style=\"color: #a61717; background-color: #e3d2d2\">'</span><span style=\"color: #447fcf; text-decoration: underline\">type</span><span style=\"color: #ed9d13\">'&gt;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc0NjEsICJpZCI6ICIxNDg4NzA4MDY5MTk1LTAwMSIsICJtZCI6ICIyLlg6XG4gIFxuICAgIDo6OnB5dGhvblxuICAgICZndDsmZ3Q7Jmd0OyB0eXBlKEwpXG4gICAgJmx0O3R5cGUgJmFwb3M7bGlzdCZhcG9zOyZndDtcbiAgICAmZ3Q7Jmd0OyZndDsgdHlwZSh0eXBlKEwpKVxuICAgICZsdDt0eXBlICZhcG9zO3R5cGUmYXBvczsmZ3Q7XG4gIFxuMy5YOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgdHlwZShMKVxuICAgICZsdDtjbGFzcyAmYXBvcztsaXN0JmFwb3M7Jmd0O1xuICAgICZndDsmZ3Q7Jmd0OyB0eXBlKHR5cGUoTCkpXG4gICAgJmx0O2NsYXNzICZhcG9zO3R5cGUmYXBvczsmZ3Q7XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t.l:Vq4Pj4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python type checking", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">if</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">([]):</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'yes'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">:</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'yes'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #24909d\">isinstance</span><span style=\"color: #d0d0d0\">(L,</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">):</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'yes'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU4MzgxNjQsICJpZCI6ICIxNDg4NzA4MTUyMDY4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgaWYgdHlwZShMKSA9PSB0eXBlKFtdKTpcbiAgICAgICAgcHJpbnQoJmFwb3M7eWVzJmFwb3M7KSB5ZXNcbiAgICBpZiB0eXBlKEwpID09IGxpc3Q6XG4gICAgICAgIHByaW50KCZhcG9zO3llcyZhcG9zOykgeWVzXG4gICAgaWYgaXNpbnN0YW5jZShMLCBsaXN0KTpcbiAgICAgICAgcHJpbnQoJmFwb3M7eWVzJmFwb3M7KSB5ZXNcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uKcs;^*|t5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Portable Python shebang", 
                        "", 
                        "<code>#!/usr/bin/env python</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zJ}Q6G9n84", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Integers in <b>Python 2.x</b>", 
                        "", 
                        "two integer types: normal (often 32 bits) and long (unlimited precision), and an integer may end in an <code>l</code> or <code>L</code> to force it to become a long integer.<div><br /></div><div>They are automatically converted to long integers when their values overflow their allocated bits, so you never need to type the&nbsp;<code>L</code> yourself.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h4}-bjRke_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Integers in <b>Python 3.x</b>", 
                        "", 
                        "In <b>Python 3.X</b>, the normal and long integer types have been merged — there is only integer, which automatically supports the unlimited precision of <b>Python 2.X</b>’s separate long integer type. Because of this, integers can no longer be coded with a trailing <code>l</code> or <code>L</code>, and integers never print with this character either.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v45t+hgL3$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "How do octal literals differ between <b>Python 2</b> and <b>3</b>?", 
                        "", 
                        "<div><b>2.X</b>: <code>0[0-7]+</code></div><div><div><b>2.6</b>:&nbsp;<code>0[0-7]+</code> or&nbsp;<code>0o[0-7]+</code> or&nbsp;<code>0O[0-7]+</code></div></div><div><div><b>3.X</b>:&nbsp;<code>0o[0-7]+</code> or&nbsp;<code>0O[0-7]+</code></div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gA~DFfZp%!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Which Python versions support binary literals?", 
                        "", 
                        "Binary literals, new as of&nbsp;<b>2.6</b>&nbsp;and&nbsp;<b>3.0</b>, begin with a leading&nbsp;<code>0b</code>&nbsp;or&nbsp;<code>0B</code>, followed by binary digits (<code>0–1</code>).", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hclL8frdwN", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "What object type do hexadecimal literals produce in Python?", 
                        "", 
                        "All of the literals produce <b>integer objects</b> in program code; they are just alternative syntaxes for specifying values. The built-in calls <code>hex(I)</code>, <code>oct(I)</code>, and <code>bin(I)</code> convert an integer to its representation string in these three bases, and <code>int(str, base)</code> converts a runtime string to an integer per a given base.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ofZ*9DNY?*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "What object type do octal literals produce in Python?", 
                        "", 
                        "All of the literals produce <b>integer objects</b> in program code; they are just alternative syntaxes for specifying values. The built-in calls <code>hex(I)</code>, <code>oct(I)</code>, and <code>bin(I)</code> convert an integer to its representation string in these three bases, and <code>int(str, base)</code> converts a runtime string to an integer per a given base.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dR#3Uv5BDI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "What object type do binary literals produce in Python?", 
                        "", 
                        "All of the literals produce <b>integer objects</b> in program code; they are just alternative syntaxes for specifying values. The built-in calls <code>hex(I)</code>, <code>oct(I)</code>, and <code>bin(I)</code> convert an integer to its representation string in these three bases, and <code>int(str, base)</code> converts a runtime string to an integer per a given base.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L?L|,kj*S7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>yield <i>x</i></code>", 
                        "", 
                        "<b>generator function <code>send</code> protocol</b> operator", 
                        "", 
                        "requires parentheses if not alone on the right side of an assignment statement", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OHS4e.F${Q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>lambda <i>args</i>: <i>expression</i></code>", 
                        "", 
                        "<b>anonymous function generation</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pyMC][4@][", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> if <i>y</i> else <i>z</i></code>", 
                        "", 
                        "<b>ternary selection</b>&nbsp;operator", 
                        "", 
                        "<code>x</code> is evaluated only if <code>y</code> is true", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l1We5HJZuR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> or <i>y</i></code>", 
                        "", 
                        "<b>logical OR</b>&nbsp;operator", 
                        "", 
                        "<code>y</code> is evaluated only if <code>x</code> is false", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C,~Jl*qF$f", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> and <i>y</i></code>", 
                        "", 
                        "<b>logical AND</b> operator", 
                        "", 
                        "<code>y</code> is evaluated only if <code>x</code> is true", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t}gG@mo3mw", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>not <i>x</i></code>", 
                        "", 
                        "<b>logical negation</b> operator", 
                        "", 
                        "<br />", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q}}&DKX(U@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> in <i>y</i></code>", 
                        "", 
                        "<b>membership </b>operator&nbsp;(iterables, sets)", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g1FM_bHv{B", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> not in <i>y</i></code>", 
                        "", 
                        "<b>negative membership</b> operator&nbsp;(iterables, sets)", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xr;vZjB[ad", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> is <i>y</i></code>", 
                        "", 
                        "<b>object identity test</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cPnLl!dlbb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> is not <i>y</i></code>", 
                        "", 
                        "<b>negative object identity test</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "umR~~bb{?g", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> &lt; <i>y</i></code>,<i> </i><code><i>x</i> &lt;= <i>y</i></code>, <code><i>x</i> &gt; <i>y</i></code>, <code><i>x</i> &gt;= <i>y</i></code>", 
                        "", 
                        "<b>magnitude comparison</b> and <b>set subset and superset</b> operators", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y(d$wq!G)_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> == <i>y</i></code>", 
                        "", 
                        "<b>value equality</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v{pR}lrOMz", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> != <i>y</i></code>", 
                        "", 
                        "<b>value inequality</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E[B-#~~eBJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> | <i>y</i></code>", 
                        "", 
                        "<b>bitwise OR</b> and&nbsp;<b>set union</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uQ(DUQMo(m", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> ^ <i>y</i></code>", 
                        "", 
                        "<b>bitwise XOR</b> and&nbsp;<b>set symmetric difference</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zRe.^Z27O[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> &amp; <i>y</i></code>", 
                        "", 
                        "<b>bitwise AND</b> and <b>set intersection</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t{0tk#KF)L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> &lt;&lt; <i>y</i></code>, <code><i>x</i> &gt;&gt; <i>y</i></code>", 
                        "", 
                        "<b>shift <code>x</code> left or right by <code>y</code> bits</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rxvr|qq!zo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> + <i>y</i></code>", 
                        "", 
                        "<b>addition</b> and&nbsp;<b>concatenation</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o7=j:m6AY0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> - <i>y</i></code>", 
                        "", 
                        "<b>subtraction</b> and&nbsp;<b>set difference</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lDRww7#!?H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> * <i>y</i></code>", 
                        "", 
                        "<b>multiplication</b> and&nbsp;<b>repetition</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L-),vl`dN#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> % <i>y</i></code>", 
                        "", 
                        "<b>remainder</b> and&nbsp;<b>format</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l?4TBeL.+e", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> / <i>y</i></code>", 
                        "", 
                        "<div><b>true division</b>&nbsp;operator in<b>&nbsp;3.X</b></div><div><b>classic (truncating) division</b>&nbsp;operator in<b>&nbsp;2.X</b></div><div><b><br /></b></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vwj$S!z*rS", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> // <i>y</i></code>", 
                        "", 
                        "<b>floor division</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G,ph!NCL`7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>-<i>x</i></code>", 
                        "", 
                        "<b>negation</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EuCyl?t7CJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>+<i>x</i></code>", 
                        "", 
                        "<b>identity</b> operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FH-6vpaHg4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>˜<i>x</i></code>", 
                        "", 
                        "<b>bitwise NOT </b>(inversion) operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E@w|SlfCZ(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code></code><code><i>x</i> ** <i>y</i></code>", 
                        "", 
                        "<b>power</b> (exponentiation)&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "smQ><BLThA", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code></code><code><i>x</i>[<i>i</i>]</code>", 
                        "", 
                        "<b>indexing</b> (sequence, mapping, others)&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ck*@fQ[x1-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code></code><code><i>x</i>[<i>i</i>:<i>j</i>:<i>k</i>]</code>", 
                        "", 
                        "<b>slicing</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OH8p{:1=&8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code></code><code><i>x</i>(<i>...</i>)</code>", 
                        "", 
                        "<b>call </b>(function, method, class, other callable)&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f_?E%w`5WQ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i>.<i>attr</i></code>", 
                        "", 
                        "<b>attribute reference</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I*ESsm,J@O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>(<i>...</i>)</code>", 
                        "", 
                        "<b>tuple</b>, <b>expression</b> and&nbsp;<b>generator expression</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qH.tWAP@ka", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>[<i>...</i>]</code>", 
                        "", 
                        "<b>list</b> and<b> list comprehension</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r9k6NKYwQT", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>{<i>...</i>}</code>", 
                        "", 
                        "<b>dictionary</b>,&nbsp;<b style=\"font-weight: bold; \">dictionary comprehension</b>,&nbsp;<b>set</b> and <b>set comprehension</b>&nbsp;operator", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q}j[xq[4d|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code><i>x</i> &lt;&gt; <i>y</i></code>", 
                        "", 
                        "deprecated&nbsp;<b>value inequality</b>&nbsp;operator, works through&nbsp;<b>Python 2.X</b>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nkL!;y.8yJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>`<i>x</i>`</code>", 
                        "", 
                        "deprecated <b>object to display string</b> operator, works through&nbsp;<b>Python 2.X</b><div>use <code>str</code> and <code>repr</code> built-in functions instead</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w/wR*$.V@{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Does <code>yield x</code> require parentheses?", 
                        "", 
                        "if not alone on the right side of an assignment statement", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wUP$hR:/&n", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can comparison operators be chained?", 
                        "", 
                        "Yes, <code>x &gt; y &gt; z</code> produces the same result as&nbsp;<code>x &gt; y and y &gt; z</code>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GC^j8kJW+)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "operators", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>math.floor(-2.499)</code>", 
                        "", 
                        "<div><code>-3</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q+@QAN#)e]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>math.floor(2.5)</code>", 
                        "", 
                        "<div><code>2</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e]V]LI#x)E", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>math.trunc(2.5)</code>", 
                        "", 
                        "<div><code>2</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y8:_N/7PLj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>math.trunc(-2.5)</code>", 
                        "", 
                        "<div><code>-2</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O3v#~u9C2l", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ways to compute square roots", 
                        "", 
                        "<ul>\n<li style=\"text-align: left; \"><strong>module function</strong>: <code>math.sqrt(144)</code></li>\n<li style=\"text-align: left; \"><strong>expression</strong>: <code>144 ** .5</code></li>\n<li style=\"text-align: left; \"><strong>built-in function</strong>: <code>pow(144, .5)</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk2NzA2NDAsICJpZCI6ICIxNDk5NjcwNDM4OTQ5LTAwMSIsICJtZCI6ICIqICoqbW9kdWxlIGZ1bmN0aW9uKio6IGBtYXRoLnNxcnQoMTQ0KWBcbiogKipleHByZXNzaW9uKio6IGAxNDQgKiogLjVgXG4qICoqYnVpbHQtaW4gZnVuY3Rpb24qKjogYHBvdygxNDQsIC41KWBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uRMcTr9Rd$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "taming <code>Fraction(123456, 25412)</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">from</span> <span style=\"color: #447fcf; text-decoration: underline\">fractions</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #d0d0d0\">Fraction</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">a</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">Fraction(</span><span style=\"color: #3677a9\">123456</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">25412</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">a.limit_denominator(</span><span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">Fraction(</span><span style=\"color: #3677a9\">34</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY0ODI5MDIsICJpZCI6ICIxNDk5NjcwNjUyOTk4LTAwMiIsICJtZCI6ICIgICAgOjo6UHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IGZyb20gZnJhY3Rpb25zIGltcG9ydCBGcmFjdGlvblxuICAgICZndDsmZ3Q7Jmd0OyBhID0gRnJhY3Rpb24oMTIzNDU2LCAyNTQxMilcbiAgICAmZ3Q7Jmd0OyZndDsgYS5saW1pdF9kZW5vbWluYXRvcigxMClcbiAgICBGcmFjdGlvbigzNCwgNylcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DuIYM%DfS2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can sets be used in <code>len</code>, <code>for</code> loops and list comprehensions?", 
                        "", 
                        "<div>Yes, because sets are <i>iterable</i> containers</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yMM+wJO|jt", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Do sets support sequence operations like indexing and slicing?", 
                        "", 
                        "<div>No, because while sets are <i>iterable</i> containers, they are <i>unordered</i>.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FQ$Wt@ESY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Set literals in <b>2.X</b> and <b>3.X</b>", 
                        "", 
                        "Regardless of how a set is made, <b>3.X</b> displays it using the new literal format. Python <b>2.7</b> accepts the new literal syntax, but still displays sets using the <b>2.6</b> display form of the prior section. In all Pythons, the set built-in is still required to create empty sets and to build sets from existing iterable objects (short of using set comprehensions), but the new literal is convenient for initializing sets of known structure.\n\n", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MjB2b)1nlY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "immutable constraints and frozen sets", 
                        "", 
                        "(word \"frozen\" missing here?) sets can only contain <i>immutable</i> (a.k.a. “hashable”) object types. Hence, lists and dictionaries cannot be embedded in sets, but tuples can if you need to store compound values.\n\n", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "egIt&?!0kW", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "remove duplicates in list <code>L</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">set</span><span style=\"color: #d0d0d0\">(L))</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk2NzExNjksICJpZCI6ICIxNDk5NjcxMTI4MzQ2LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgTCA9IGxpc3Qoc2V0KEwpKVxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MGPtRcv;1N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can one variable point to another variable?", 
                        "", 
                        "No.&nbsp;Python variables are always pointers to objects, not labels of changeable memory areas: setting a variable to a new value does not alter the original object, but rather causes the variable to reference an entirely different object. The net effect is that assignment to a variable itself can impact only the single variable being assigned. When mutable objects and in-place changes enter the equation, though, the picture changes somewhat", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mRfvp)4)NW", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Ways to copy a <i>list</i> instead of making a reference", 
                        "", 
                        "built in <b><code>list</code> function</b>, standard library <b><code>copy</code> module</b>, <b>slice</b>&nbsp;start to finish <code>[:]</code>&nbsp;or as of <b>3.3</b>:&nbsp;<code><i>X</i>.copy()</code>&nbsp;method call", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c-Xh[aiN`n", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Ways to copy a <i>dictionary</i>&nbsp;or <i>set</i> instead of making a reference", 
                        "", 
                        "<p>Slicing won’t work on <em>dictionaries</em> or <em>sets</em> because they are not sequences, so you must use their <em><code>X</code></em><code>.copy()</code> method call (lists have one as of <strong>3.3</strong> as well) or pass the original object to their type names, <code>dict</code> and <code>set</code>.</p>\n<p>The standard library <code>copy</code> module has a call for copying any object type generically, as well as a call for copying nested object structures — a <em>dictionary</em> with nested <em>list</em>​s, for example:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">copy</span>\n\n<span style=\"color: #999999; font-style: italic\"># Make top-level \"shallow\" copy of any object Y</span>\n<span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">copy.copy(Y)</span>\n\n<span style=\"color: #999999; font-style: italic\"># Make deep copy of any object Y: copy all nested parts</span>\n<span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">copy.deepcopy(Y)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0NTMwNTgsICJpZCI6ICIxNDk5NzI4MTYzNjIxLTAwMSIsICJtZCI6ICJTbGljaW5nIHdvblx1MjAxOXQgd29yayBvbiBfZGljdGlvbmFyaWVzXyBvciBfc2V0c18gYmVjYXVzZSB0aGV5IGFyZSBub3Qgc2VxdWVuY2VzLCBzbyB5b3UgbXVzdCB1c2UgdGhlaXIgX2BYYF9gLmNvcHkoKWAgbWV0aG9kIGNhbGwgKGxpc3RzIGhhdmUgb25lIGFzIG9mICoqMy4zKiogYXMgd2VsbCkgb3IgcGFzcyB0aGUgb3JpZ2luYWwgb2JqZWN0IHRvIHRoZWlyIHR5cGUgbmFtZXMsIGBkaWN0YCBhbmQgYHNldGAuXG4gIFxuVGhlIHN0YW5kYXJkIGxpYnJhcnkgYGNvcHlgIG1vZHVsZSBoYXMgYSBjYWxsIGZvciBjb3B5aW5nIGFueSBvYmplY3QgdHlwZSBnZW5lcmljYWxseSwgYXMgd2VsbCBhcyBhIGNhbGwgZm9yIGNvcHlpbmcgbmVzdGVkIG9iamVjdCBzdHJ1Y3R1cmVzIFx1MjAxNCBhIF9kaWN0aW9uYXJ5XyB3aXRoIG5lc3RlZCBfbGlzdF9cdTIwMGJzLCBmb3IgZXhhbXBsZTpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgaW1wb3J0IGNvcHlcbiAgXG4gICAgIyBNYWtlIHRvcC1sZXZlbCAmcXVvdDtzaGFsbG93JnF1b3Q7IGNvcHkgb2YgYW55IG9iamVjdCBZXG4gICAgWCA9IGNvcHkuY29weShZKVxuICBcbiAgICAjIE1ha2UgZGVlcCBjb3B5IG9mIGFueSBvYmplY3QgWTogY29weSBhbGwgbmVzdGVkIHBhcnRzXG4gICAgWCA9IGNvcHkuZGVlcGNvcHkoWSlcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B!gu_#GUTP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "reveal number of references to an object", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">sys</span>\n<span style=\"color: #d0d0d0\">sys.getrefcount(<i>X</i>)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MjkwNjksICJpZCI6ICIxNDk5NzI4OTU1MDUyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgaW1wb3J0IHN5c1xuICAgIHN5cy5nZXRyZWZjb3VudChYKVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "$rjkbbHW0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "weak reference", 
                        "", 
                        "<div>reference to an object that does not by itself prevent the referenced object from being garbage-collected</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A:g_cm=MEk", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how weak references are implemented", 
                        "", 
                        "<div>the <code>weakref</code> standard library module</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O=lrhKn2?G", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "use case for weak references", 
                        "", 
                        "<div>dictionary-based caches of large objects</div>", 
                        "", 
                        "without weak references, the cache reference alone would keep the object in memory indefinitely", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F3p>+>!X5[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "difference between <code>'<i>string</i>'</code> and <code>\"<i>string</i>\"</code>", 
                        "", 
                        "<div>None, they return the same type of object.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m8V.Q1Y%K3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "implicit concatenation", 
                        "", 
                        "<code>'The' \" \" 'boy ' 'ran' \".\"</code>", 
                        "", 
                        "<div><div>\n<p>Python automatically concatenates adjacent string literals in any expression. Adding commas would create a tuple, not a string.</p>\n</div></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QqYG%*#DF;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string termination character", 
                        "", 
                        "<div><div><p><b>No character terminates a string in Python</b>.&nbsp;Zero (null) character like this does not terminate a string the way a “null byte” typically does in C. Instead, Python keeps both the string’s length and text in memory.</p>\n</div></div>", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oe.~w7-$Y=", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how nonprintable characters are displayed", 
                        "", 
                        "<div><div><p><div><div>\n<p>Python displays nonprintable characters in <b>hex</b>, regardless of how they were specified.</p>\n</div></div></p>\n</div></div>", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "goy`>I])|:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>\\</code>&nbsp;(followed by newline)", 
                        "", 
                        "string escape to ignore newline", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NeVj9~h.c.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "escape", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>\\0</code>", 
                        "", 
                        "string escape for&nbsp;null byte (does not end string)", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E7XLWN@b@M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "escape", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>\\ooo</code>", 
                        "", 
                        "string escape for character with octal value <code>ooo</code> up to 3 digits", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oo[&U-h882", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "escape", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>\\N{ <i>id</i> }</code>", 
                        "", 
                        "string escape for Unicode character with database ID <code><i>id</i></code>", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Gr*gpH8%Rx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "escape", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to end a raw string with a backslash", 
                        "", 
                        "<ul>\n<li style=\"text-align: left; \">use two and slice off the second: <code>r'1\\nb\\tc\\\\'[:-1]</code></li>\n<li style=\"text-align: left; \">tack one on manually: <code>r'1\\nb\\tc' + '\\\\'</code></li>\n<li style=\"text-align: left; \">skip the raw string syntax and just double up the backslashes in a normal string: <code>'1\\\\nb\\\\tc\\\\'</code></li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzAyMjksICJpZCI6ICIxNDk5NzMwMDc4ODg2LTAwMSIsICJtZCI6ICIqIHVzZSB0d28gYW5kIHNsaWNlIG9mZiB0aGUgc2Vjb25kOiBgciZhcG9zOzFcXG5iXFx0Y1xcXFwmYXBvcztbOi0xXWBcbiogdGFjayBvbmUgb24gbWFudWFsbHk6IGByJmFwb3M7MVxcbmJcXHRjJmFwb3M7ICsgJmFwb3M7XFxcXCZhcG9zO2Bcbiogc2tpcCB0aGUgcmF3IHN0cmluZyBzeW50YXggYW5kIGp1c3QgZG91YmxlIHVwIHRoZSBiYWNrc2xhc2hlcyBpbiBhIG5vcm1hbCBzdHJpbmc6IGAmYXBvczsxXFxcXG5iXFxcXHRjXFxcXCZhcG9zO2BcbiJ9---->", 
                        "", 
                        "<div><div>\n<p><br /></p>\n</div></div>", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B]#~.(4xO:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked", 
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "how to comment multiline strings", 
                        "", 
                        "<p>Triple quoted strings retain all enclosed text, so must comment above or below or rely on automatic concatenation and surrounding parentheses to allow line spans.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">menu</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"\"\"spam  # comment here part of string!  </span>\n<span style=\"color: #ed9d13\">eggs            # ditto</span>\n<span style=\"color: #ed9d13\">\"\"\"</span>\n\n<span style=\"color: #d0d0d0\">menu</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">(</span>\n<span style=\"color: #ed9d13\">\"spam\\n\"</span>   <span style=\"color: #999999; font-style: italic\"># comment here ignored</span>\n<span style=\"color: #ed9d13\">\"eggs\\n\"</span>   <span style=\"color: #999999; font-style: italic\"># but newlines not automatic</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzA1NzAsICJpZCI6ICIxNDk5NzMwMjQ4OTIxLTAwMSIsICJtZCI6ICJUcmlwbGUgcXVvdGVkIHN0cmluZ3MgcmV0YWluIGFsbCBlbmNsb3NlZCB0ZXh0LCBzbyBtdXN0IGNvbW1lbnQgYWJvdmUgb3IgYmVsb3cgb3IgcmVseSBvbiBhdXRvbWF0aWMgY29uY2F0ZW5hdGlvbiBhbmQgc3Vycm91bmRpbmcgcGFyZW50aGVzZXMgdG8gYWxsb3cgbGluZSBzcGFucy5cbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgbWVudSA9ICZxdW90OyZxdW90OyZxdW90O3NwYW0gICMgY29tbWVudCBoZXJlIHBhcnQgb2Ygc3RyaW5nISAgXG4gICAgZWdncyAgICAgICAgICAgICMgZGl0dG9cbiAgICAmcXVvdDsmcXVvdDsmcXVvdDtcbiAgXG4gICAgbWVudSA9IChcbiAgICAmcXVvdDtzcGFtXFxuJnF1b3Q7ICAgIyBjb21tZW50IGhlcmUgaWdub3JlZFxuICAgICZxdW90O2VnZ3NcXG4mcXVvdDsgICAjIGJ1dCBuZXdsaW5lcyBub3QgYXV0b21hdGljXG4gICAgKVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Qun-W8+mpj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "step through items in string", 
                        "", 
                        "<p>(<strong>3.X</strong> <code>print</code>)</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">c</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">myjob:</span> <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(c,</span> <span style=\"color: #d0d0d0\">end=</span><span style=\"color: #ed9d13\">' '</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">...</span>\n<span style=\"color: #d0d0d0\">h</span> <span style=\"color: #d0d0d0\">a</span> <span style=\"color: #d0d0d0\">c</span> <span style=\"color: #d0d0d0\">k</span> <span style=\"color: #d0d0d0\">e</span> <span style=\"color: #d0d0d0\">r</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzA3OTAsICJpZCI6ICIxNDk5NzMwNTk2ODIzLTAwMSIsICJtZCI6ICIoKiozLlgqKiBgcHJpbnRgKVxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgZm9yIGMgaW4gbXlqb2I6IHByaW50KGMsIGVuZD0mYXBvczsgJmFwb3M7KVxuICAgIC4uLlxuICAgIGggYSBjIGsgZSByXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ig-OuM{KNb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "check for character in string", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">myjob</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"hacker\"</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">\"k\"</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">myjob</span>\n<span style=\"color: #24909d\">True</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">\"z\"</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">myjob</span>\n<span style=\"color: #24909d\">False</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzA4NzIsICJpZCI6ICIxNDk5NzMwODA0MDk3LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IG15am9iID0gJnF1b3Q7aGFja2VyJnF1b3Q7XG4gICAgJmd0OyZndDsmZ3Q7ICZxdW90O2smcXVvdDsgaW4gbXlqb2JcbiAgICBUcnVlXG4gICAgJmd0OyZndDsmZ3Q7ICZxdW90O3omcXVvdDsgaW4gbXlqb2JcbiAgICBGYWxzZVxuICBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s&n~F#7o+A", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "substring search", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># no position returned</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'spam'</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #ed9d13\">'abcspamdef'</span>\n<span style=\"color: #24909d\">True</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzA5NDgsICJpZCI6ICIxNDk5NzMwODgxNzg5LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICMgbm8gcG9zaXRpb24gcmV0dXJuZWRcbiAgICAmZ3Q7Jmd0OyZndDsgJmFwb3M7c3BhbSZhcG9zOyBpbiAmYXBvczthYmNzcGFtZGVmJmFwb3M7XG4gICAgVHJ1ZVxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e7U^2km,w8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "extended slicing", 
                        "", 
                        "<div><div><div>\n<p><code><i>S</i>[<i>i</i>:<i>j</i>:<i>k</i>]</code>&nbsp;accepts a step (or stride) <code><i>k</i></code>, which defaults to <code>+1</code>: allows for skipping items and reversing order</p>\n</div></div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x)n]r9jc8,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "get all command line arguments", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">sys.argv[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">:]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzE0MDIsICJpZCI6ICIxNDk5NzMxMDQ0NjQxLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgc3lzLmFyZ3ZbMTpdXG4ifQ==---->", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999;font-style: italic\"># File echo.py</span>\n<span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">sys</span>\n<span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(sys.argv)</span>\n\n<span style=\"color: #d0d0d0\">%</span> <span style=\"color: #d0d0d0\">python</span> <span style=\"color: #d0d0d0\">echo.py</span> <span style=\"color: #d0d0d0\">-a</span> <span style=\"color: #d0d0d0\">-b</span> <span style=\"color: #d0d0d0\">-c</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'echo.py'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'-a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'-b'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'-c'</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzEyNDMsICJpZCI6ICIxNDk5NzMxMDQ0NjQxLTAwMiIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgIyBGaWxlIGVjaG8ucHlcbiAgICBpbXBvcnQgc3lzXG4gICAgcHJpbnQoc3lzLmFyZ3YpXG4gIFxuICAgICUgcHl0aG9uIGVjaG8ucHkgLWEgLWIgLWNcbiAgICBbJmFwb3M7ZWNoby5weSZhcG9zOywgJmFwb3M7LWEmYXBvczssICZhcG9zOy1iJmFwb3M7LCAmYXBvczstYyZhcG9zO11cbiJ9---->", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zHDDAfWD,Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "function <code>ord</code>", 
                        "", 
                        "convert single character to underlying integer code (e.g., its ASCII byte value)", 
                        "", 
                        "<div>both of these convert characters to and from their Unicode ordinals or “code points,” which are just their identifying number in the underlying character set. For ASCII text, this is the familiar 7-bit integer that fits in a single byte in memory, but the range of code points for other kinds of Unicode text may be wider</div>", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N306UPG$b_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "function <code>chr</code>", 
                        "", 
                        "convert integer code to corresponding character", 
                        "", 
                        "both of these convert characters to and from their Unicode ordinals or “code points,” which are just their identifying number in the underlying character set. For ASCII text, this is the familiar 7-bit integer that fits in a single byte in memory, but the range of code points for other kinds of Unicode text may be wider", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ILFmFe%dgE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string <code>join</code> method", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">''</span><span style=\"color: #d0d0d0\">.join(L)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">S</span>\n<span style=\"color: #ed9d13\">'spaxxy'</span>\n</pre></div>\n<p>The <code>join</code> method may look a bit backward at first sight. Because it is a method of strings (not of lists), it is called through the desired delimiter. <code>join</code> puts the strings in a list (or other iterable) together, with the delimiter between list items; in this case, it uses an empty string delimiter to convert from a list back to a string. More generally, any string delimiter and iterable of strings will do:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'SPAM'</span><span style=\"color: #d0d0d0\">.join([</span><span style=\"color: #ed9d13\">'eggs'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'sausage'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'ham'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'toast'</span><span style=\"color: #d0d0d0\">])</span>\n<span style=\"color: #ed9d13\">'eggsSPAMsausageSPAMhamSPAMtoast'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk4MDAzODMsICJpZCI6ICIxNDk5NzMxNjUwNjIyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IFMgPSAmYXBvczsmYXBvczsuam9pbihMKVxuICAgICZndDsmZ3Q7Jmd0OyBTXG4gICAgJmFwb3M7c3BheHh5JmFwb3M7XG4gIFxuVGhlIGBqb2luYCBtZXRob2QgbWF5IGxvb2sgYSBiaXQgYmFja3dhcmQgYXQgZmlyc3Qgc2lnaHQuIEJlY2F1c2UgaXQgaXMgYSBtZXRob2Qgb2Ygc3RyaW5ncyAobm90IG9mIGxpc3RzKSwgaXQgaXMgY2FsbGVkIHRocm91Z2ggdGhlIGRlc2lyZWQgZGVsaW1pdGVyLiBgam9pbmAgcHV0cyB0aGUgc3RyaW5ncyBpbiBhIGxpc3QgKG9yIG90aGVyIGl0ZXJhYmxlKSB0b2dldGhlciwgd2l0aCB0aGUgZGVsaW1pdGVyIGJldHdlZW4gbGlzdCBpdGVtczsgaW4gdGhpcyBjYXNlLCBpdCB1c2VzIGFuIGVtcHR5IHN0cmluZyBkZWxpbWl0ZXIgdG8gY29udmVydCBmcm9tIGEgbGlzdCBiYWNrIHRvIGEgc3RyaW5nLiBNb3JlIGdlbmVyYWxseSwgYW55IHN0cmluZyBkZWxpbWl0ZXIgYW5kIGl0ZXJhYmxlIG9mIHN0cmluZ3Mgd2lsbCBkbzpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICZhcG9zO1NQQU0mYXBvczsuam9pbihbJmFwb3M7ZWdncyZhcG9zOywgJmFwb3M7c2F1c2FnZSZhcG9zOywgJmFwb3M7aGFtJmFwb3M7LCAmYXBvczt0b2FzdCZhcG9zO10pXG4gICAgJmFwb3M7ZWdnc1NQQU1zYXVzYWdlU1BBTWhhbVNQQU10b2FzdCZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mE;Qi~W^V{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "test if <code>string</code> ends with <code>sub</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">sub</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'Ni!\\n'</span>\n<span style=\"color: #999999; font-style: italic\"># End test via method call or slice</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">line.endswith(sub)</span>\n<span style=\"color: #24909d\">True</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">line[-</span><span style=\"color: #24909d\">len</span><span style=\"color: #d0d0d0\">(sub):]</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #d0d0d0\">sub</span>\n<span style=\"color: #24909d\">True</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzM0MTIsICJpZCI6ICIxNDk5NzMzMjgzNjQyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IHN1YiA9ICZhcG9zO05pIVxcbiZhcG9zO1xuICAgICMgRW5kIHRlc3QgdmlhIG1ldGhvZCBjYWxsIG9yIHNsaWNlXG4gICAgJmd0OyZndDsmZ3Q7IGxpbmUuZW5kc3dpdGgoc3ViKVxuICAgIFRydWVcbiAgICAmZ3Q7Jmd0OyZndDsgbGluZVstbGVuKHN1Yik6XSA9PSBzdWJcbiAgICBUcnVlXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I~6UnSM{Vc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<i>string</i> methods <i>vs.</i> <code>string</code> module", 
                        "", 
                        "<div><div><div>\n<p>In <b>2.X</b>, there technically are still two ways to invoke advanced string operations: by calling object methods, or by calling <code>string</code> module functions and passing in the objects as arguments. Use the string methods for new code.</p>\n</div></div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q~^/X2tES^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<i>string</i> formatting expression syntax", 
                        "", 
                        "<div><div>\n<p>The general structure of conversion targets looks like this:</p><p><code>%[(<i>keyname</i>)][<i>flags</i>][<i>width</i>][.<i>precision</i>]<i>typecode</i></code></p><p>The type code characters in the first column of Table&nbsp;7-4 show up at the end of this target string’s format. Between the <code>%</code> and the type code character, you can do any of the following:&nbsp;</p><p>* Provide a key name for indexing the dictionary used on the right side of the expression<br />* List flags that specify things like left justification (<code>−</code>), numeric sign (<code>+</code>), a blank before positive numbers and a <code>–</code> for negatives (a space), and zero fills (<code>0</code>)<br />* Give a total minimum field <code><i>width</i></code> for the substituted text<br />* Set the number of digits (precision) to display after a decimal point for floating-point numbers</p><p>Both the <code><i>width</i></code> and <code><i>precision</i></code> parts can also be coded as a <code>*</code> to specify that they should take their values from the next item in the input values on the expression’s right side (useful when this isn’t known until runtime). And if you don’t need any of these extra tools, a simple <code>%s</code> in the format string will be replaced by the corresponding value’s default print string, regardless of its type.</p>\n</div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yrcP7h7<};", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dictionary based <i>string</i> formatting expression syntax", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">'%(qty)d more %(food)s'</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'qty'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'food'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzQ0NjAsICJpZCI6ICIxNDk5NzM0MzcxNjk1LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmFwb3M7JShxdHkpZCBtb3JlICUoZm9vZClzJmFwb3M7ICUgeyZhcG9zO3F0eSZhcG9zOzogMSwgJmFwb3M7Zm9vZCZhcG9zOzogJmFwb3M7c3BhbSZhcG9zO31cbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ekAh7t0?KK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "simple templates", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Template with substitution targets</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">reply</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"\"\"</span>\n<span style=\"color: #ed9d13\">Greetings...</span>\n<span style=\"color: #ed9d13\">Hello %(name)s!</span>\n<span style=\"color: #ed9d13\">Your age is %(age)s</span>\n<span style=\"color: #ed9d13\">\"\"\"</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Build up values to substitute</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">values</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'name'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'Bob'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'age'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">40</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Perform substitutions</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(reply</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #d0d0d0\">values)</span>\n<span style=\"color: #d0d0d0\">Greetings...</span>\n<span style=\"color: #d0d0d0\">Hello</span> <span style=\"color: #d0d0d0\">Bob</span><span style=\"color: #a61717; background-color: #e3d2d2\">!</span>\n<span style=\"color: #d0d0d0\">Your</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #6ab825; font-weight: bold\">is</span> <span style=\"color: #3677a9\">40</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzQ3MTMsICJpZCI6ICIxNDk5NzM0NDY3ODc4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICMgVGVtcGxhdGUgd2l0aCBzdWJzdGl0dXRpb24gdGFyZ2V0c1xuICAgICZndDsmZ3Q7Jmd0OyByZXBseSA9ICZxdW90OyZxdW90OyZxdW90O1xuICAgIEdyZWV0aW5ncy4uLlxuICAgIEhlbGxvICUobmFtZSlzIVxuICAgIFlvdXIgYWdlIGlzICUoYWdlKXNcbiAgICAmcXVvdDsmcXVvdDsmcXVvdDtcbiAgICAmZ3Q7Jmd0OyZndDsgIyBCdWlsZCB1cCB2YWx1ZXMgdG8gc3Vic3RpdHV0ZVxuICAgICZndDsmZ3Q7Jmd0OyB2YWx1ZXMgPSB7JmFwb3M7bmFtZSZhcG9zOzogJmFwb3M7Qm9iJmFwb3M7LCAmYXBvczthZ2UmYXBvczs6IDQwfVxuICAgICZndDsmZ3Q7Jmd0OyAjIFBlcmZvcm0gc3Vic3RpdHV0aW9uc1xuICAgICZndDsmZ3Q7Jmd0OyBwcmludChyZXBseSAlIHZhbHVlcylcbiAgICBHcmVldGluZ3MuLi5cbiAgICBIZWxsbyBCb2IhXG4gICAgWW91ciBhZ2UgaXMgNDBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r,SF2@pN!C", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "function <code>vars</code>", 
                        "", 
                        "returns a <i>dictionary</i> containing all the variables that exist in the place it is called", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DW!El4_qSU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "format strings can name object attributes and dictionary keys", 
                        "", 
                        "<p>as in normal Python syntax, square brackets name dictionary keys and dots denote object attributes of an item referenced by position or keyword</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">sys</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'My {1[kind]} runs {0.platform}'</span><span style=\"color: #d0d0d0\">.format(sys,</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'kind'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'laptop'</span><span style=\"color: #d0d0d0\">})</span>\n<span style=\"color: #ed9d13\">'My laptop runs win32'</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'My {map[kind]} runs {sys.platform}'</span><span style=\"color: #d0d0d0\">.format(sys=sys,</span> <span style=\"color: #24909d\">map</span><span style=\"color: #d0d0d0\">={</span><span style=\"color: #ed9d13\">'kind'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'laptop'</span><span style=\"color: #d0d0d0\">})</span>\n<span style=\"color: #ed9d13\">'My laptop runs win32'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzUwNzgsICJpZCI6ICIxNDk5NzM0ODQ1OTUyLTAwMSIsICJtZCI6ICJhcyBpbiBub3JtYWwgUHl0aG9uIHN5bnRheCwgc3F1YXJlIGJyYWNrZXRzIG5hbWUgZGljdGlvbmFyeSBrZXlzIGFuZCBkb3RzIGRlbm90ZSBvYmplY3QgYXR0cmlidXRlcyBvZiBhbiBpdGVtIHJlZmVyZW5jZWQgYnkgcG9zaXRpb24gb3Iga2V5d29yZFxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgaW1wb3J0IHN5c1xuICBcbiAgICAmZ3Q7Jmd0OyZndDsgJmFwb3M7TXkgezFba2luZF19IHJ1bnMgezAucGxhdGZvcm19JmFwb3M7LmZvcm1hdChzeXMsIHsmYXBvcztraW5kJmFwb3M7OiAmYXBvcztsYXB0b3AmYXBvczt9KVxuICAgICZhcG9zO015IGxhcHRvcCBydW5zIHdpbjMyJmFwb3M7XG4gIFxuICAgICZndDsmZ3Q7Jmd0OyAmYXBvcztNeSB7bWFwW2tpbmRdfSBydW5zIHtzeXMucGxhdGZvcm19JmFwb3M7LmZvcm1hdChzeXM9c3lzLCBtYXA9eyZhcG9zO2tpbmQmYXBvczs6ICZhcG9zO2xhcHRvcCZhcG9zO30pXG4gICAgJmFwb3M7TXkgbGFwdG9wIHJ1bnMgd2luMzImYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dhy,~Ob=lK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Why the <code>format</code> method?", 
                        "", 
                        "<p>Although the formatting method can sometimes require more code, it also:</p>\n<ul>\n<li style=\"text-align: left; \">Has a handful of extra features not found in the <code>%</code> expression itself (though <code>%</code> can use alternatives)</li>\n<li style=\"text-align: left; \">Has more flexible value reference syntax (though it may be overkill, and <code>%</code> often has equivalents)</li>\n<li style=\"text-align: left; \">Can make substitution value references more explicit (though this is now optional)  </li>\n<li style=\"text-align: left; \">Trades an operator for a more mnemonic method name (though this is also more verbose)</li>\n<li style=\"text-align: left; \">Does not allow different syntax for single and multiple values (though practice suggests this is trivial)</li>\n<li style=\"text-align: left; \">As a function can be used in places an expression cannot (though a one-line function renders this moot)</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzU2NjEsICJpZCI6ICIxNDk5NzM1MTAzNzg0LTAwMSIsICJtZCI6ICJBbHRob3VnaCB0aGUgZm9ybWF0dGluZyBtZXRob2QgY2FuIHNvbWV0aW1lcyByZXF1aXJlIG1vcmUgY29kZSwgaXQgYWxzbzpcbiAgXG4qIEhhcyBhIGhhbmRmdWwgb2YgZXh0cmEgZmVhdHVyZXMgbm90IGZvdW5kIGluIHRoZSBgJWAgZXhwcmVzc2lvbiBpdHNlbGYgKHRob3VnaCBgJWAgY2FuIHVzZSBhbHRlcm5hdGl2ZXMpXG4qIEhhcyBtb3JlIGZsZXhpYmxlIHZhbHVlIHJlZmVyZW5jZSBzeW50YXggKHRob3VnaCBpdCBtYXkgYmUgb3ZlcmtpbGwsIGFuZCBgJWAgb2Z0ZW4gaGFzIGVxdWl2YWxlbnRzKVxuKiBDYW4gbWFrZSBzdWJzdGl0dXRpb24gdmFsdWUgcmVmZXJlbmNlcyBtb3JlIGV4cGxpY2l0ICh0aG91Z2ggdGhpcyBpcyBub3cgb3B0aW9uYWwpICBcbiogVHJhZGVzIGFuIG9wZXJhdG9yIGZvciBhIG1vcmUgbW5lbW9uaWMgbWV0aG9kIG5hbWUgKHRob3VnaCB0aGlzIGlzIGFsc28gbW9yZSB2ZXJib3NlKVxuKiBEb2VzIG5vdCBhbGxvdyBkaWZmZXJlbnQgc3ludGF4IGZvciBzaW5nbGUgYW5kIG11bHRpcGxlIHZhbHVlcyAodGhvdWdoIHByYWN0aWNlIHN1Z2dlc3RzIHRoaXMgaXMgdHJpdmlhbClcbiogQXMgYSBmdW5jdGlvbiBjYW4gYmUgdXNlZCBpbiBwbGFjZXMgYW4gZXhwcmVzc2lvbiBjYW5ub3QgKHRob3VnaCBhIG9uZS1saW5lIGZ1bmN0aW9uIHJlbmRlcnMgdGhpcyBtb290KVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z5p:c1^6ux", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>string</code> formatting expression of single value tuple", 
                        "", 
                        "<div><code>'%s' % ((1.23,),)</code></div>", 
                        "", 
                        "Formatting expression accepts tuples of values or a single value. Therefore to actually format a tuple containing one item, you must double enclose it.", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OHOTe?Y~=L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>string</code> module’s <code>Template</code> tool", 
                        "", 
                        "<p>The module’s templating system allows values to be referenced by name too, prefixed by a <code>$</code>, as either dictionary keys or keywords, but does not support all the utilities of the other two methods — a limitation that yields simplicity, the prime motivation for this tool:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">string</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">t</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">string.Template(</span><span style=\"color: #ed9d13\">'$num = $title'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">t.substitute({</span><span style=\"color: #ed9d13\">'num'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'title'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'Strings'</span><span style=\"color: #d0d0d0\">})</span>\n<span style=\"color: #ed9d13\">'7 = Strings'</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">t.substitute(num=</span><span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">title=</span><span style=\"color: #ed9d13\">'Strings'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #ed9d13\">'7 = Strings'</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">t.substitute(</span><span style=\"color: #24909d\">dict</span><span style=\"color: #d0d0d0\">(num=</span><span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">title=</span><span style=\"color: #ed9d13\">'Strings'</span><span style=\"color: #d0d0d0\">))</span>\n<span style=\"color: #ed9d13\">'7 = Strings'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzYwOTMsICJpZCI6ICIxNDk5NzM1OTMyODk2LTAwMSIsICJtZCI6ICJUaGUgbW9kdWxlXHUyMDE5cyB0ZW1wbGF0aW5nIHN5c3RlbSBhbGxvd3MgdmFsdWVzIHRvIGJlIHJlZmVyZW5jZWQgYnkgbmFtZSB0b28sIHByZWZpeGVkIGJ5IGEgYCRgLCBhcyBlaXRoZXIgZGljdGlvbmFyeSBrZXlzIG9yIGtleXdvcmRzLCBidXQgZG9lcyBub3Qgc3VwcG9ydCBhbGwgdGhlIHV0aWxpdGllcyBvZiB0aGUgb3RoZXIgdHdvIG1ldGhvZHMgXHUyMDE0IGEgbGltaXRhdGlvbiB0aGF0IHlpZWxkcyBzaW1wbGljaXR5LCB0aGUgcHJpbWUgbW90aXZhdGlvbiBmb3IgdGhpcyB0b29sOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgaW1wb3J0IHN0cmluZ1xuICAgICZndDsmZ3Q7Jmd0OyB0ID0gc3RyaW5nLlRlbXBsYXRlKCZhcG9zOyRudW0gPSAkdGl0bGUmYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IHQuc3Vic3RpdHV0ZSh7JmFwb3M7bnVtJmFwb3M7OiA3LCAmYXBvczt0aXRsZSZhcG9zOzogJmFwb3M7U3RyaW5ncyZhcG9zO30pXG4gICAgJmFwb3M7NyA9IFN0cmluZ3MmYXBvcztcbiAgICAmZ3Q7Jmd0OyZndDsgdC5zdWJzdGl0dXRlKG51bT03LCB0aXRsZT0mYXBvcztTdHJpbmdzJmFwb3M7KVxuICAgICZhcG9zOzcgPSBTdHJpbmdzJmFwb3M7XG4gICAgJmd0OyZndDsmZ3Q7IHQuc3Vic3RpdHV0ZShkaWN0KG51bT03LCB0aXRsZT0mYXBvcztTdHJpbmdzJmFwb3M7KSlcbiAgICAmYXBvczs3ID0gU3RyaW5ncyZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wX1<sl3VDO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "slice assignment, insertion, deletion", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Replacement/insertion</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">:</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Insertion (replace nothing)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">:</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Deletion (insert nothing)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">:</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3MzczMjMsICJpZCI6ICIxNDk5NzM2MTAzMDAwLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEwgPSBbMSwgMiwgM11cbiAgXG4gICAgJmd0OyZndDsmZ3Q7ICMgUmVwbGFjZW1lbnQvaW5zZXJ0aW9uXG4gICAgJmd0OyZndDsmZ3Q7IExbMToyXSA9IFs0LCA1XVxuICAgICZndDsmZ3Q7Jmd0OyBMXG4gICAgWzEsIDQsIDUsIDNdXG4gIFxuICAgICZndDsmZ3Q7Jmd0OyAjIEluc2VydGlvbiAocmVwbGFjZSBub3RoaW5nKVxuICAgICZndDsmZ3Q7Jmd0OyBMWzE6MV0gPSBbNiwgN11cbiAgICAmZ3Q7Jmd0OyZndDsgTFxuICAgIFsxLCA2LCA3LCA0LCA1LCAzXVxuICBcbiAgICAmZ3Q7Jmd0OyZndDsgIyBEZWxldGlvbiAoaW5zZXJ0IG5vdGhpbmcpXG4gICAgJmd0OyZndDsmZ3Q7IExbMToyXSA9IFtdXG4gICAgJmd0OyZndDsmZ3Q7IExcbiAgICBbMSwgNywgNCwgNSwgM11cbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GB!z~/uz^W", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>append</code> and <code>sort</code>", 
                        "", 
                        "<div>Beware these&nbsp;change lists in place and return not the list but&nbsp;<code>None</code>.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BF{>F@$4wW", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "passing in an arbitrary comparison function to sorts", 
                        "", 
                        "<div><b>Python 3.X</b> also no longer supports passing in an arbitrary comparison function to sorts, to implement different orderings. The suggested workaround is to use the <code>key=func</code> keyword argument to code value transformations during the sort, and use the <code>reverse=True</code> keyword argument to change the sort order to descending. These were the typical uses of comparison functions in the past.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ngZB-gTPU^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "built in sorting", 
                        "", 
                        "<p>sorting is also available in recent Pythons as a built-in function, which sorts any collection (not just lists) and returns a new list for the result (instead of in-place changes):</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'abc'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'ABD'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'aBe'</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Sorting built-in</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">sorted</span><span style=\"color: #d0d0d0\">(L,</span> <span style=\"color: #d0d0d0\">key=</span><span style=\"color: #24909d\">str</span><span style=\"color: #d0d0d0\">.lower,</span> <span style=\"color: #d0d0d0\">reverse=</span><span style=\"color: #24909d\">True</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'aBe'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'ABD'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'abc'</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Pretransform items: differs!</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'abc'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'ABD'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'aBe'</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">sorted</span><span style=\"color: #d0d0d0\">([x.lower()</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">x</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">L],</span> <span style=\"color: #d0d0d0\">reverse=</span><span style=\"color: #24909d\">True</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'abe'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'abd'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'abc'</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div>\n<p>Notice the last example here — we can convert to lowercase prior to the sort with a list comprehension, but the result does not contain the original list’s values as it does with the <code>key</code> argument. The latter is applied temporarily during the sort, instead of changing the values to be sorted altogether.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3Mzc1OTAsICJpZCI6ICIxNDk5NzM3NDY5MjgyLTAwMSIsICJtZCI6ICJzb3J0aW5nIGlzIGFsc28gYXZhaWxhYmxlIGluIHJlY2VudCBQeXRob25zIGFzIGEgYnVpbHQtaW4gZnVuY3Rpb24sIHdoaWNoIHNvcnRzIGFueSBjb2xsZWN0aW9uIChub3QganVzdCBsaXN0cykgYW5kIHJldHVybnMgYSBuZXcgbGlzdCBmb3IgdGhlIHJlc3VsdCAoaW5zdGVhZCBvZiBpbi1wbGFjZSBjaGFuZ2VzKTpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEwgPSBbJmFwb3M7YWJjJmFwb3M7LCAmYXBvcztBQkQmYXBvczssICZhcG9zO2FCZSZhcG9zO11cbiAgXG4gICAgJmd0OyZndDsmZ3Q7ICMgU29ydGluZyBidWlsdC1pblxuICAgICZndDsmZ3Q7Jmd0OyBzb3J0ZWQoTCwga2V5PXN0ci5sb3dlciwgcmV2ZXJzZT1UcnVlKVxuICAgIFsmYXBvczthQmUmYXBvczssICZhcG9zO0FCRCZhcG9zOywgJmFwb3M7YWJjJmFwb3M7XVxuICBcbiAgICAmZ3Q7Jmd0OyZndDsgIyBQcmV0cmFuc2Zvcm0gaXRlbXM6IGRpZmZlcnMhXG4gICAgJmd0OyZndDsmZ3Q7IEwgPSBbJmFwb3M7YWJjJmFwb3M7LCAmYXBvcztBQkQmYXBvczssICZhcG9zO2FCZSZhcG9zO11cbiAgICAmZ3Q7Jmd0OyZndDsgc29ydGVkKFt4Lmxvd2VyKCkgZm9yIHggaW4gTF0sIHJldmVyc2U9VHJ1ZSlcbiAgICBbJmFwb3M7YWJlJmFwb3M7LCAmYXBvczthYmQmYXBvczssICZhcG9zO2FiYyZhcG9zO11cbiAgXG5Ob3RpY2UgdGhlIGxhc3QgZXhhbXBsZSBoZXJlIFx1MjAxNCB3ZSBjYW4gY29udmVydCB0byBsb3dlcmNhc2UgcHJpb3IgdG8gdGhlIHNvcnQgd2l0aCBhIGxpc3QgY29tcHJlaGVuc2lvbiwgYnV0IHRoZSByZXN1bHQgZG9lcyBub3QgY29udGFpbiB0aGUgb3JpZ2luYWwgbGlzdFx1MjAxOXMgdmFsdWVzIGFzIGl0IGRvZXMgd2l0aCB0aGUgYGtleWAgYXJndW1lbnQuIFRoZSBsYXR0ZXIgaXMgYXBwbGllZCB0ZW1wb3JhcmlseSBkdXJpbmcgdGhlIHNvcnQsIGluc3RlYWQgb2YgY2hhbmdpbmcgdGhlIHZhbHVlcyB0byBiZSBzb3J0ZWQgYWx0b2dldGhlci5cbiAgXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f.B6ou}(JZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "two ways to reverse", 
                        "", 
                        "<div><code><i>L</i>.reverse()</code> and <code>list(reversed(<i>L</i>))</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i~c$7S!p9q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "new list of <code>D</code>’s keys", 
                        "", 
                        "<div><div>\n<p><code>list(D.keys())</code></p><p>The <code>in</code> membership test used for strings and lists also works on dictionaries — it checks whether a key is stored in the dictionary. Technically, this works because dictionaries define keys <i>iterators</i>, and use fast direct lookups whenever possible. Other types provide iterators that reflect their common uses; files, for example, have iterators that read line by line.</p><p>We have to enclose the above in a <code>list</code> call in <b>Python 3.X</b> for similar reasons — <code>keys</code> in <b>3.X</b> returns an <i>iterable</i> object, instead of a physical list. The <code>list</code> call forces it to produce all its values at once so we can print them interactively, though this call isn’t required some other contexts. In <b>2.X</b>, keys builds and returns an actual list, so the <code>list</code> call isn’t even needed to display a result.</p>\n</div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gzgFOu5PH#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dictionary <code>update</code> method", 
                        "", 
                        "<div>Provides dictionaries something similar to concatenation: merges keys and values of one dictionary into another, overwriting on key clash.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Bo0?TIhIx|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "stepping through dictionary keys in <code>for</code> loop", 
                        "", 
                        "Python also lets you step through a dictionary’s keys list without actually calling the <code>keys</code> method in most <code>for</code> loops. For any dictionary <code>D</code>, saying <code>for key in D</code> works the same as saying the complete <code>for key in D.keys()</code>. This is really just another instance of the iterators mentioned earlier, which allow the <code>in</code> membership operator to work on dictionaries as well\n\n", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uw!-ZpzlnE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "valid dictionary keys&nbsp;", 
                        "", 
                        "<div><div>\n<p>Keys need not always be strings. Our examples so far have used strings as keys, but any other immutable objects work just as well. For instance, you can use integers as keys, which makes the dictionary look much like a list (when indexing, at least). Tuples may be used as dictionary keys too, allowing compound key values — such as dates and IP addresses — to have associated values. User-defined class instance objects can also be used as keys, as long as they have the proper protocol methods; roughly, they need to tell Python that their values are “<b>hashable</b>” and thus won’t change, as otherwise they would be useless as fixed keys.</p>\n</div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q(XB#KL8+Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ways to build dictionaries", 
                        "", 
                        "<p>traditional literal expression</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'name'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'Bob'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'age'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">40</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div>\n<p>assign by keys dynamically</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">D</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">{};</span> <span style=\"color: #d0d0d0\">D[</span><span style=\"color: #ed9d13\">'name'</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'Bob'</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #d0d0d0\">D[</span><span style=\"color: #ed9d13\">'age'</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">40</span>\n</pre></div>\n<p><code>dict</code> keyword argument form</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">dict</span><span style=\"color: #d0d0d0\">(name=</span><span style=\"color: #ed9d13\">'Bob'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">age=</span><span style=\"color: #3677a9\">40</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p><code>dict</code> key/value tuples form</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">dict</span><span style=\"color: #d0d0d0\">([(</span><span style=\"color: #ed9d13\">'name'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'Bob'</span><span style=\"color: #d0d0d0\">),</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'age'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">40</span><span style=\"color: #d0d0d0\">)])</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA3NTk0MjgsICJpZCI6ICIxNDk5NzQ0MDQ4NDg4LTAwMiIsICJtZCI6ICJ0cmFkaXRpb25hbCBsaXRlcmFsIGV4cHJlc3Npb25cbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgeyZhcG9zO25hbWUmYXBvczs6ICZhcG9zO0JvYiZhcG9zOywgJmFwb3M7YWdlJmFwb3M7OiA0MH1cbiAgXG5hc3NpZ24gYnkga2V5cyBkeW5hbWljYWxseVxuICBcbiAgICA6OjpweXRob25cbiAgICBEID0ge307IERbJmFwb3M7bmFtZSZhcG9zO10gPSAmYXBvcztCb2ImYXBvczs7IERbJmFwb3M7YWdlJmFwb3M7XSA9IDQwXG4gIFxuYGRpY3RgIGtleXdvcmQgYXJndW1lbnQgZm9ybVxuICBcbiAgICA6OjpweXRob25cbiAgICBkaWN0KG5hbWU9JmFwb3M7Qm9iJmFwb3M7LCBhZ2U9NDApXG4gIFxuYGRpY3RgIGtleS92YWx1ZSB0dXBsZXMgZm9ybVxuICBcbiAgICA6OjpweXRob25cbiAgICBkaWN0KFsoJmFwb3M7bmFtZSZhcG9zOywgJmFwb3M7Qm9iJmFwb3M7KSwgKCZhcG9zO2FnZSZhcG9zOywgNDApXSlcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IxcKd;~}fG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "initialize dictionary with same value for all keys", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">dict</span><span style=\"color: #d0d0d0\">.fromkeys([</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div>\n<p>default is <code>None</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDQzNTYsICJpZCI6ICIxNDk5NzQ0MjAxODcxLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IGRpY3QuZnJvbWtleXMoWyZhcG9zO2EmYXBvczssICZhcG9zO2ImYXBvcztdLCAwKVxuICAgIHsmYXBvczthJmFwb3M7OiAwLCAmYXBvcztiJmFwb3M7OiAwfVxuICBcbmRlZmF1bHQgaXMgYE5vbmVgXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q8xbkp{%C;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<i>dictionary</i> backports to <b>2.7</b> from <b>3.X</b>", 
                        "", 
                        "<div><div><div>\n<p>dictionary <b>comprehensions</b> and set-like <b>iterable views</b> (but using names <code><i>D</i>.viewkeys</code>, <code><i>D</i>.viewvalues</code>, <code><i>D</i>.viewitems</code>)</p>\n</div></div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jrDrgBa=-I", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<i>dictionary</i>&nbsp;changes in&nbsp;<b>3.X</b>", 
                        "Python concept", 
                        "<ul>\n<li style=\"text-align: left; \">new dictionary <strong>comprehensions</strong></li>\n<li style=\"text-align: left; \">new set-like <strong>iterable views</strong> for <em><code>D</code></em>​<code>.keys</code>, <em><code>D</code></em>​<code>.values</code> and <em><code>D</code></em>​<code>.items</code></li>\n<li style=\"text-align: left; \">removed relative magnitude comparisons</li>\n<li style=\"text-align: left; \">removed <em><code>D</code></em>​<code>.has_key</code> method (use <code>in</code> membership test instead)</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEyNzAxNDksICJpZCI6ICIxNDk5NzQ0ODA0Nzg0LTAwMiIsICJtZCI6ICIqIG5ldyBkaWN0aW9uYXJ5ICoqY29tcHJlaGVuc2lvbnMqKlxuKiBuZXcgc2V0LWxpa2UgKippdGVyYWJsZSB2aWV3cyoqIGZvciBfYERgX1x1MjAwYmAua2V5c2AsIF9gRGBfXHUyMDBiYC52YWx1ZXNgIGFuZCBfYERgX1x1MjAwYmAuaXRlbXNgXG4qIHJlbW92ZWQgcmVsYXRpdmUgbWFnbml0dWRlIGNvbXBhcmlzb25zXG4qIHJlbW92ZWQgX2BEYF9cdTIwMGJgLmhhc19rZXlgIG1ldGhvZCAodXNlIGBpbmAgbWVtYmVyc2hpcCB0ZXN0IGluc3RlYWQpXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m~V-!A5$f`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<i>dictionary</i>&nbsp;comprehension", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">D</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">{k:</span> <span style=\"color: #d0d0d0\">v</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">(k,</span> <span style=\"color: #d0d0d0\">v)</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">zip</span><span style=\"color: #d0d0d0\">([</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'c'</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">])}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">D</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'c'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDUyMjgsICJpZCI6ICIxNDk5NzQ0OTMxMjEyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEQgPSB7azogdiBmb3IgKGssIHYpIGluIHppcChbJmFwb3M7YSZhcG9zOywgJmFwb3M7YiZhcG9zOywgJmFwb3M7YyZhcG9zO10sIFsxLCAyLCAzXSl9XG4gICAgJmd0OyZndDsmZ3Q7IERcbiAgICB7JmFwb3M7YiZhcG9zOzogMiwgJmFwb3M7YyZhcG9zOzogMywgJmFwb3M7YSZhcG9zOzogMX0gXG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u?<kLl^;yv", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<i>dictionary</i>&nbsp;views and sets", 
                        "", 
                        "<div><div><div>\n<p>Unlike <b>2.X</b>’s list results, <b>3.X</b>’s view objects returned by the <code>keys</code> method are set-like and support common set operations such as intersection and union; <code>values</code> views are not set-like, but <code>items</code> results are if their <code>(key, value)</code> pairs are unique and hashable (immutable). Given that sets behave much like valueless <i>dictionaries</i> (and may even be coded in curly braces like <i>dictionaries</i> in <b>3.X</b> and <b>2.7</b>), this is a logical symmetry. Set items are unordered, unique, and immutable, just like dictionary keys.</p>\n</div></div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E11J4,_@0{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "single item <i>tuple</i>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">40</span><span style=\"color: #d0d0d0\">,)</span>\n</pre></div>\n<p>must use trailing comma since parentheses can enclose expressions</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDAwMTcxOTEsICJpZCI6ICIxNDk5NzQ2MDE2MTY2LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgKDQwLClcbiAgXG5tdXN0IHVzZSB0cmFpbGluZyBjb21tYSBzaW5jZSBwYXJlbnRoZXNlcyBjYW4gZW5jbG9zZSBleHByZXNzaW9uc1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x<JPu{J8~~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Why <i>lists</i> and <i>tuples</i>?", 
                        "", 
                        "<div>Some of the reasoning may be historic; Python’s creator is a mathematician by training, and he has been quoted as seeing a tuple as a simple association of objects and a list as a data structure that changes over time. In fact, this use of the word “tuple” derives from mathematics, as does its frequent use for a row in a relational database table.</div><div><br /></div><div>The best answer, however, seems to be that the immutability of tuples provides some integrity — you can be sure a tuple won’t be changed through another reference elsewhere in a program, but there’s no such guarantee for lists. Tuples and other immutables, therefore, serve a similar role to “constant” declarations in other languages, though the notion of constantness is associated with objects in Python, not variables.</div><div><br /></div><div>Tuples can also be used in places that lists cannot — for example, as dictionary keys (see the sparse matrix example in Chapter 8). Some built-in operations may also require or imply tuples instead of lists (e.g., the substitution values in a string format expression), though such operations have often been generalized in recent years to be more flexible. As a rule of thumb, lists are the tool of choice for ordered collections that might need to change; tuples can handle the other cases of fixed associations.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lXd`)G->>E", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "file <code>write</code> calls return in <b>2.X</b> <i>vs.</i> <b>3.X</b>", 
                        "", 
                        "<div><div><div>\n<p>these return the number of characters written in the latter versions, so in the former you won’t see these numbers echoed interactively</p>\n</div></div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sNFYbR7SYn", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Does Python support multiple assignment?", 
                        "", 
                        "<div><div><div>\n<p><code>X, Y, Z = 1, 2, 3</code></p>\n</div></div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QTC<{;AaEc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "files in <b>2.X</b>&nbsp;<i>vs.</i> <b>3.X</b>", 
                        "", 
                        "<div><div><div>\n<p></p><div><div>\n<p>In Python <b>2.X</b>, the built-in name <code>open</code> is essentially a synonym for the name <code>file</code>, and you may technically open files by calling either <code>open</code> or <code>file</code> (though <code>open</code> is generally preferred for opening). In Python <b>3.X</b>, the name <code>file</code> is no longer available, because of its redundancy with <code>open</code>. Python <b>2.X</b> users may also use the name <code>file</code> as the file object type, in order to customize files with object-oriented programming. In Python <b>3.X</b>, files have changed radically. The classes used to implement file objects live in the standard library module <code>io</code>.</p>\n</div></div><p></p>\n</div></div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b)v<6NzEo3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "comparison mechanism for <i>strings</i>", 
                        "", 
                        "<b>lexicographically</b> (by the character set code point values returned by <code>ord</code>)&nbsp;character by character until the end or first mismatch", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n)I0y*b)I$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "comparison mechanism for <i>lists</i> and <i>tuples</i>", 
                        "", 
                        "<b>comparing each component</b> from left to right, and recursively for nested structures, until the end or first mismatch\n\n", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yX!fT-S-$O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "comparison mechanism for <i>sets</i>", 
                        "", 
                        "Sets are equal if both contain the same items (formally, if each is a subset of the other), and set relative magnitude comparisons apply subset and superset tests.\n\n", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z6Zut~iTr.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "comparison mechanism for <i>dictionaries</i>", 
                        "", 
                        "Equal if their sorted <code>(key, value)</code> lists are equal. Relative magnitude comparisons are not supported in<b>&nbsp;3.X</b>&nbsp;but work in <b>2.X</b> as though comparing sorted <code>(key, value)</code> lists.\n\n", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F,VG&rN2]j", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "true and false in Python", 
                        "", 
                        "<i>numbers</i> are false if zero, <i>objects</i> are false if empty<div><br /></div><div>So if&nbsp;<code>X</code> is a string, can do <code>if X:</code> instead of <code>if X != '':</code>.</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f!a}$h&u$o", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "preallocate 100 item list", 
                        "", 
                        "<code>L = [None] * 100</code>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Er2tgpn75^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for creating references", 
                        "", 
                        "<p>assignment</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">a,</span> <span style=\"color: #d0d0d0\">b</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'good'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'bad'</span>\n</pre></div>\n<p>Assignment statements come in a variety of syntax flavors: basic, sequence, augmented, and more.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTAwODIsICJpZCI6ICIxNDk5NzQ3NzY0Mjc5LTAwMSIsICJtZCI6ICJhc3NpZ25tZW50XG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGEsIGIgPSAmYXBvcztnb29kJmFwb3M7LCAmYXBvcztiYWQmYXBvcztcbiAgXG5Bc3NpZ25tZW50IHN0YXRlbWVudHMgY29tZSBpbiBhIHZhcmlldHkgb2Ygc3ludGF4IGZsYXZvcnM6IGJhc2ljLCBzZXF1ZW5jZSwgYXVnbWVudGVkLCBhbmQgbW9yZS5cbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ff.q)QOX#Z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for running functions", 
                        "", 
                        "<p>calls and other expressions</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">log.write(</span><span style=\"color: #ed9d13\">\"spam, ham\"</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkwNzAsICJpZCI6ICIxNDk5NzQ4OTk0MTAyLTAwMSIsICJtZCI6ICJjYWxscyBhbmQgb3RoZXIgZXhwcmVzc2lvbnNcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgbG9nLndyaXRlKCZxdW90O3NwYW0sIGhhbSZxdW90OylcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q`Z+ALK3EH", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for printing objects", 
                        "", 
                        "<p><code>print</code> calls</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'The Killer'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">joke)</span>\n</pre></div>\n<p><code>print</code> is technically neither a reserved word nor a statement in <strong>3.X</strong>, but a built-in function call; because it will nearly always be run as an expression statement, though (and often on a line by itself), it’s generally thought of as a statement type. In <strong>2.X</strong>, <code>print</code> is a statement instead of a built-in function call, with specific syntax.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTAyOTMsICJpZCI6ICIxNDk5NzQ5MDczMTA1LTAwMSIsICJtZCI6ICJgcHJpbnRgIGNhbGxzXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHByaW50KCZhcG9zO1RoZSBLaWxsZXImYXBvczssIGpva2UpXG4gIFxuYHByaW50YCBpcyB0ZWNobmljYWxseSBuZWl0aGVyIGEgcmVzZXJ2ZWQgd29yZCBub3IgYSBzdGF0ZW1lbnQgaW4gKiozLlgqKiwgYnV0IGEgYnVpbHQtaW4gZnVuY3Rpb24gY2FsbDsgYmVjYXVzZSBpdCB3aWxsIG5lYXJseSBhbHdheXMgYmUgcnVuIGFzIGFuIGV4cHJlc3Npb24gc3RhdGVtZW50LCB0aG91Z2ggKGFuZCBvZnRlbiBvbiBhIGxpbmUgYnkgaXRzZWxmKSwgaXRcdTIwMTlzIGdlbmVyYWxseSB0aG91Z2h0IG9mIGFzIGEgc3RhdGVtZW50IHR5cGUuIEluICoqMi5YKiosIGBwcmludGAgaXMgYSBzdGF0ZW1lbnQgaW5zdGVhZCBvZiBhIGJ1aWx0LWluIGZ1bmN0aW9uIGNhbGwsIHdpdGggc3BlY2lmaWMgc3ludGF4LlxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KE5]YztkZ0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for selecting actions", 
                        "", 
                        "<p><code>if</code> / <code>elif</code> / <code>else</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">if</span> <span style=\"color: #ed9d13\">\"python\"</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">text:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(text)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkxNzUsICJpZCI6ICIxNDk5NzQ5MTIwOTIwLTAwMSIsICJtZCI6ICJgaWZgIC8gYGVsaWZgIC8gYGVsc2VgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGlmICZxdW90O3B5dGhvbiZxdW90OyBpbiB0ZXh0OlxuICAgICAgcHJpbnQodGV4dClcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Bk8eLyesJ_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for iteration", 
                        "", 
                        "<p><code>for</code> / <code>else</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">x</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">mylist:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(x)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkyMjEsICJpZCI6ICIxNDk5NzQ5MTgxMTU1LTAwMSIsICJtZCI6ICJgZm9yYCAvIGBlbHNlYFxuICBcbiAgICA6OjpweXRob25cbiAgICBmb3IgeCBpbiBteWxpc3Q6XG4gICAgICBwcmludCh4KVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m:J@0LiVUK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for general loops", 
                        "", 
                        "<p><code>while</code> / <code>else</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">while</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #d0d0d0\">Y:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'hello'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkyNTcsICJpZCI6ICIxNDk5NzQ5MjIzODE3LTAwMSIsICJtZCI6ICJgd2hpbGVgIC8gYGVsc2VgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHdoaWxlIFggJmd0OyBZOlxuICAgICAgcHJpbnQoJmFwb3M7aGVsbG8mYXBvczspXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s{gL*c2GB#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for empty placeholder", 
                        "", 
                        "<p><code>pass</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">while</span> <span style=\"color: #24909d\">True</span><span style=\"color: #d0d0d0\">:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">pass</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkyOTYsICJpZCI6ICIxNDk5NzQ5MjU5MzUzLTAwMSIsICJtZCI6ICJgcGFzc2BcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgd2hpbGUgVHJ1ZTpcbiAgICAgIHBhc3NcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cxU.[N2DA(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for loop exit", 
                        "", 
                        "<p><code>break</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">while</span> <span style=\"color: #24909d\">True</span><span style=\"color: #d0d0d0\">:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">exittest():</span> <span style=\"color: #6ab825; font-weight: bold\">break</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkzMzksICJpZCI6ICIxNDk5NzQ5MzAwMzYwLTAwMSIsICJtZCI6ICJgYnJlYWtgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHdoaWxlIFRydWU6XG4gICAgICBpZiBleGl0dGVzdCgpOiBicmVha1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N;D=UyU3)@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for continuing loops", 
                        "", 
                        "<p><code>continue</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">while</span> <span style=\"color: #24909d\">True</span><span style=\"color: #d0d0d0\">:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">skiptest():</span> <span style=\"color: #6ab825; font-weight: bold\">continue</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDkzNjgsICJpZCI6ICIxNDk5NzQ5MzQ0ODE2LTAwMSIsICJtZCI6ICJgY29udGludWVgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHdoaWxlIFRydWU6XG4gICAgICBpZiBza2lwdGVzdCgpOiBjb250aW51ZVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xHa[%m?A*o", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for functions and methods", 
                        "", 
                        "<p><code>def</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">def</span> <span style=\"color: #447fcf\">f</span><span style=\"color: #d0d0d0\">(a,</span> <span style=\"color: #d0d0d0\">b,</span> <span style=\"color: #d0d0d0\">c=</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">*d):</span>\n  <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(a+b+c+d[</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">])</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk0MjUsICJpZCI6ICIxNDk5NzQ5MzcwMTE0LTAwMSIsICJtZCI6ICJgZGVmYFxuICBcbiAgICA6OjpweXRob25cbiAgICBkZWYgZihhLCBiLCBjPTEsICpkKTpcbiAgICAgIHByaW50KGErYitjK2RbMF0pXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E*K$n}(|CN", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "statement for functions results", 
                        "", 
                        "<p><code>return</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">def</span> <span style=\"color: #447fcf\">f</span><span style=\"color: #d0d0d0\">(a,</span> <span style=\"color: #d0d0d0\">b,</span> <span style=\"color: #d0d0d0\">c=</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">*d):</span>\n  <span style=\"color: #6ab825; font-weight: bold\">return</span> <span style=\"color: #d0d0d0\">a+b+c+d[</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk0NTUsICJpZCI6ICIxNDk5NzQ5NDMwMjkzLTAwMSIsICJtZCI6ICJgcmV0dXJuYFxuICBcbiAgICA6OjpweXRob25cbiAgICBkZWYgZihhLCBiLCBjPTEsICpkKTpcbiAgICAgIHJldHVybiBhK2IrYytkWzBdXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "8f>)N8_KR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for generator functions</div>", 
                        "", 
                        "<p><code>yield</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">def</span> <span style=\"color: #447fcf\">gen</span><span style=\"color: #d0d0d0\">(n):</span>\n  <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">n:</span> <span style=\"color: #6ab825; font-weight: bold\">yield</span> <span style=\"color: #d0d0d0\">i*</span><span style=\"color: #3677a9\">2</span>\n</pre></div>\n<p><code>yield</code> is also an expression instead of a statement as of <strong>2.5</strong>; like <code>print</code>, it’s typically used as an expression statement, but scripts occasionally assign or otherwise use its result. As an expression, <code>yield</code> is also a reserved word, unlike <code>print</code>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTAyMzUsICJpZCI6ICIxNDk5NzQ5NDYwMTE3LTAwMSIsICJtZCI6ICJgeWllbGRgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGRlZiBnZW4obik6XG4gICAgICBmb3IgaSBpbiBuOiB5aWVsZCBpKjJcbiAgXG5geWllbGRgIGlzIGFsc28gYW4gZXhwcmVzc2lvbiBpbnN0ZWFkIG9mIGEgc3RhdGVtZW50IGFzIG9mICoqMi41Kio7IGxpa2UgYHByaW50YCwgaXRcdTIwMTlzIHR5cGljYWxseSB1c2VkIGFzIGFuIGV4cHJlc3Npb24gc3RhdGVtZW50LCBidXQgc2NyaXB0cyBvY2Nhc2lvbmFsbHkgYXNzaWduIG9yIG90aGVyd2lzZSB1c2UgaXRzIHJlc3VsdC4gQXMgYW4gZXhwcmVzc2lvbiwgYHlpZWxkYCBpcyBhbHNvIGEgcmVzZXJ2ZWQgd29yZCwgdW5saWtlIGBwcmludGAuXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PI7KidK4},", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for namespaces</div>", 
                        "", 
                        "<p><code>global</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">x</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'old'</span>\n<span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">function</span><span style=\"color: #d0d0d0\">():</span>\n  <span style=\"color: #6ab825; font-weight: bold\">global</span> <span style=\"color: #d0d0d0\">x,</span> <span style=\"color: #d0d0d0\">y;</span> <span style=\"color: #d0d0d0\">x</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'new'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk5OTQsICJpZCI6ICIxNDk5NzQ5NTAyODcyLTAwMSIsICJtZCI6ICJgZ2xvYmFsYFxuICBcbiAgICA6OjpweXRob25cbiAgICB4ID0gJmFwb3M7b2xkJmFwb3M7XG4gICAgZGVmIGZ1bmN0aW9uKCk6XG4gICAgICBnbG9iYWwgeCwgeTsgeCA9ICZhcG9zO25ldyZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c(g[jFY8-v", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for namespaces (<b>3.X</b>)</div>", 
                        "", 
                        "<p><code>nonlocal</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">def</span> <span style=\"color: #447fcf\">outer</span><span style=\"color: #d0d0d0\">():</span>\n  <span style=\"color: #d0d0d0\">x</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'old'</span>\n  <span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">function</span><span style=\"color: #d0d0d0\">():</span>\n    <span style=\"color: #d0d0d0\">nonlocal</span> <span style=\"color: #d0d0d0\">x;</span> <span style=\"color: #d0d0d0\">x</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'new'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk2NTAsICJpZCI6ICIxNDk5NzQ5NTgzNzQ2LTAwMSIsICJtZCI6ICJgbm9ubG9jYWxgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGRlZiBvdXRlcigpOlxuICAgICAgeCA9ICZhcG9zO29sZCZhcG9zO1xuICAgICAgZGVmIGZ1bmN0aW9uKCk6XG4gICAgICAgIG5vbmxvY2FsIHg7IHggPSAmYXBvcztuZXcmYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j&mAttUy+C", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for module access</div>", 
                        "", 
                        "<p><code>import</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">sys</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk2NzksICJpZCI6ICIxNDk5NzQ5NjUyMjcwLTAwMSIsICJtZCI6ICJgaW1wb3J0YFxuICBcbiAgICA6OjpweXRob25cbiAgICBpbXBvcnQgc3lzXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m%@p2wfgvM", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for attribute access</div>", 
                        "", 
                        "<p><code>from</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">from</span> <span style=\"color: #447fcf; text-decoration: underline\">sys</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #d0d0d0\">stdin</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk3MDIsICJpZCI6ICIxNDk5NzQ5NjgxODIyLTAwMSIsICJtZCI6ICJgZnJvbWBcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgZnJvbSBzeXMgaW1wb3J0IHN0ZGluXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g=sFREXT>v", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for building objects</div>", 
                        "", 
                        "<p><code>class</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">class</span> <span style=\"color: #447fcf; text-decoration: underline\">Subclass</span><span style=\"color: #d0d0d0\">(Superclass):</span>\n  <span style=\"color: #d0d0d0\">staticData</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[]</span>\n  <span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">method</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">self</span><span style=\"color: #d0d0d0\">):</span> <span style=\"color: #6ab825; font-weight: bold\">pass</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk3NDUsICJpZCI6ICIxNDk5NzQ5NzA1MzgzLTAwMSIsICJtZCI6ICJgY2xhc3NgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGNsYXNzIFN1YmNsYXNzKFN1cGVyY2xhc3MpOlxuICAgICAgc3RhdGljRGF0YSA9IFtdXG4gICAgICBkZWYgbWV0aG9kKHNlbGYpOiBwYXNzXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jiTOA6aK&s", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for catching exceptions</div>", 
                        "", 
                        "<p><code>try</code> / <code>except</code> / <code>finally</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">try</span><span style=\"color: #d0d0d0\">:</span>\n  <span style=\"color: #d0d0d0\">action()</span>\n<span style=\"color: #6ab825; font-weight: bold\">except</span><span style=\"color: #d0d0d0\">:</span>\n  <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'action error'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>In <strong>2.5</strong>, the <code>try</code> / <code>except</code> and <code>try</code> / <code>finally</code> statements were merged: the two were formerly separate statements, but we can now say both <code>except</code> and <code>finally</code> in the same <code>try</code> statement.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTA3MjQsICJpZCI6ICIxNDk5NzQ5NzQ2NzQ0LTAwMSIsICJtZCI6ICJgdHJ5YCAvIGBleGNlcHRgIC8gYGZpbmFsbHlgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHRyeTpcbiAgICAgIGFjdGlvbigpXG4gICAgZXhjZXB0OlxuICAgICAgcHJpbnQoJmFwb3M7YWN0aW9uIGVycm9yJmFwb3M7KVxuICBcbkluICoqMi41KiosIHRoZSBgdHJ5YCAvIGBleGNlcHRgIGFuZCBgdHJ5YCAvIGBmaW5hbGx5YCBzdGF0ZW1lbnRzIHdlcmUgbWVyZ2VkOiB0aGUgdHdvIHdlcmUgZm9ybWVybHkgc2VwYXJhdGUgc3RhdGVtZW50cywgYnV0IHdlIGNhbiBub3cgc2F5IGJvdGggYGV4Y2VwdGAgYW5kIGBmaW5hbGx5YCBpbiB0aGUgc2FtZSBgdHJ5YCBzdGF0ZW1lbnQuXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Gl@++x3p&x", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for triggering exceptions</div>", 
                        "", 
                        "<p><code>raise</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">raise</span> <span style=\"color: #d0d0d0\">EndSearch(location)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk4MjYsICJpZCI6ICIxNDk5NzQ5Nzk5Nzg1LTAwMSIsICJtZCI6ICJgcmFpc2VgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHJhaXNlIEVuZFNlYXJjaChsb2NhdGlvbilcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f0burCf|QW", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for debugging checks</div>", 
                        "", 
                        "<p><code>assert</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">assert</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #d0d0d0\">Y,</span> <span style=\"color: #ed9d13\">'X too small'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk4NTAsICJpZCI6ICIxNDk5NzQ5ODI5MDE4LTAwMSIsICJtZCI6ICJgYXNzZXJ0YFxuICBcbiAgICA6OjpweXRob25cbiAgICBhc3NlcnQgWCAmZ3Q7IFksICZhcG9zO1ggdG9vIHNtYWxsJmFwb3M7XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i>NX#{cW,V", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for context managers&nbsp;(<b>3.X</b>, <b>2.6+</b>)</div>", 
                        "", 
                        "<p><code>with</code> / <code>as</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">with</span> <span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'data'</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #6ab825; font-weight: bold\">as</span> <span style=\"color: #d0d0d0\">myfile:</span>\n  <span style=\"color: #d0d0d0\">process(myfile)</span>\n</pre></div>\n<p>In <strong>2.5</strong>, <code>with</code> / <code>as</code> is an optional extension, and it is not available unless you explicitly turn it on by running the statement:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">from</span> <span style=\"color: #447fcf; text-decoration: underline\">__future__</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #d0d0d0\">with_statement</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTA3OTQsICJpZCI6ICIxNDk5NzQ5ODUzNjg3LTAwMSIsICJtZCI6ICJgd2l0aGAgLyBgYXNgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIHdpdGggb3BlbigmYXBvcztkYXRhJmFwb3M7KSBhcyBteWZpbGU6XG4gICAgICBwcm9jZXNzKG15ZmlsZSlcbiAgXG5JbiAqKjIuNSoqLCBgd2l0aGAgLyBgYXNgIGlzIGFuIG9wdGlvbmFsIGV4dGVuc2lvbiwgYW5kIGl0IGlzIG5vdCBhdmFpbGFibGUgdW5sZXNzIHlvdSBleHBsaWNpdGx5IHR1cm4gaXQgb24gYnkgcnVubmluZyB0aGUgc3RhdGVtZW50OlxuICBcbiAgICA6OjpweXRob25cbiAgICBmcm9tIF9fZnV0dXJlX18gaW1wb3J0IHdpdGhfc3RhdGVtZW50XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ynu0]nczii", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for deleting references</div>", 
                        "", 
                        "<p><code>del</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">del</span> <span style=\"color: #d0d0d0\">data[k]</span>\n<span style=\"color: #6ab825; font-weight: bold\">del</span> <span style=\"color: #d0d0d0\">data[i:j]</span>\n<span style=\"color: #6ab825; font-weight: bold\">del</span> <span style=\"color: #d0d0d0\">obj.attr</span>\n<span style=\"color: #6ab825; font-weight: bold\">del</span> <span style=\"color: #d0d0d0\">variable</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NDk5MzAsICJpZCI6ICIxNDk5NzQ5ODk3Mjk2LTAwMSIsICJtZCI6ICJgZGVsYFxuICBcbiAgICA6OjpweXRob25cbiAgICBkZWwgZGF0YVtrXVxuICAgIGRlbCBkYXRhW2k6al1cbiAgICBkZWwgb2JqLmF0dHJcbiAgICBkZWwgdmFyaWFibGVcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J/iy[y3$T8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statement for executing statements (<b>2.X</b>)</div>", 
                        "", 
                        "<p><code>exec</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">exec</span> <span style=\"color: #ed9d13\">'print 5'</span>\n<span style=\"color: #6ab825; font-weight: bold\">exec</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'print 5'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>In <strong>2.X</strong>, the <strong>3.X</strong> <code>exec</code> code execution built-in function is a statement, with specific syntax; since it supports enclosing parentheses, though, you can generally use its <strong>3.X</strong> call form in <strong>2.X</strong> code.</p>\n<p><code>eval()</code> is restricted to only accepting expressions, which are a kind of statement. <code>exec()</code>, however, can handle all statements.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTA2MzksICJpZCI6ICIxNDk5NzUwMTY3MDMzLTAwMSIsICJtZCI6ICJgZXhlY2BcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgZXhlYyAmYXBvcztwcmludCA1JmFwb3M7XG4gICAgZXhlYygmYXBvcztwcmludCA1JmFwb3M7KVxuICBcbkluICoqMi5YKiosIHRoZSAqKjMuWCoqIGBleGVjYCBjb2RlIGV4ZWN1dGlvbiBidWlsdC1pbiBmdW5jdGlvbiBpcyBhIHN0YXRlbWVudCwgd2l0aCBzcGVjaWZpYyBzeW50YXg7IHNpbmNlIGl0IHN1cHBvcnRzIGVuY2xvc2luZyBwYXJlbnRoZXNlcywgdGhvdWdoLCB5b3UgY2FuIGdlbmVyYWxseSB1c2UgaXRzICoqMy5YKiogY2FsbCBmb3JtIGluICoqMi5YKiogY29kZS5cbiAgXG5gZXZhbCgpYCBpcyByZXN0cmljdGVkIHRvIG9ubHkgYWNjZXB0aW5nIGV4cHJlc3Npb25zLCB3aGljaCBhcmUgYSBraW5kIG9mIHN0YXRlbWVudC4gYGV4ZWMoKWAsIGhvd2V2ZXIsIGNhbiBoYW5kbGUgYWxsIHN0YXRlbWVudHMuXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ma@On/Faxe", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>Is <code>if (x &lt; y)</code> valid Python?</div>", 
                        "", 
                        "<div>Yes, every expression can be enclosed in parentheses, but they are not required: <code>if x &lt; y</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ws,Bp/t=6P", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>Does Python require semicolon terminated lines?</div>", 
                        "", 
                        "<div>No, end of line is end of statement, but semicolons can separate statements when combined on the same line, so it is not an error to terminate lines with them.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OuX1<z;h[<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>indentation rules</div>", 
                        "", 
                        "<b>For a given single nested block, all of its statements must be indented the same.</b><div><br /></div><div>You may use any number of either spaces or tabs, and the indentation of one nested block can be totally different from that of another.</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n}WZfj:+gB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>statements on one line</div>", 
                        "", 
                        "The only place in Python where semicolons are required is as statement separators, which only works if the statements thus combined are not themselves compound statements. You can chain together <b>only simple statements</b>, like assignments, <code>print</code>s, and function calls. Compound statements like <code>if</code> tests and <code>while</code> loops must still appear on lines of their own.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v1npUnC5K,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>how continuation lines must be indented</div>", 
                        "", 
                        "It does not matter, though common sense dictates they should be aligned somehow for readability.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l6p4[#v(gi", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>making statements multiline</div>", 
                        "", 
                        "<p>Parentheses are the catchall device — because any expression can be wrapped in them, simply inserting a left parenthesis allows you to drop down to the next line and continue your statement: </p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">(A</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #d0d0d0\">+</span>\n     <span style=\"color: #d0d0d0\">C</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #d0d0d0\">D)</span>\n</pre></div>\n<p>This technique works with compound statements, too. Anywhere you need to code a large expression, simply wrap it in parentheses to continue it on the next line:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">(A</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #6ab825; font-weight: bold\">and</span>\n    <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #3677a9\">2</span> <span style=\"color: #6ab825; font-weight: bold\">and</span>\n    <span style=\"color: #d0d0d0\">C</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">):</span>\n        <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span> <span style=\"color: #d0d0d0\">*</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>An older rule also allows for continuation lines when the prior line ends in a backslash:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999; font-style: italic\"># An error-prone older alternative  </span>\n<span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">A</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #d0d0d0\">+</span> \\\n    <span style=\"color: #d0d0d0\">C</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #d0d0d0\">D</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTE5MTgsICJpZCI6ICIxNDk5NzUxNjk1MTcxLTAwMSIsICJtZCI6ICJQYXJlbnRoZXNlcyBhcmUgdGhlIGNhdGNoYWxsIGRldmljZSBcdTIwMTQgYmVjYXVzZSBhbnkgZXhwcmVzc2lvbiBjYW4gYmUgd3JhcHBlZCBpbiB0aGVtLCBzaW1wbHkgaW5zZXJ0aW5nIGEgbGVmdCBwYXJlbnRoZXNpcyBhbGxvd3MgeW91IHRvIGRyb3AgZG93biB0byB0aGUgbmV4dCBsaW5lIGFuZCBjb250aW51ZSB5b3VyIHN0YXRlbWVudDogXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIFggPSAoQSArIEIgK1xuICAgICAgICAgQyArIEQpXG4gIFxuVGhpcyB0ZWNobmlxdWUgd29ya3Mgd2l0aCBjb21wb3VuZCBzdGF0ZW1lbnRzLCB0b28uIEFueXdoZXJlIHlvdSBuZWVkIHRvIGNvZGUgYSBsYXJnZSBleHByZXNzaW9uLCBzaW1wbHkgd3JhcCBpdCBpbiBwYXJlbnRoZXNlcyB0byBjb250aW51ZSBpdCBvbiB0aGUgbmV4dCBsaW5lOlxuICBcbiAgICA6OjpweXRob25cbiAgICBpZiAoQSA9PSAxIGFuZFxuICAgICAgICBCID09IDIgYW5kXG4gICAgICAgIEMgPT0gMyk6XG4gICAgICAgICAgICBwcmludCgmYXBvcztzcGFtJmFwb3M7ICogMylcbiAgXG5BbiBvbGRlciBydWxlIGFsc28gYWxsb3dzIGZvciBjb250aW51YXRpb24gbGluZXMgd2hlbiB0aGUgcHJpb3IgbGluZSBlbmRzIGluIGEgYmFja3NsYXNoOlxuICBcbiAgICA6OjpweXRob25cbiAgICAjIEFuIGVycm9yLXByb25lIG9sZGVyIGFsdGVybmF0aXZlICBcbiAgICBYID0gQSArIEIgKyBcXFxuICAgICAgICBDICsgRCAgICAgICAgICAgICAgICAgIFxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xZN0/mcOR9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div><code>input</code> in <b>2.X</b></div>", 
                        "", 
                        "<div><code>raw_input</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Qq.dNGI/7z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: basic</div>", 
                        "", 
                        "<div><code>spam = 'Spam'</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "basic assignment", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qg#gl):r7L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: tuple (positional)</div>", 
                        "", 
                        "<div><code>spam, ham = 'yum', 'YUM'</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "tuple (positional) assignment", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C1}-[R,HQ#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: list (positional)</div>", 
                        "", 
                        "<div><code>[spam, ham] = ['yum', 'YUM']</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "list (positional)&nbsp;assignment", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pd%pfuWTU!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: sequence, generalized</div>", 
                        "", 
                        "<div><code>a, b, c, d = 'spam'</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "sequence assigment", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "se8Z]FI/mq", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: extended sequence unpacking (<b>3.X</b>)</div>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">a,</span> <span style=\"color: #d0d0d0\">*b</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'spam'</span>\n<span style=\"color: #d0d0d0\">*a,</span> <span style=\"color: #d0d0d0\">b</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'spam'</span>\n<span style=\"color: #d0d0d0\">a,</span> <span style=\"color: #d0d0d0\">*b,</span> <span style=\"color: #d0d0d0\">c</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'spam'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTM1MDYsICJpZCI6ICIxNDk5NzUyMzE1NTM0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgYSwgKmIgPSAmYXBvcztzcGFtJmFwb3M7XG4gICAgKmEsIGIgPSAmYXBvcztzcGFtJmFwb3M7XG4gICAgYSwgKmIsIGMgPSAmYXBvcztzcGFtJmFwb3M7XG4ifQ==---->", 
                        "", 
                        "", 
                        "reverse", 
                        "extended sequence unpacking assignment (<b>3.X</b>)", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vol(aA_Z[%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: multiple target</div>", 
                        "", 
                        "<div><code>spam = ham = 'lunch'</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "multiple target assignment", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ZOSWptta3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>assignment statement form: augmented</div>", 
                        "", 
                        "<div><code>spam += 42</code></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "augmented assignment", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IUIv$qc/Te", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>swap two variables</div>", 
                        "", 
                        "<div><code>a, b = b, a</code></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M8v-UZ)_XF", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>sequence assignment supports these types of objects</div>", 
                        "", 
                        "<div>any iterable object can be on the right</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FI-^t516fk", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<div>Does sequence assignment support nesting?</div>", 
                        "", 
                        "<p>Yes. Nested tuple (really, sequence) unpacking assignment works for function argument lists in <strong>2.X</strong> (though not in <strong>3.X</strong>), because function arguments are passed by assignment as well.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">string</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'SPAM'</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">(a,</span> <span style=\"color: #d0d0d0\">b),</span> <span style=\"color: #d0d0d0\">c</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">string[:</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #d0d0d0\">string[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">:]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">a,</span> <span style=\"color: #d0d0d0\">b,</span> <span style=\"color: #d0d0d0\">c</span>\n<span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'S'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'P'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'AM'</span><span style=\"color: #d0d0d0\">)</span>\n\n<span style=\"color: #999999; font-style: italic\"># Nested tuple assignment</span>\n<span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">((a,</span> <span style=\"color: #d0d0d0\">b),</span> <span style=\"color: #d0d0d0\">c)</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">[((</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">),</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">),</span> <span style=\"color: #d0d0d0\">((</span><span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">),</span> <span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">)]:</span> <span style=\"color: #d0d0d0\">...</span>\n\n<span style=\"color: #999999; font-style: italic\"># For arguments too in Python 2.X, but not 3.X</span>\n<span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">f</span><span style=\"color: #d0d0d0\">(((a,</span> <span style=\"color: #d0d0d0\">b),</span> <span style=\"color: #d0d0d0\">c)):</span> <span style=\"color: #d0d0d0\">...</span>\n<span style=\"color: #d0d0d0\">f(((</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">),</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">))</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTI4NjIsICJpZCI6ICIxNDk5NzUyNzA4MjI1LTAwMSIsICJtZCI6ICJZZXMuIE5lc3RlZCB0dXBsZSAocmVhbGx5LCBzZXF1ZW5jZSkgdW5wYWNraW5nIGFzc2lnbm1lbnQgd29ya3MgZm9yIGZ1bmN0aW9uIGFyZ3VtZW50IGxpc3RzIGluICoqMi5YKiogKHRob3VnaCBub3QgaW4gKiozLlgqKiksIGJlY2F1c2UgZnVuY3Rpb24gYXJndW1lbnRzIGFyZSBwYXNzZWQgYnkgYXNzaWdubWVudCBhcyB3ZWxsLlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgc3RyaW5nID0gJmFwb3M7U1BBTSZhcG9zO1xuICAgICZndDsmZ3Q7Jmd0OyAoYSwgYiksIGMgPSBzdHJpbmdbOjJdLCBzdHJpbmdbMjpdXG4gICAgJmd0OyZndDsmZ3Q7IGEsIGIsIGNcbiAgICAoJmFwb3M7UyZhcG9zOywgJmFwb3M7UCZhcG9zOywgJmFwb3M7QU0mYXBvczspXG4gIFxuICAgICMgTmVzdGVkIHR1cGxlIGFzc2lnbm1lbnRcbiAgICBmb3IgKChhLCBiKSwgYykgaW4gWygoMSwgMiksIDMpLCAoKDQsIDUpLCA2KV06IC4uLlxuICBcbiAgICAjIEZvciBhcmd1bWVudHMgdG9vIGluIFB5dGhvbiAyLlgsIGJ1dCBub3QgMy5YXG4gICAgZGVmIGYoKChhLCBiKSwgYykpOiAuLi5cbiAgICBmKCgoMSwgMiksIDMpKVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vI%VACs]!H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python’s equivalent of the enumerated data types\n\n", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">red,</span> <span style=\"color: #d0d0d0\">green,</span> <span style=\"color: #d0d0d0\">blue</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">red,</span> <span style=\"color: #d0d0d0\">blue</span>\n<span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDAwMTc5MDIsICJpZCI6ICIxNDk5NzUyOTE2OTQyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IHJlZCwgZ3JlZW4sIGJsdWUgPSByYW5nZSgzKVxuICAgICZndDsmZ3Q7Jmd0OyByZWQsIGJsdWVcbiAgICAoMCwgMilcbiJ9---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o4.zqn,t,b", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "difference between <b>sequence unpacking</b> and <b>slices</b>", 
                        "", 
                        "<div>the former always returns a list for multiple matched items, whereas the latter returns a sequence of the same type as the original object</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JDS(W^JQ76", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python", 
                        "statements"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "what a starred name is assigned if there is nothing left to match", 
                        "", 
                        "<div>an empty list</div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mO#)=`k,uI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Must starred names be within a sequence?", 
                        "", 
                        "<p>Yes: <code>*a, = seq</code> not <code>*a = seq</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">*a</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">seq</span>\n<span style=\"color: #bbbbbb\">SyntaxError</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #d0d0d0\">starred</span> <span style=\"color: #d0d0d0\">assignment</span> <span style=\"color: #d0d0d0\">target</span> <span style=\"color: #d0d0d0\">must</span> <span style=\"color: #d0d0d0\">be</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">a</span> <span style=\"color: #24909d\">list</span> <span style=\"color: #6ab825; font-weight: bold\">or</span> <span style=\"color: #24909d\">tuple</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">*a,</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">seq</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">a</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTM5MTAsICJpZCI6ICIxNDk5NzUzNzQzMTI4LTAwMSIsICJtZCI6ICJZZXM6IGAqYSwgPSBzZXFgIG5vdCBgKmEgPSBzZXFgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgICZndDsmZ3Q7Jmd0OyAqYSA9IHNlcVxuICAgIFN5bnRheEVycm9yOiBzdGFycmVkIGFzc2lnbm1lbnQgdGFyZ2V0IG11c3QgYmUgaW4gYSBsaXN0IG9yIHR1cGxlXG4gIFxuICAgICZndDsmZ3Q7Jmd0OyAqYSwgPSBzZXFcbiAgICAmZ3Q7Jmd0OyZndDsgYVxuICAgIFsxLCAyLCAzLCA0XVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z}Bp_8Qb>o", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Is <code>a = b = []</code> valid?", 
                        "", 
                        "<p>Yes, but <code>a</code> and <code>b</code> will both point to the same mutable object.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">a</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">b</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">b.append(</span><span style=\"color: #3677a9\">42</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">a,</span> <span style=\"color: #d0d0d0\">b</span>\n<span style=\"color: #d0d0d0\">([</span><span style=\"color: #3677a9\">42</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">42</span><span style=\"color: #d0d0d0\">])</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTQwMjksICJpZCI6ICIxNDk5NzUzOTIxMjgxLTAwMSIsICJtZCI6ICJZZXMsIGJ1dCBgYWAgYW5kIGBiYCB3aWxsIGJvdGggcG9pbnQgdG8gdGhlIHNhbWUgbXV0YWJsZSBvYmplY3QuXG4gIFxuICAgIDo6OnB5dGhvblxuICAgICZndDsmZ3Q7Jmd0OyBhID0gYiA9IFtdXG4gICAgJmd0OyZndDsmZ3Q7IGIuYXBwZW5kKDQyKVxuICAgICZndDsmZ3Q7Jmd0OyBhLCBiXG4gICAgKFs0Ml0sIFs0Ml0pXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dUn$YH&cF4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "variable name syntax", 
                        "", 
                        "<div><div><div>\n<p>(underscore or letter) + (any number of letters, digits, or underscores)</p>\n</div></div></div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nnS:Xzzflv", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Are&nbsp;<code>L += [3, 4]</code> and <code>L = L + [3, 4]</code>&nbsp;the same?", 
                        "", 
                        "<p>The <code>+=</code> is an in-place change for lists; thus, it is not exactly like <code>+</code> concatenation, which always makes a new object.</p>\n<p>As for all shared reference cases, this difference might matter if other names reference the object being changed:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">M</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">L</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># L and M reference the same object</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Concatenation makes a new object</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L,</span> <span style=\"color: #d0d0d0\">M</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># Changes L but not M</span>\n<span style=\"color: #d0d0d0\">([</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">])</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">M</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">L</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L</span> <span style=\"color: #d0d0d0\">+=</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># But += really means extend</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">L,</span> <span style=\"color: #d0d0d0\">M</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #999999; font-style: italic\"># M sees the in-place change too!</span>\n<span style=\"color: #d0d0d0\">([</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">])</span>\n</pre></div>\n<p>This only matters for mutables like lists and dictionaries, and it is a fairly obscure case (at least, until it impacts your code!). As always, make copies of your mutable objects if you need to break the shared reference structure.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTk3NTQ1NzIsICJpZCI6ICIxNDk5NzU0MTcwODgwLTAwMSIsICJtZCI6ICJUaGUgYCs9YCBpcyBhbiBpbi1wbGFjZSBjaGFuZ2UgZm9yIGxpc3RzOyB0aHVzLCBpdCBpcyBub3QgZXhhY3RseSBsaWtlIGArYCBjb25jYXRlbmF0aW9uLCB3aGljaCBhbHdheXMgbWFrZXMgYSBuZXcgb2JqZWN0LlxuICBcbkFzIGZvciBhbGwgc2hhcmVkIHJlZmVyZW5jZSBjYXNlcywgdGhpcyBkaWZmZXJlbmNlIG1pZ2h0IG1hdHRlciBpZiBvdGhlciBuYW1lcyByZWZlcmVuY2UgdGhlIG9iamVjdCBiZWluZyBjaGFuZ2VkOlxuICBcbiAgICA6OjpweXRob24gIFxuICAgICZndDsmZ3Q7Jmd0OyBMID0gWzEsIDJdXG4gICAgJmd0OyZndDsmZ3Q7IE0gPSBMXG4gICAgJmd0OyZndDsmZ3Q7ICMgTCBhbmQgTSByZWZlcmVuY2UgdGhlIHNhbWUgb2JqZWN0XG4gICAgJmd0OyZndDsmZ3Q7IEwgPSBMICsgWzMsIDRdXG4gICAgJmd0OyZndDsmZ3Q7ICMgQ29uY2F0ZW5hdGlvbiBtYWtlcyBhIG5ldyBvYmplY3RcbiAgICAmZ3Q7Jmd0OyZndDsgTCwgTVxuICAgICZndDsmZ3Q7Jmd0OyAjIENoYW5nZXMgTCBidXQgbm90IE1cbiAgICAoWzEsIDIsIDMsIDRdLCBbMSwgMl0pXG4gIFxuICAgICZndDsmZ3Q7Jmd0OyBMID0gWzEsIDJdXG4gICAgJmd0OyZndDsmZ3Q7IE0gPSBMXG4gICAgJmd0OyZndDsmZ3Q7IEwgKz0gWzMsIDRdXG4gICAgJmd0OyZndDsmZ3Q7ICMgQnV0ICs9IHJlYWxseSBtZWFucyBleHRlbmRcbiAgICAmZ3Q7Jmd0OyZndDsgTCwgTVxuICAgICZndDsmZ3Q7Jmd0OyAjIE0gc2VlcyB0aGUgaW4tcGxhY2UgY2hhbmdlIHRvbyFcbiAgICAoWzEsIDIsIDMsIDRdLCBbMSwgMiwgMywgNF0pXG4gIFxuVGhpcyBvbmx5IG1hdHRlcnMgZm9yIG11dGFibGVzIGxpa2UgbGlzdHMgYW5kIGRpY3Rpb25hcmllcywgYW5kIGl0IGlzIGEgZmFpcmx5IG9ic2N1cmUgY2FzZSAoYXQgbGVhc3QsIHVudGlsIGl0IGltcGFjdHMgeW91ciBjb2RlISkuIEFzIGFsd2F5cywgbWFrZSBjb3BpZXMgb2YgeW91ciBtdXRhYmxlIG9iamVjdHMgaWYgeW91IG5lZWQgdG8gYnJlYWsgdGhlIHNoYXJlZCByZWZlcmVuY2Ugc3RydWN0dXJlLlxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xx3VLUymEh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "use <code>pip</code> within a <code>virtualenv</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">env1/bin/pip install requests\n</pre></div>\n<p>or</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">source </span>env1/bin/activate\npip install requests\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDYyNDMsICJpZCI6ICIxNTAwNDA1OTc3NjcxLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGVudjEvYmluL3BpcCBpbnN0YWxsIHJlcXVlc3RzXG4gIFxub3JcbiAgXG4gICAgOjo6YmFzaFxuICAgIHNvdXJjZSBlbnYxL2Jpbi9hY3RpdmF0ZVxuICAgIHBpcCBpbnN0YWxsIHJlcXVlc3RzXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sX;r&Uo,{=", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "virtualenv"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "create new&nbsp;<code>virtualenv</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">cd</span> ~/code/myproject/\nvirtualenv env1\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDYzMDAsICJpZCI6ICIxNTAwNDA2Mjc0OTExLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGNkIH4vY29kZS9teXByb2plY3QvXG4gICAgdmlydHVhbGVudiBlbnYxXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P%HWI#5T^7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "virtualenv"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "install&nbsp;<code>virtualenv</code>", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999;font-style: italic\">#sudo easy_install pip</span>\n<span style=\"color: #999999; font-style: italic\">#sudo pip install virtualenv</span>\nsudo apt-get install python3-pip\nsudo pip3 install virtualenv\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDYzNDIsICJpZCI6ICIxNTAwNDA2MzA5NDM1LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgICNzdWRvIGVhc3lfaW5zdGFsbCBwaXBcbiAgICAjc3VkbyBwaXAgaW5zdGFsbCB2aXJ0dWFsZW52XG4gICAgc3VkbyBhcHQtZ2V0IGluc3RhbGwgcHl0aG9uMy1waXBcbiAgICBzdWRvIHBpcDMgaW5zdGFsbCB2aXJ0dWFsZW52XG4ifQ==---->", 
                        "", 
                        "<p>Python's older package manager, <code>easy_install</code>, is installed when you install <code>distribute</code> or <code>setuptools</code>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDYzODEsICJpZCI6ICIxNTAwNDA2MzA5NDM1LTAwMiIsICJtZCI6ICJQeXRob24mYXBvcztzIG9sZGVyIHBhY2thZ2UgbWFuYWdlciwgYGVhc3lfaW5zdGFsbGAsIGlzIGluc3RhbGxlZCB3aGVuIHlvdSBpbnN0YWxsIGBkaXN0cmlidXRlYCBvciBgc2V0dXB0b29sc2AuXG4ifQ==---->", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pAp)RrKVaN", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "virtualenv"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "install Django and start project", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">virtualenv project1\n<span style=\"color: #24909d\">cd </span>project1\n<span style=\"color: #24909d\">source </span>bin/activate\npip install Django\ndjango-admin.py startproject mysite\n<span style=\"color: #24909d\">cd </span>mysite\nvim mysite/settings.py\n<span style=\"color: #999999; font-style: italic\"># Add: STATIC_ROOT = os.path.join(BASE_DIR, \"static/\")</span>\npython manage.py collectstatic\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA0MDY0NjMsICJpZCI6ICIxNTAwNDA2Mzg2OTk3LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHZpcnR1YWxlbnYgcHJvamVjdDFcbiAgICBjZCBwcm9qZWN0MVxuICAgIHNvdXJjZSBiaW4vYWN0aXZhdGVcbiAgICBwaXAgaW5zdGFsbCBEamFuZ29cbiAgICBkamFuZ28tYWRtaW4ucHkgc3RhcnRwcm9qZWN0IG15c2l0ZVxuICAgIGNkIG15c2l0ZVxuICAgIHZpbSBteXNpdGUvc2V0dGluZ3MucHlcbiAgICAjIEFkZDogU1RBVElDX1JPT1QgPSBvcy5wYXRoLmpvaW4oQkFTRV9ESVIsICZxdW90O3N0YXRpYy8mcXVvdDspXG4gICAgcHl0aG9uIG1hbmFnZS5weSBjb2xsZWN0c3RhdGljXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fof0uUhCu`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "increment operator", 
                        "", 
                        "<p><code>++</code> is not an operator. It is two <code>+</code> operators. The <code>+</code> operator is the <strong>identity</strong> operator, which does nothing. (Clarification: the <code>+</code> and <code>-</code> unary operators only work on numbers, but I presume that you wouldn't expect a hypothetical <code>++</code> operator to work on strings.)</p>\n<pre class=\"lang-py prettyprint prettyprinted\" style=\"\"><code><span class=\"pun\">++</span><span class=\"pln\">count</span></code></pre>\n<p>Parses as</p>\n<pre class=\"lang-py prettyprint prettyprinted\" style=\"\"><code><span class=\"pun\">+(+</span><span class=\"pln\">count</span><span class=\"pun\">)</span></code></pre>\n<p>Which translates to</p>\n<pre class=\"lang-py prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\">count</span></code></pre>\n<p>You have to use the slightly longer <code>+=</code> operator to do what you want to do:</p>\n<pre class=\"lang-py prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\">count </span><span class=\"pun\">+=</span><span class=\"pln\"> </span><span class=\"lit\">1</span></code></pre>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://stackoverflow.com/a/1485854/172602"
                    ], 
                    "flags": 0, 
                    "guid": "EBn/3eG%XI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "print range", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,n+</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">):</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(i,</span> <span style=\"color: #d0d0d0\">end=</span><span style=\"color: #ed9d13\">''</span><span style=\"color: #d0d0d0\">)</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(*</span><span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,n+</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">),</span> <span style=\"color: #d0d0d0\">sep=</span><span style=\"color: #ed9d13\">''</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDYxOTQ2NDgsICJpZCI6ICIxNTA2MTk0NTg3MzI3LTAwMiIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgZm9yIGkgaW4gcmFuZ2UoMSxuKzEpOlxuICAgICAgICBwcmludChpLCBlbmQ9JmFwb3M7JmFwb3M7KVxuICBcbiAgICBwcmludCgqcmFuZ2UoMSxuKzEpLCBzZXA9JmFwb3M7JmFwb3M7KVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y-BhDr}1<L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "minor"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "avoid dividing by 0", 
                        "", 
                        "<p>use <code>max()</code>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">float</span><span style=\"color: #d0d0d0\">(</span> <span style=\"color: #24909d\">sum</span><span style=\"color: #d0d0d0\">(L)</span> <span style=\"color: #d0d0d0\">/</span> <span style=\"color: #24909d\">max</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">len</span><span style=\"color: #d0d0d0\">(L),</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDYyMTAyODEsICJpZCI6ICIxNTA2MjEwMTAxNzcyLTAwMiIsICJtZCI6ICJ1c2UgYG1heCgpYDpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgZmxvYXQoIHN1bShMKSAvIG1heChsZW4oTCksMSkgKVxuIn0=---->", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "druO4Lp}O>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "minor"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "change character in string", 
                        "", 
                        "convert to list or use slicing", 
                        "", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">string</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"abracadabra\"</span>\n<span style=\"color: #d0d0d0\">l</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(string)</span>\n<span style=\"color: #d0d0d0\">l[</span><span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'k'</span>\n<span style=\"color: #d0d0d0\">string</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">''</span><span style=\"color: #d0d0d0\">.join(l)</span>\n\n<span style=\"color: #d0d0d0\">string</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">string[:</span><span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #ed9d13\">\"k\"</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #d0d0d0\">string[</span><span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">:]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDYzMDM4MTUsICJpZCI6ICIxNTA2MzAzNzA1ODY3LTAwNCIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgc3RyaW5nID0gJnF1b3Q7YWJyYWNhZGFicmEmcXVvdDtcbiAgICBsID0gbGlzdChzdHJpbmcpXG4gICAgbFs1XSA9ICZhcG9zO2smYXBvcztcbiAgICBzdHJpbmcgPSAmYXBvczsmYXBvczsuam9pbihsKVxuICBcbiAgICBzdHJpbmcgPSBzdHJpbmdbOjVdICsgJnF1b3Q7ayZxdW90OyArIHN0cmluZ1s2Ol1cbiJ9---->", 
                        "", 
                        "", 
                        "https://www.hackerrank.com/challenges/python-mutations?h_r=next-challenge&amp;h_v=zen"
                    ], 
                    "flags": 0, 
                    "guid": "Q*^EY_{cw.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "minor"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "alternative to <code>eval</code>", 
                        "", 
                        "<p><strong><code>eval</code> version</strong></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">n</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">int</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">input</span><span style=\"color: #d0d0d0\">())</span>\n<span style=\"color: #d0d0d0\">s</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">set</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">map</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">int</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #24909d\">input</span><span style=\"color: #d0d0d0\">().split()))</span> \n<span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">int</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">input</span><span style=\"color: #d0d0d0\">())):</span>\n    <span style=\"color: #24909d\">eval</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'s.{0}({1})'</span><span style=\"color: #d0d0d0\">.format(*</span><span style=\"color: #24909d\">input</span><span style=\"color: #d0d0d0\">().split()+[</span><span style=\"color: #ed9d13\">''</span><span style=\"color: #d0d0d0\">]))</span>\n<span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">sum</span><span style=\"color: #d0d0d0\">(s))</span>\n</pre></div>\n<p><strong><code>getattr</code> version</strong></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">_</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(N):</span>\n    <span style=\"color: #d0d0d0\">method,</span> <span style=\"color: #d0d0d0\">*args</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">input</span><span style=\"color: #d0d0d0\">().split()</span>\n    <span style=\"color: #24909d\">getattr</span><span style=\"color: #d0d0d0\">(s,</span> <span style=\"color: #d0d0d0\">method)(*</span><span style=\"color: #24909d\">map</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">int</span><span style=\"color: #d0d0d0\">,args))</span>\n</pre></div>\n<p><strong>restricted, and faster</strong></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">methods</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">{</span>\n    <span style=\"color: #ed9d13\">'pop'</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #d0d0d0\">s.pop,</span>\n    <span style=\"color: #ed9d13\">'remove'</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #d0d0d0\">s.remove,</span>\n    <span style=\"color: #ed9d13\">'discard'</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #d0d0d0\">s.discard</span>\n<span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">_</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(N):</span>\n    <span style=\"color: #d0d0d0\">method,</span> <span style=\"color: #d0d0d0\">*args</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">input</span><span style=\"color: #d0d0d0\">().split()</span>\n    <span style=\"color: #d0d0d0\">methods[method](*</span><span style=\"color: #24909d\">map</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">int</span><span style=\"color: #d0d0d0\">,args))</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY0MDg2OTYsICJpZCI6ICIxNTA2NDA4NTIwOTMwLTAwMiIsICJtZCI6ICIqKmBldmFsYCB2ZXJzaW9uKipcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgbiA9IGludChpbnB1dCgpKVxuICAgIHMgPSBzZXQobWFwKGludCwgaW5wdXQoKS5zcGxpdCgpKSkgXG4gICAgZm9yIGkgaW4gcmFuZ2UoaW50KGlucHV0KCkpKTpcbiAgICAgICAgZXZhbCgmYXBvcztzLnswfSh7MX0pJmFwb3M7LmZvcm1hdCgqaW5wdXQoKS5zcGxpdCgpK1smYXBvczsmYXBvcztdKSlcbiAgICBwcmludChzdW0ocykpXG4gIFxuKipgZ2V0YXR0cmAgdmVyc2lvbioqXG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGZvciBfIGluIHJhbmdlKE4pOlxuICAgICAgICBtZXRob2QsICphcmdzID0gaW5wdXQoKS5zcGxpdCgpXG4gICAgICAgIGdldGF0dHIocywgbWV0aG9kKSgqbWFwKGludCxhcmdzKSlcbiAgXG4qKnJlc3RyaWN0ZWQsIGFuZCBmYXN0ZXIqKlxuICBcbiAgICA6OjpweXRob25cbiAgICBtZXRob2RzID0ge1xuICAgICAgICAmYXBvcztwb3AmYXBvczsgOiBzLnBvcCxcbiAgICAgICAgJmFwb3M7cmVtb3ZlJmFwb3M7IDogcy5yZW1vdmUsXG4gICAgICAgICZhcG9zO2Rpc2NhcmQmYXBvczsgOiBzLmRpc2NhcmRcbiAgICB9XG4gICAgZm9yIF8gaW4gcmFuZ2UoTik6XG4gICAgICAgIG1ldGhvZCwgKmFyZ3MgPSBpbnB1dCgpLnNwbGl0KClcbiAgICAgICAgbWV0aG9kc1ttZXRob2RdKCptYXAoaW50LGFyZ3MpKVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://www.hackerrank.com/challenges/py-set-discard-remove-pop/forum"
                    ], 
                    "flags": 0, 
                    "guid": "m)<c#@0<|(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Why <code>deque</code>s?", 
                        "", 
                        "Though <code class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></code> objects support similar operations, they are optimized for\nfast fixed-length operations and incur O(n) memory movement costs for\n<code class=\"docutils literal\"><span class=\"pre\">pop(0)</span></code> and <code class=\"docutils literal\"><span class=\"pre\">insert(0,</span> <span class=\"pre\">v)</span></code> operations which change both the size and\nposition of the underlying data representation.", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u#RUP;gSh{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "https://docs.python.org/2/library/collections.html#deque-objects"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "if <code>return</code> in <code>try</code> and <code>finally</code> clauses", 
                        "", 
                        "the last <code>return</code> always executes in this case", 
                        "", 
                        "<p>The return value of a function is determined by the last <code>return</code> statement executed. Since the <code>finally</code> clause always executes, a <code>return</code> statement executed in the <code>finally</code> clause will always be the last one executed:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">foo</span><span style=\"color: #d0d0d0\">():</span>\n\n\n<span style=\"color: #d0d0d0\">...</span>     <span style=\"color: #6ab825; font-weight: bold\">try</span><span style=\"color: #d0d0d0\">:</span>\n<span style=\"color: #d0d0d0\">...</span>         <span style=\"color: #6ab825; font-weight: bold\">return</span> <span style=\"color: #ed9d13\">'try'</span>\n<span style=\"color: #d0d0d0\">...</span>     <span style=\"color: #6ab825; font-weight: bold\">finally</span><span style=\"color: #d0d0d0\">:</span>\n<span style=\"color: #d0d0d0\">...</span>         <span style=\"color: #6ab825; font-weight: bold\">return</span> <span style=\"color: #ed9d13\">'finally'</span>\n<span style=\"color: #d0d0d0\">...</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">foo()</span>\n<span style=\"color: #ed9d13\">'finally'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY3MTM3MDEsICJpZCI6ICIxNTA2NzEzMzk1NzkwLTAwNCIsICJtZCI6ICJUaGUgcmV0dXJuIHZhbHVlIG9mIGEgZnVuY3Rpb24gaXMgZGV0ZXJtaW5lZCBieSB0aGUgbGFzdCBgcmV0dXJuYCBzdGF0ZW1lbnQgZXhlY3V0ZWQuIFNpbmNlIHRoZSBgZmluYWxseWAgY2xhdXNlIGFsd2F5cyBleGVjdXRlcywgYSBgcmV0dXJuYCBzdGF0ZW1lbnQgZXhlY3V0ZWQgaW4gdGhlIGBmaW5hbGx5YCBjbGF1c2Ugd2lsbCBhbHdheXMgYmUgdGhlIGxhc3Qgb25lIGV4ZWN1dGVkOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgZGVmIGZvbygpOlxuICBcbiAgXG4gICAgLi4uICAgICB0cnk6XG4gICAgLi4uICAgICAgICAgcmV0dXJuICZhcG9zO3RyeSZhcG9zO1xuICAgIC4uLiAgICAgZmluYWxseTpcbiAgICAuLi4gICAgICAgICByZXR1cm4gJmFwb3M7ZmluYWxseSZhcG9zO1xuICAgIC4uLlxuICAgICZndDsmZ3Q7Jmd0OyBmb28oKVxuICAgICZhcG9zO2ZpbmFsbHkmYXBvcztcbiJ9---->", 
                        "reverse", 
                        "", 
                        "https://docs.python.org/3.6/reference/compound_stmts.html#the-try-statement"
                    ], 
                    "flags": 0, 
                    "guid": "d;:_ve+K%F", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "False", 
                        "Python builtin constant", 
                        "<p>The false value of the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bool</span></code> type. Assignments to <code class=\"docutils literal\"><span class=\"pre\"><strike>False</strike></span></code>\nare illegal and raise a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>False</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "j2IbNSq~#|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "True", 
                        "Python builtin constant", 
                        "<p>The true value of the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bool</span></code> type. Assignments to <code class=\"docutils literal\"><span class=\"pre\"><strike>True</strike></span></code>\nare illegal and raise a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>True</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "b?tl:ICv]j", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "None", 
                        "Python builtin constant", 
                        "<p>The sole value of the type <code class=\"docutils literal\"><span class=\"pre\"><strike>None</strike>Type</span></code>.  <code class=\"docutils literal\"><span class=\"pre\"><strike>None</strike></span></code> is frequently used to\nrepresent the absence of a value, as when default arguments are not passed to a\nfunction. Assignments to <code class=\"docutils literal\"><span class=\"pre\"><strike>None</strike></span></code> are illegal and raise a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>None</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "oa3b%~2xj`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "NotImplemented", 
                        "Python builtin constant", 
                        "<p>Special value which should be returned by the binary special methods\n(e.g. <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__eq__()</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__lt__()</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__add__()</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__rsub__()</span></code>,\netc.) to indicate that the operation is not implemented with respect to\nthe other type; may be returned by the in-place binary special methods\n(e.g. <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__imul__()</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__iand__()</span></code>, etc.) for the same purpose.\nIts truth value is true.</p>", 
                        "", 
                        "<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>When a binary (or in-place) method returns <code class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></code> the\ninterpreter will try the reflected operation on the other type (or some\nother fallback, depending on the operator).  If all attempts return\n<code class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></code>, the interpreter will raise an appropriate exception.\nIncorrectly returning <code class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></code> will result in a misleading\nerror message or the <code class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></code> value being returned to Python code.</p>\n<p class=\"last\">See <span class=\"std std-ref\">Implementing the arithmetic operations</span> for examples.</p>\n</div><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><code class=\"docutils literal\"><span class=\"pre\">NotImplementedError</span></code> and <code class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></code> are not interchangeable,\neven though they have similar names and purposes.\nSee <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">NotImplementedError</span></code> for details on when to use it.</p>\n</div>", 
                        "reverse", 
                        "<code>NotImplemented</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "Eq<2~Nj}]G", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Ellipsis", 
                        "Python builtin constant", 
                        "<p>The same as <code class=\"docutils literal\"><span class=\"pre\">...</span></code>.  Special value used mostly in conjunction with extended\nslicing syntax for user-defined container data types.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>Ellipsis</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "Gf/_:Gr/7w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "__debug__", 
                        "Python builtin constant", 
                        "<p>This constant is true if Python was not started with an <code class=\"xref std std-option docutils literal\"><span class=\"pre\">-O</span></code> option.\nSee also the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">assert</span></code> statement.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>__debug__</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "mZ0R(]/r+1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "quit(<em>code=None</em>)", 
                        "Python builtin constant", 
                        "<p>Objects that when printed, print a message like “Use <strike>quit</strike>() or Ctrl-D\n(i.e. EOF) to exit”, and when called, raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SystemExit</span></code> with the\nspecified exit code.</p>", 
                        "", 
                        "<p><code>quit(<em>code=None</em>)<em><em>code=None</em></em></code></p>", 
                        "reverse", 
                        "<code>quit()</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "P)Bk;dq@v7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "exit(<em>code=None</em>)", 
                        "Python builtin constant", 
                        "<p>Objects that when printed, print a message like “Use <strike>quit</strike>() or Ctrl-D\n(i.e. EOF) to <strike>exit</strike>”, and when called, raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SystemExit</span></code> with the\nspecified <strike>exit</strike> code.</p>", 
                        "", 
                        "<p><code>exit(<em>code=None</em>)<em><em>code=None</em></em></code></p><p><code>quit(<em>code=None</em>)<em><em>code=None</em></em></code></p>", 
                        "reverse", 
                        "<code>exit()</code>", 
                        "https://docs.python.org/3.6/library/constants.html"
                    ], 
                    "flags": 0, 
                    "guid": "eu$o`.I2j#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "all(<em>iterable</em>)", 
                        "Python builtin function", 
                        "<p>Return <code class=\"docutils literal\"><span class=\"pre\">True</span></code> if <strike>all</strike> elements of the <em>iterable</em> are true (or if the iterable\nis empty).  Equivalent to:</p>", 
                        "", 
                        "<p><code>all(<em>iterable</em>)<em><em>iterable</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">all</span><span class=\"p\">(</span><span class=\"n\">iterable</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">element</span> <span class=\"ow\">in</span> <span class=\"n\">iterable</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">element</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">False</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>all()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "GQ(Vf|BEva", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "any(<em>iterable</em>)", 
                        "Python builtin function", 
                        "<p>Return <code class=\"docutils literal\"><span class=\"pre\">True</span></code> if <strike>any</strike> element of the <em>iterable</em> is true.  If the iterable\nis empty, return <code class=\"docutils literal\"><span class=\"pre\">False</span></code>.  Equivalent to:</p>", 
                        "", 
                        "<p><code>any(<em>iterable</em>)<em><em>iterable</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">any</span><span class=\"p\">(</span><span class=\"n\">iterable</span><span class=\"p\">):</span>\n    <span class=\"k\">for</span> <span class=\"n\">element</span> <span class=\"ow\">in</span> <span class=\"n\">iterable</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">element</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">True</span>\n    <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>any()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Qv/(Z`/m<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ascii(<em>object</em>)", 
                        "Python builtin function", 
                        "<p>As <code class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></code>, return a string containing a printable representation of an\nobject, but escape the non-ASCII characters in the string returned by\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></code> using <code class=\"docutils literal\"><span class=\"pre\">\\x</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\u</span></code> or <code class=\"docutils literal\"><span class=\"pre\">\\U</span></code> escapes.  This generates a string\nsimilar to that returned by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></code> in Python 2.</p>", 
                        "", 
                        "<p><code>ascii(<em>object</em>)<em><em>object</em></em></code></p>", 
                        "reverse", 
                        "<code>ascii()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "QZ}MQHIdX5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bin(<em>x</em>)", 
                        "Python builtin function", 
                        "<div><p>Convert an integer number to a <strike>bin</strike>ary string prefixed with “0b”. The result\nis a valid Python expression. If <em>x</em> is not a Python <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> object, it\nhas to define an <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__index__()</span></code> method that returns an integer. Some\nexamples:</p>\n<div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\"><strike>bin</strike></span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">'0b11'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\"><strike>bin</strike></span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"go\">'-0b1010'</span>\n</pre></div>\n</div>\n<p>If prefix “0b” is desired or not, you can use either of the following ways.</p>\n<div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"s1\">'#b'</span><span class=\"p\">),</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">14</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">)</span>\n<span class=\"go\">('0b1110', '1110')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{14:#b}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{14:b}</span><span class=\"s1\">'</span>\n<span class=\"go\">('0b1110', '1110')</span>\n</pre></div>\n</div>\n</div>", 
                        "", 
                        "<p><code>bin(<em>x</em>)<em><em>x</em></em></code></p><blockquote>\n</blockquote><p>See also <code class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></code> for more information.</p>", 
                        "reverse", 
                        "<code>bin()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "I%~C?~laF{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bool(<span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a Boolean value, i.e. one of <code class=\"docutils literal\"><span class=\"pre\">True</span></code> or <code class=\"docutils literal\"><span class=\"pre\">False</span></code>.  <em>x</em> is converted\nusing the standard <span class=\"std std-ref\">truth testing procedure</span>.  If <em>x</em> is false\nor omitted, this returns <code class=\"docutils literal\"><span class=\"pre\">False</span></code>; otherwise it returns <code class=\"docutils literal\"><span class=\"pre\">True</span></code>.  The\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>bool</strike></span></code> class is a subclass of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> (see <span class=\"std std-ref\">Numeric Types — int, float, complex</span>).\nIt cannot be subclassed further.  Its only instances are <code class=\"docutils literal\"><span class=\"pre\">False</span></code> and\n<code class=\"docutils literal\"><span class=\"pre\">True</span></code> (see <span class=\"std std-ref\">Boolean Values</span>).</p>", 
                        "", 
                        "<p>class <code>bool(<span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>bool()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "q^wK4_l56|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bytearray(<span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>,, <em>encoding</em><span class=\"optional\">[</span>,, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a new array of bytes.  The <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>bytearray</strike></span></code> class is a mutable\nsequence of integers in the range 0 &lt;= x &lt; 256.  It has most of the usual\nmethods of mutable sequences, described in <span class=\"std std-ref\">Mutable Sequence Types</span>, as well\nas most methods that the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></code> type has, see <span class=\"std std-ref\">Bytes and Bytearray Operations</span>.</p>", 
                        "", 
                        "<p>class <code>bytearray(<span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>,, <em>encoding</em><span class=\"optional\">[</span>,, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>,, <em>encoding</em><span class=\"optional\">[</span>,, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><p>The optional <em>source</em> parameter can be used to initialize the array in a few\ndifferent ways:</p><ul class=\"simple\">\n<li>If it is a <em>string</em>, you must also give the <em>encoding</em> (and optionally,\n<em>errors</em>) parameters; <code class=\"xref py py-func docutils literal\"><span class=\"pre\">bytearray()</span></code> then converts the string to\nbytes using <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.encode()</span></code>.</li>\n<li>If it is an <em>integer</em>, the array will have that size and will be\ninitialized with null bytes.</li>\n<li>If it is an object conforming to the <em>buffer</em> interface, a read-only buffer\nof the object will be used to initialize the bytes array.</li>\n<li>If it is an <em>iterable</em>, it must be an iterable of integers in the range\n<code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">256</span></code>, which are used as the initial contents of the array.</li>\n</ul><p>Without an argument, an array of size 0 is created.</p><p>See also <span class=\"std std-ref\">Binary Sequence Types — bytes, bytearray, memoryview</span> and <span class=\"std std-ref\">Bytearray Objects</span>.</p>", 
                        "reverse", 
                        "<code>bytearray()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "lN~4HAGi~`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bytes(<span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>,, <em>encoding</em><span class=\"optional\">[</span>,, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a new “<strike>bytes</strike>” object, which is an immutable sequence of integers in\nthe range <code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">x</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">256</span></code>.  <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>bytes</strike></span></code> is an immutable version of\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></code> – it has the same non-mutating methods and the same\nindexing and slicing behavior.</p>", 
                        "", 
                        "<p>class <code>bytes(<span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>,, <em>encoding</em><span class=\"optional\">[</span>,, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>source</em><span class=\"optional\">[</span>,, <em>encoding</em><span class=\"optional\">[</span>,, <em>errors</em><span class=\"optional\">]</span><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><p>Accordingly, constructor arguments are interpreted as for <code class=\"xref py py-func docutils literal\"><span class=\"pre\">bytearray()</span></code>.</p><p>Bytes objects can also be created with literals, see <span class=\"std std-ref\">String and Bytes literals</span>.</p><p>See also <span class=\"std std-ref\">Binary Sequence Types — bytes, bytearray, memoryview</span>, <span class=\"std std-ref\">Bytes Objects</span>, and <span class=\"std std-ref\">Bytes and Bytearray Operations</span>.</p>", 
                        "reverse", 
                        "<code>bytes()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "k%(Qct0xG3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "callable(<em>object</em>)", 
                        "Python builtin function", 
                        "<p>Return <code class=\"xref py py-const docutils literal\"><span class=\"pre\">True</span></code> if the <em>object</em> argument appears <strike>callable</strike>,\n<code class=\"xref py py-const docutils literal\"><span class=\"pre\">False</span></code> if not.  If this returns true, it is still possible that a\ncall fails, but if it is false, calling <em>object</em> will never succeed.\nNote that classes are <strike>callable</strike> (calling a class returns a new instance);\ninstances are <strike>callable</strike> if their class has a <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__call__()</span></code> method.</p>", 
                        "", 
                        "<p><code>callable(<em>object</em>)<em><em>object</em></em></code></p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.2: </span>This function was first removed in Python 3.0 and then brought back\nin Python 3.2.</p>\n</div>", 
                        "reverse", 
                        "<code>callable()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Cq6RC|s[/G", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "chr(<em>i</em>)", 
                        "Python builtin function", 
                        "<p>Return the string representing a character whose Unicode code point is the\ninteger <em>i</em>.  For example, <code class=\"docutils literal\"><span class=\"pre\"><strike>chr</strike>(97)</span></code> returns the string <code class=\"docutils literal\"><span class=\"pre\">'a'</span></code>, while\n<code class=\"docutils literal\"><span class=\"pre\"><strike>chr</strike>(8364)</span></code> returns the string <code class=\"docutils literal\"><span class=\"pre\">'€'</span></code>. This is the inverse of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">ord()</span></code>.</p>", 
                        "", 
                        "<p><code>chr(<em>i</em>)<em><em>i</em></em></code></p><p>The valid range for the argument is from 0 through 1,114,111 (0x10FFFF in\nbase 16).  <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> will be raised if <em>i</em> is outside that range.</p>", 
                        "reverse", 
                        "<code>chr()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Bib`8xe!+@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "classmethod(<em>function</em>)", 
                        "Python builtin function", 
                        "<p>Return a class method for <em>function</em>.</p>", 
                        "", 
                        "<p><code>classmethod(<em>function</em>)<em><em>function</em></em></code></p><p>A class method receives the class as implicit first argument, just like an\ninstance method receives the instance. To declare a class method, use this\nidiom:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n</pre></div>\n</div><p>The <code class=\"docutils literal\"><span class=\"pre\">@classmethod</span></code> form is a function <span class=\"xref std std-term\">decorator</span> – see the description\nof function definitions in <span class=\"std std-ref\">Function definitions</span> for details.</p><p>It can be called either on the class (such as <code class=\"docutils literal\"><span class=\"pre\">C.f()</span></code>) or on an instance (such\nas <code class=\"docutils literal\"><span class=\"pre\">C().f()</span></code>).  The instance is ignored except for its class. If a class\nmethod is called for a derived class, the derived class object is passed as the\nimplied first argument.</p><p>Class methods are different than C++ or Java static methods. If you want those,\nsee <code class=\"xref py py-func docutils literal\"><span class=\"pre\">staticmethod()</span></code> in this section.</p><p>For more information on class methods, consult the documentation on the standard\ntype hierarchy in <span class=\"std std-ref\">The standard type hierarchy</span>.</p>", 
                        "reverse", 
                        "<code>classmethod()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "g~%HH%tM8*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "compile(<em>source</em>,, <em>filename</em>,, <em>mode</em>,, <em>flags=0</em>,, <em>dont_inherit=False</em>,, <em>optimize=-1</em>)", 
                        "Python builtin function", 
                        "<p>Compile the <em>source</em> into a code or AST object.  Code objects can be executed\nby <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code> or <code class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></code>.  <em>source</em> can either be a normal string, a\nbyte string, or an AST object.  Refer to the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">ast</span></code> module documentation\nfor information on how to work with AST objects.</p>", 
                        "", 
                        "<p><code>compile(<em>source</em>,, <em>filename</em>,, <em>mode</em>,, <em>flags=0</em>,, <em>dont_inherit=False</em>,, <em>optimize=-1</em>)<em><em>source</em>,, <em>filename</em>,, <em>mode</em>,, <em>flags=0</em>,, <em>dont_inherit=False</em>,, <em>optimize=-1</em></em></code></p><p>The <em>filename</em> argument should give the file from which the code was read;\npass some recognizable value if it wasn’t read from a file (<code class=\"docutils literal\"><span class=\"pre\">'&lt;string&gt;'</span></code> is\ncommonly used).</p><p>The <em>mode</em> argument specifies what kind of code must be compiled; it can be\n<code class=\"docutils literal\"><span class=\"pre\">'exec'</span></code> if <em>source</em> consists of a sequence of statements, <code class=\"docutils literal\"><span class=\"pre\">'eval'</span></code> if it\nconsists of a single expression, or <code class=\"docutils literal\"><span class=\"pre\">'single'</span></code> if it consists of a single\ninteractive statement (in the latter case, expression statements that\nevaluate to something other than <code class=\"docutils literal\"><span class=\"pre\">None</span></code> will be printed).</p><p>The optional arguments <em>flags</em> and <em>dont_inherit</em> control which future\nstatements (see <span class=\"target\" id=\"index-1\"></span><strong>PEP 236</strong>) affect the compilation of <em>source</em>.  If neither\nis present (or both are zero) the code is compiled with those future\nstatements that are in effect in the code that is calling <code class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></code>.  If the\n<em>flags</em> argument is given and <em>dont_inherit</em> is not (or is zero) then the\nfuture statements specified by the <em>flags</em> argument are used in addition to\nthose that would be used anyway. If <em>dont_inherit</em> is a non-zero integer then\nthe <em>flags</em> argument is it – the future statements in effect around the call\nto compile are ignored.</p><p>Future statements are specified by bits which can be bitwise ORed together to\nspecify multiple statements.  The bitfield required to specify a given feature\ncan be found as the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">compiler_flag</span></code> attribute on\nthe <code class=\"xref py py-class docutils literal\"><span class=\"pre\">_Feature</span></code> instance in the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">__future__</span></code> module.</p><p>The argument <em>optimize</em> specifies the optimization level of the compiler; the\ndefault value of <code class=\"docutils literal\"><span class=\"pre\">-1</span></code> selects the optimization level of the interpreter as\ngiven by <code class=\"xref std std-option docutils literal\"><span class=\"pre\">-O</span></code> options.  Explicit levels are <code class=\"docutils literal\"><span class=\"pre\">0</span></code> (no optimization;\n<code class=\"docutils literal\"><span class=\"pre\">__debug__</span></code> is true), <code class=\"docutils literal\"><span class=\"pre\">1</span></code> (asserts are removed, <code class=\"docutils literal\"><span class=\"pre\">__debug__</span></code> is false)\nor <code class=\"docutils literal\"><span class=\"pre\">2</span></code> (docstrings are removed too).</p><p>This function raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></code> if the compiled source is invalid,\nand <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> if the source contains null bytes.</p><p>If you want to parse Python code into its AST representation, see\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">ast.parse()</span></code>.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">When compiling a string with multi-line code in <code class=\"docutils literal\"><span class=\"pre\">'single'</span></code> or\n<code class=\"docutils literal\"><span class=\"pre\">'eval'</span></code> mode, input must be terminated by at least one newline\ncharacter.  This is to facilitate detection of incomplete and complete\nstatements in the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">code</span></code> module.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.2: </span>Allowed use of Windows and Mac newlines.  Also input in <code class=\"docutils literal\"><span class=\"pre\">'exec'</span></code> mode\ndoes not have to end in a newline anymore.  Added the <em>optimize</em> parameter.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.5: </span>Previously, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> was raised when null bytes were encountered\nin <em>source</em>.</p>\n</div>", 
                        "reverse", 
                        "<code>compile()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "vy)uyHl`n~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "complex(<span class=\"optional\">[</span><em>real</em><span class=\"optional\">[</span>,, <em>imag</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a <strike>complex</strike> number with the value <em>real</em> + <em>imag</em>*1j or convert a string\nor number to a <strike>complex</strike> number.  If the first parameter is a string, it will\nbe interpreted as a <strike>complex</strike> number and the function must be called without a\nsecond parameter.  The second parameter can never be a string. Each argument\nmay be any numeric type (including <strike>complex</strike>).  If <em>imag</em> is omitted, it\ndefaults to zero and the constructor serves as a numeric conversion like\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> and <code class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></code>.  If both arguments are omitted, returns\n<code class=\"docutils literal\"><span class=\"pre\">0j</span></code>.</p>", 
                        "", 
                        "<p>class <code>complex(<span class=\"optional\">[</span><em>real</em><span class=\"optional\">[</span>,, <em>imag</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>real</em><span class=\"optional\">[</span>,, <em>imag</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">When converting from a string, the string must not contain whitespace\naround the central <code class=\"docutils literal\"><span class=\"pre\">+</span></code> or <code class=\"docutils literal\"><span class=\"pre\">-</span></code> operator.  For example,\n<code class=\"docutils literal\"><span class=\"pre\">complex('1+2j')</span></code> is fine, but <code class=\"docutils literal\"><span class=\"pre\">complex('1</span> <span class=\"pre\">+</span> <span class=\"pre\">2j')</span></code> raises\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code>.</p>\n</div><p>The complex type is described in <span class=\"std std-ref\">Numeric Types — int, float, complex</span>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Grouping digits with underscores as in code literals is allowed.</p>\n</div>", 
                        "reverse", 
                        "<code>complex()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "h_KB/EJUNB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "delattr(<em>object</em>,, <em>name</em>)", 
                        "Python builtin function", 
                        "<p>This is a relative of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">setattr()</span></code>.  The arguments are an object and a\nstring.  The string must be the name of one of the object’s attributes.  The\nfunction deletes the named attribute, provided the object allows it.  For\nexample, <code class=\"docutils literal\"><span class=\"pre\"><strike>delattr</strike>(x,</span> <span class=\"pre\">'foobar')</span></code> is equivalent to <code class=\"docutils literal\"><span class=\"pre\">del</span> <span class=\"pre\">x.foobar</span></code>.</p>", 
                        "", 
                        "<p><code>delattr(<em>object</em>,, <em>name</em>)<em><em>object</em>,, <em>name</em></em></code></p>", 
                        "reverse", 
                        "<code>delattr()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "c5<fn|nV2:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dict(<em>**kwarg</em>)", 
                        "Python builtin function", 
                        "<p>Create a new <strike>dict</strike>ionary.  The <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>dict</strike></span></code> object is the <strike>dict</strike>ionary class.\nSee <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>dict</strike></span></code> and <span class=\"std std-ref\">Mapping Types — <strike>dict</strike></span> for documentation about this class.</p>", 
                        "", 
                        "<p>class <code>dict(<em>**kwarg</em>)<em><em>**kwarg</em></em></code></p><p>For other containers see the built-in <code class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></code>, <code class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></code>, and\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></code> classes, as well as the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></code> module.</p>", 
                        "reverse", 
                        "<code>dict()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "sIZs$}R}th", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dict(<em>mapping</em>,, <em>**kwarg</em>)", 
                        "Python builtin function", 
                        "<p>Create a new <strike><strike>dict</strike></strike>ionary.  The <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike><strike>dict</strike></strike></span></code> object is the <strike><strike>dict</strike></strike>ionary class.\nSee <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike><strike>dict</strike></strike></span></code> and <span class=\"std std-ref\">Mapping Types — <strike><strike>dict</strike></strike></span> for documentation about this class.</p>", 
                        "", 
                        "<p>class <code>dict(<em>mapping</em>,, <em>**kwarg</em>)<em><em>mapping</em>,, <em>**kwarg</em></em></code></p><p>class <code>dict(<em>**kwarg</em>)<em><em>**kwarg</em></em></code></p><p>For other containers see the built-in <code class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></code>, <code class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></code>, and\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></code> classes, as well as the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></code> module.</p>", 
                        "reverse", 
                        "<code>dict()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "A.VF~F}WJP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "dict(<em>iterable</em>,, <em>**kwarg</em>)", 
                        "Python builtin function", 
                        "<p>Create a new <strike><strike><strike>dict</strike></strike></strike>ionary.  The <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike><strike><strike>dict</strike></strike></strike></span></code> object is the <strike><strike><strike>dict</strike></strike></strike>ionary class.\nSee <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike><strike><strike>dict</strike></strike></strike></span></code> and <span class=\"std std-ref\">Mapping Types — <strike><strike><strike>dict</strike></strike></strike></span> for documentation about this class.</p>", 
                        "", 
                        "<p>class <code>dict(<em>iterable</em>,, <em>**kwarg</em>)<em><em>iterable</em>,, <em>**kwarg</em></em></code></p><p>class <code>dict(<em>mapping</em>,, <em>**kwarg</em>)<em><em>mapping</em>,, <em>**kwarg</em></em></code></p><p>class <code>dict(<em>**kwarg</em>)<em><em>**kwarg</em></em></code></p><p>For other containers see the built-in <code class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></code>, <code class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></code>, and\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></code> classes, as well as the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></code> module.</p>", 
                        "reverse", 
                        "<code>dict()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "f(C2K#dt$3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "divmod(<em>a</em>,, <em>b</em>)", 
                        "Python builtin function", 
                        "<p>Take two (non complex) numbers as arguments and return a pair of numbers\nconsisting of their quotient and remainder when using integer division.  With\nmixed operand types, the rules for binary arithmetic operators apply.  For\nintegers, the result is the same as <code class=\"docutils literal\"><span class=\"pre\">(a</span> <span class=\"pre\">//</span> <span class=\"pre\">b,</span> <span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b)</span></code>. For floating point\nnumbers the result is <code class=\"docutils literal\"><span class=\"pre\">(q,</span> <span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b)</span></code>, where <em>q</em> is usually <code class=\"docutils literal\"><span class=\"pre\">math.floor(a</span> <span class=\"pre\">/</span>\n<span class=\"pre\">b)</span></code> but may be 1 less than that.  In any case <code class=\"docutils literal\"><span class=\"pre\">q</span> <span class=\"pre\">*</span> <span class=\"pre\">b</span> <span class=\"pre\">+</span> <span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b</span></code> is very\nclose to <em>a</em>, if <code class=\"docutils literal\"><span class=\"pre\">a</span> <span class=\"pre\">%</span> <span class=\"pre\">b</span></code> is non-zero it has the same sign as <em>b</em>, and <code class=\"docutils literal\"><span class=\"pre\">0</span>\n<span class=\"pre\">&lt;=</span> <span class=\"pre\">abs(a</span> <span class=\"pre\">%</span> <span class=\"pre\">b)</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">abs(b)</span></code>.</p>", 
                        "", 
                        "<p><code>divmod(<em>a</em>,, <em>b</em>)<em><em>a</em>,, <em>b</em></em></code></p>", 
                        "reverse", 
                        "<code>divmod()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "zA6*C/>VjQ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "enumerate(<em>iterable</em>,, <em>start=0</em>)", 
                        "Python builtin function", 
                        "<p>Return an <strike>enumerate</strike> object. <em>iterable</em> must be a sequence, an\n<span class=\"xref std std-term\">iterator</span>, or some other object which supports iteration.\nThe <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></code> method of the iterator returned by\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\"><strike>enumerate</strike>()</span></code> returns a tuple containing a count (from <em>start</em> which\ndefaults to 0) and the values obtained from iterating over <em>iterable</em>.</p>", 
                        "", 
                        "<p><code>enumerate(<em>iterable</em>,, <em>start=0</em>)<em><em>iterable</em>,, <em>start=0</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">seasons</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'Spring'</span><span class=\"p\">,</span> <span class=\"s1\">'Summer'</span><span class=\"p\">,</span> <span class=\"s1\">'Fall'</span><span class=\"p\">,</span> <span class=\"s1\">'Winter'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">seasons</span><span class=\"p\">))</span>\n<span class=\"go\">[(0, 'Spring'), (1, 'Summer'), (2, 'Fall'), (3, 'Winter')]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"n\">seasons</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"go\">[(1, 'Spring'), (2, 'Summer'), (3, 'Fall'), (4, 'Winter')]</span>\n</pre></div>\n</div><p>Equivalent to:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">enumerate</span><span class=\"p\">(</span><span class=\"n\">sequence</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">start</span>\n    <span class=\"k\">for</span> <span class=\"n\">elem</span> <span class=\"ow\">in</span> <span class=\"n\">sequence</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">elem</span>\n        <span class=\"n\">n</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>enumerate()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Jn7a$_;a>$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "eval(<em>expression</em>,, <em>globals=None</em>,, <em>locals=None</em>)", 
                        "Python builtin function", 
                        "<p>The arguments are a string and optional globals and locals.  If provided,\n<em>globals</em> must be a dictionary.  If provided, <em>locals</em> can be any mapping\nobject.</p>", 
                        "", 
                        "<p><code>eval(<em>expression</em>,, <em>globals=None</em>,, <em>locals=None</em>)<em><em>expression</em>,, <em>globals=None</em>,, <em>locals=None</em></em></code></p><p>The <em>expression</em> argument is parsed and evaluated as a Python expression\n(technically speaking, a condition list) using the <em>globals</em> and <em>locals</em>\ndictionaries as global and local namespace.  If the <em>globals</em> dictionary is\npresent and lacks ‘__builtins__’, the current globals are copied into <em>globals</em>\nbefore <em>expression</em> is parsed.  This means that <em>expression</em> normally has full\naccess to the standard <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">builtins</span></code> module and restricted environments are\npropagated.  If the <em>locals</em> dictionary is omitted it defaults to the <em>globals</em>\ndictionary.  If both dictionaries are omitted, the expression is executed in the\nenvironment where <code class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></code> is called.  The return value is the result of\nthe evaluated expression. Syntax errors are reported as exceptions.  Example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">eval</span><span class=\"p\">(</span><span class=\"s1\">'x+1'</span><span class=\"p\">)</span>\n<span class=\"go\">2</span>\n</pre></div>\n</div><p>This function can also be used to execute arbitrary code objects (such as\nthose created by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">compile()</span></code>).  In this case pass a code object instead\nof a string.  If the code object has been compiled with <code class=\"docutils literal\"><span class=\"pre\">'exec'</span></code> as the\n<em>mode</em> argument, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></code>’s return value will be <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.</p><p>Hints: dynamic execution of statements is supported by the <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code>\nfunction.  The <code class=\"xref py py-func docutils literal\"><span class=\"pre\">globals()</span></code> and <code class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></code> functions\nreturns the current global and local dictionary, respectively, which may be\nuseful to pass around for use by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></code> or <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code>.</p><p>See <code class=\"xref py py-func docutils literal\"><span class=\"pre\">ast.literal_eval()</span></code> for a function that can safely evaluate strings\nwith expressions containing only literals.</p>", 
                        "reverse", 
                        "<code>eval()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "jAorn=6}J{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "exec(<em>object</em><span class=\"optional\">[</span>,, <em>globals</em><span class=\"optional\">[</span>,, <em>locals</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>This function supports dynamic <strike>exec</strike>ution of Python code. <em>object</em> must be\neither a string or a code object.  If it is a string, the string is parsed as\na suite of Python statements which is then <strike>exec</strike>uted (unless a syntax error\noccurs).  If it is a code object, it is simply <strike>exec</strike>uted.  In all cases,\nthe code that’s <strike>exec</strike>uted is expected to be valid as file input (see the\nsection “File input” in the Reference Manual). Be aware that the\n<code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">return</span></code> and <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">yield</span></code> statements may not be used outside of\nfunction definitions even within the context of code passed to the\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\"><strike>exec</strike>()</span></code> function. The return value is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.</p>", 
                        "", 
                        "<p><code>exec(<em>object</em><span class=\"optional\">[</span>,, <em>globals</em><span class=\"optional\">[</span>,, <em>locals</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>object</em><span class=\"optional\">[</span>,, <em>globals</em><span class=\"optional\">[</span>,, <em>locals</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><p>In all cases, if the optional parts are omitted, the code is executed in the\ncurrent scope.  If only <em>globals</em> is provided, it must be a dictionary, which\nwill be used for both the global and the local variables.  If <em>globals</em> and\n<em>locals</em> are given, they are used for the global and local variables,\nrespectively.  If provided, <em>locals</em> can be any mapping object.  Remember\nthat at module level, globals and locals are the same dictionary. If exec\ngets two separate objects as <em>globals</em> and <em>locals</em>, the code will be\nexecuted as if it were embedded in a class definition.</p><p>If the <em>globals</em> dictionary does not contain a value for the key\n<code class=\"docutils literal\"><span class=\"pre\">__builtins__</span></code>, a reference to the dictionary of the built-in module\n<code class=\"xref py py-mod docutils literal\"><span class=\"pre\">builtins</span></code> is inserted under that key.  That way you can control what\nbuiltins are available to the executed code by inserting your own\n<code class=\"docutils literal\"><span class=\"pre\">__builtins__</span></code> dictionary into <em>globals</em> before passing it to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code>.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The built-in functions <code class=\"xref py py-func docutils literal\"><span class=\"pre\">globals()</span></code> and <code class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></code> return the current\nglobal and local dictionary, respectively, which may be useful to pass around\nfor use as the second and third argument to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code>.</p>\n</div><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The default <em>locals</em> act as described for function <code class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></code> below:\nmodifications to the default <em>locals</em> dictionary should not be attempted.\nPass an explicit <em>locals</em> dictionary if you need to see effects of the\ncode on <em>locals</em> after function <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code> returns.</p>\n</div>", 
                        "reverse", 
                        "<code>exec()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "yb}(rfFS;_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "filter(<em>function</em>,, <em>iterable</em>)", 
                        "Python builtin function", 
                        "<p>Construct an iterator from those elements of <em>iterable</em> for which <em>function</em>\nreturns true.  <em>iterable</em> may be either a sequence, a container which\nsupports iteration, or an iterator.  If <em>function</em> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, the identity\nfunction is assumed, that is, all elements of <em>iterable</em> that are false are\nremoved.</p>", 
                        "", 
                        "<p><code>filter(<em>function</em>,, <em>iterable</em>)<em><em>function</em>,, <em>iterable</em></em></code></p><p>Note that <code class=\"docutils literal\"><span class=\"pre\">filter(function,</span> <span class=\"pre\">iterable)</span></code> is equivalent to the generator\nexpression <code class=\"docutils literal\"><span class=\"pre\">(item</span> <span class=\"pre\">for</span> <span class=\"pre\">item</span> <span class=\"pre\">in</span> <span class=\"pre\">iterable</span> <span class=\"pre\">if</span> <span class=\"pre\">function(item))</span></code> if function is\nnot <code class=\"docutils literal\"><span class=\"pre\">None</span></code> and <code class=\"docutils literal\"><span class=\"pre\">(item</span> <span class=\"pre\">for</span> <span class=\"pre\">item</span> <span class=\"pre\">in</span> <span class=\"pre\">iterable</span> <span class=\"pre\">if</span> <span class=\"pre\">item)</span></code> if function is\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>.</p><p>See <code class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.filterfalse()</span></code> for the complementary function that returns\nelements of <em>iterable</em> for which <em>function</em> returns false.</p>", 
                        "reverse", 
                        "<code>filter()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "jd(.eYWV>[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "float(<span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p id=\"index-3\">Return a <strike>float</strike>ing point number constructed from a number or string <em>x</em>.</p>", 
                        "", 
                        "<p>class <code>float(<span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>x</em><span class=\"optional\">]</span></em></code></p><p>If the argument is a string, it should contain a decimal number, optionally\npreceded by a sign, and optionally embedded in whitespace.  The optional\nsign may be <code class=\"docutils literal\"><span class=\"pre\">'+'</span></code> or <code class=\"docutils literal\"><span class=\"pre\">'-'</span></code>; a <code class=\"docutils literal\"><span class=\"pre\">'+'</span></code> sign has no effect on the value\nproduced.  The argument may also be a string representing a NaN\n(not-a-number), or a positive or negative infinity.  More precisely, the\ninput must conform to the following grammar after leading and trailing\nwhitespace characters are removed:</p><pre>\n<strong id=\"grammar-token-sign\">sign          </strong> ::=  “+” | “-“\n<strong id=\"grammar-token-infinity\">infinity      </strong> ::=  “Infinity” | “inf”\n<strong id=\"grammar-token-nan\">nan           </strong> ::=  “nan”\n<strong id=\"grammar-token-numeric_value\">numeric_value </strong> ::=  <code class=\"xref docutils literal\"><span class=\"pre\">floatnumber</span></code> | <code class=\"xref docutils literal\"><span class=\"pre\">infinity</span></code> | <code class=\"xref docutils literal\"><span class=\"pre\">nan</span></code>\n<strong id=\"grammar-token-numeric_string\">numeric_string</strong> ::=  [<code class=\"xref docutils literal\"><span class=\"pre\">sign</span></code>] <code class=\"xref docutils literal\"><span class=\"pre\">numeric_value</span></code>\n</pre><p>Here <code class=\"docutils literal\"><span class=\"pre\">floatnumber</span></code> is the form of a Python floating-point literal,\ndescribed in <span class=\"std std-ref\">Floating point literals</span>.  Case is not significant, so, for example,\n“inf”, “Inf”, “INFINITY” and “iNfINity” are all acceptable spellings for\npositive infinity.</p><p>Otherwise, if the argument is an integer or a floating point number, a\nfloating point number with the same value (within Python’s floating point\nprecision) is returned.  If the argument is outside the range of a Python\nfloat, an <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> will be raised.</p><p>For a general Python object <code class=\"docutils literal\"><span class=\"pre\">x</span></code>, <code class=\"docutils literal\"><span class=\"pre\">float(x)</span></code> delegates to\n<code class=\"docutils literal\"><span class=\"pre\">x.__float__()</span></code>.</p><p>If no argument is given, <code class=\"docutils literal\"><span class=\"pre\">0.0</span></code> is returned.</p><p>Examples:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'+1.23'</span><span class=\"p\">)</span>\n<span class=\"go\">1.23</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'   -12345</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"go\">-12345.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'1e-003'</span><span class=\"p\">)</span>\n<span class=\"go\">0.001</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'+1E6'</span><span class=\"p\">)</span>\n<span class=\"go\">1000000.0</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"s1\">'-Infinity'</span><span class=\"p\">)</span>\n<span class=\"go\">-inf</span>\n</pre></div>\n</div><p>The float type is described in <span class=\"std std-ref\">Numeric Types — int, float, complex</span>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Grouping digits with underscores as in code literals is allowed.</p>\n</div>", 
                        "reverse", 
                        "<code>float()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "rZd1!9(}Cr", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "format(<em>value</em><span class=\"optional\">[</span>,, <em>format_spec</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Convert a <em>value</em> to a “<strike>format</strike>ted” representation, as controlled by\n<em><strike>format</strike>_spec</em>.  The interpretation of <em><strike>format</strike>_spec</em> will depend on the type\nof the <em>value</em> argument, however there is a standard <strike>format</strike>ting syntax that\nis used by most built-in types: <span class=\"std std-ref\">Format Specification Mini-Language</span>.</p>", 
                        "", 
                        "<p><code>format(<em>value</em><span class=\"optional\">[</span>,, <em>format_spec</em><span class=\"optional\">]</span>)<em><em>value</em><span class=\"optional\">[</span>,, <em>format_spec</em><span class=\"optional\">]</span></em></code></p><p>The default <em>format_spec</em> is an empty string which usually gives the same\neffect as calling <code class=\"xref py py-func docutils literal\"><span class=\"pre\">str(value)</span></code>.</p><p>A call to <code class=\"docutils literal\"><span class=\"pre\">format(value,</span> <span class=\"pre\">format_spec)</span></code> is translated to\n<code class=\"docutils literal\"><span class=\"pre\">type(value).__format__(value,</span> <span class=\"pre\">format_spec)</span></code> which bypasses the instance\ndictionary when searching for the value’s <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__format__()</span></code> method.  A\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> exception is raised if the method search reaches\n<code class=\"xref py py-mod docutils literal\"><span class=\"pre\">object</span></code> and the <em>format_spec</em> is non-empty, or if either the\n<em>format_spec</em> or the return value are not strings.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.4: </span><code class=\"docutils literal\"><span class=\"pre\">object().__format__(format_spec)</span></code> raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code>\nif <em>format_spec</em> is not an empty string.</p>\n</div>", 
                        "reverse", 
                        "<code>format()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "uyB^J0)f}@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "frozenset(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a new <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>frozenset</strike></span></code> object, optionally with elements taken from\n<em>iterable</em>.  <code class=\"docutils literal\"><span class=\"pre\"><strike>frozenset</strike></span></code> is a built-in class.  See <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>frozenset</strike></span></code> and\n<span class=\"std std-ref\">Set Types — set, <strike>frozenset</strike></span> for documentation about this class.</p>", 
                        "", 
                        "<p>class <code>frozenset(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span></em></code></p><p>For other containers see the built-in <code class=\"xref py py-class docutils literal\"><span class=\"pre\">set</span></code>, <code class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></code>,\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></code>, and <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></code> classes, as well as the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></code>\nmodule.</p>", 
                        "reverse", 
                        "<code>frozenset()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "I(Zw4!}Xp2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "getattr(<em>object</em>,, <em>name</em><span class=\"optional\">[</span>,, <em>default</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return the value of the named attribute of <em>object</em>.  <em>name</em> must be a string.\nIf the string is the name of one of the object’s attributes, the result is the\nvalue of that attribute.  For example, <code class=\"docutils literal\"><span class=\"pre\"><strike>getattr</strike>(x,</span> <span class=\"pre\">'foobar')</span></code> is equivalent to\n<code class=\"docutils literal\"><span class=\"pre\">x.foobar</span></code>.  If the named attribute does not exist, <em>default</em> is returned if\nprovided, otherwise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">AttributeError</span></code> is raised.</p>", 
                        "", 
                        "<p><code>getattr(<em>object</em>,, <em>name</em><span class=\"optional\">[</span>,, <em>default</em><span class=\"optional\">]</span>)<em><em>object</em>,, <em>name</em><span class=\"optional\">[</span>,, <em>default</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>getattr()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "xad/g7!#eP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "hasattr(<em>object</em>,, <em>name</em>)", 
                        "Python builtin function", 
                        "<p>The arguments are an object and a string.  The result is <code class=\"docutils literal\"><span class=\"pre\">True</span></code> if the\nstring is the name of one of the object’s attributes, <code class=\"docutils literal\"><span class=\"pre\">False</span></code> if not. (This\nis implemented by calling <code class=\"docutils literal\"><span class=\"pre\">getattr(object,</span> <span class=\"pre\">name)</span></code> and seeing whether it\nraises an <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">AttributeError</span></code> or not.)</p>", 
                        "", 
                        "<p><code>hasattr(<em>object</em>,, <em>name</em>)<em><em>object</em>,, <em>name</em></em></code></p>", 
                        "reverse", 
                        "<code>hasattr()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "h1g.omnOM|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "hex(<em>x</em>)", 
                        "Python builtin function", 
                        "<p>Convert an integer number to a lowercase <strike>hex</strike>adecimal string prefixed with\n“0x”. If x is not a Python <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> object, it has to define an\n__index__() method that returns an integer. Some examples:</p>", 
                        "", 
                        "<p><code>hex(<em>x</em>)<em><em>x</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">)</span>\n<span class=\"go\">'0xff'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"go\">'-0x2a'</span>\n</pre></div>\n</div><p>If you want to convert an integer number to an uppercase or lower hexadecimal\nstring with prefix or not, you can use either of the following ways:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'</span><span class=\"si\">%#x</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%x</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%X</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"mi\">255</span>\n<span class=\"go\">('0xff', 'ff', 'FF')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"s1\">'#x'</span><span class=\"p\">),</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"s1\">'x'</span><span class=\"p\">),</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"s1\">'X'</span><span class=\"p\">)</span>\n<span class=\"go\">('0xff', 'ff', 'FF')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{255:#x}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{255:x}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{255:X}</span><span class=\"s1\">'</span>\n<span class=\"go\">('0xff', 'ff', 'FF')</span>\n</pre></div>\n</div><p>See also <code class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></code> for more information.</p><p>See also <code class=\"xref py py-func docutils literal\"><span class=\"pre\">int()</span></code> for converting a hexadecimal string to an\ninteger using a base of 16.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">To obtain a hexadecimal string representation for a float, use the\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">float.hex()</span></code> method.</p>\n</div>", 
                        "reverse", 
                        "<code>hex()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "lH*Wfd]$nF", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "id(<em>object</em>)", 
                        "Python builtin function", 
                        "<p>Return the “<strike>id</strike>entity” of an object.  This is an integer which\nis guaranteed to be unique and constant for this object during its lifetime.\nTwo objects with non-overlapping lifetimes may have the same <code class=\"xref py py-func docutils literal\"><span class=\"pre\"><strike>id</strike>()</span></code>\nvalue.</p>", 
                        "", 
                        "<p><code>id(<em>object</em>)<em><em>object</em></em></code></p><div class=\"impl-detail compound\">\n<p><strong>CPython implementation detail:</strong> This is the address of the object in memory.</p>\n</div>", 
                        "reverse", 
                        "<code>id()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "QjdU4^eK$s", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "input(<span class=\"optional\">[</span><em>prompt</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>If the <em>prompt</em> argument is present, it is written to standard output without\na trailing newline.  The function then reads a line from <strike>input</strike>, converts it\nto a string (stripping a trailing newline), and returns that.  When EOF is\nread, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">EOFError</span></code> is raised.  Example:</p>", 
                        "", 
                        "<p><code>input(<span class=\"optional\">[</span><em>prompt</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>prompt</em><span class=\"optional\">]</span></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s1\">'--&gt; '</span><span class=\"p\">)</span>  \n<span class=\"go\">--&gt; Monty Python's Flying Circus</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">s</span>  \n<span class=\"go\">\"Monty Python's Flying Circus\"</span>\n</pre></div>\n</div><p>If the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">readline</span></code> module was loaded, then <code class=\"xref py py-func docutils literal\"><span class=\"pre\">input()</span></code> will use it\nto provide elaborate line editing and history features.</p>", 
                        "reverse", 
                        "<code>input()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "DaaE&7G+,-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "int(<em>x=0</em>)", 
                        "Python builtin function", 
                        "<p>Return an <strike>int</strike>eger object constructed from a number or string <em>x</em>, or return\n<code class=\"docutils literal\"><span class=\"pre\">0</span></code> if no arguments are given.  If <em>x</em> is a number, return\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">x.__<strike>int</strike>__()</span></code>.  For floating po<strike>int</strike> numbers, this\ntruncates towards zero.</p>", 
                        "", 
                        "<p>class <code>int(<em>x=0</em>)<em><em>x=0</em></em></code></p><p>If <em>x</em> is not a number or if <em>base</em> is given, then <em>x</em> must be a string,\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></code>, or <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></code> instance representing an <span class=\"std std-ref\">integer\nliteral</span> in radix <em>base</em>.  Optionally, the literal can be\npreceded by <code class=\"docutils literal\"><span class=\"pre\">+</span></code> or <code class=\"docutils literal\"><span class=\"pre\">-</span></code> (with no space in between) and surrounded by\nwhitespace.  A base-n literal consists of the digits 0 to n-1, with <code class=\"docutils literal\"><span class=\"pre\">a</span></code>\nto <code class=\"docutils literal\"><span class=\"pre\">z</span></code> (or <code class=\"docutils literal\"><span class=\"pre\">A</span></code> to <code class=\"docutils literal\"><span class=\"pre\">Z</span></code>) having\nvalues 10 to 35.  The default <em>base</em> is 10. The allowed values are 0 and 2–36.\nBase-2, -8, and -16 literals can be optionally prefixed with <code class=\"docutils literal\"><span class=\"pre\">0b</span></code>/<code class=\"docutils literal\"><span class=\"pre\">0B</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">0o</span></code>/<code class=\"docutils literal\"><span class=\"pre\">0O</span></code>, or <code class=\"docutils literal\"><span class=\"pre\">0x</span></code>/<code class=\"docutils literal\"><span class=\"pre\">0X</span></code>, as with integer literals in code.  Base 0\nmeans to interpret exactly as a code literal, so that the actual base is 2,\n8, 10, or 16, and so that <code class=\"docutils literal\"><span class=\"pre\">int('010',</span> <span class=\"pre\">0)</span></code> is not legal, while\n<code class=\"docutils literal\"><span class=\"pre\">int('010')</span></code> is, as well as <code class=\"docutils literal\"><span class=\"pre\">int('010',</span> <span class=\"pre\">8)</span></code>.</p><p>The integer type is described in <span class=\"std std-ref\">Numeric Types — int, float, complex</span>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.4: </span>If <em>base</em> is not an instance of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> and the <em>base</em> object has a\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">base.__index__</span></code> method, that method is called\nto obtain an integer for the base.  Previous versions used\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">base.__int__</span></code> instead of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">base.__index__</span></code>.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Grouping digits with underscores as in code literals is allowed.</p>\n</div>", 
                        "reverse", 
                        "<code>int()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "c6z,BL0MDI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "int(<em>x</em>,, <em>base=10</em>)", 
                        "Python builtin function", 
                        "<p>Return an <strike><strike>int</strike></strike>eger object constructed from a number or string <em>x</em>, or return\n<code class=\"docutils literal\"><span class=\"pre\">0</span></code> if no arguments are given.  If <em>x</em> is a number, return\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">x.__<strike><strike>int</strike></strike>__()</span></code>.  For floating po<strike><strike>int</strike></strike> numbers, this\ntruncates towards zero.</p>", 
                        "", 
                        "<p>class <code>int(<em>x</em>,, <em>base=10</em>)<em><em>x</em>,, <em>base=10</em></em></code></p><p>class <code>int(<em>x=0</em>)<em><em>x=0</em></em></code></p><p>If <em>x</em> is not a number or if <em>base</em> is given, then <em>x</em> must be a string,\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></code>, or <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></code> instance representing an <span class=\"std std-ref\">integer\nliteral</span> in radix <em>base</em>.  Optionally, the literal can be\npreceded by <code class=\"docutils literal\"><span class=\"pre\">+</span></code> or <code class=\"docutils literal\"><span class=\"pre\">-</span></code> (with no space in between) and surrounded by\nwhitespace.  A base-n literal consists of the digits 0 to n-1, with <code class=\"docutils literal\"><span class=\"pre\">a</span></code>\nto <code class=\"docutils literal\"><span class=\"pre\">z</span></code> (or <code class=\"docutils literal\"><span class=\"pre\">A</span></code> to <code class=\"docutils literal\"><span class=\"pre\">Z</span></code>) having\nvalues 10 to 35.  The default <em>base</em> is 10. The allowed values are 0 and 2–36.\nBase-2, -8, and -16 literals can be optionally prefixed with <code class=\"docutils literal\"><span class=\"pre\">0b</span></code>/<code class=\"docutils literal\"><span class=\"pre\">0B</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">0o</span></code>/<code class=\"docutils literal\"><span class=\"pre\">0O</span></code>, or <code class=\"docutils literal\"><span class=\"pre\">0x</span></code>/<code class=\"docutils literal\"><span class=\"pre\">0X</span></code>, as with integer literals in code.  Base 0\nmeans to interpret exactly as a code literal, so that the actual base is 2,\n8, 10, or 16, and so that <code class=\"docutils literal\"><span class=\"pre\">int('010',</span> <span class=\"pre\">0)</span></code> is not legal, while\n<code class=\"docutils literal\"><span class=\"pre\">int('010')</span></code> is, as well as <code class=\"docutils literal\"><span class=\"pre\">int('010',</span> <span class=\"pre\">8)</span></code>.</p><p>The integer type is described in <span class=\"std std-ref\">Numeric Types — int, float, complex</span>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.4: </span>If <em>base</em> is not an instance of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> and the <em>base</em> object has a\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">base.__index__</span></code> method, that method is called\nto obtain an integer for the base.  Previous versions used\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">base.__int__</span></code> instead of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">base.__index__</span></code>.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Grouping digits with underscores as in code literals is allowed.</p>\n</div>", 
                        "reverse", 
                        "<code>int()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Fd90!F9aUj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "isinstance(<em>object</em>,, <em>classinfo</em>)", 
                        "Python builtin function", 
                        "<p>Return true if the <em>object</em> argument is an instance of the <em>classinfo</em>\nargument, or of a (direct, indirect or <span class=\"xref std std-term\">virtual</span>) subclass thereof.  If <em>object</em> is not\nan object of the given type, the function always returns false.\nIf <em>classinfo</em> is a tuple of type objects (or recursively, other such\ntuples), return true if <em>object</em> is an instance of any of the types.\nIf <em>classinfo</em> is not a type or tuple of types and such tuples,\na <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> exception is raised.</p>", 
                        "", 
                        "<p><code>isinstance(<em>object</em>,, <em>classinfo</em>)<em><em>object</em>,, <em>classinfo</em></em></code></p>", 
                        "reverse", 
                        "<code>isinstance()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "t.CDMtbf{=", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "issubclass(<em>class</em>,, <em>classinfo</em>)", 
                        "Python builtin function", 
                        "<p>Return true if <em>class</em> is a subclass (direct, indirect or <span class=\"xref std std-term\">virtual</span>) of <em>classinfo</em>.  A\nclass is considered a subclass of itself. <em>classinfo</em> may be a tuple of class\nobjects, in which case every entry in <em>classinfo</em> will be checked. In any other\ncase, a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> exception is raised.</p>", 
                        "", 
                        "<p><code>issubclass(<em>class</em>,, <em>classinfo</em>)<em><em>class</em>,, <em>classinfo</em></em></code></p>", 
                        "reverse", 
                        "<code>issubclass()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "cAJ(R_iG{@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "iter(<em>object</em><span class=\"optional\">[</span>,, <em>sentinel</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return an <span class=\"xref std std-term\"><strike>iter</strike>ator</span> object.  The first argument is interpreted very\ndifferently depending on the presence of the second argument. Without a\nsecond argument, <em>object</em> must be a collection object which supports the\n<strike>iter</strike>ation protocol (the <code class=\"xref py py-meth docutils l<strike>iter</strike>al\"><span class=\"pre\">__<strike>iter</strike>__()</span></code> method), or it must support the\nsequence protocol (the <code class=\"xref py py-meth docutils l<strike>iter</strike>al\"><span class=\"pre\">__getitem__()</span></code> method with integer arguments\nstarting at <code class=\"docutils l<strike>iter</strike>al\"><span class=\"pre\">0</span></code>).  If it does not support either of those protocols,\n<code class=\"xref py py-exc docutils l<strike>iter</strike>al\"><span class=\"pre\">TypeError</span></code> is raised. If the second argument, <em>sentinel</em>, is given,\nthen <em>object</em> must be a callable object.  The <strike>iter</strike>ator created in this case\nwill call <em>object</em> with no arguments for each call to its\n<code class=\"xref py py-meth docutils l<strike>iter</strike>al\"><span class=\"pre\">__next__()</span></code> method; if the value returned is equal to\n<em>sentinel</em>, <code class=\"xref py py-exc docutils l<strike>iter</strike>al\"><span class=\"pre\">StopIteration</span></code> will be raised, otherwise the value will\nbe returned.</p>", 
                        "", 
                        "<p><code>iter(<em>object</em><span class=\"optional\">[</span>,, <em>sentinel</em><span class=\"optional\">]</span>)<em><em>object</em><span class=\"optional\">[</span>,, <em>sentinel</em><span class=\"optional\">]</span></em></code></p><p>See also <span class=\"std std-ref\">Iterator Types</span>.</p><p>One useful application of the second form of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">iter()</span></code> is to read lines of\na file until a certain line is reached.  The following example reads a file\nuntil the <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">readline()</span></code> method returns an empty string:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'mydata.txt'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"o\">.</span><span class=\"n\">readline</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">):</span>\n        <span class=\"n\">process_line</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>iter()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "s*]0;YPhM/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "list(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Rather than being a function, <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>list</strike></span></code> is actually a mutable\nsequence type, as documented in <span class=\"std std-ref\">Lists</span> and <span class=\"std std-ref\">Sequence Types — <strike>list</strike>, tuple, range</span>.</p>", 
                        "", 
                        "<p>class <code>list(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>list()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Vb.#T}cH<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locals()", 
                        "Python builtin function", 
                        "<p>Update and return a dictionary representing the current local symbol table.\nFree variables are returned by <code class=\"xref py py-func docutils literal\"><span class=\"pre\"><strike>locals</strike>()</span></code> when it is called in function\nblocks, but not in class blocks.</p>", 
                        "", 
                        "<p><code>locals()<em>()</em></code></p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The contents of this dictionary should not be modified; changes may not\naffect the values of local and free variables used by the interpreter.</p>\n</div>", 
                        "reverse", 
                        "<code>locals()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "t;bTc!fFy4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "map(<em>function</em>,, <em>iterable</em>,, <em>…</em>)", 
                        "Python builtin function", 
                        "<p>Return an iterator that applies <em>function</em> to every item of <em>iterable</em>,\nyielding the results.  If additional <em>iterable</em> arguments are passed,\n<em>function</em> must take that many arguments and is applied to the items from all\niterables in parallel.  With multiple iterables, the iterator stops when the\nshortest iterable is exhausted.  For cases where the function inputs are\nalready arranged into argument tuples, see <code class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.star<strike>map</strike>()</span></code>.</p>", 
                        "", 
                        "<p><code>map(<em>function</em>,, <em>iterable</em>,, <em>…</em>)<em><em>function</em>,, <em>iterable</em>,, <em>…</em></em></code></p>", 
                        "reverse", 
                        "<code>map()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "QZ|nH$4%@@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "memoryview(<em>obj</em>)", 
                        "Python builtin function", 
                        "<p>Return a “memory view” object created from the given argument.  See\n<span class=\"std std-ref\">Memory Views</span> for more information.</p>", 
                        "", 
                        "<p><code>memoryview(<em>obj</em>)<em><em>obj</em></em></code></p>", 
                        "reverse", 
                        "<code>memoryview()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "i!7QrBB&!a", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "next(<em>iterator</em><span class=\"optional\">[</span>,, <em>default</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Retrieve the <strike>next</strike> item from the <em>iterator</em> by calling its\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__<strike>next</strike>__()</span></code> method.  If <em>default</em> is given, it is returned\nif the iterator is exhausted, otherwise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></code> is raised.</p>", 
                        "", 
                        "<p><code>next(<em>iterator</em><span class=\"optional\">[</span>,, <em>default</em><span class=\"optional\">]</span>)<em><em>iterator</em><span class=\"optional\">[</span>,, <em>default</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>next()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "wu^4HE/t{`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "object", 
                        "Python builtin function", 
                        "<p>Return a new featureless <strike>object</strike>.  <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>object</strike></span></code> is a base for all classes.\nIt has the methods that are common to all instances of Python classes.  This\nfunction does not accept any arguments.</p>", 
                        "", 
                        "<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code> does <em>not</em> have a <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code>, so you can’t\nassign arbitrary attributes to an instance of the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">object</span></code> class.</p>\n</div>", 
                        "reverse", 
                        "<code>object</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "dcX$HZJ:2*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "oct(<em>x</em>)", 
                        "Python builtin function", 
                        "<p>Convert an integer number to an <strike>oct</strike>al string prefixed with “0o”.  The result\nis a valid Python expression. If <em>x</em> is not a Python <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code> object, it\nhas to define an <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__index__()</span></code> method that returns an integer. For\nexample:</p>", 
                        "", 
                        "<p><code>oct(<em>x</em>)<em><em>x</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">oct</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"go\">'0o10'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">oct</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">56</span><span class=\"p\">)</span>\n<span class=\"go\">'-0o70'</span>\n</pre></div>\n</div><p>If you want to convert an integer number to octal string either with prefix\n“0o” or not, you can use either of the following ways.</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'</span><span class=\"si\">%#o</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"si\">%o</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"mi\">10</span>\n<span class=\"go\">('0o12', '12')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'#o'</span><span class=\"p\">),</span> <span class=\"nb\">format</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'o'</span><span class=\"p\">)</span>\n<span class=\"go\">('0o12', '12')</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{10:#o}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"s1\">'</span><span class=\"si\">{10:o}</span><span class=\"s1\">'</span>\n<span class=\"go\">('0o12', '12')</span>\n</pre></div>\n</div><p>See also <code class=\"xref py py-func docutils literal\"><span class=\"pre\">format()</span></code> for more information.</p><blockquote>\n<div><span class=\"target\" id=\"index-5\"></span></div></blockquote>", 
                        "reverse", 
                        "<code>oct()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Hi/M>#y<Yd", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "open(<em>file</em>,, <em>mode=’r’</em>,, <em>buffering=-1</em>,, <em>encoding=None</em>,, <em>errors=None</em>,, <em>newline=None</em>,, <em>closefd=True</em>,, <em>opener=None</em>)", 
                        "Python builtin function", 
                        "<p>Open <em>file</em> and return a corresponding <span class=\"xref std std-term\">file object</span>.  If the file\ncannot be <strike>open</strike>ed, an <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code> is raised.</p>", 
                        "", 
                        "<p><code>open(<em>file</em>,, <em>mode=’r’</em>,, <em>buffering=-1</em>,, <em>encoding=None</em>,, <em>errors=None</em>,, <em>newline=None</em>,, <em>closefd=True</em>,, <em>opener=None</em>)<em><em>file</em>,, <em>mode=’r’</em>,, <em>buffering=-1</em>,, <em>encoding=None</em>,, <em>errors=None</em>,, <em>newline=None</em>,, <em>closefd=True</em>,, <em>opener=None</em></em></code></p><p><em>file</em> is a <span class=\"xref std std-term\">path-like object</span> giving the pathname (absolute or\nrelative to the current working directory) of the file to be opened or an\ninteger file descriptor of the file to be wrapped.  (If a file descriptor is\ngiven, it is closed when the returned I/O object is closed, unless <em>closefd</em>\nis set to <code class=\"docutils literal\"><span class=\"pre\">False</span></code>.)</p><p><em>mode</em> is an optional string that specifies the mode in which the file is\nopened.  It defaults to <code class=\"docutils literal\"><span class=\"pre\">'r'</span></code> which means open for reading in text mode.\nOther common values are <code class=\"docutils literal\"><span class=\"pre\">'w'</span></code> for writing (truncating the file if it\nalready exists), <code class=\"docutils literal\"><span class=\"pre\">'x'</span></code> for exclusive creation and <code class=\"docutils literal\"><span class=\"pre\">'a'</span></code> for appending\n(which on <em>some</em> Unix systems, means that <em>all</em> writes append to the end of\nthe file regardless of the current seek position).  In text mode, if\n<em>encoding</em> is not specified the encoding used is platform dependent:\n<code class=\"docutils literal\"><span class=\"pre\">locale.getpreferredencoding(False)</span></code> is called to get the current locale\nencoding. (For reading and writing raw bytes use binary mode and leave\n<em>encoding</em> unspecified.)  The available modes are:</p><table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"13%\">\n<col width=\"88%\">\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Character</th>\n<th class=\"head\">Meaning</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">'r'</span></code></td>\n<td>open for reading (default)</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">'w'</span></code></td>\n<td>open for writing, truncating the file first</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">'x'</span></code></td>\n<td>open for exclusive creation, failing if the file already exists</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">'a'</span></code></td>\n<td>open for writing, appending to the end of the file if it exists</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">'b'</span></code></td>\n<td>binary mode</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">'t'</span></code></td>\n<td>text mode (default)</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">'+'</span></code></td>\n<td>open a disk file for updating (reading and writing)</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">'U'</span></code></td>\n<td><span class=\"xref std std-term\">universal newlines</span> mode (deprecated)</td>\n</tr>\n</tbody>\n</table><p>The default mode is <code class=\"docutils literal\"><span class=\"pre\">'r'</span></code> (open for reading text, synonym of <code class=\"docutils literal\"><span class=\"pre\">'rt'</span></code>).\nFor binary read-write access, the mode <code class=\"docutils literal\"><span class=\"pre\">'w+b'</span></code> opens and truncates the file\nto 0 bytes.  <code class=\"docutils literal\"><span class=\"pre\">'r+b'</span></code> opens the file without truncation.</p><p>As mentioned in the <span class=\"std std-ref\">Overview</span>, Python distinguishes between binary\nand text I/O.  Files opened in binary mode (including <code class=\"docutils literal\"><span class=\"pre\">'b'</span></code> in the <em>mode</em>\nargument) return contents as <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></code> objects without any decoding.  In\ntext mode (the default, or when <code class=\"docutils literal\"><span class=\"pre\">'t'</span></code> is included in the <em>mode</em> argument),\nthe contents of the file are returned as <code class=\"xref py py-class docutils literal\"><span class=\"pre\">str</span></code>, the bytes having been\nfirst decoded using a platform-dependent encoding or using the specified\n<em>encoding</em> if given.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Python doesn’t depend on the underlying operating system’s notion of text\nfiles; all the processing is done by Python itself, and is therefore\nplatform-independent.</p>\n</div><p><em>buffering</em> is an optional integer used to set the buffering policy.  Pass 0\nto switch buffering off (only allowed in binary mode), 1 to select line\nbuffering (only usable in text mode), and an integer &gt; 1 to indicate the size\nin bytes of a fixed-size chunk buffer.  When no <em>buffering</em> argument is\ngiven, the default buffering policy works as follows:</p><ul class=\"simple\">\n<li>Binary files are buffered in fixed-size chunks; the size of the buffer is\nchosen using a heuristic trying to determine the underlying device’s “block\nsize” and falling back on <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">io.DEFAULT_BUFFER_SIZE</span></code>.  On many systems,\nthe buffer will typically be 4096 or 8192 bytes long.</li>\n<li>“Interactive” text files (files for which <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">isatty()</span></code>\nreturns <code class=\"docutils literal\"><span class=\"pre\">True</span></code>) use line buffering.  Other text files use the policy\ndescribed above for binary files.</li>\n</ul><p><em>encoding</em> is the name of the encoding used to decode or encode the file.\nThis should only be used in text mode.  The default encoding is platform\ndependent (whatever <code class=\"xref py py-func docutils literal\"><span class=\"pre\">locale.getpreferredencoding()</span></code> returns), but any\n<span class=\"xref std std-term\">text encoding</span> supported by Python\ncan be used.  See the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">codecs</span></code> module for\nthe list of supported encodings.</p><p><em>errors</em> is an optional string that specifies how encoding and decoding\nerrors are to be handled—this cannot be used in binary mode.\nA variety of standard error handlers are available\n(listed under <span class=\"std std-ref\">Error Handlers</span>), though any\nerror handling name that has been registered with\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">codecs.register_error()</span></code> is also valid.  The standard names\ninclude:</p><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">'strict'</span></code> to raise a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> exception if there is\nan encoding error.  The default value of <code class=\"docutils literal\"><span class=\"pre\">None</span></code> has the same\neffect.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'ignore'</span></code> ignores errors.  Note that ignoring encoding errors\ncan lead to data loss.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'replace'</span></code> causes a replacement marker (such as <code class=\"docutils literal\"><span class=\"pre\">'?'</span></code>) to be inserted\nwhere there is malformed data.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'surrogateescape'</span></code> will represent any incorrect bytes as code\npoints in the Unicode Private Use Area ranging from U+DC80 to\nU+DCFF.  These private code points will then be turned back into\nthe same bytes when the <code class=\"docutils literal\"><span class=\"pre\">surrogateescape</span></code> error handler is used\nwhen writing data.  This is useful for processing files in an\nunknown encoding.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'xmlcharrefreplace'</span></code> is only supported when writing to a file.\nCharacters not supported by the encoding are replaced with the\nappropriate XML character reference <code class=\"docutils literal\"><span class=\"pre\">&amp;#nnn;</span></code>.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'backslashreplace'</span></code> replaces malformed data by Python’s backslashed\nescape sequences.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'namereplace'</span></code> (also only supported when writing)\nreplaces unsupported characters with <code class=\"docutils literal\"><span class=\"pre\">\\N{...}</span></code> escape sequences.</li>\n</ul><p id=\"index-6\"><em>newline</em> controls how <span class=\"xref std std-term\">universal newlines</span> mode works (it only\napplies to text mode).  It can be <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, <code class=\"docutils literal\"><span class=\"pre\">''</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'\\n'</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'\\r'</span></code>, and\n<code class=\"docutils literal\"><span class=\"pre\">'\\r\\n'</span></code>.  It works as follows:</p><ul class=\"simple\">\n<li>When reading input from the stream, if <em>newline</em> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, universal\nnewlines mode is enabled.  Lines in the input can end in <code class=\"docutils literal\"><span class=\"pre\">'\\n'</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">'\\r'</span></code>, or <code class=\"docutils literal\"><span class=\"pre\">'\\r\\n'</span></code>, and these are translated into <code class=\"docutils literal\"><span class=\"pre\">'\\n'</span></code> before\nbeing returned to the caller.  If it is <code class=\"docutils literal\"><span class=\"pre\">''</span></code>, universal newlines mode is\nenabled, but line endings are returned to the caller untranslated.  If it\nhas any of the other legal values, input lines are only terminated by the\ngiven string, and the line ending is returned to the caller untranslated.</li>\n<li>When writing output to the stream, if <em>newline</em> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, any <code class=\"docutils literal\"><span class=\"pre\">'\\n'</span></code>\ncharacters written are translated to the system default line separator,\n<code class=\"xref py py-data docutils literal\"><span class=\"pre\">os.linesep</span></code>.  If <em>newline</em> is <code class=\"docutils literal\"><span class=\"pre\">''</span></code> or <code class=\"docutils literal\"><span class=\"pre\">'\\n'</span></code>, no translation\ntakes place.  If <em>newline</em> is any of the other legal values, any <code class=\"docutils literal\"><span class=\"pre\">'\\n'</span></code>\ncharacters written are translated to the given string.</li>\n</ul><p>If <em>closefd</em> is <code class=\"docutils literal\"><span class=\"pre\">False</span></code> and a file descriptor rather than a filename was\ngiven, the underlying file descriptor will be kept open when the file is\nclosed.  If a filename is given <em>closefd</em> must be <code class=\"docutils literal\"><span class=\"pre\">True</span></code> (the default)\notherwise an error will be raised.</p><p>A custom opener can be used by passing a callable as <em>opener</em>. The underlying\nfile descriptor for the file object is then obtained by calling <em>opener</em> with\n(<em>file</em>, <em>flags</em>). <em>opener</em> must return an open file descriptor (passing\n<code class=\"xref py py-mod docutils literal\"><span class=\"pre\">os.open</span></code> as <em>opener</em> results in functionality similar to passing\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>).</p><p>The newly created file is <span class=\"std std-ref\">non-inheritable</span>.</p><p>The following example uses the <span class=\"std std-ref\">dir_fd</span> parameter of the\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.open()</span></code> function to open a file relative to a given directory:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dir_fd</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'somedir'</span><span class=\"p\">,</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">O_RDONLY</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">opener</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">return</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"p\">,</span> <span class=\"n\">dir_fd</span><span class=\"o\">=</span><span class=\"n\">dir_fd</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'spamspam.txt'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"n\">opener</span><span class=\"o\">=</span><span class=\"n\">opener</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'This will be written to somedir/spamspam.txt'</span><span class=\"p\">,</span> <span class=\"n\">file</span><span class=\"o\">=</span><span class=\"n\">f</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">(</span><span class=\"n\">dir_fd</span><span class=\"p\">)</span>  <span class=\"c1\"># don't leak a file descriptor</span>\n</pre></div>\n</div><p>The type of <span class=\"xref std std-term\">file object</span> returned by the <code class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></code> function\ndepends on the mode.  When <code class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></code> is used to open a file in a text\nmode (<code class=\"docutils literal\"><span class=\"pre\">'w'</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'r'</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'wt'</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'rt'</span></code>, etc.), it returns a subclass of\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.TextIOBase</span></code> (specifically <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.TextIOWrapper</span></code>).  When used\nto open a file in a binary mode with buffering, the returned class is a\nsubclass of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedIOBase</span></code>.  The exact class varies: in read\nbinary mode, it returns an <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedReader</span></code>; in write binary and\nappend binary modes, it returns an <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedWriter</span></code>, and in\nread/write mode, it returns an <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.BufferedRandom</span></code>.  When buffering is\ndisabled, the raw stream, a subclass of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.RawIOBase</span></code>,\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.FileIO</span></code>, is returned.</p><p id=\"index-7\">See also the file handling modules, such as, <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">fileinput</span></code>, <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">io</span></code>\n(where <code class=\"xref py py-func docutils literal\"><span class=\"pre\">open()</span></code> is declared), <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">os</span></code>, <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">os.path</span></code>, <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">tempfile</span></code>,\nand <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">shutil</span></code>.</p><div class=\"versionchanged\">\n<blockquote>\n<div><span class=\"versionmodified\">Changed in version 3.3: </span><ul class=\"simple\">\n<li>The <em>opener</em> parameter was added.</li>\n<li>The <code class=\"docutils literal\"><span class=\"pre\">'x'</span></code> mode was added.</li>\n<li><code class=\"xref py py-exc docutils literal\"><span class=\"pre\">IOError</span></code> used to be raised, it is now an alias of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code>.</li>\n<li><code class=\"xref py py-exc docutils literal\"><span class=\"pre\">FileExistsError</span></code> is now raised if the file opened in exclusive\ncreation mode (<code class=\"docutils literal\"><span class=\"pre\">'x'</span></code>) already exists.</li>\n</ul>\n</div></blockquote>\n</div><div class=\"versionchanged\">\n<blockquote>\n<div><span class=\"versionmodified\">Changed in version 3.4: </span><ul class=\"simple\">\n<li>The file is now non-inheritable.</li>\n</ul>\n</div></blockquote>\n</div><div class=\"deprecated-removed\">\n<p><span class=\"versionmodified\">Deprecated since version 3.4, will be removed in version 4.0: </span>The <code class=\"docutils literal\"><span class=\"pre\">'U'</span></code> mode.</p>\n</div><div class=\"versionchanged\">\n<blockquote>\n<div><span class=\"versionmodified\">Changed in version 3.5: </span><ul class=\"simple\">\n<li>If the system call is interrupted and the signal handler does not raise an\nexception, the function now retries the system call instead of raising an\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">InterruptedError</span></code> exception (see <span class=\"target\" id=\"index-8\"></span><strong>PEP 475</strong> for the rationale).</li>\n<li>The <code class=\"docutils literal\"><span class=\"pre\">'namereplace'</span></code> error handler was added.</li>\n</ul>\n</div></blockquote>\n</div><div class=\"versionchanged\">\n<blockquote>\n<div><span class=\"versionmodified\">Changed in version 3.6: </span><ul class=\"simple\">\n<li>Support added to accept objects implementing <code class=\"xref py py-class docutils literal\"><span class=\"pre\">os.PathLike</span></code>.</li>\n<li>On Windows, opening a console buffer may return a subclass of\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.RawIOBase</span></code> other than <code class=\"xref py py-class docutils literal\"><span class=\"pre\">io.FileIO</span></code>.</li>\n</ul>\n</div></blockquote>\n</div>", 
                        "reverse", 
                        "<code>open()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "vCnJH{Rl4I", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ord(<em>c</em>)", 
                        "Python builtin function", 
                        "<p>Given a string representing one Unicode character, return an integer\nrepresenting the Unicode code point of that character.  For example,\n<code class=\"docutils literal\"><span class=\"pre\"><strike>ord</strike>('a')</span></code> returns the integer <code class=\"docutils literal\"><span class=\"pre\">97</span></code> and <code class=\"docutils literal\"><span class=\"pre\"><strike>ord</strike>('€')</span></code> (Euro sign)\nreturns <code class=\"docutils literal\"><span class=\"pre\">8364</span></code>.  This is the inverse of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">chr()</span></code>.</p>", 
                        "", 
                        "<p><code>ord(<em>c</em>)<em><em>c</em></em></code></p>", 
                        "reverse", 
                        "<code>ord()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "fv!,$]FUsO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pow(<em>x</em>,, <em>y</em><span class=\"optional\">[</span>,, <em>z</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return <em>x</em> to the <strike>pow</strike>er <em>y</em>; if <em>z</em> is present, return <em>x</em> to the <strike>pow</strike>er <em>y</em>,\nmodulo <em>z</em> (computed more efficiently than <code class=\"docutils literal\"><span class=\"pre\"><strike>pow</strike>(x,</span> <span class=\"pre\">y)</span> <span class=\"pre\">%</span> <span class=\"pre\">z</span></code>). The two-argument\nform <code class=\"docutils literal\"><span class=\"pre\"><strike>pow</strike>(x,</span> <span class=\"pre\">y)</span></code> is equivalent to using the <strike>pow</strike>er operator: <code class=\"docutils literal\"><span class=\"pre\">x**y</span></code>.</p>", 
                        "", 
                        "<p><code>pow(<em>x</em>,, <em>y</em><span class=\"optional\">[</span>,, <em>z</em><span class=\"optional\">]</span>)<em><em>x</em>,, <em>y</em><span class=\"optional\">[</span>,, <em>z</em><span class=\"optional\">]</span></em></code></p><p>The arguments must have numeric types.  With mixed operand types, the\ncoercion rules for binary arithmetic operators apply.  For <code class=\"xref py py-class docutils literal\"><span class=\"pre\">int</span></code>\noperands, the result has the same type as the operands (after coercion)\nunless the second argument is negative; in that case, all arguments are\nconverted to float and a float result is delivered.  For example, <code class=\"docutils literal\"><span class=\"pre\">10**2</span></code>\nreturns <code class=\"docutils literal\"><span class=\"pre\">100</span></code>, but <code class=\"docutils literal\"><span class=\"pre\">10**-2</span></code> returns <code class=\"docutils literal\"><span class=\"pre\">0.01</span></code>.  If the second argument is\nnegative, the third argument must be omitted.  If <em>z</em> is present, <em>x</em> and <em>y</em>\nmust be of integer types, and <em>y</em> must be non-negative.</p>", 
                        "reverse", 
                        "<code>pow()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Af3~Js?D8]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "print(<em>*objects</em>,, <em>sep=’ ‘</em>,, <em>end=’\\n’</em>,, <em>file=sys.stdout</em>,, <em>flush=False</em>)", 
                        "Python builtin function", 
                        "<p>Print <em>objects</em> to the text stream <em>file</em>, separated by <em>sep</em> and followed\nby <em>end</em>.  <em>sep</em>, <em>end</em>, <em>file</em> and <em>flush</em>, if present, must be given as keyword\narguments.</p>", 
                        "", 
                        "<p><code>print(<em>*objects</em>,, <em>sep=’ ‘</em>,, <em>end=’\\n’</em>,, <em>file=sys.stdout</em>,, <em>flush=False</em>)<em><em>*objects</em>,, <em>sep=’ ‘</em>,, <em>end=’\\n’</em>,, <em>file=sys.stdout</em>,, <em>flush=False</em></em></code></p><p>All non-keyword arguments are converted to strings like <code class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></code> does and\nwritten to the stream, separated by <em>sep</em> and followed by <em>end</em>.  Both <em>sep</em>\nand <em>end</em> must be strings; they can also be <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, which means to use the\ndefault values.  If no <em>objects</em> are given, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">print()</span></code> will just write\n<em>end</em>.</p><p>The <em>file</em> argument must be an object with a <code class=\"docutils literal\"><span class=\"pre\">write(string)</span></code> method; if it\nis not present or <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, <code class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.stdout</span></code> will be used.  Since printed\narguments are converted to text strings, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">print()</span></code> cannot be used with\nbinary mode file objects.  For these, use <code class=\"docutils literal\"><span class=\"pre\">file.write(...)</span></code> instead.</p><p>Whether output is buffered is usually determined by <em>file</em>, but if the\n<em>flush</em> keyword argument is true, the stream is forcibly flushed.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Added the <em>flush</em> keyword argument.</p>\n</div>", 
                        "reverse", 
                        "<code>print()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "mw%F96*XF6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "range(<em>stop</em>)", 
                        "Python builtin function", 
                        "<p>Rather than being a function, <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>range</strike></span></code> is actually an immutable\nsequence type, as documented in <span class=\"std std-ref\">Ranges</span> and <span class=\"std std-ref\">Sequence Types — list, tuple, <strike>range</strike></span>.</p>", 
                        "", 
                        "<p><code>range(<em>stop</em>)<em><em>stop</em></em></code></p>", 
                        "reverse", 
                        "<code>range()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Cc]AHJko1*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "range(<em>start</em>,, <em>stop</em><span class=\"optional\">[</span>,, <em>step</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Rather than being a function, <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike><strike>range</strike></strike></span></code> is actually an immutable\nsequence type, as documented in <span class=\"std std-ref\">Ranges</span> and <span class=\"std std-ref\">Sequence Types — list, tuple, <strike><strike>range</strike></strike></span>.</p>", 
                        "", 
                        "<p><code>range(<em>start</em>,, <em>stop</em><span class=\"optional\">[</span>,, <em>step</em><span class=\"optional\">]</span>)<em><em>start</em>,, <em>stop</em><span class=\"optional\">[</span>,, <em>step</em><span class=\"optional\">]</span></em></code></p><p><code>range(<em>stop</em>)<em><em>stop</em></em></code></p>", 
                        "reverse", 
                        "<code>range()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "LgSeVD8Y~5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "repr(<em>object</em>)", 
                        "Python builtin function", 
                        "<p>Return a string containing a printable <strike>repr</strike>esentation of an object.  For many\ntypes, this function makes an attempt to return a string that would yield an\nobject with the same value when passed to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></code>, otherwise the\n<strike>repr</strike>esentation is a string enclosed in angle brackets that contains the name\nof the type of the object together with additional information often\nincluding the name and address of the object.  A class can control what this\nfunction returns for its instances by defining a <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__<strike>repr</strike>__()</span></code> method.</p>", 
                        "", 
                        "<p><code>repr(<em>object</em>)<em><em>object</em></em></code></p>", 
                        "reverse", 
                        "<code>repr()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "GkEFPr95L8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "reversed(<em>seq</em>)", 
                        "Python builtin function", 
                        "<p>Return a reverse <span class=\"xref std std-term\">iterator</span>.  <em>seq</em> must be an object which has\na <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__<strike>reversed</strike>__()</span></code> method or supports the sequence protocol (the\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__len__()</span></code> method and the <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__getitem__()</span></code> method with integer\narguments starting at <code class=\"docutils literal\"><span class=\"pre\">0</span></code>).</p>", 
                        "", 
                        "<p><code>reversed(<em>seq</em>)<em><em>seq</em></em></code></p>", 
                        "reverse", 
                        "<code>reversed()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "v~veYTwXnT", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "round(<em>number</em><span class=\"optional\">[</span>,, <em>ndigits</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return <em>number</em> <strike>round</strike>ed to <em>ndigits</em> precision after the decimal\npoint.  If <em>ndigits</em> is omitted or is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, it returns the\nnearest integer to its input.</p>", 
                        "", 
                        "<p><code>round(<em>number</em><span class=\"optional\">[</span>,, <em>ndigits</em><span class=\"optional\">]</span>)<em><em>number</em><span class=\"optional\">[</span>,, <em>ndigits</em><span class=\"optional\">]</span></em></code></p><p>For the built-in types supporting <code class=\"xref py py-func docutils literal\"><span class=\"pre\">round()</span></code>, values are rounded to the\nclosest multiple of 10 to the power minus <em>ndigits</em>; if two multiples are\nequally close, rounding is done toward the even choice (so, for example,\nboth <code class=\"docutils literal\"><span class=\"pre\">round(0.5)</span></code> and <code class=\"docutils literal\"><span class=\"pre\">round(-0.5)</span></code> are <code class=\"docutils literal\"><span class=\"pre\">0</span></code>, and <code class=\"docutils literal\"><span class=\"pre\">round(1.5)</span></code> is\n<code class=\"docutils literal\"><span class=\"pre\">2</span></code>).  Any integer value is valid for <em>ndigits</em> (positive, zero, or\nnegative).  The return value is an integer if called with one argument,\notherwise of the same type as <em>number</em>.</p><p>For a general Python object <code class=\"docutils literal\"><span class=\"pre\">number</span></code>, <code class=\"docutils literal\"><span class=\"pre\">round(number,</span> <span class=\"pre\">ndigits)</span></code> delegates to\n<code class=\"docutils literal\"><span class=\"pre\">number.__round__(ndigits)</span></code>.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The behavior of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">round()</span></code> for floats can be surprising: for example,\n<code class=\"docutils literal\"><span class=\"pre\">round(2.675,</span> <span class=\"pre\">2)</span></code> gives <code class=\"docutils literal\"><span class=\"pre\">2.67</span></code> instead of the expected <code class=\"docutils literal\"><span class=\"pre\">2.68</span></code>.\nThis is not a bug: it’s a result of the fact that most decimal fractions\ncan’t be represented exactly as a float.  See <span class=\"std std-ref\">Floating Point Arithmetic:  Issues and Limitations</span> for\nmore information.</p>\n</div>", 
                        "reverse", 
                        "<code>round()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "KdhR~O+q(i", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "set(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a new <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>set</strike></span></code> object, optionally with elements taken from\n<em>iterable</em>.  <code class=\"docutils literal\"><span class=\"pre\"><strike>set</strike></span></code> is a built-in class.  See <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>set</strike></span></code> and\n<span class=\"std std-ref\">Set Types — <strike>set</strike>, frozen<strike>set</strike></span> for documentation about this class.</p>", 
                        "", 
                        "<p>class <code>set(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span></em></code></p><p>For other containers see the built-in <code class=\"xref py py-class docutils literal\"><span class=\"pre\">frozenset</span></code>, <code class=\"xref py py-class docutils literal\"><span class=\"pre\">list</span></code>,\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tuple</span></code>, and <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></code> classes, as well as the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">collections</span></code>\nmodule.</p>", 
                        "reverse", 
                        "<code>set()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "kY@^npVE[<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "setattr(<em>object</em>,, <em>name</em>,, <em>value</em>)", 
                        "Python builtin function", 
                        "<p>This is the counterpart of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></code>.  The arguments are an object, a\nstring and an arbitrary value.  The string may name an existing attribute or a\nnew attribute.  The function assigns the value to the attribute, provided the\nobject allows it.  For example, <code class=\"docutils literal\"><span class=\"pre\"><strike>setattr</strike>(x,</span> <span class=\"pre\">'foobar',</span> <span class=\"pre\">123)</span></code> is equivalent to\n<code class=\"docutils literal\"><span class=\"pre\">x.foobar</span> <span class=\"pre\">=</span> <span class=\"pre\">123</span></code>.</p>", 
                        "", 
                        "<p><code>setattr(<em>object</em>,, <em>name</em>,, <em>value</em>)<em><em>object</em>,, <em>name</em>,, <em>value</em></em></code></p>", 
                        "reverse", 
                        "<code>setattr()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "uygCrA.kZB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "slice(<em>stop</em>)", 
                        "Python builtin function", 
                        "<p id=\"index-9\">Return a <span class=\"xref std std-term\"><strike>slice</strike></span> object representing the set of indices specified by\n<code class=\"docutils literal\"><span class=\"pre\">range(start,</span> <span class=\"pre\">stop,</span> <span class=\"pre\">step)</span></code>.  The <em>start</em> and <em>step</em> arguments default to\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>.  Slice objects have read-only data attributes <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">start</span></code>,\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">stop</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">step</span></code> which merely return the argument\nvalues (or their default).  They have no other explicit functionality;\nhowever they are used by Numerical Python and other third party extensions.\nSlice objects are also generated when extended indexing syntax is used.  For\nexample: <code class=\"docutils literal\"><span class=\"pre\">a[start:stop:step]</span></code> or <code class=\"docutils literal\"><span class=\"pre\">a[start:stop,</span> <span class=\"pre\">i]</span></code>.  See\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.i<strike>slice</strike>()</span></code> for an alternate version that returns an iterator.</p>", 
                        "", 
                        "<p>class <code>slice(<em>stop</em>)<em><em>stop</em></em></code></p>", 
                        "reverse", 
                        "<code>slice()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "haLfXP5kaJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "slice(<em>start</em>,, <em>stop</em><span class=\"optional\">[</span>,, <em>step</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p id=\"index-9\">Return a <span class=\"xref std std-term\"><strike><strike>slice</strike></strike></span> object representing the set of indices specified by\n<code class=\"docutils literal\"><span class=\"pre\">range(start,</span> <span class=\"pre\">stop,</span> <span class=\"pre\">step)</span></code>.  The <em>start</em> and <em>step</em> arguments default to\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>.  Slice objects have read-only data attributes <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">start</span></code>,\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">stop</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">step</span></code> which merely return the argument\nvalues (or their default).  They have no other explicit functionality;\nhowever they are used by Numerical Python and other third party extensions.\nSlice objects are also generated when extended indexing syntax is used.  For\nexample: <code class=\"docutils literal\"><span class=\"pre\">a[start:stop:step]</span></code> or <code class=\"docutils literal\"><span class=\"pre\">a[start:stop,</span> <span class=\"pre\">i]</span></code>.  See\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.i<strike><strike>slice</strike></strike>()</span></code> for an alternate version that returns an iterator.</p>", 
                        "", 
                        "<p>class <code>slice(<em>start</em>,, <em>stop</em><span class=\"optional\">[</span>,, <em>step</em><span class=\"optional\">]</span>)<em><em>start</em>,, <em>stop</em><span class=\"optional\">[</span>,, <em>step</em><span class=\"optional\">]</span></em></code></p><p>class <code>slice(<em>stop</em>)<em><em>stop</em></em></code></p>", 
                        "reverse", 
                        "<code>slice()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "j-QcMfD;rZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sorted(<em>iterable</em>,, <em>*</em>,, <em>key=None</em>,, <em>reverse=False</em>)", 
                        "Python builtin function", 
                        "<p>Return a new <strike>sorted</strike> list from the items in <em>iterable</em>.</p>", 
                        "", 
                        "<p><code>sorted(<em>iterable</em>,, <em>*</em>,, <em>key=None</em>,, <em>reverse=False</em>)<em><em>iterable</em>,, <em>*</em>,, <em>key=None</em>,, <em>reverse=False</em></em></code></p><p>Has two optional arguments which must be specified as keyword arguments.</p><p><em>key</em> specifies a function of one argument that is used to extract a comparison\nkey from each list element: <code class=\"docutils literal\"><span class=\"pre\">key=str.lower</span></code>.  The default value is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>\n(compare the elements directly).</p><p><em>reverse</em> is a boolean value.  If set to <code class=\"docutils literal\"><span class=\"pre\">True</span></code>, then the list elements are\nsorted as if each comparison were reversed.</p><p>Use <code class=\"xref py py-func docutils literal\"><span class=\"pre\">functools.cmp_to_key()</span></code> to convert an old-style <em>cmp</em> function to a\n<em>key</em> function.</p><p>The built-in <code class=\"xref py py-func docutils literal\"><span class=\"pre\">sorted()</span></code> function is guaranteed to be stable. A sort is\nstable if it guarantees not to change the relative order of elements that\ncompare equal — this is helpful for sorting in multiple passes (for\nexample, sort by department, then by salary grade).</p><p>For sorting examples and a brief sorting tutorial, see <span class=\"std std-ref\">Sorting HOW TO</span>.</p>", 
                        "reverse", 
                        "<code>sorted()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "tw)Tg],T(<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "staticmethod(<em>function</em>)", 
                        "Python builtin function", 
                        "<p>Return a static method for <em>function</em>.</p>", 
                        "", 
                        "<p><code>staticmethod(<em>function</em>)<em><em>function</em></em></code></p><p>A static method does not receive an implicit first argument. To declare a static\nmethod, use this idiom:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">:</span>\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">(</span><span class=\"n\">arg1</span><span class=\"p\">,</span> <span class=\"n\">arg2</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">):</span> <span class=\"o\">...</span>\n</pre></div>\n</div><p>The <code class=\"docutils literal\"><span class=\"pre\">@staticmethod</span></code> form is a function <span class=\"xref std std-term\">decorator</span> – see the\ndescription of function definitions in <span class=\"std std-ref\">Function definitions</span> for details.</p><p>It can be called either on the class (such as <code class=\"docutils literal\"><span class=\"pre\">C.f()</span></code>) or on an instance (such\nas <code class=\"docutils literal\"><span class=\"pre\">C().f()</span></code>).  The instance is ignored except for its class.</p><p>Static methods in Python are similar to those found in Java or C++. Also see\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">classmethod()</span></code> for a variant that is useful for creating alternate class\nconstructors.</p><p>For more information on static methods, consult the documentation on the\nstandard type hierarchy in <span class=\"std std-ref\">The standard type hierarchy</span>.</p>", 
                        "reverse", 
                        "<code>staticmethod()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "g6GA-p]QnB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str(<em>object=”</em>)", 
                        "Python builtin function", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>str</strike></span></code> version of <em>object</em>.  See <code class=\"xref py py-func docutils literal\"><span class=\"pre\"><strike>str</strike>()</span></code> for details.</p>", 
                        "", 
                        "<p>class <code>str(<em>object=”</em>)<em><em>object=”</em></em></code></p><p><code class=\"docutils literal\"><span class=\"pre\">str</span></code> is the built-in string <span class=\"xref std std-term\">class</span>.  For general information\nabout strings, see <span class=\"std std-ref\">Text Sequence Type — str</span>.</p>", 
                        "reverse", 
                        "<code>str()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "h_/nFqtyR>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str(<em>object=b”</em>,, <em>encoding=’utf-8’</em>,, <em>errors=’strict’</em>)", 
                        "Python builtin function", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><<strike>str</strike>ike><strike>str</strike></<strike>str</strike>ike></span></code> version of <em>object</em>.  See <code class=\"xref py py-func docutils literal\"><span class=\"pre\"><<strike>str</strike>ike><strike>str</strike></<strike>str</strike>ike>()</span></code> for details.</p>", 
                        "", 
                        "<p>class <code>str(<em>object=b”</em>,, <em>encoding=’utf-8’</em>,, <em>errors=’strict’</em>)<em><em>object=b”</em>,, <em>encoding=’utf-8’</em>,, <em>errors=’strict’</em></em></code></p><p>class <code>str(<em>object=”</em>)<em><em>object=”</em></em></code></p><p><code class=\"docutils literal\"><span class=\"pre\">str</span></code> is the built-in string <span class=\"xref std std-term\">class</span>.  For general information\nabout strings, see <span class=\"std std-ref\">Text Sequence Type — str</span>.</p>", 
                        "reverse", 
                        "<code>str()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "x&Rv~B*Z/J", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "sum(<em>iterable</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Sums <em>start</em> and the items of an <em>iterable</em> from left to right and returns the\ntotal.  <em>start</em> defaults to <code class=\"docutils literal\"><span class=\"pre\">0</span></code>. The <em>iterable</em>’s items are normally numbers,\nand the start value is not allowed to be a string.</p>", 
                        "", 
                        "<p><code>sum(<em>iterable</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">]</span>)<em><em>iterable</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">]</span></em></code></p><p>For some use cases, there are good alternatives to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">sum()</span></code>.\nThe preferred, fast way to concatenate a sequence of strings is by calling\n<code class=\"docutils literal\"><span class=\"pre\">''.join(sequence)</span></code>.  To add floating point values with extended precision,\nsee <code class=\"xref py py-func docutils literal\"><span class=\"pre\">math.fsum()</span></code>.  To concatenate a series of iterables, consider using\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">itertools.chain()</span></code>.</p>", 
                        "reverse", 
                        "<code>sum()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "qY-B>/3JDn", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "super(<span class=\"optional\">[</span><em>type</em><span class=\"optional\">[</span>,, <em>object-or-type</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return a proxy object that delegates method calls to a parent or sibling\nclass of <em>type</em>.  This is useful for accessing inherited methods that have\nbeen overridden in a class. The search order is same as that used by\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></code> except that the <em>type</em> itself is skipped.</p>", 
                        "", 
                        "<p><code>super(<span class=\"optional\">[</span><em>type</em><span class=\"optional\">[</span>,, <em>object-or-type</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>type</em><span class=\"optional\">[</span>,, <em>object-or-type</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><p>The <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__mro__</span></code> attribute of the <em>type</em> lists the method\nresolution search order used by both <code class=\"xref py py-func docutils literal\"><span class=\"pre\">getattr()</span></code> and <code class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></code>.  The\nattribute is dynamic and can change whenever the inheritance hierarchy is\nupdated.</p><p>If the second argument is omitted, the super object returned is unbound.  If\nthe second argument is an object, <code class=\"docutils literal\"><span class=\"pre\">isinstance(obj,</span> <span class=\"pre\">type)</span></code> must be true.  If\nthe second argument is a type, <code class=\"docutils literal\"><span class=\"pre\">issubclass(type2,</span> <span class=\"pre\">type)</span></code> must be true (this\nis useful for classmethods).</p><p>There are two typical use cases for <em>super</em>.  In a class hierarchy with\nsingle inheritance, <em>super</em> can be used to refer to parent classes without\nnaming them explicitly, thus making the code more maintainable.  This use\nclosely parallels the use of <em>super</em> in other programming languages.</p><p>The second use case is to support cooperative multiple inheritance in a\ndynamic execution environment.  This use case is unique to Python and is\nnot found in statically compiled languages or languages that only support\nsingle inheritance.  This makes it possible to implement “diamond diagrams”\nwhere multiple base classes implement the same method.  Good design dictates\nthat this method have the same calling signature in every case (because the\norder of calls is determined at runtime, because that order adapts\nto changes in the class hierarchy, and because that order can include\nsibling classes that are unknown prior to runtime).</p><p>For both use cases, a typical superclass call looks like this:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">class</span> <span class=\"nc\">C</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">method</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">arg</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">method</span><span class=\"p\">(</span><span class=\"n\">arg</span><span class=\"p\">)</span>    <span class=\"c1\"># This does the same thing as:</span>\n                               <span class=\"c1\"># super(C, self).method(arg)</span>\n</pre></div>\n</div><p>Note that <code class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></code> is implemented as part of the binding process for\nexplicit dotted attribute lookups such as <code class=\"docutils literal\"><span class=\"pre\">super().__getitem__(name)</span></code>.\nIt does so by implementing its own <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__getattribute__()</span></code> method for searching\nclasses in a predictable order that supports cooperative multiple inheritance.\nAccordingly, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></code> is undefined for implicit lookups using statements or\noperators such as <code class=\"docutils literal\"><span class=\"pre\">super()[name]</span></code>.</p><p>Also note that, aside from the zero argument form, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></code> is not\nlimited to use inside methods.  The two argument form specifies the\narguments exactly and makes the appropriate references.  The zero\nargument form only works inside a class definition, as the compiler fills\nin the necessary details to correctly retrieve the class being defined,\nas well as accessing the current instance for ordinary methods.</p><p>For practical suggestions on how to design cooperative classes using\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">super()</span></code>, see .</p>", 
                        "reverse", 
                        "<code>super()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "t(#Pb(Vdrc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tuple(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Rather than being a function, <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>tuple</strike></span></code> is actually an immutable\nsequence type, as documented in <span class=\"std std-ref\">Tuples</span> and <span class=\"std std-ref\">Sequence Types — list, <strike>tuple</strike>, range</span>.</p>", 
                        "", 
                        "<p><code>tuple(<span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>iterable</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>tuple()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "xR1Ic-b8{R", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "type(<em>object</em>)", 
                        "Python builtin function", 
                        "<p id=\"index-11\">With one argument, return the <strike>type</strike> of an <em>object</em>.  The return value is a\n<strike>type</strike> object and generally the same object as returned by\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">object.__class__</span></code>.</p>", 
                        "", 
                        "<p>class <code>type(<em>object</em>)<em><em>object</em></em></code></p><p>The <code class=\"xref py py-func docutils literal\"><span class=\"pre\">isinstance()</span></code> built-in function is recommended for testing the type\nof an object, because it takes subclasses into account.</p><p>With three arguments, return a new type object.  This is essentially a\ndynamic form of the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">class</span></code> statement. The <em>name</em> string is the\nclass name and becomes the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__name__</span></code> attribute; the <em>bases</em>\ntuple itemizes the base classes and becomes the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__bases__</span></code>\nattribute; and the <em>dict</em> dictionary is the namespace containing definitions\nfor class body and is copied to a standard dictionary to become the\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code> attribute.  For example, the following two\nstatements create identical <code class=\"xref py py-class docutils literal\"><span class=\"pre\">type</span></code> objects:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">X</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"s1\">'X'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">,),</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre></div>\n</div><p>See also <span class=\"std std-ref\">Type Objects</span>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Subclasses of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">type</span></code> which don’t override <code class=\"docutils literal\"><span class=\"pre\">type.__new__</span></code> may no\nlonger use the one-argument form to get the type of an object.</p>\n</div>", 
                        "reverse", 
                        "<code>type()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "v`g2RZ>*[?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "type(<em>name</em>,, <em>bases</em>,, <em>dict</em>)", 
                        "Python builtin function", 
                        "<p id=\"index-11\">With one argument, return the <strike><strike>type</strike></strike> of an <em>object</em>.  The return value is a\n<strike><strike>type</strike></strike> object and generally the same object as returned by\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">object.__class__</span></code>.</p>", 
                        "", 
                        "<p>class <code>type(<em>name</em>,, <em>bases</em>,, <em>dict</em>)<em><em>name</em>,, <em>bases</em>,, <em>dict</em></em></code></p><p>class <code>type(<em>object</em>)<em><em>object</em></em></code></p><p>The <code class=\"xref py py-func docutils literal\"><span class=\"pre\">isinstance()</span></code> built-in function is recommended for testing the type\nof an object, because it takes subclasses into account.</p><p>With three arguments, return a new type object.  This is essentially a\ndynamic form of the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">class</span></code> statement. The <em>name</em> string is the\nclass name and becomes the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__name__</span></code> attribute; the <em>bases</em>\ntuple itemizes the base classes and becomes the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__bases__</span></code>\nattribute; and the <em>dict</em> dictionary is the namespace containing definitions\nfor class body and is copied to a standard dictionary to become the\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code> attribute.  For example, the following two\nstatements create identical <code class=\"xref py py-class docutils literal\"><span class=\"pre\">type</span></code> objects:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">X</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">X</span> <span class=\"o\">=</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"s1\">'X'</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">,),</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre></div>\n</div><p>See also <span class=\"std std-ref\">Type Objects</span>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Subclasses of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">type</span></code> which don’t override <code class=\"docutils literal\"><span class=\"pre\">type.__new__</span></code> may no\nlonger use the one-argument form to get the type of an object.</p>\n</div>", 
                        "reverse", 
                        "<code>type()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "m~(:Me4Qp", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "vars(<span class=\"optional\">[</span><em>object</em><span class=\"optional\">]</span>)", 
                        "Python builtin function", 
                        "<p>Return the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code> attribute for a module, class, instance,\nor any other object with a <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code> attribute.</p>", 
                        "", 
                        "<p><code>vars(<span class=\"optional\">[</span><em>object</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>object</em><span class=\"optional\">]</span></em></code></p><p>Objects such as modules and instances have an updateable <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code>\nattribute; however, other objects may have write restrictions on their\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__dict__</span></code> attributes (for example, classes use a\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">types.MappingProxyType</span></code> to prevent direct dictionary updates).</p><p>Without an argument, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">vars()</span></code> acts like <code class=\"xref py py-func docutils literal\"><span class=\"pre\">locals()</span></code>.  Note, the\nlocals dictionary is only useful for reads since updates to the locals\ndictionary are ignored.</p>", 
                        "reverse", 
                        "<code>vars()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "BY`x:7Hdge", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "__import__(<em>name</em>,, <em>globals=None</em>,, <em>locals=None</em>,, <em>fromlist=()</em>,, <em>level=0</em>)", 
                        "Python builtin function", 
                        "<p>This function is invoked by the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code> statement.  It can be\nreplaced (by importing the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">builtins</span></code> module and assigning to\n<code class=\"docutils literal\"><span class=\"pre\">builtins.<strike>__import__</strike></span></code>) in order to change semantics of the\n<code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code> statement, but doing so is <strong>strongly</strong> discouraged as it\nis usually simpler to use import hooks (see <span class=\"target\" id=\"index-13\"></span><strong>PEP 302</strong>) to attain the same\ngoals and does not cause issues with code which assumes the default import\nimplementation is in use.  Direct use of <code class=\"xref py py-func docutils literal\"><span class=\"pre\"><strike>__import__</strike>()</span></code> is also\ndiscouraged in favor of <code class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></code>.</p>", 
                        "", 
                        "<p><code>__import__(<em>name</em>,, <em>globals=None</em>,, <em>locals=None</em>,, <em>fromlist=()</em>,, <em>level=0</em>)<em><em>name</em>,, <em>globals=None</em>,, <em>locals=None</em>,, <em>fromlist=()</em>,, <em>level=0</em></em></code></p><div class=\"admonition note\" id=\"index-12\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">This is an advanced function that is not needed in everyday Python\nprogramming, unlike <code class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></code>.</p>\n</div><p>The function imports the module <em>name</em>, potentially using the given <em>globals</em>\nand <em>locals</em> to determine how to interpret the name in a package context.\nThe <em>fromlist</em> gives the names of objects or submodules that should be\nimported from the module given by <em>name</em>.  The standard implementation does\nnot use its <em>locals</em> argument at all, and uses its <em>globals</em> only to\ndetermine the package context of the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code> statement.</p><p><em>level</em> specifies whether to use absolute or relative imports. <code class=\"docutils literal\"><span class=\"pre\">0</span></code> (the\ndefault) means only perform absolute imports.  Positive values for\n<em>level</em> indicate the number of parent directories to search relative to the\ndirectory of the module calling <code class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></code> (see <span class=\"target\" id=\"index-14\"></span><strong>PEP 328</strong> for the\ndetails).</p><p>When the <em>name</em> variable is of the form <code class=\"docutils literal\"><span class=\"pre\">package.module</span></code>, normally, the\ntop-level package (the name up till the first dot) is returned, <em>not</em> the\nmodule named by <em>name</em>.  However, when a non-empty <em>fromlist</em> argument is\ngiven, the module named by <em>name</em> is returned.</p><p>For example, the statement <code class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">spam</span></code> results in bytecode resembling the\nfollowing code:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">spam</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'spam'</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>The statement <code class=\"docutils literal\"><span class=\"pre\">import</span> <span class=\"pre\">spam.ham</span></code> results in this call:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">spam</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'spam.ham'</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>Note how <code class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></code> returns the toplevel module here because this is\nthe object that is bound to a name by the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code> statement.</p><p>On the other hand, the statement <code class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">spam.ham</span> <span class=\"pre\">import</span> <span class=\"pre\">eggs,</span> <span class=\"pre\">sausage</span> <span class=\"pre\">as</span>\n<span class=\"pre\">saus</span></code> results in</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">_temp</span> <span class=\"o\">=</span> <span class=\"nb\">__import__</span><span class=\"p\">(</span><span class=\"s1\">'spam.ham'</span><span class=\"p\">,</span> <span class=\"nb\">globals</span><span class=\"p\">(),</span> <span class=\"nb\">locals</span><span class=\"p\">(),</span> <span class=\"p\">[</span><span class=\"s1\">'eggs'</span><span class=\"p\">,</span> <span class=\"s1\">'sausage'</span><span class=\"p\">],</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">eggs</span> <span class=\"o\">=</span> <span class=\"n\">_temp</span><span class=\"o\">.</span><span class=\"n\">eggs</span>\n<span class=\"n\">saus</span> <span class=\"o\">=</span> <span class=\"n\">_temp</span><span class=\"o\">.</span><span class=\"n\">sausage</span>\n</pre></div>\n</div><p>Here, the <code class=\"docutils literal\"><span class=\"pre\">spam.ham</span></code> module is returned from <code class=\"xref py py-func docutils literal\"><span class=\"pre\">__import__()</span></code>.  From this\nobject, the names to import are retrieved and assigned to their respective\nnames.</p><p>If you simply want to import a module (potentially within a package) by name,\nuse <code class=\"xref py py-func docutils literal\"><span class=\"pre\">importlib.import_module()</span></code>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Negative values for <em>level</em> are no longer supported (which also changes\nthe default value to 0).</p>\n</div>", 
                        "reverse", 
                        "<code>__import__()</code>", 
                        "https://docs.python.org/3.6/library/functions.html"
                    ], 
                    "flags": 0, 
                    "guid": "rT}Y(b(x[^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "definition.__qualname__", 
                        "Python <code>definition</code> prop", 
                        "<p>The <span class=\"xref std std-term\">qualified name</span> of the class, function, method, descriptor,\nor generator instance.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.3.</span></p>\n</div>", 
                        "reverse", 
                        "<code>__qualname__</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "P/@I~fn5m]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "class.mro()", 
                        "Python <code>class</code> prop", 
                        "<p>This method can be overridden by a metaclass to customize the method\nresolution order for its instances.  It is called at class instantiation, and\nits result is stored in <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">__<strike>mro</strike>__</span></code>.</p>", 
                        "", 
                        "<p><code>class.mro()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>mro()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "h,GR,MCe=l", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.center(<em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return <strike>center</strike>ed in a string of length <em>width</em>. Padding is done using the\nspecified <em>fillchar</em> (default is an ASCII space). The original string is\nreturned if <em>width</em> is less than or equal to <code class=\"docutils literal\"><span class=\"pre\">len(s)</span></code>.</p>", 
                        "", 
                        "<p><code>str.center(<em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span>)<em><em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>center()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "nn9)!jYIjG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.count(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return the number of non-overlapping occurrences of substring <em>sub</em> in the\nrange [<em>start</em>, <em>end</em>].  Optional arguments <em>start</em> and <em>end</em> are\ninterpreted as in slice notation.</p>", 
                        "", 
                        "<p><code>str.count(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>count()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "D9:&XO?FoV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.encode(<em>encoding=”utf-8”</em>,, <em>errors=”strict”</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return an <strike>encode</strike>d version of the string as a bytes object. Default encoding\nis <code class=\"docutils literal\"><span class=\"pre\">'utf-8'</span></code>. <em>errors</em> may be given to set a different error handling scheme.\nThe default for <em>errors</em> is <code class=\"docutils literal\"><span class=\"pre\">'strict'</span></code>, meaning that encoding errors raise\na <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></code>. Other possible\nvalues are <code class=\"docutils literal\"><span class=\"pre\">'ignore'</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'replace'</span></code>, <code class=\"docutils literal\"><span class=\"pre\">'xmlcharrefreplace'</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">'backslashreplace'</span></code> and any other name registered via\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">codecs.register_error()</span></code>, see section <span class=\"std std-ref\">Error Handlers</span>. For a\nlist of possible encodings, see section <span class=\"std std-ref\">Standard Encodings</span>.</p>", 
                        "", 
                        "<p><code>str.encode(<em>encoding=”utf-8”</em>,, <em>errors=”strict”</em>)<em><em>encoding=”utf-8”</em>,, <em>errors=”strict”</em></em></code></p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.1: </span>Support for keyword arguments added.</p>\n</div>", 
                        "reverse", 
                        "<code>encode()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "g!>[~Ca6qb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.endswith(<em>suffix</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return <code class=\"docutils literal\"><span class=\"pre\">True</span></code> if the string ends with the specified <em>suffix</em>, otherwise return\n<code class=\"docutils literal\"><span class=\"pre\">False</span></code>.  <em>suffix</em> can also be a tuple of suffixes to look for.  With optional\n<em>start</em>, test beginning at that position.  With optional <em>end</em>, stop comparing\nat that position.</p>", 
                        "", 
                        "<p><code>str.endswith(<em>suffix</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>suffix</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>endswith()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "CCI08ykcb4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.expandtabs(<em>tabsize=8</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string where all tab characters are replaced by one or\nmore spaces, depending on the current column and the given tab size.  Tab\npositions occur every <em>tabsize</em> characters (default is 8, giving tab\npositions at columns 0, 8, 16 and so on).  To expand the string, the current\ncolumn is set to zero and the string is examined character by character.  If\nthe character is a tab (<code class=\"docutils literal\"><span class=\"pre\">\\t</span></code>), one or more space characters are inserted\nin the result until the current column is equal to the next tab position.\n(The tab character itself is not copied.)  If the character is a newline\n(<code class=\"docutils literal\"><span class=\"pre\">\\n</span></code>) or return (<code class=\"docutils literal\"><span class=\"pre\">\\r</span></code>), it is copied and the current column is reset to\nzero.  Any other character is copied unchanged and the current column is\nincremented by one regardless of how the character is represented when\nprinted.</p>", 
                        "", 
                        "<p><code>str.expandtabs(<em>tabsize=8</em>)<em><em>tabsize=8</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'01</span><span class=\"se\">\\t</span><span class=\"s1\">012</span><span class=\"se\">\\t</span><span class=\"s1\">0123</span><span class=\"se\">\\t</span><span class=\"s1\">01234'</span><span class=\"o\">.</span><span class=\"n\">expandtabs</span><span class=\"p\">()</span>\n<span class=\"go\">'01      012     0123    01234'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'01</span><span class=\"se\">\\t</span><span class=\"s1\">012</span><span class=\"se\">\\t</span><span class=\"s1\">0123</span><span class=\"se\">\\t</span><span class=\"s1\">01234'</span><span class=\"o\">.</span><span class=\"n\">expandtabs</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"go\">'01  012 0123    01234'</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>expandtabs()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "u78LB((+mE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.find(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return the lowest index in the string where substring <em>sub</em> is found within\nthe slice <code class=\"docutils literal\"><span class=\"pre\">s[start:end]</span></code>.  Optional arguments <em>start</em> and <em>end</em> are\ninterpreted as in slice notation.  Return <code class=\"docutils literal\"><span class=\"pre\">-1</span></code> if <em>sub</em> is not found.</p>", 
                        "", 
                        "<p><code>str.find(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>The <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">find()</span></code> method should be used only if you need to know the\nposition of <em>sub</em>.  To check if <em>sub</em> is a substring or not, use the\n<code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">in</span></code> operator:</p>\n<div class=\"last highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'Py'</span> <span class=\"ow\">in</span> <span class=\"s1\">'Python'</span>\n<span class=\"go\">True</span>\n</pre></div>\n</div>\n</div>", 
                        "reverse", 
                        "<code>find()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "urSgz;1?r6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.format(<em>*args</em>,, <em>**kwargs</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Perform a string <strike>format</strike>ting operation.  The string on which this method is\ncalled can contain literal text or replacement fields delimited by braces\n<code class=\"docutils literal\"><span class=\"pre\">{}</span></code>.  Each replacement field contains either the numeric index of a\npositional argument, or the name of a keyword argument.  Returns a copy of\nthe string where each replacement field is replaced with the string value of\nthe corresponding argument.</p>", 
                        "", 
                        "<p><code>str.format(<em>*args</em>,, <em>**kwargs</em>)<em><em>*args</em>,, <em>**kwargs</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">\"The sum of 1 + 2 is </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">+</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"go\">'The sum of 1 + 2 is 3'</span>\n</pre></div>\n</div><p>See <span class=\"std std-ref\">Format String Syntax</span> for a description of the various formatting options\nthat can be specified in format strings.</p>", 
                        "reverse", 
                        "<code>format()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "snwO!=szG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.format_map(<em>mapping</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Similar to <code class=\"docutils literal\"><span class=\"pre\">str.format(**mapping)</span></code>, except that <code class=\"docutils literal\"><span class=\"pre\">mapping</span></code> is\nused directly and not copied to a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">dict</span></code>.  This is useful\nif for example <code class=\"docutils literal\"><span class=\"pre\">mapping</span></code> is a dict subclass:</p>", 
                        "", 
                        "<p><code>str.format_map(<em>mapping</em>)<em><em>mapping</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">Default</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">__missing__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>        <span class=\"k\">return</span> <span class=\"n\">key</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'</span><span class=\"si\">{name}</span><span class=\"s1\"> was born in </span><span class=\"si\">{country}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format_map</span><span class=\"p\">(</span><span class=\"n\">Default</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Guido'</span><span class=\"p\">))</span>\n<span class=\"go\">'Guido was born in country'</span>\n</pre></div>\n</div><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.2.</span></p>\n</div>", 
                        "reverse", 
                        "<code>format_map()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "o7MkD}(>2c", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.index(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Like <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">find()</span></code>, but raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> when the substring is\nnot found.</p>", 
                        "", 
                        "<p><code>str.index(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>index()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "x@Wr/=Tl.V", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.isalnum()", 
                        "Python <code>str</code> prop", 
                        "<p>Return true if all characters in the string are alphanumeric and there is at\nleast one character, false otherwise.  A character <code class=\"docutils literal\"><span class=\"pre\">c</span></code> is alphanumeric if one\nof the following returns <code class=\"docutils literal\"><span class=\"pre\">True</span></code>: <code class=\"docutils literal\"><span class=\"pre\">c.isalpha()</span></code>, <code class=\"docutils literal\"><span class=\"pre\">c.isdecimal()</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">c.isdigit()</span></code>, or <code class=\"docutils literal\"><span class=\"pre\">c.isnumeric()</span></code>.</p>", 
                        "", 
                        "<p><code>str.isalnum()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>isalnum()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "x>Md_HoWe{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.isidentifier()", 
                        "Python <code>str</code> prop", 
                        "<p>Return true if the string is a valid identifier according to the language\ndefinition, section <span class=\"std std-ref\">Identifiers and keywords</span>.</p>", 
                        "", 
                        "<p><code>str.isidentifier()<em>()</em></code></p><p>Use <code class=\"xref py py-func docutils literal\"><span class=\"pre\">keyword.iskeyword()</span></code> to test for reserved identifiers such as\n<code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">def</span></code> and <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">class</span></code>.</p>", 
                        "reverse", 
                        "<code>isidentifier()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "t?xp3WY+q_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.isprintable()", 
                        "Python <code>str</code> prop", 
                        "<p>Return true if all characters in the string are printable or the string is\nempty, false otherwise.  Nonprintable characters are those characters defined\nin the Unicode character database as “Other” or “Separator”, excepting the\nASCII space (0x20) which is considered printable.  (Note that printable\ncharacters in this context are those which should not be escaped when\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">repr()</span></code> is invoked on a string.  It has no bearing on the handling of\nstrings written to <code class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.stdout</span></code> or <code class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.stderr</span></code>.)</p>", 
                        "", 
                        "<p><code>str.isprintable()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>isprintable()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "wGJMyiF3NE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.join(<em>iterable</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a string which is the concatenation of the strings in <em>iterable</em>.\nA <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> will be raised if there are any non-string values in\n<em>iterable</em>, including <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></code> objects.  The separator between\nelements is the string providing this method.</p>", 
                        "", 
                        "<p><code>str.join(<em>iterable</em>)<em><em>iterable</em></em></code></p>", 
                        "reverse", 
                        "<code>join()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "K.JJLBLE/#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.ljust(<em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return the string left justified in a string of length <em>width</em>. Padding is\ndone using the specified <em>fillchar</em> (default is an ASCII space). The\noriginal string is returned if <em>width</em> is less than or equal to <code class=\"docutils literal\"><span class=\"pre\">len(s)</span></code>.</p>", 
                        "", 
                        "<p><code>str.ljust(<em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span>)<em><em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>ljust()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "Nq,(eB/7sg", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.lstrip(<span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string with leading characters removed.  The <em>chars</em>\nargument is a string specifying the set of characters to be removed.  If omitted\nor <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, the <em>chars</em> argument defaults to removing whitespace.  The <em>chars</em>\nargument is not a prefix; rather, all combinations of its values are stripped:</p>", 
                        "", 
                        "<p><code>str.lstrip(<span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'   spacious   '</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">()</span>\n<span class=\"go\">'spacious   '</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'www.example.com'</span><span class=\"o\">.</span><span class=\"n\">lstrip</span><span class=\"p\">(</span><span class=\"s1\">'cmowz.'</span><span class=\"p\">)</span>\n<span class=\"go\">'example.com'</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>lstrip()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "j(Mbnfmy^`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.maketrans(<em>x</em><span class=\"optional\">[</span>,, <em>y</em><span class=\"optional\">[</span>,, <em>z</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>This static method returns a translation table usable for <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.translate()</span></code>.</p>", 
                        "", 
                        "<p>static <code>str.maketrans(<em>x</em><span class=\"optional\">[</span>,, <em>y</em><span class=\"optional\">[</span>,, <em>z</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>x</em><span class=\"optional\">[</span>,, <em>y</em><span class=\"optional\">[</span>,, <em>z</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p><p>If there is only one argument, it must be a dictionary mapping Unicode\nordinals (integers) or characters (strings of length 1) to Unicode ordinals,\nstrings (of arbitrary lengths) or <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.  Character keys will then be\nconverted to ordinals.</p><p>If there are two arguments, they must be strings of equal length, and in the\nresulting dictionary, each character in x will be mapped to the character at\nthe same position in y.  If there is a third argument, it must be a string,\nwhose characters will be mapped to <code class=\"docutils literal\"><span class=\"pre\">None</span></code> in the result.</p>", 
                        "reverse", 
                        "<code>maketrans()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "ze=Cz=_sn4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.partition(<em>sep</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Split the string at the first occurrence of <em>sep</em>, and return a 3-tuple\ncontaining the part before the separator, the separator itself, and the part\nafter the separator.  If the separator is not found, return a 3-tuple containing\nthe string itself, followed by two empty strings.</p>", 
                        "", 
                        "<p><code>str.partition(<em>sep</em>)<em><em>sep</em></em></code></p>", 
                        "reverse", 
                        "<code>partition()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "t}*nlCV1=F", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.replace(<em>old</em>,, <em>new</em><span class=\"optional\">[</span>,, <em>count</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string with all occurrences of substring <em>old</em> <strike>replace</strike>d by\n<em>new</em>.  If the optional argument <em>count</em> is given, only the first <em>count</em>\noccurrences are <strike>replace</strike>d.</p>", 
                        "", 
                        "<p><code>str.replace(<em>old</em>,, <em>new</em><span class=\"optional\">[</span>,, <em>count</em><span class=\"optional\">]</span>)<em><em>old</em>,, <em>new</em><span class=\"optional\">[</span>,, <em>count</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>replace()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "d:4q?AJ}/@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.rfind(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return the highest index in the string where substring <em>sub</em> is found, such\nthat <em>sub</em> is contained within <code class=\"docutils literal\"><span class=\"pre\">s[start:end]</span></code>.  Optional arguments <em>start</em>\nand <em>end</em> are interpreted as in slice notation.  Return <code class=\"docutils literal\"><span class=\"pre\">-1</span></code> on failure.</p>", 
                        "", 
                        "<p><code>str.rfind(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>rfind()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "FL!HyF4nOg", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.rindex(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Like <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">rfind()</span></code> but raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> when the substring <em>sub</em> is not\nfound.</p>", 
                        "", 
                        "<p><code>str.rindex(<em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>sub</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>rindex()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "NtF5xdE2$z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.rjust(<em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return the string right justified in a string of length <em>width</em>. Padding is\ndone using the specified <em>fillchar</em> (default is an ASCII space). The\noriginal string is returned if <em>width</em> is less than or equal to <code class=\"docutils literal\"><span class=\"pre\">len(s)</span></code>.</p>", 
                        "", 
                        "<p><code>str.rjust(<em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span>)<em><em>width</em><span class=\"optional\">[</span>,, <em>fillchar</em><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>rjust()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "gooZ4JP&36", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.rpartition(<em>sep</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Split the string at the last occurrence of <em>sep</em>, and return a 3-tuple\ncontaining the part before the separator, the separator itself, and the part\nafter the separator.  If the separator is not found, return a 3-tuple containing\ntwo empty strings, followed by the string itself.</p>", 
                        "", 
                        "<p><code>str.rpartition(<em>sep</em>)<em><em>sep</em></em></code></p>", 
                        "reverse", 
                        "<code>rpartition()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "y%Y(IV~`6^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.rsplit(<em>sep=None</em>,, <em>maxsplit=-1</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a list of the words in the string, using <em>sep</em> as the delimiter string.\nIf <em>maxsplit</em> is given, at most <em>maxsplit</em> splits are done, the <em>rightmost</em>\nones.  If <em>sep</em> is not specified or <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, any whitespace string is a\nseparator.  Except for splitting from the right, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>rsplit</strike>()</span></code> behaves like\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">split()</span></code> which is described in detail below.</p>", 
                        "", 
                        "<p><code>str.rsplit(<em>sep=None</em>,, <em>maxsplit=-1</em>)<em><em>sep=None</em>,, <em>maxsplit=-1</em></em></code></p>", 
                        "reverse", 
                        "<code>rsplit()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "A;:C[L9sNl", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.rstrip(<span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string with trailing characters removed.  The <em>chars</em>\nargument is a string specifying the set of characters to be removed.  If omitted\nor <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, the <em>chars</em> argument defaults to removing whitespace.  The <em>chars</em>\nargument is not a suffix; rather, all combinations of its values are stripped:</p>", 
                        "", 
                        "<p><code>str.rstrip(<span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'   spacious   '</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">()</span>\n<span class=\"go\">'   spacious'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'mississippi'</span><span class=\"o\">.</span><span class=\"n\">rstrip</span><span class=\"p\">(</span><span class=\"s1\">'ipz'</span><span class=\"p\">)</span>\n<span class=\"go\">'mississ'</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>rstrip()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "IN.DzU;Nq}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.split(<em>sep=None</em>,, <em>maxsplit=-1</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a list of the words in the string, using <em>sep</em> as the delimiter\nstring.  If <em>max<strike>split</strike></em> is given, at most <em>max<strike>split</strike></em> <strike>split</strike>s are done (thus,\nthe list will have at most <code class=\"docutils literal\"><span class=\"pre\">max<strike>split</strike>+1</span></code> elements).  If <em>max<strike>split</strike></em> is not\nspecified or <code class=\"docutils literal\"><span class=\"pre\">-1</span></code>, then there is no limit on the number of <strike>split</strike>s\n(all possible <strike>split</strike>s are made).</p>", 
                        "", 
                        "<p><code>str.split(<em>sep=None</em>,, <em>maxsplit=-1</em>)<em><em>sep=None</em>,, <em>maxsplit=-1</em></em></code></p><p>If <em>sep</em> is given, consecutive delimiters are not grouped together and are\ndeemed to delimit empty strings (for example, <code class=\"docutils literal\"><span class=\"pre\">'1,,2'.split(',')</span></code> returns\n<code class=\"docutils literal\"><span class=\"pre\">['1',</span> <span class=\"pre\">'',</span> <span class=\"pre\">'2']</span></code>).  The <em>sep</em> argument may consist of multiple characters\n(for example, <code class=\"docutils literal\"><span class=\"pre\">'1&lt;&gt;2&lt;&gt;3'.split('&lt;&gt;')</span></code> returns <code class=\"docutils literal\"><span class=\"pre\">['1',</span> <span class=\"pre\">'2',</span> <span class=\"pre\">'3']</span></code>).\nSplitting an empty string with a specified separator returns <code class=\"docutils literal\"><span class=\"pre\">['']</span></code>.</p><p>For example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'1,2,3'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">)</span>\n<span class=\"go\">['1', '2', '3']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'1,2,3'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">,</span> <span class=\"n\">maxsplit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">['1', '2,3']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'1,2,,3,'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">','</span><span class=\"p\">)</span>\n<span class=\"go\">['1', '2', '', '3', '']</span>\n</pre></div>\n</div><p>If <em>sep</em> is not specified or is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, a different splitting algorithm is\napplied: runs of consecutive whitespace are regarded as a single separator,\nand the result will contain no empty strings at the start or end if the\nstring has leading or trailing whitespace.  Consequently, splitting an empty\nstring or a string consisting of just whitespace with a <code class=\"docutils literal\"><span class=\"pre\">None</span></code> separator\nreturns <code class=\"docutils literal\"><span class=\"pre\">[]</span></code>.</p><p>For example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'1 2 3'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n<span class=\"go\">['1', '2', '3']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'1 2 3'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">maxsplit</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">['1', '2 3']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'   1   2   3   '</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()</span>\n<span class=\"go\">['1', '2', '3']</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>split()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "k7TH20og$X", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.splitlines(<span class=\"optional\">[</span><em>keepends</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a list of the lines in the string, breaking at line boundaries.  Line\nbreaks are not included in the resulting list unless <em>keepends</em> is given and\ntrue.</p>", 
                        "", 
                        "<p><code>str.splitlines(<span class=\"optional\">[</span><em>keepends</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>keepends</em><span class=\"optional\">]</span></em></code></p><p>This method splits on the following line boundaries.  In particular, the\nboundaries are a superset of <span class=\"xref std std-term\">universal newlines</span>.</p><table border=\"1\" class=\"docutils\">\n<colgroup>\n<col width=\"44%\">\n<col width=\"56%\">\n</colgroup>\n<thead valign=\"bottom\">\n<tr class=\"row-odd\"><th class=\"head\">Representation</th>\n<th class=\"head\">Description</th>\n</tr>\n</thead>\n<tbody valign=\"top\">\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">\\n</span></code></td>\n<td>Line Feed</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">\\r</span></code></td>\n<td>Carriage Return</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">\\r\\n</span></code></td>\n<td>Carriage Return + Line Feed</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">\\v</span></code> or <code class=\"docutils literal\"><span class=\"pre\">\\x0b</span></code></td>\n<td>Line Tabulation</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">\\f</span></code> or <code class=\"docutils literal\"><span class=\"pre\">\\x0c</span></code></td>\n<td>Form Feed</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">\\x1c</span></code></td>\n<td>File Separator</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">\\x1d</span></code></td>\n<td>Group Separator</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">\\x1e</span></code></td>\n<td>Record Separator</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">\\x85</span></code></td>\n<td>Next Line (C1 Control Code)</td>\n</tr>\n<tr class=\"row-odd\"><td><code class=\"docutils literal\"><span class=\"pre\">\\u2028</span></code></td>\n<td>Line Separator</td>\n</tr>\n<tr class=\"row-even\"><td><code class=\"docutils literal\"><span class=\"pre\">\\u2029</span></code></td>\n<td>Paragraph Separator</td>\n</tr>\n</tbody>\n</table><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.2: </span><code class=\"docutils literal\"><span class=\"pre\">\\v</span></code> and <code class=\"docutils literal\"><span class=\"pre\">\\f</span></code> added to list of line boundaries.</p>\n</div><p>For example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'ab c</span><span class=\"se\">\\n\\n</span><span class=\"s1\">de fg</span><span class=\"se\">\\r</span><span class=\"s1\">kl</span><span class=\"se\">\\r\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n<span class=\"go\">['ab c', '', 'de fg', 'kl']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'ab c</span><span class=\"se\">\\n\\n</span><span class=\"s1\">de fg</span><span class=\"se\">\\r</span><span class=\"s1\">kl</span><span class=\"se\">\\r\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">(</span><span class=\"n\">keepends</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">['ab c\\n', '\\n', 'de fg\\r', 'kl\\r\\n']</span>\n</pre></div>\n</div><p>Unlike <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">split()</span></code> when a delimiter string <em>sep</em> is given, this\nmethod returns an empty list for the empty string, and a terminal line\nbreak does not result in an extra line:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">\"\"</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n<span class=\"go\">[]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">\"One line</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">splitlines</span><span class=\"p\">()</span>\n<span class=\"go\">['One line']</span>\n</pre></div>\n</div><p>For comparison, <code class=\"docutils literal\"><span class=\"pre\">split('\\n')</span></code> gives:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">''</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"go\">['']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'Two lines</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"go\">['Two lines', '']</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>splitlines()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "Hfk+WI,R0f", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.startswith(<em>prefix</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return <code class=\"docutils literal\"><span class=\"pre\">True</span></code> if string starts with the <em>prefix</em>, otherwise return <code class=\"docutils literal\"><span class=\"pre\">False</span></code>.\n<em>prefix</em> can also be a tuple of prefixes to look for.  With optional <em>start</em>,\ntest string beginning at that position.  With optional <em>end</em>, stop comparing\nstring at that position.</p>", 
                        "", 
                        "<p><code>str.startswith(<em>prefix</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span>)<em><em>prefix</em><span class=\"optional\">[</span>,, <em>start</em><span class=\"optional\">[</span>,, <em>end</em><span class=\"optional\">]</span><span class=\"optional\">]</span></em></code></p>", 
                        "reverse", 
                        "<code>startswith()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "h11AA:YSHc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.strip(<span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string with the leading and trailing characters removed.\nThe <em>chars</em> argument is a string specifying the set of characters to be removed.\nIf omitted or <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, the <em>chars</em> argument defaults to removing whitespace.\nThe <em>chars</em> argument is not a prefix or suffix; rather, all combinations of its\nvalues are <strike>strip</strike>ped:</p>", 
                        "", 
                        "<p><code>str.strip(<span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span>)<em><span class=\"optional\">[</span><em>chars</em><span class=\"optional\">]</span></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'   spacious   '</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n<span class=\"go\">'spacious'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s1\">'www.example.com'</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">'cmowz.'</span><span class=\"p\">)</span>\n<span class=\"go\">'example'</span>\n</pre></div>\n</div><p>The outermost leading and trailing <em>chars</em> argument values are stripped\nfrom the string. Characters are removed from the leading end until\nreaching a string character that is not contained in the set of\ncharacters in <em>chars</em>. A similar action takes place on the trailing end.\nFor example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">comment_string</span> <span class=\"o\">=</span> <span class=\"s1\">'#....... Section 3.2.1 Issue #32 .......'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">comment_string</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">(</span><span class=\"s1\">'.#! '</span><span class=\"p\">)</span>\n<span class=\"go\">'Section 3.2.1 Issue #32'</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>strip()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "f%<mSz~_oL", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.swapcase()", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string with uppercase characters converted to lowercase and\nvice versa. Note that it is not necessarily true that\n<code class=\"docutils literal\"><span class=\"pre\">s.<strike>swapcase</strike>().<strike>swapcase</strike>()</span> <span class=\"pre\">==</span> <span class=\"pre\">s</span></code>.</p>", 
                        "", 
                        "<p><code>str.swapcase()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>swapcase()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "p/rx=A/5)N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.translate(<em>table</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string in which each character has been mapped through\nthe given translation table.  The table must be an object that implements\nindexing via <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__getitem__()</span></code>, typically a <span class=\"xref std std-term\">mapping</span> or\n<span class=\"xref std std-term\">sequence</span>.  When indexed by a Unicode ordinal (an integer), the\ntable object can do any of the following: return a Unicode ordinal or a\nstring, to map the character to one or more other characters; return\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>, to delete the character from the return string; or raise a\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">LookupError</span></code> exception, to map the character to itself.</p>", 
                        "", 
                        "<p><code>str.translate(<em>table</em>)<em><em>table</em></em></code></p><p>You can use <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.maketrans()</span></code> to create a translation map from\ncharacter-to-character mappings in different formats.</p><p>See also the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">codecs</span></code> module for a more flexible approach to custom\ncharacter mappings.</p>", 
                        "reverse", 
                        "<code>translate()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "Eg1Dj8K~yY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.upper()", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string with all the cased characters  converted to\n<strike>upper</strike>case.  Note that <code class=\"docutils literal\"><span class=\"pre\">str.<strike>upper</strike>().is<strike>upper</strike>()</span></code> might be <code class=\"docutils literal\"><span class=\"pre\">False</span></code> if <code class=\"docutils literal\"><span class=\"pre\">s</span></code>\ncontains uncased characters or if the Unicode category of the resulting\ncharacter(s) is not “Lu” (Letter, <strike>upper</strike>case), but e.g. “Lt” (Letter,\ntitlecase).</p>", 
                        "", 
                        "<p><code>str.upper()<em>()</em></code></p><p>The uppercasing algorithm used is described in section 3.13 of the Unicode\nStandard.</p>", 
                        "reverse", 
                        "<code>upper()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "swA|-{x>q#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "str.zfill(<em>width</em>)", 
                        "Python <code>str</code> prop", 
                        "<p>Return a copy of the string left filled with ASCII <code class=\"docutils literal\"><span class=\"pre\">'0'</span></code> digits to\nmake a string of length <em>width</em>. A leading sign prefix (<code class=\"docutils literal\"><span class=\"pre\">'+'</span></code>/<code class=\"docutils literal\"><span class=\"pre\">'-'</span></code>)\nis handled by inserting the padding <em>after</em> the sign character rather\nthan before. The original string is returned if <em>width</em> is less than\nor equal to <code class=\"docutils literal\"><span class=\"pre\">len(s)</span></code>.</p>", 
                        "", 
                        "<p><code>str.zfill(<em>width</em>)<em><em>width</em></em></code></p><p>For example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">\"42\"</span><span class=\"o\">.</span><span class=\"n\">zfill</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"go\">'00042'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"s2\">\"-42\"</span><span class=\"o\">.</span><span class=\"n\">zfill</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"go\">'-0042'</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>zfill()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "A5G4H]Q]QR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "len(s)", 
                        "Python <code>set</code> operation", 
                        "<p>Return the number of elements in set <em>s</em> (cardinality of <em>s</em>).</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>len(s)</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "fKdVZG3U!8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "x in s", 
                        "Python <code>set</code> operation", 
                        "<p>Test <em>x</em> for membership in <em>s</em>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>x in s</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "eZJB?7;AXo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "x not in s", 
                        "Python <code>set</code> operation", 
                        "<p>Test <em>x</em> for non-membership in <em>s</em>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>x not in s</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "D/{y|s72d<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "isdisjoint(<em>other</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Return <code class=\"docutils literal\"><span class=\"pre\">True</span></code> if the set has no elements in common with <em>other</em>.  Sets are\ndisjoint if and only if their intersection is the empty set.</p>", 
                        "", 
                        "<p><code>isdisjoint(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>isdisjoint()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "rQ65Hj$?+w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "issubset(<em>other</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Test whether every element in the set is in <em>other</em>.</p>", 
                        "", 
                        "<p><code>issubset(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>issubset()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "fbaq1Oell{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "set <= other", 
                        "Python <code>set</code> operation", 
                        "<p>Test whether every element in the set is in <em>other</em>.</p>", 
                        "", 
                        "<p><code>issubset(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>set <= other</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "pj/afYVvxo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "set < other", 
                        "Python <code>set</code> operation", 
                        "<p>Test whether the set is a proper subset of <em>other</em>, that is,\n<code class=\"docutils literal\"><span class=\"pre\">set</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">other</span> <span class=\"pre\">and</span> <span class=\"pre\">set</span> <span class=\"pre\">!=</span> <span class=\"pre\">other</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>set < other</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "MkfB[<~o5}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "issuperset(<em>other</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Test whether every element in <em>other</em> is in the set.</p>", 
                        "", 
                        "<p><code>issuperset(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>issuperset()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "s*oEVW9]/3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "set >= other", 
                        "Python <code>set</code> operation", 
                        "<p>Test whether every element in <em>other</em> is in the set.</p>", 
                        "", 
                        "<p><code>issuperset(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>set >= other</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "y&|A*l`[/M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "set > other", 
                        "Python <code>set</code> operation", 
                        "<p>Test whether the set is a proper superset of <em>other</em>, that is, <code class=\"docutils literal\"><span class=\"pre\">set</span> <span class=\"pre\">&gt;=</span>\n<span class=\"pre\">other</span> <span class=\"pre\">and</span> <span class=\"pre\">set</span> <span class=\"pre\">!=</span> <span class=\"pre\">other</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>set > other</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "wKVoNq9`9_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "symmetric_difference(<em>other</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Return a new set with elements in either the set or <em>other</em> but not both.</p>", 
                        "", 
                        "<p><code>symmetric_difference(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>symmetric_difference()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "m8v,?TYYr;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "set ^ other", 
                        "Python <code>set</code> operation", 
                        "<p>Return a new set with elements in either the set or <em>other</em> but not both.</p>", 
                        "", 
                        "<p><code>symmetric_difference(<em>other</em>)<em><em>other</em></em></code></p>", 
                        "reverse", 
                        "<code>set ^ other</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "uyE#FU6di,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "copy()", 
                        "Python <code>set</code> operation", 
                        "<p>Return a new set with a shallow <strike>copy</strike> of <em>s</em>.</p>", 
                        "", 
                        "<p><code>copy()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>copy()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "tB<Nc%2lP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "add(<em>elem</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Add element <em>elem</em> to the set.</p>", 
                        "", 
                        "<p><code>add(<em>elem</em>)<em><em>elem</em></em></code></p>", 
                        "reverse", 
                        "<code>add()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "qZAmU-hJE2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "remove(<em>elem</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Remove element <em>elem</em> from the set.  Raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></code> if <em>elem</em> is\nnot contained in the set.</p>", 
                        "", 
                        "<p><code>remove(<em>elem</em>)<em><em>elem</em></em></code></p>", 
                        "reverse", 
                        "<code>remove()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "g313om}s]O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "discard(<em>elem</em>)", 
                        "Python <code>set</code> operation", 
                        "<p>Remove element <em>elem</em> from the set if it is present.</p>", 
                        "", 
                        "<p><code>discard(<em>elem</em>)<em><em>elem</em></em></code></p>", 
                        "reverse", 
                        "<code>discard()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "BNzwK>NPUx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pop()", 
                        "Python <code>set</code> operation", 
                        "<p>Remove and return an arbitrary element from the set.  Raises\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></code> if the set is empty.</p>", 
                        "", 
                        "<p><code>pop()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>pop()</code>", 
                        "https://docs.python.org/3.6/library/stdtypes.html"
                    ], 
                    "flags": 0, 
                    "guid": "F}G&iDW8P<", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "BaseException", 
                        "Python builtin exception", 
                        "<p>The base class for all built-in exceptions.  It is not meant to be directly\ninherited by user-defined classes (for that, use <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">Exception</span></code>).  If\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></code> is called on an instance of this class, the representation of\nthe argument(s) to the instance are returned, or the empty string when\nthere were no arguments.</p>", 
                        "", 
                        "<dl class=\"attribute\">\n<dt id=\"BaseException.args\">\n<code class=\"descname\">args</code></dt>\n<dd><p>The tuple of arguments given to the exception constructor.  Some built-in\nexceptions (like <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code>) expect a certain number of arguments and\nassign a special meaning to the elements of this tuple, while others are\nusually called only with a single string giving an error message.</p>\n</dd></dl><dl class=\"method\">\n<dt id=\"BaseException.with_traceback\">\n<code class=\"descname\">with_traceback</code><span class=\"sig-paren\">(</span><em>tb</em><span class=\"sig-paren\">)</span></dt>\n<dd><p>This method sets <em>tb</em> as the new traceback for the exception and returns\nthe exception object.  It is usually used in exception handling code like\nthis:</p>\n<div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"o\">...</span>\n<span class=\"k\">except</span> <span class=\"n\">SomeException</span><span class=\"p\">:</span>\n    <span class=\"n\">tb</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">exc_info</span><span class=\"p\">()[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n    <span class=\"k\">raise</span> <span class=\"n\">OtherException</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">with_traceback</span><span class=\"p\">(</span><span class=\"n\">tb</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</dd></dl>", 
                        "reverse", 
                        "<code>BaseException</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "E[wutT8bve", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ArithmeticError", 
                        "Python builtin exception", 
                        "<p>The base class for those built-in exceptions that are raised for various\narithmetic errors: <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code>, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ZeroDivisionError</span></code>,\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">FloatingPointError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ArithmeticError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "h)O-_s]ZUN", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "BufferError", 
                        "Python builtin exception", 
                        "<p>Raised when a <span class=\"std std-ref\">buffer</span> related operation cannot be\nperformed.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>BufferError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "E22w(T>|5+", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "LookupError", 
                        "Python builtin exception", 
                        "<p>The base class for the exceptions that are raised when a key or index used on\na mapping or sequence is invalid: <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">IndexError</span></code>, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">KeyError</span></code>.  This\ncan be raised directly by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">codecs.lookup()</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>LookupError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "j(WA(ln*8M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "AssertionError", 
                        "Python builtin exception", 
                        "<p id=\"index-2\">Raised when an <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">assert</span></code> statement fails.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>AssertionError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "GK-s.njf^m", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "AttributeError", 
                        "Python builtin exception", 
                        "<p>Raised when an attribute reference (see <span class=\"std std-ref\">Attribute references</span>) or\nassignment fails.  (When an object does not support attribute references or\nattribute assignments at all, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> is raised.)</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>AttributeError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Olj5.:{<*P", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "EOFError", 
                        "Python builtin exception", 
                        "<p>Raised when the <code class=\"xref py py-func docutils literal\"><span class=\"pre\">input()</span></code> function hits an end-of-file condition (EOF)\nwithout reading any data. (N.B.: the <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">io.IOBase.read()</span></code> and\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">io.IOBase.readline()</span></code> methods return an empty string when they hit EOF.)</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>EOFError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Eb:A*Y9Qy]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "FloatingPointError", 
                        "Python builtin exception", 
                        "<p>Raised when a floating point operation fails.  This exception is always defined,\nbut can only be raised when Python is configured with the\n<code class=\"docutils literal\"><span class=\"pre\">--with-fpectl</span></code> option, or the <code class=\"xref py py-const docutils literal\"><span class=\"pre\">WANT_SIGFPE_HANDLER</span></code> symbol is\ndefined in the <code class=\"file docutils literal\"><span class=\"pre\">pyconfig.h</span></code> file.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>FloatingPointError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Q,}}Xc:[0.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "GeneratorExit", 
                        "Python builtin exception", 
                        "<p>Raised when a <span class=\"xref std std-term\">generator</span> or <span class=\"xref std std-term\">coroutine</span> is closed;\nsee <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">generator.close()</span></code> and <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">coroutine.close()</span></code>.  It\ndirectly inherits from <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">BaseException</span></code> instead of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">Exception</span></code> since\nit is technically not an error.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>GeneratorExit</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "t[jYNak8da", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ImportError", 
                        "Python builtin exception", 
                        "<p>Raised when the <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code> statement has troubles trying to\nload a module.  Also raised when the “from list” in <code class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">...</span> <span class=\"pre\">import</span></code>\nhas a name that cannot be found.</p>", 
                        "", 
                        "<p>The <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">name</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">path</span></code> attributes can be set using keyword-only\narguments to the constructor. When set they represent the name of the module\nthat was attempted to be imported and the path to any file which triggered\nthe exception, respectively.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Added the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">name</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">path</span></code> attributes.</p>\n</div>", 
                        "reverse", 
                        "<code>ImportError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "m^FqBL;cr>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ModuleNotFoundError", 
                        "Python builtin exception", 
                        "<p>A subclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ImportError</span></code> which is raised by <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code>\nwhen a module could not be located.  It is also raised when <code class=\"docutils literal\"><span class=\"pre\">None</span></code>\nis found in <code class=\"xref py py-data docutils literal\"><span class=\"pre\">sys.modules</span></code>.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6.</span></p>\n</div>", 
                        "reverse", 
                        "<code>ModuleNotFoundError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "k1ZcGX]7j>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "IndexError", 
                        "Python builtin exception", 
                        "<p>Raised when a sequence subscript is out of range.  (Slice indices are\nsilently truncated to fall in the allowed range; if an index is not an\ninteger, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">TypeError</span></code> is raised.)</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>IndexError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "ktgt@;]eW7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "KeyboardInterrupt", 
                        "Python builtin exception", 
                        "<p>Raised when the user hits the interrupt key (normally <code class=\"kbd docutils literal\"><span class=\"pre\">Control-C</span></code> or\n<code class=\"kbd docutils literal\"><span class=\"pre\">Delete</span></code>).  During execution, a check for interrupts is made\nregularly. The exception inherits from <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">BaseException</span></code> so as to not be\naccidentally caught by code that catches <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">Exception</span></code> and thus prevent\nthe interpreter from exiting.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>KeyboardInterrupt</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "lc(..4n8c|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "MemoryError", 
                        "Python builtin exception", 
                        "<p>Raised when an operation runs out of memory but the situation may still be\nrescued (by deleting some objects).  The associated value is a string indicating\nwhat kind of (internal) operation ran out of memory. Note that because of the\nunderlying memory management architecture (C’s <code class=\"xref c c-func docutils literal\"><span class=\"pre\">malloc()</span></code> function), the\ninterpreter may not always be able to completely recover from this situation; it\nnevertheless raises an exception so that a stack traceback can be printed, in\ncase a run-away program was the cause.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>MemoryError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "g0t2C80,^;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "NotImplementedError", 
                        "Python builtin exception", 
                        "<p>This exception is derived from <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">RuntimeError</span></code>.  In user defined base\nclasses, abstract methods should raise this exception when they require\nderived classes to override the method, or while the class is being\ndeveloped to indicate that the real implementation still needs to be added.</p>", 
                        "", 
                        "<div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">It should not be used to indicate that an operator or method is not\nmeant to be supported at all – in that case either leave the operator /\nmethod undefined or, if a subclass, set it to <code class=\"xref py py-data docutils literal\"><span class=\"pre\">None</span></code>.</p>\n</div><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\"><code class=\"docutils literal\"><span class=\"pre\">NotImplementedError</span></code> and <code class=\"docutils literal\"><span class=\"pre\">NotImplemented</span></code> are not interchangeable,\neven though they have similar names and purposes.  See\n<code class=\"xref py py-data docutils literal\"><span class=\"pre\">NotImplemented</span></code> for details on when to use it.</p>\n</div>", 
                        "reverse", 
                        "<code>NotImplementedError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "I~?BC-0h8#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "OverflowError", 
                        "Python builtin exception", 
                        "<p>Raised when the result of an arithmetic operation is too large to be\nrepresented.  This cannot occur for integers (which would rather raise\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">MemoryError</span></code> than give up).  However, for historical reasons,\n<strike>OverflowError</strike> is sometimes raised for integers that are outside a required\nrange.   Because of the lack of standardization of floating point exception\nhandling in C, most floating point operations are not checked.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>OverflowError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Bf-&W03F+Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "RecursionError", 
                        "Python builtin exception", 
                        "<p>This exception is derived from <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">RuntimeError</span></code>.  It is raised when the\ninterpreter detects that the maximum recursion depth (see\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.getrecursionlimit()</span></code>) is exceeded.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.5: </span>Previously, a plain <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">RuntimeError</span></code> was raised.</p>\n</div>", 
                        "reverse", 
                        "<code>RecursionError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "q%1{`LUQK$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ReferenceError", 
                        "Python builtin exception", 
                        "<p>This exception is raised when a weak reference proxy, created by the\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">weakref.proxy()</span></code> function, is used to access an attribute of the referent\nafter it has been garbage collected. For more information on weak references,\nsee the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">weakref</span></code> module.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ReferenceError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "FRq<CHS#5U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "StopIteration", 
                        "Python builtin exception", 
                        "<p>Raised by built-in function <code class=\"xref py py-func docutils literal\"><span class=\"pre\">next()</span></code> and an <span class=\"xref std std-term\">iterator</span>’s\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__next__()</span></code> method to signal that there are no further\nitems produced by the iterator.</p>", 
                        "", 
                        "<p>The exception object has a single attribute <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">value</span></code>, which is\ngiven as an argument when constructing the exception, and defaults\nto <code class=\"xref py py-const docutils literal\"><span class=\"pre\">None</span></code>.</p><p>When a <span class=\"xref std std-term\">generator</span> or <span class=\"xref std std-term\">coroutine</span> function\nreturns, a new <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></code> instance is\nraised, and the value returned by the function is used as the\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">value</span></code> parameter to the constructor of the exception.</p><p>If a generator function defined in the presence of a <code class=\"docutils literal\"><span class=\"pre\">from</span> <span class=\"pre\">__future__</span>\n<span class=\"pre\">import</span> <span class=\"pre\">generator_stop</span></code> directive raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></code>, it will be\nconverted into a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">RuntimeError</span></code> (retaining the <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">StopIteration</span></code>\nas the new exception’s cause).</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Added <code class=\"docutils literal\"><span class=\"pre\">value</span></code> attribute and the ability for generator functions to\nuse it to return a value.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.5: </span>Introduced the RuntimeError transformation.</p>\n</div>", 
                        "reverse", 
                        "<code>StopIteration</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Bb5R(TCs|N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "StopAsyncIteration", 
                        "Python builtin exception", 
                        "<p>Must be raised by <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">__anext__()</span></code> method of an\n<span class=\"xref std std-term\">asynchronous iterator</span> object to stop the iteration.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.5.</span></p>\n</div>", 
                        "reverse", 
                        "<code>StopAsyncIteration</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "dg[@wzH6^w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "SyntaxError", 
                        "Python builtin exception", 
                        "<p>Raised when the parser encounters a syntax error.  This may occur in an\n<code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">import</span></code> statement, in a call to the built-in functions <code class=\"xref py py-func docutils literal\"><span class=\"pre\">exec()</span></code>\nor <code class=\"xref py py-func docutils literal\"><span class=\"pre\">eval()</span></code>, or when reading the initial script or standard input\n(also interactively).</p>", 
                        "", 
                        "<p>Instances of this class have attributes <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">filename</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">lineno</span></code>,\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">offset</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">text</span></code> for easier access to the details.  <code class=\"xref py py-func docutils literal\"><span class=\"pre\">str()</span></code>\nof the exception instance returns only the message.</p>", 
                        "reverse", 
                        "<code>SyntaxError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "OOS^`VoO{!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "IndentationError", 
                        "Python builtin exception", 
                        "<p>Base class for syntax errors related to incorrect indentation.  This is a\nsubclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">SyntaxError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>IndentationError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "r[{@_X+m:*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "TabError", 
                        "Python builtin exception", 
                        "<p>Raised when indentation contains an inconsistent use of tabs and spaces.\nThis is a subclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">IndentationError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>TabError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "KXt9[!!gse", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "SystemExit", 
                        "Python builtin exception", 
                        "<p>This exception is raised by the <code class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.exit()</span></code> function.  It inherits from\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">BaseException</span></code> instead of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">Exception</span></code> so that it is not accidentally\ncaught by code that catches <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">Exception</span></code>.  This allows the exception to\nproperly propagate up and cause the interpreter to exit.  When it is not\nhandled, the Python interpreter exits; no stack traceback is printed.  The\nconstructor accepts the same optional argument passed to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.exit()</span></code>.\nIf the value is an integer, it specifies the system exit status (passed to\nC’s <code class=\"xref c c-func docutils literal\"><span class=\"pre\">exit()</span></code> function); if it is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, the exit status is zero; if\nit has another type (such as a string), the object’s value is printed and\nthe exit status is one.</p>", 
                        "", 
                        "<p>A call to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">sys.exit()</span></code> is translated into an exception so that clean-up\nhandlers (<code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">finally</span></code> clauses of <code class=\"xref std std-keyword docutils literal\"><span class=\"pre\">try</span></code> statements) can be\nexecuted, and so that a debugger can execute a script without running the risk\nof losing control.  The <code class=\"xref py py-func docutils literal\"><span class=\"pre\">os._exit()</span></code> function can be used if it is\nabsolutely positively necessary to exit immediately (for example, in the child\nprocess after a call to <code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.fork()</span></code>).</p><dl class=\"attribute\">\n<dt id=\"SystemExit.code\">\n<code class=\"descname\">code</code></dt>\n<dd><p>The exit status or error message that is passed to the constructor.\n(Defaults to <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.)</p>\n</dd></dl>", 
                        "reverse", 
                        "<code>SystemExit</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "r<[-~}:c|_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "UnboundLocalError", 
                        "Python builtin exception", 
                        "<p>Raised when a reference is made to a local variable in a function or method, but\nno value has been bound to that variable.  This is a subclass of\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">NameError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>UnboundLocalError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "fwe4_?l/VR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "UnicodeError", 
                        "Python builtin exception", 
                        "<p>Raised when a Unicode-related encoding or decoding error occurs.  It is a\nsubclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code>.</p>", 
                        "", 
                        "<p><code class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></code> has attributes that describe the encoding or decoding\nerror.  For example, <code class=\"docutils literal\"><span class=\"pre\">err.object[err.start:err.end]</span></code> gives the particular\ninvalid input that the codec failed on.</p><dl class=\"attribute\">\n<dt id=\"UnicodeError.encoding\">\n<code class=\"descname\">encoding</code></dt>\n<dd><p>The name of the encoding that raised the error.</p>\n</dd></dl><dl class=\"attribute\">\n<dt id=\"UnicodeError.reason\">\n<code class=\"descname\">reason</code></dt>\n<dd><p>A string describing the specific codec error.</p>\n</dd></dl><dl class=\"attribute\">\n<dt id=\"UnicodeError.object\">\n<code class=\"descname\">object</code></dt>\n<dd><p>The object the codec was attempting to encode or decode.</p>\n</dd></dl><dl class=\"attribute\">\n<dt id=\"UnicodeError.start\">\n<code class=\"descname\">start</code></dt>\n<dd><p>The first index of invalid data in <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">object</span></code>.</p>\n</dd></dl><dl class=\"attribute\">\n<dt id=\"UnicodeError.end\">\n<code class=\"descname\">end</code></dt>\n<dd><p>The index after the last invalid data in <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">object</span></code>.</p>\n</dd></dl>", 
                        "reverse", 
                        "<code>UnicodeError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "gn3Qq@NMg)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "UnicodeEncodeError", 
                        "Python builtin exception", 
                        "<p>Raised when a Unicode-related error occurs during encoding.  It is a subclass of\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>UnicodeEncodeError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "L,s`n5`bY3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "UnicodeDecodeError", 
                        "Python builtin exception", 
                        "<p>Raised when a Unicode-related error occurs during decoding.  It is a subclass of\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>UnicodeDecodeError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "uH%o3R.Z8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "UnicodeTranslateError", 
                        "Python builtin exception", 
                        "<p>Raised when a Unicode-related error occurs during translating.  It is a subclass\nof <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">UnicodeError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>UnicodeTranslateError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "B[KH`hbY`n", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ValueError", 
                        "Python builtin exception", 
                        "<p>Raised when a built-in operation or function receives an argument that has the\nright type but an inappropriate value, and the situation is not described by a\nmore precise exception such as <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">IndexError</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ValueError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Im;~PrYZlz", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "BlockingIOError", 
                        "Python builtin exception", 
                        "<p>Raised when an operation would block on an object (e.g. socket) set\nfor non-blocking operation.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">EAGAIN</span></code>, <code class=\"docutils literal\"><span class=\"pre\">EALREADY</span></code>,\n<code class=\"docutils literal\"><span class=\"pre\">EWOULDBLOCK</span></code> and <code class=\"docutils literal\"><span class=\"pre\">EINPROGRESS</span></code>.</p>", 
                        "", 
                        "<p>In addition to those of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code>, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">BlockingIOError</span></code> can have\none more attribute:</p><dl class=\"attribute\">\n<dt id=\"BlockingIOError.characters_written\">\n<code class=\"descname\">characters_written</code></dt>\n<dd><p>An integer containing the number of characters written to the stream\nbefore it blocked.  This attribute is available when using the\nbuffered I/O classes from the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">io</span></code> module.</p>\n</dd></dl>", 
                        "reverse", 
                        "<code>BlockingIOError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "kSzk6,;8[U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ChildProcessError", 
                        "Python builtin exception", 
                        "<p>Raised when an operation on a child process failed.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ECHILD</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ChildProcessError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "IH!2Q:v]GW", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "BrokenPipeError", 
                        "Python builtin exception", 
                        "<p>A subclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ConnectionError</span></code>, raised when trying to write on a\npipe while the other end has been closed, or trying to write on a socket\nwhich has been shutdown for writing.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">EPIPE</span></code> and <code class=\"docutils literal\"><span class=\"pre\">ESHUTDOWN</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>BrokenPipeError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "d@.oDz~q~.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ConnectionAbortedError", 
                        "Python builtin exception", 
                        "<p>A subclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ConnectionError</span></code>, raised when a connection attempt\nis aborted by the peer.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ECONNABORTED</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ConnectionAbortedError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "ngM#q,_+Ma", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ConnectionRefusedError", 
                        "Python builtin exception", 
                        "<p>A subclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ConnectionError</span></code>, raised when a connection attempt\nis refused by the peer.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ECONNREFUSED</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ConnectionRefusedError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "rfU8tX|d]j", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ConnectionResetError", 
                        "Python builtin exception", 
                        "<p>A subclass of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ConnectionError</span></code>, raised when a connection is\nreset by the peer.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ECONNRESET</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ConnectionResetError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "v)OE*HLA3G", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "FileExistsError", 
                        "Python builtin exception", 
                        "<p>Raised when trying to create a file or directory which already exists.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">EEXIST</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>FileExistsError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "sjyfO|![M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "FileNotFoundError", 
                        "Python builtin exception", 
                        "<p>Raised when a file or directory is requested but doesn’t exist.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ENOENT</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>FileNotFoundError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "o@(U%$SR({", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "InterruptedError", 
                        "Python builtin exception", 
                        "<p>Raised when a system call is interrupted by an incoming signal.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"xref py py-data docutils literal\"><span class=\"pre\">EINTR</span></code>.</p>", 
                        "", 
                        "<div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.5: </span>Python now retries system calls when a syscall is interrupted by a\nsignal, except if the signal handler raises an exception (see <span class=\"target\" id=\"index-4\"></span><strong>PEP 475</strong>\nfor the rationale), instead of raising <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">InterruptedError</span></code>.</p>\n</div>", 
                        "reverse", 
                        "<code>InterruptedError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "AE>ml^A*Fo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "IsADirectoryError", 
                        "Python builtin exception", 
                        "<p>Raised when a file operation (such as <code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.remove()</span></code>) is requested\non a directory.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">EISDIR</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>IsADirectoryError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Ems<+ucQ5&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "NotADirectoryError", 
                        "Python builtin exception", 
                        "<p>Raised when a directory operation (such as <code class=\"xref py py-func docutils literal\"><span class=\"pre\">os.listdir()</span></code>) is requested\non something which is not a directory.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ENOTDIR</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>NotADirectoryError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "ukgR+`:4++", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "PermissionError", 
                        "Python builtin exception", 
                        "<p>Raised when trying to run an operation without the adequate access\nrights - for example filesystem permissions.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">EACCES</span></code> and <code class=\"docutils literal\"><span class=\"pre\">EPERM</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>PermissionError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "Nip)<*x&a-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "ProcessLookupError", 
                        "Python builtin exception", 
                        "<p>Raised when a given process doesn’t exist.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ESRCH</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ProcessLookupError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "E1%$.*jCL6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "TimeoutError", 
                        "Python builtin exception", 
                        "<p>Raised when a system function timed out at the system level.\nCorresponds to <code class=\"xref c c-data docutils literal\"><span class=\"pre\">errno</span></code> <code class=\"docutils literal\"><span class=\"pre\">ETIMEDOUT</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>TimeoutError</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "GpHH`XW~:M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "BytesWarning", 
                        "Python builtin exception", 
                        "<p>Base class for warnings related to <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytes</span></code> and <code class=\"xref py py-class docutils literal\"><span class=\"pre\">bytearray</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>BytesWarning</code>", 
                        "https://docs.python.org/3.6/library/exceptions.html"
                    ], 
                    "flags": 0, 
                    "guid": "b3?:-WwpNZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.ascii_letters", 
                        "Python <code>string</code> prop", 
                        "<p>The concatenation of the <code class=\"xref py py-const docutils literal\"><span class=\"pre\">ascii_lowercase</span></code> and <code class=\"xref py py-const docutils literal\"><span class=\"pre\">ascii_uppercase</span></code>\nconstants described below.  This value is not locale-dependent.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ascii_letters</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "yrs0g.?)/W", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.ascii_lowercase", 
                        "Python <code>string</code> prop", 
                        "<p>The lowercase letters <code class=\"docutils literal\"><span class=\"pre\">'abcdefghijklmnopqrstuvwxyz'</span></code>.  This value is not\nlocale-dependent and will not change.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ascii_lowercase</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "J<TGAkMn*K", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.ascii_uppercase", 
                        "Python <code>string</code> prop", 
                        "<p>The uppercase letters <code class=\"docutils literal\"><span class=\"pre\">'ABCDEFGHIJKLMNOPQRSTUVWXYZ'</span></code>.  This value is not\nlocale-dependent and will not change.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>ascii_uppercase</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "N1k/bdmwYw", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.digits", 
                        "Python <code>string</code> prop", 
                        "<p>The string <code class=\"docutils literal\"><span class=\"pre\">'0123456789'</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>digits</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "l$$ET^t>(l", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.hexdigits", 
                        "Python <code>string</code> prop", 
                        "<p>The string <code class=\"docutils literal\"><span class=\"pre\">'0123456789abcdefABCDEF'</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>hexdigits</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "h<Xmw5etLd", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.octdigits", 
                        "Python <code>string</code> prop", 
                        "<p>The string <code class=\"docutils literal\"><span class=\"pre\">'01234567'</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>octdigits</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "gw+eQ04T#b", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.punctuation", 
                        "Python <code>string</code> prop", 
                        "<p>String of ASCII characters which are considered <strike>punctuation</strike> characters\nin the <code class=\"docutils literal\"><span class=\"pre\">C</span></code> locale.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>punctuation</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "fY__UFlhdi", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "string.printable", 
                        "Python <code>string</code> prop", 
                        "<p>String of ASCII characters which are considered <strike>printable</strike>.  This is a\ncombination of <code class=\"xref py py-const docutils literal\"><span class=\"pre\">digits</span></code>, <code class=\"xref py py-const docutils literal\"><span class=\"pre\">ascii_letters</span></code>, <code class=\"xref py py-const docutils literal\"><span class=\"pre\">punctuation</span></code>,\nand <code class=\"xref py py-const docutils literal\"><span class=\"pre\">whitespace</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>printable</code>", 
                        "https://docs.python.org/3.6/library/string.html"
                    ], 
                    "flags": 0, 
                    "guid": "K^M95tSrB.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.compile(<em>pattern</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Compile a regular expression pattern into a <span class=\"std std-ref\">regular expression object</span>, which can be used for matching using its\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">match()</span></code>, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">search()</span></code> and other methods, described\nbelow.</p>", 
                        "", 
                        "<p><code>re.compile(<em>pattern</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>flags=0</em></em></code></p><p>The expression’s behaviour can be modified by specifying a <em>flags</em> value.\nValues can be any of the following variables, combined using bitwise OR (the\n<code class=\"docutils literal\"><span class=\"pre\">|</span></code> operator).</p><p>The sequence</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">prog</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">prog</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">string</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>is equivalent to</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>but using <code class=\"xref py py-func docutils literal\"><span class=\"pre\">re.compile()</span></code> and saving the resulting regular expression\nobject for reuse is more efficient when the expression will be used several\ntimes in a single program.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">The compiled versions of the most recent patterns passed to\n<code class=\"xref py py-func docutils literal\"><span class=\"pre\">re.compile()</span></code> and the module-level matching functions are cached, so\nprograms that use only a few regular expressions at a time needn’t worry\nabout compiling regular expressions.</p>\n</div>", 
                        "reverse", 
                        "<code>compile()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "c.s+7^7&h#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.A", 
                        "Python <code>re</code> prop", 
                        "<p>Make <code class=\"docutils literal\"><span class=\"pre\">\\w</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\W</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\b</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\B</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\d</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\D</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\s</span></code> and <code class=\"docutils literal\"><span class=\"pre\">\\S</span></code>\nperform <strike>A</strike>SCII-only matching instead of full Unicode matching.  This is only\nmeaningful for Unicode patterns, and is ignored for byte patterns.</p>", 
                        "", 
                        "<p>Note that for backward compatibility, the <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.U</span></code> flag still\nexists (as well as its synonym <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.UNICODE</span></code> and its embedded\ncounterpart <code class=\"docutils literal\"><span class=\"pre\">(?u)</span></code>), but these are redundant in Python 3 since\nmatches are Unicode by default for strings (and Unicode matching\nisn’t allowed for bytes).</p>", 
                        "reverse", 
                        "<code>A</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "ussEd)rwFF", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.ASCII", 
                        "Python <code>re</code> prop", 
                        "<p>Make <code class=\"docutils literal\"><span class=\"pre\">\\w</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\W</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\b</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\B</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\d</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\D</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\s</span></code> and <code class=\"docutils literal\"><span class=\"pre\">\\S</span></code>\nperform <strike>A</strike>SCII-only matching instead of full Unicode matching.  This is only\nmeaningful for Unicode patterns, and is ignored for byte patterns.</p>", 
                        "", 
                        "<p>Note that for backward compatibility, the <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.U</span></code> flag still\nexists (as well as its synonym <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.UNICODE</span></code> and its embedded\ncounterpart <code class=\"docutils literal\"><span class=\"pre\">(?u)</span></code>), but these are redundant in Python 3 since\nmatches are Unicode by default for strings (and Unicode matching\nisn’t allowed for bytes).</p>", 
                        "reverse", 
                        "<code>ASCII</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "L>2;KN]u</", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.I", 
                        "Python <code>re</code> prop", 
                        "<p>Perform case-insensitive matching; expressions like <code class=\"docutils literal\"><span class=\"pre\">[A-Z]</span></code> will also\nmatch lowercase letters.  The current locale does not change the effect of\nthis flag.  Full Unicode matching (such as <code class=\"docutils literal\"><span class=\"pre\">Ü</span></code> matching <code class=\"docutils literal\"><span class=\"pre\">ü</span></code>) also\nworks unless the <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.ASC<strike>I</strike><strike>I</strike></span></code> flag is also used to disable non-ASC<strike>I</strike><strike>I</strike>\nmatches.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>I</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "q*nK6BK#<z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.IGNORECASE", 
                        "Python <code>re</code> prop", 
                        "<p>Perform case-insensitive matching; expressions like <code class=\"docutils literal\"><span class=\"pre\">[A-Z]</span></code> will also\nmatch lowercase letters.  The current locale does not change the effect of\nthis flag.  Full Unicode matching (such as <code class=\"docutils literal\"><span class=\"pre\">Ü</span></code> matching <code class=\"docutils literal\"><span class=\"pre\">ü</span></code>) also\nworks unless the <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.ASC<strike>I</strike><strike>I</strike></span></code> flag is also used to disable non-ASC<strike>I</strike><strike>I</strike>\nmatches.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>IGNORECASE</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "P,*,DA.FN%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.L", 
                        "Python <code>re</code> prop", 
                        "<p>Make <code class=\"docutils literal\"><span class=\"pre\">\\w</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\W</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\b</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\B</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\s</span></code> and <code class=\"docutils literal\"><span class=\"pre\">\\S</span></code> dependent on the\ncurrent locale. The use of this flag is discouraged as the locale mechanism\nis very unreliable, and it only handles one “culture” at a time anyway;\nyou should use Unicode matching instead, which is the default in Python 3\nfor Unicode (str) patterns. This flag can be used only with bytes patterns.</p>", 
                        "", 
                        "<div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span><code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.LOCALE</span></code> can be used only with bytes patterns and is\nnot compatible with <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.ASCII</span></code>.</p>\n</div>", 
                        "reverse", 
                        "<code>L</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "BV,Z;Xt$e0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.LOCALE", 
                        "Python <code>re</code> prop", 
                        "<p>Make <code class=\"docutils literal\"><span class=\"pre\">\\w</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\W</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\b</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\B</span></code>, <code class=\"docutils literal\"><span class=\"pre\">\\s</span></code> and <code class=\"docutils literal\"><span class=\"pre\">\\S</span></code> dependent on the\ncurrent locale. The use of this flag is discouraged as the locale mechanism\nis very unreliable, and it only handles one “culture” at a time anyway;\nyou should use Unicode matching instead, which is the default in Python 3\nfor Unicode (str) patterns. This flag can be used only with bytes patterns.</p>", 
                        "", 
                        "<div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span><code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.LOCALE</span></code> can be used only with bytes patterns and is\nnot compatible with <code class=\"xref py py-const docutils literal\"><span class=\"pre\">re.ASCII</span></code>.</p>\n</div>", 
                        "reverse", 
                        "<code>LOCALE</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "iQ-+.aNNO/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.M", 
                        "Python <code>re</code> prop", 
                        "<p>When specified, the pattern character <code class=\"docutils literal\"><span class=\"pre\">'^'</span></code> matches at the beginning of the\nstring and at the beginning of each line (immediately following each newline);\nand the pattern character <code class=\"docutils literal\"><span class=\"pre\">'$'</span></code> matches at the end of the string and at the\nend of each line (immediately preceding each newline).  By default, <code class=\"docutils literal\"><span class=\"pre\">'^'</span></code>\nmatches only at the beginning of the string, and <code class=\"docutils literal\"><span class=\"pre\">'$'</span></code> only at the end of the\nstring and immediately before the newline (if any) at the end of the string.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>M</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "d]4b5Rkn9F", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.MULTILINE", 
                        "Python <code>re</code> prop", 
                        "<p>When specified, the pattern character <code class=\"docutils literal\"><span class=\"pre\">'^'</span></code> matches at the beginning of the\nstring and at the beginning of each line (immediately following each newline);\nand the pattern character <code class=\"docutils literal\"><span class=\"pre\">'$'</span></code> matches at the end of the string and at the\nend of each line (immediately preceding each newline).  By default, <code class=\"docutils literal\"><span class=\"pre\">'^'</span></code>\nmatches only at the beginning of the string, and <code class=\"docutils literal\"><span class=\"pre\">'$'</span></code> only at the end of the\nstring and immediately before the newline (if any) at the end of the string.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>MULTILINE</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "lPrclh]B9d", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.S", 
                        "Python <code>re</code> prop", 
                        "<p>Make the <code class=\"docutils literal\"><span class=\"pre\">'.'</span></code> special character match any character at all, including a\nnewline; without this flag, <code class=\"docutils literal\"><span class=\"pre\">'.'</span></code> will match anything <em>except</em> a newline.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>S</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "m;TLrTg*,p", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.DOTALL", 
                        "Python <code>re</code> prop", 
                        "<p>Make the <code class=\"docutils literal\"><span class=\"pre\">'.'</span></code> special character match any character at all, including a\nnewline; without this flag, <code class=\"docutils literal\"><span class=\"pre\">'.'</span></code> will match anything <em>except</em> a newline.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>DOTALL</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "IDXP<~.)Ze", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.X", 
                        "Python <code>re</code> prop", 
                        "<p>This flag allows you to write regular expressions that look nicer and are\nmore readable by allowing you to visually separate logical sections of the\npattern and add comments. Whitespace within the pattern is ignored, except\nwhen in a character class or when preceded by an unescaped backslash.\nWhen a line contains a <code class=\"docutils literal\"><span class=\"pre\">#</span></code> that is not in a character class and is not\npreceded by an unescaped backslash, all characters from the leftmost such\n<code class=\"docutils literal\"><span class=\"pre\">#</span></code> through the end of the line are ignored.</p>", 
                        "", 
                        "<p>This means that the two following regular expression objects that match a\ndecimal number are functionally equal:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"\"\"\\d +  # the integral part</span>\n<span class=\"s2\">                   \\.    # the decimal point</span>\n<span class=\"s2\">                   \\d *  # some fractional digits\"\"\"</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"\\d+\\.\\d*\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>X</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "H&|(K(i~ma", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.VERBOSE", 
                        "Python <code>re</code> prop", 
                        "<p>This flag allows you to write regular expressions that look nicer and are\nmore readable by allowing you to visually separate logical sections of the\npattern and add comments. Whitespace within the pattern is ignored, except\nwhen in a character class or when preceded by an unescaped backslash.\nWhen a line contains a <code class=\"docutils literal\"><span class=\"pre\">#</span></code> that is not in a character class and is not\npreceded by an unescaped backslash, all characters from the leftmost such\n<code class=\"docutils literal\"><span class=\"pre\">#</span></code> through the end of the line are ignored.</p>", 
                        "", 
                        "<p>This means that the two following regular expression objects that match a\ndecimal number are functionally equal:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"\"\"\\d +  # the integral part</span>\n<span class=\"s2\">                   \\.    # the decimal point</span>\n<span class=\"s2\">                   \\d *  # some fractional digits\"\"\"</span><span class=\"p\">,</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">X</span><span class=\"p\">)</span>\n<span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"\\d+\\.\\d*\"</span><span class=\"p\">)</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>VERBOSE</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "N;zhsUc-2/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.search(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Scan through <em>string</em> looking for the first location where the regular expression\n<em>pattern</em> produces a match, and return a corresponding <span class=\"std std-ref\">match object</span>.  Return <code class=\"docutils literal\"><span class=\"pre\">None</span></code> if no position in the string matches the\npattern; note that this is different from finding a zero-length match at some\npoint in the string.</p>", 
                        "", 
                        "<p><code>re.search(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>string</em>,, <em>flags=0</em></em></code></p>", 
                        "reverse", 
                        "<code>search()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "se44IOIM{#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.match(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>If zero or more characters at the beginning of <em>string</em> <strike>match</strike> the regular\nexpression <em>pattern</em>, return a corresponding <span class=\"std std-ref\"><strike>match</strike> object</span>.  Return <code class=\"docutils literal\"><span class=\"pre\">None</span></code> if the string does not <strike>match</strike> the pattern;\nnote that this is different from a zero-length <strike>match</strike>.</p>", 
                        "", 
                        "<p><code>re.match(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>string</em>,, <em>flags=0</em></em></code></p><p>Note that even in <code class=\"xref py py-const docutils literal\"><span class=\"pre\">MULTILINE</span></code> mode, <code class=\"xref py py-func docutils literal\"><span class=\"pre\">re.match()</span></code> will only match\nat the beginning of the string and not at the beginning of each line.</p><p>If you want to locate a match anywhere in <em>string</em>, use <code class=\"xref py py-func docutils literal\"><span class=\"pre\">search()</span></code>\ninstead (see also <span class=\"std std-ref\">search() vs. match()</span>).</p>", 
                        "reverse", 
                        "<code>match()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": ";1D=/dRb8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.fullmatch(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>If the whole <em>string</em> matches the regular expression <em>pattern</em>, return a\ncorresponding <span class=\"std std-ref\">match object</span>.  Return <code class=\"docutils literal\"><span class=\"pre\">None</span></code> if the\nstring does not match the pattern; note that this is different from a\nzero-length match.</p>", 
                        "", 
                        "<p><code>re.fullmatch(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>string</em>,, <em>flags=0</em></em></code></p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.4.</span></p>\n</div>", 
                        "reverse", 
                        "<code>fullmatch()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "I|aaTD`Hsh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.split(<em>pattern</em>,, <em>string</em>,, <em>maxsplit=0</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Split <em>string</em> by the occurrences of <em>pattern</em>.  If capturing parentheses are\nused in <em>pattern</em>, then the text of all groups in the pattern are also returned\nas part of the resulting list. If <em>max<strike>split</strike></em> is nonzero, at most <em>max<strike>split</strike></em>\n<strike>split</strike>s occur, and the remainder of the string is returned as the final element\nof the list.</p>", 
                        "", 
                        "<p><code>re.split(<em>pattern</em>,, <em>string</em>,, <em>maxsplit=0</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>string</em>,, <em>maxsplit=0</em>,, <em>flags=0</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'\\W+'</span><span class=\"p\">,</span> <span class=\"s1\">'Words, words, words.'</span><span class=\"p\">)</span>\n<span class=\"go\">['Words', 'words', 'words', '']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'(\\W+)'</span><span class=\"p\">,</span> <span class=\"s1\">'Words, words, words.'</span><span class=\"p\">)</span>\n<span class=\"go\">['Words', ', ', 'words', ', ', 'words', '.', '']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'\\W+'</span><span class=\"p\">,</span> <span class=\"s1\">'Words, words, words.'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"go\">['Words', 'words, words.']</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'[a-f]+'</span><span class=\"p\">,</span> <span class=\"s1\">'0a3B9'</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">IGNORECASE</span><span class=\"p\">)</span>\n<span class=\"go\">['0', '3', '9']</span>\n</pre></div>\n</div><p>If there are capturing groups in the separator and it matches at the start of\nthe string, the result will start with an empty string.  The same holds for\nthe end of the string:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'(\\W+)'</span><span class=\"p\">,</span> <span class=\"s1\">'...words, words...'</span><span class=\"p\">)</span>\n<span class=\"go\">['', '...', 'words', ', ', 'words', '...', '']</span>\n</pre></div>\n</div><p>That way, separator components are always found at the same relative\nindices within the result list.</p><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p><code class=\"xref py py-func docutils literal\"><span class=\"pre\">split()</span></code> doesn’t currently split a string on an empty pattern match.\nFor example:</p>\n<div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'x*'</span><span class=\"p\">,</span> <span class=\"s1\">'axbc'</span><span class=\"p\">)</span>\n<span class=\"go\">['a', 'bc']</span>\n</pre></div>\n</div>\n<p>Even though <code class=\"docutils literal\"><span class=\"pre\">'x*'</span></code> also matches 0 ‘x’ before ‘a’, between ‘b’ and ‘c’,\nand after ‘c’, currently these matches are ignored.  The correct behavior\n(i.e. splitting on empty matches too and returning <code class=\"docutils literal\"><span class=\"pre\">['',</span> <span class=\"pre\">'a',</span> <span class=\"pre\">'b',</span> <span class=\"pre\">'c',</span>\n<span class=\"pre\">'']</span></code>) will be implemented in future versions of Python, but since this\nis a backward incompatible change, a <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">FutureWarning</span></code> will be raised\nin the meanwhile.</p>\n<p>Patterns that can only match empty strings currently never split the\nstring.  Since this doesn’t match the expected behavior, a\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> will be raised starting from Python 3.5:</p>\n<div class=\"last highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s2\">\"^$\"</span><span class=\"p\">,</span> <span class=\"s2\">\"foo</span><span class=\"se\">\\n\\n</span><span class=\"s2\">bar</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">M</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">\"&lt;stdin&gt;\"</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n  <span class=\"c\">...</span>\n<span class=\"gr\">ValueError</span>: <span class=\"n\">split() requires a non-empty pattern match.</span>\n</pre></div>\n</div>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.1: </span>Added the optional flags argument.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.5: </span>Splitting on a pattern that could match an empty string now raises\na warning.  Patterns that can only match empty strings are now rejected.</p>\n</div>", 
                        "reverse", 
                        "<code>split()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "qehuOVP1t^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.findall(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Return all non-overlapping matches of <em>pattern</em> in <em>string</em>, as a list of\nstrings.  The <em>string</em> is scanned left-to-right, and matches are returned in\nthe order found.  If one or more groups are present in the pattern, return a\nlist of groups; this will be a list of tuples if the pattern has more than\none group.  Empty matches are included in the result unless they touch the\nbeginning of another match.</p>", 
                        "", 
                        "<p><code>re.findall(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>string</em>,, <em>flags=0</em></em></code></p>", 
                        "reverse", 
                        "<code>findall()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "Fuz&K>,YSx", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.finditer(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Return an <span class=\"xref std std-term\">iterator</span> yielding <span class=\"std std-ref\">match objects</span> over\nall non-overlapping matches for the RE <em>pattern</em> in <em>string</em>.  The <em>string</em>\nis scanned left-to-right, and matches are returned in the order found.  Empty\nmatches are included in the result unless they touch the beginning of another\nmatch.</p>", 
                        "", 
                        "<p><code>re.finditer(<em>pattern</em>,, <em>string</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>string</em>,, <em>flags=0</em></em></code></p>", 
                        "reverse", 
                        "<code>finditer()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "fHdrc{Y4lD", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.sub(<em>pattern</em>,, <em>repl</em>,, <em>string</em>,, <em>count=0</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Return the string obtained by replacing the leftmost non-overlapping occurrences\nof <em>pattern</em> in <em>string</em> by the replacement <em>repl</em>.  If the pattern isn’t found,\n<em>string</em> is returned unchanged.  <em>repl</em> can be a string or a function; if it is\na string, any backslash escapes in it are processed.  That is, <code class=\"docutils literal\"><span class=\"pre\">\\n</span></code> is\nconverted to a single newline character, <code class=\"docutils literal\"><span class=\"pre\">\\r</span></code> is converted to a carriage return, and\nso forth.  Unknown escapes such as <code class=\"docutils literal\"><span class=\"pre\">\\&amp;</span></code> are left alone.  Backreferences, such\nas <code class=\"docutils literal\"><span class=\"pre\">\\6</span></code>, are replaced with the <strike>sub</strike>string matched by group 6 in the pattern.\nFor example:</p>", 
                        "", 
                        "<p><code>re.sub(<em>pattern</em>,, <em>repl</em>,, <em>string</em>,, <em>count=0</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>repl</em>,, <em>string</em>,, <em>count=0</em>,, <em>flags=0</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'def\\s+([a-zA-Z_][a-zA-Z_0-9]*)\\s*\\(\\s*\\):'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>       <span class=\"sa\">r</span><span class=\"s1\">'static PyObject*\\npy_\\1(void)\\n{'</span><span class=\"p\">,</span>\n<span class=\"gp\">... </span>       <span class=\"s1\">'def myfunc():'</span><span class=\"p\">)</span>\n<span class=\"go\">'static PyObject*\\npy_myfunc(void)\\n{'</span>\n</pre></div>\n</div><p>If <em>repl</em> is a function, it is called for every non-overlapping occurrence of\n<em>pattern</em>.  The function takes a single match object argument, and returns the\nreplacement string.  For example:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">def</span> <span class=\"nf\">dashrepl</span><span class=\"p\">(</span><span class=\"n\">matchobj</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">if</span> <span class=\"n\">matchobj</span><span class=\"o\">.</span><span class=\"n\">group</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'-'</span><span class=\"p\">:</span> <span class=\"k\">return</span> <span class=\"s1\">' '</span>\n<span class=\"gp\">... </span>    <span class=\"k\">else</span><span class=\"p\">:</span> <span class=\"k\">return</span> <span class=\"s1\">'-'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">'-{1,2}'</span><span class=\"p\">,</span> <span class=\"n\">dashrepl</span><span class=\"p\">,</span> <span class=\"s1\">'pro----gram-files'</span><span class=\"p\">)</span>\n<span class=\"go\">'pro--gram files'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'\\sAND\\s'</span><span class=\"p\">,</span> <span class=\"s1\">' &amp; '</span><span class=\"p\">,</span> <span class=\"s1\">'Baked Beans And Spam'</span><span class=\"p\">,</span> <span class=\"n\">flags</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">IGNORECASE</span><span class=\"p\">)</span>\n<span class=\"go\">'Baked Beans &amp; Spam'</span>\n</pre></div>\n</div><p>The pattern may be a string or an RE object.</p><p>The optional argument <em>count</em> is the maximum number of pattern occurrences to be\nreplaced; <em>count</em> must be a non-negative integer.  If omitted or zero, all\noccurrences will be replaced. Empty matches for the pattern are replaced only\nwhen not adjacent to a previous match, so <code class=\"docutils literal\"><span class=\"pre\">sub('x*',</span> <span class=\"pre\">'-',</span> <span class=\"pre\">'abc')</span></code> returns\n<code class=\"docutils literal\"><span class=\"pre\">'-a-b-c-'</span></code>.</p><p>In string-type <em>repl</em> arguments, in addition to the character escapes and\nbackreferences described above,\n<code class=\"docutils literal\"><span class=\"pre\">\\g&lt;name&gt;</span></code> will use the substring matched by the group named <code class=\"docutils literal\"><span class=\"pre\">name</span></code>, as\ndefined by the <code class=\"docutils literal\"><span class=\"pre\">(?P&lt;name&gt;...)</span></code> syntax. <code class=\"docutils literal\"><span class=\"pre\">\\g&lt;number&gt;</span></code> uses the corresponding\ngroup number; <code class=\"docutils literal\"><span class=\"pre\">\\g&lt;2&gt;</span></code> is therefore equivalent to <code class=\"docutils literal\"><span class=\"pre\">\\2</span></code>, but isn’t ambiguous\nin a replacement such as <code class=\"docutils literal\"><span class=\"pre\">\\g&lt;2&gt;0</span></code>.  <code class=\"docutils literal\"><span class=\"pre\">\\20</span></code> would be interpreted as a\nreference to group 20, not a reference to group 2 followed by the literal\ncharacter <code class=\"docutils literal\"><span class=\"pre\">'0'</span></code>.  The backreference <code class=\"docutils literal\"><span class=\"pre\">\\g&lt;0&gt;</span></code> substitutes in the entire\nsubstring matched by the RE.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.1: </span>Added the optional flags argument.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.5: </span>Unmatched groups are replaced with an empty string.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Unknown escapes in <em>pattern</em> consisting of <code class=\"docutils literal\"><span class=\"pre\">'\\'</span></code> and an ASCII letter\nnow are errors.</p>\n</div><div class=\"deprecated-removed\">\n<p><span class=\"versionmodified\">Deprecated since version 3.5, will be removed in version 3.7: </span>Unknown escapes in <em>repl</em> consisting of <code class=\"docutils literal\"><span class=\"pre\">'\\'</span></code> and an ASCII letter now raise\na deprecation warning and will be forbidden in Python 3.7.</p>\n</div>", 
                        "reverse", 
                        "<code>sub()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "p;S}^gmGF/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.subn(<em>pattern</em>,, <em>repl</em>,, <em>string</em>,, <em>count=0</em>,, <em>flags=0</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Perform the same operation as <code class=\"xref py py-func docutils literal\"><span class=\"pre\">sub()</span></code>, but return a tuple <code class=\"docutils literal\"><span class=\"pre\">(new_string,</span>\n<span class=\"pre\">number_of_subs_made)</span></code>.</p>", 
                        "", 
                        "<p><code>re.subn(<em>pattern</em>,, <em>repl</em>,, <em>string</em>,, <em>count=0</em>,, <em>flags=0</em>)<em><em>pattern</em>,, <em>repl</em>,, <em>string</em>,, <em>count=0</em>,, <em>flags=0</em></em></code></p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.1: </span>Added the optional flags argument.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.5: </span>Unmatched groups are replaced with an empty string.</p>\n</div>", 
                        "reverse", 
                        "<code>subn()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "Eo+/Yo)Ie-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "re.escape(<em>pattern</em>)", 
                        "Python <code>re</code> prop", 
                        "<p>Escape all the characters in <em>pattern</em> except ASCII letters, numbers and <code class=\"docutils literal\"><span class=\"pre\">'_'</span></code>.\nThis is useful if you want to match an arbitrary literal string that may\nhave regular expression metacharacters in it.  For example:</p>", 
                        "", 
                        "<p><code>re.escape(<em>pattern</em>)<em><em>pattern</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"s1\">'python.exe'</span><span class=\"p\">))</span>\n<span class=\"go\">python\\.exe</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">legal_chars</span> <span class=\"o\">=</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">ascii_lowercase</span> <span class=\"o\">+</span> <span class=\"n\">string</span><span class=\"o\">.</span><span class=\"n\">digits</span> <span class=\"o\">+</span> <span class=\"s2\">\"!#$%&amp;'*+-.^_`|~:\"</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'[</span><span class=\"si\">%s</span><span class=\"s1\">]+'</span> <span class=\"o\">%</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">(</span><span class=\"n\">legal_chars</span><span class=\"p\">))</span>\n<span class=\"go\">[abcdefghijklmnopqrstuvwxyz0123456789\\!\\#\\$\\%\\&amp;\\'\\*\\+\\-\\.\\^_\\`\\|\\~\\:]+</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">operators</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'+'</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">,</span> <span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"s1\">'**'</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'|'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">escape</span><span class=\"p\">,</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">operators</span><span class=\"p\">,</span> <span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))))</span>\n<span class=\"go\">\\/|\\-|\\+|\\*\\*|\\*</span>\n</pre></div>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>The <code class=\"docutils literal\"><span class=\"pre\">'_'</span></code> character is no longer escaped.</p>\n</div>", 
                        "reverse", 
                        "<code>escape()</code>", 
                        "https://docs.python.org/3.6/library/re.html"
                    ], 
                    "flags": 0, 
                    "guid": "h}9Xi&:7<A", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.MINYEAR", 
                        "Python <code>datetime</code> prop", 
                        "<p>The smallest year number allowed in a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">date</span></code> or <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object.\n<code class=\"xref py py-const docutils literal\"><span class=\"pre\"><strike>MINYEAR</strike></span></code> is <code class=\"docutils literal\"><span class=\"pre\">1</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>MINYEAR</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "B~,3ev#<U^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.MAXYEAR", 
                        "Python <code>datetime</code> prop", 
                        "<p>The largest year number allowed in a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">date</span></code> or <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object.\n<code class=\"xref py py-const docutils literal\"><span class=\"pre\"><strike>MAXYEAR</strike></span></code> is <code class=\"docutils literal\"><span class=\"pre\">9999</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>MAXYEAR</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "y6|BVec1qH", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.date", 
                        "Python <code>datetime</code> prop", 
                        "<p>An idealized naive <strike>date</strike>, assuming the current Gregorian calendar always was, and\nalways will be, in effect. Attributes: <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">year</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">month</span></code>, and\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">day</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>date</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "bIv`UGG50_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.time", 
                        "Python <code>datetime</code> prop", 
                        "<p>An idealized <strike>time</strike>, independent of any particular day, assuming that every day\nhas exactly 24*60*60 seconds (there is no notion of “leap seconds” here).\nAttributes: <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">minute</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">second</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code>,\nand <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>time</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "vbK,4AAG/$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.datetime", 
                        "Python <code>datetime</code> prop", 
                        "<p>A combination of a date and a time. Attributes: <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">year</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">month</span></code>,\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">day</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">minute</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">second</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code>,\nand <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>datetime</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "zn[wiE*J-:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timedelta", 
                        "Python <code>datetime</code> prop", 
                        "<p>A duration expressing the difference between two <code class=\"xref py py-class docutils literal\"><span class=\"pre\">date</span></code>, <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code>,\nor <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instances to microsecond resolution.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>timedelta</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "J:|o,=7t?g", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.tzinfo", 
                        "Python <code>datetime</code> prop", 
                        "<p>An abstract base class for time zone information objects.  These are used by the\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> and <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> classes to provide a customizable notion of\ntime adjustment (for example, to account for time zone and/or daylight saving\ntime).</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>tzinfo</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "A,oKrV]ku5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timezone", 
                        "Python <code>datetime</code> prop", 
                        "<p>A class that implements the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> abstract base class as a\nfixed offset from the UTC.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.2.</span></p>\n</div>", 
                        "reverse", 
                        "<code>timezone</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "dJ~lbMWQ]$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timedelta(<em>days=0</em>,, <em>seconds=0</em>,, <em>microseconds=0</em>,, <em>milliseconds=0</em>,, <em>minutes=0</em>,, <em>hours=0</em>,, <em>weeks=0</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>All arguments are optional and default to <code class=\"docutils literal\"><span class=\"pre\">0</span></code>.  Arguments may be integers\nor floats, and may be positive or negative.</p>", 
                        "", 
                        "<p>class <code>datetime.timedelta(<em>days=0</em>,, <em>seconds=0</em>,, <em>microseconds=0</em>,, <em>milliseconds=0</em>,, <em>minutes=0</em>,, <em>hours=0</em>,, <em>weeks=0</em>)<em><em>days=0</em>,, <em>seconds=0</em>,, <em>microseconds=0</em>,, <em>milliseconds=0</em>,, <em>minutes=0</em>,, <em>hours=0</em>,, <em>weeks=0</em></em></code></p><p>Only <em>days</em>, <em>seconds</em> and <em>microseconds</em> are stored internally.  Arguments are\nconverted to those units:</p><ul class=\"simple\">\n<li>A millisecond is converted to 1000 microseconds.</li>\n<li>A minute is converted to 60 seconds.</li>\n<li>An hour is converted to 3600 seconds.</li>\n<li>A week is converted to 7 days.</li>\n</ul><p>and days, seconds and microseconds are then normalized so that the\nrepresentation is unique, with</p><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">microseconds</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">1000000</span></code></li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">seconds</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">3600*24</span></code> (the number of seconds in one day)</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">-999999999</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">days</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">999999999</span></code></li>\n</ul><p>If any argument is a float and there are fractional microseconds,\nthe fractional microseconds left over from all arguments are\ncombined and their sum is rounded to the nearest microsecond using\nround-half-to-even tiebreaker.  If no argument is a float, the\nconversion and normalization processes are exact (no information is\nlost).</p><p>If the normalized value of days lies outside the indicated range,\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> is raised.</p><p>Note that normalization of negative values may be surprising at first. For\nexample,</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"k\">import</span> <span class=\"n\">timedelta</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">microseconds</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">days</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">seconds</span><span class=\"p\">,</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">microseconds</span><span class=\"p\">)</span>\n<span class=\"go\">(-1, 86399, 999999)</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>timedelta()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "qn}SvOHX]@", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timedelta.min", 
                        "Python <code>timedelta</code> prop", 
                        "<p>The most negative <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object, <code class=\"docutils literal\"><span class=\"pre\">timedelta(-999999999)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>min</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "Ea<rffmIi%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timedelta.max", 
                        "Python <code>timedelta</code> prop", 
                        "<p>The most positive <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object, <code class=\"docutils literal\"><span class=\"pre\">timedelta(days=999999999,</span>\n<span class=\"pre\">hours=23,</span> <span class=\"pre\">minutes=59,</span> <span class=\"pre\">seconds=59,</span> <span class=\"pre\">microseconds=999999)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>max</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "K8>1J|7Ta$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timedelta.resolution", 
                        "Python <code>timedelta</code> prop", 
                        "<p>The smallest possible difference between non-equal <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> objects,\n<code class=\"docutils literal\"><span class=\"pre\">timedelta(microseconds=1)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>resolution</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "d>MEh8gzYr", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timedelta.total_seconds()", 
                        "Python <code>timedelta</code> prop", 
                        "<p>Return the total number of seconds contained in the duration. Equivalent to\n<code class=\"docutils literal\"><span class=\"pre\">td</span> <span class=\"pre\">/</span> <span class=\"pre\">timedelta(seconds=1)</span></code>.</p>", 
                        "", 
                        "<p><code>timedelta.total_seconds()<em>()</em></code></p><p>Note that for very large time intervals (greater than 270 years on\nmost platforms) this method will lose microsecond accuracy.</p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.2.</span></p>\n</div>", 
                        "reverse", 
                        "<code>total_seconds()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "F^]_sr/-lW", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.today()", 
                        "Python <code>date</code> prop", 
                        "<p>Return the current local date.  This is equivalent to\n<code class=\"docutils literal\"><span class=\"pre\">date.fromtimestamp(time.time())</span></code>.</p>", 
                        "", 
                        "<p>classmethod <code>date.today()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>today()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "nOL%@]Xdva", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.fromtimestamp(<em>timestamp</em>)", 
                        "Python <code>date</code> prop", 
                        "<p>Return the local date corresponding to the POSIX timestamp, such as is returned\nby <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.time()</span></code>.  This may raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code>, if the timestamp is out\nof the range of values supported by the platform C <code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> function,\nand <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code> on <code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> failure.\nIt’s common for this to be restricted to years from 1970 through 2038.  Note\nthat on non-POSIX systems that include leap seconds in their notion of a\ntimestamp, leap seconds are ignored by <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>fromtimestamp</strike>()</span></code>.</p>", 
                        "", 
                        "<p>classmethod <code>date.fromtimestamp(<em>timestamp</em>)<em><em>timestamp</em></em></code></p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> instead of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> if the timestamp\nis out of the range of values supported by the platform C\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> function. Raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code> instead of\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> on <code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> failure.</p>\n</div>", 
                        "reverse", 
                        "<code>fromtimestamp()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "G4!O%&BS/e", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.fromordinal(<em>ordinal</em>)", 
                        "Python <code>date</code> prop", 
                        "<p>Return the date corresponding to the proleptic Gregorian ordinal, where January\n1 of year 1 has ordinal 1.  <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> is raised unless <code class=\"docutils literal\"><span class=\"pre\">1</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">ordinal</span> <span class=\"pre\">&lt;=</span>\n<span class=\"pre\">date.max.toordinal()</span></code>. For any date <em>d</em>, <code class=\"docutils literal\"><span class=\"pre\">date.<strike>fromordinal</strike>(d.toordinal())</span> <span class=\"pre\">==</span>\n<span class=\"pre\">d</span></code>.</p>", 
                        "", 
                        "<p>classmethod <code>date.fromordinal(<em>ordinal</em>)<em><em>ordinal</em></em></code></p>", 
                        "reverse", 
                        "<code>fromordinal()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "LGmX~5w^{D", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.min", 
                        "Python <code>date</code> prop", 
                        "<p>The earliest representable date, <code class=\"docutils literal\"><span class=\"pre\">date(MINYEAR,</span> <span class=\"pre\">1,</span> <span class=\"pre\">1)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>min</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "iYw@~c|S2N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.max", 
                        "Python <code>date</code> prop", 
                        "<p>The latest representable date, <code class=\"docutils literal\"><span class=\"pre\">date(MAXYEAR,</span> <span class=\"pre\">12,</span> <span class=\"pre\">31)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>max</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "D4ZN4WI3W7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.resolution", 
                        "Python <code>date</code> prop", 
                        "<p>The smallest possible difference between non-equal date objects,\n<code class=\"docutils literal\"><span class=\"pre\">timedelta(days=1)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>resolution</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "AW^DI)64?v", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.year", 
                        "Python <code>date</code> prop", 
                        "<p>Between <code class=\"xref py py-const docutils literal\"><span class=\"pre\">MINYEAR</span></code> and <code class=\"xref py py-const docutils literal\"><span class=\"pre\">MAXYEAR</span></code> inclusive.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>year</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "Q$1B{MeSsF", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.replace(<em>year=self.year</em>,, <em>month=self.month</em>,, <em>day=self.day</em>)", 
                        "Python <code>date</code> prop", 
                        "<p>Return a date with the same value, except for those parameters given new\nvalues by whichever keyword arguments are specified.  For example, if <code class=\"docutils literal\"><span class=\"pre\">d</span> <span class=\"pre\">==</span>\n<span class=\"pre\">date(2002,</span> <span class=\"pre\">12,</span> <span class=\"pre\">31)</span></code>, then <code class=\"docutils literal\"><span class=\"pre\">d.<strike>replace</strike>(day=26)</span> <span class=\"pre\">==</span> <span class=\"pre\">date(2002,</span> <span class=\"pre\">12,</span> <span class=\"pre\">26)</span></code>.</p>", 
                        "", 
                        "<p><code>date.replace(<em>year=self.year</em>,, <em>month=self.month</em>,, <em>day=self.day</em>)<em><em>year=self.year</em>,, <em>month=self.month</em>,, <em>day=self.day</em></em></code></p>", 
                        "reverse", 
                        "<code>replace()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "rTK3O+WQOZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.timetuple()", 
                        "Python <code>date</code> prop", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time.struct_time</span></code> such as returned by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.localtime()</span></code>.\nThe hours, minutes and seconds are 0, and the DST flag is -1. <code class=\"docutils literal\"><span class=\"pre\">d.<strike>timetuple</strike>()</span></code>\nis equivalent to <code class=\"docutils literal\"><span class=\"pre\">time.struct_time((d.year,</span> <span class=\"pre\">d.month,</span> <span class=\"pre\">d.day,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span>\n<span class=\"pre\">d.weekday(),</span> <span class=\"pre\">yday,</span> <span class=\"pre\">-1))</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">yday</span> <span class=\"pre\">=</span> <span class=\"pre\">d.toordinal()</span> <span class=\"pre\">-</span> <span class=\"pre\">date(d.year,</span> <span class=\"pre\">1,</span>\n<span class=\"pre\">1).toordinal()</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is the day number within the current year starting with\n<code class=\"docutils literal\"><span class=\"pre\">1</span></code> for January 1st.</p>", 
                        "", 
                        "<p><code>date.timetuple()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>timetuple()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "B76Fjz@K]~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.toordinal()", 
                        "Python <code>date</code> prop", 
                        "<p>Return the proleptic Gregorian ordinal of the date, where January 1 of year 1\nhas ordinal 1.  For any <code class=\"xref py py-class docutils literal\"><span class=\"pre\">date</span></code> object <em>d</em>,\n<code class=\"docutils literal\"><span class=\"pre\">date.fromordinal(d.<strike>toordinal</strike>())</span> <span class=\"pre\">==</span> <span class=\"pre\">d</span></code>.</p>", 
                        "", 
                        "<p><code>date.toordinal()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>toordinal()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "A{y{76Gv-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.weekday()", 
                        "Python <code>date</code> prop", 
                        "<p>Return the day of the week as an integer, where Monday is 0 and Sunday is 6.\nFor example, <code class=\"docutils literal\"><span class=\"pre\">date(2002,</span> <span class=\"pre\">12,</span> <span class=\"pre\">4).<strike>weekday</strike>()</span> <span class=\"pre\">==</span> <span class=\"pre\">2</span></code>, a Wednesday. See also\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">iso<strike>weekday</strike>()</span></code>.</p>", 
                        "", 
                        "<p><code>date.weekday()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>weekday()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "z@rI}xYnQ1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.isoweekday()", 
                        "Python <code>date</code> prop", 
                        "<p>Return the day of the week as an integer, where Monday is 1 and Sunday is 7.\nFor example, <code class=\"docutils literal\"><span class=\"pre\">date(2002,</span> <span class=\"pre\">12,</span> <span class=\"pre\">4).<strike>isoweekday</strike>()</span> <span class=\"pre\">==</span> <span class=\"pre\">3</span></code>, a Wednesday. See also\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">weekday()</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">isocalendar()</span></code>.</p>", 
                        "", 
                        "<p><code>date.isoweekday()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>isoweekday()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "GpgdKa!a0&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.isoformat()", 
                        "Python <code>date</code> prop", 
                        "<p>Return a string representing the date in ISO 8601 format, ‘YYYY-MM-DD’.  For\nexample, <code class=\"docutils literal\"><span class=\"pre\">date(2002,</span> <span class=\"pre\">12,</span> <span class=\"pre\">4).<strike>isoformat</strike>()</span> <span class=\"pre\">==</span> <span class=\"pre\">'2002-12-04'</span></code>.</p>", 
                        "", 
                        "<p><code>date.isoformat()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>isoformat()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "y[kzBOUbC[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.__str__()", 
                        "Python <code>date</code> prop", 
                        "<p>For a date <em>d</em>, <code class=\"docutils literal\"><span class=\"pre\">str(d)</span></code> is equivalent to <code class=\"docutils literal\"><span class=\"pre\">d.isoformat()</span></code>.</p>", 
                        "", 
                        "<p><code>date.__str__()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>__str__()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "oyDPrEp@_6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.ctime()", 
                        "Python <code>date</code> prop", 
                        "<p>Return a string representing the date, for example <code class=\"docutils literal\"><span class=\"pre\">date(2002,</span> <span class=\"pre\">12,</span>\n<span class=\"pre\">4).<strike>ctime</strike>()</span> <span class=\"pre\">==</span> <span class=\"pre\">'Wed</span> <span class=\"pre\">Dec</span> <span class=\"pre\">4</span> <span class=\"pre\">00:00:00</span> <span class=\"pre\">2002'</span></code>. <code class=\"docutils literal\"><span class=\"pre\">d.<strike>ctime</strike>()</span></code> is equivalent to\n<code class=\"docutils literal\"><span class=\"pre\">time.<strike>ctime</strike>(time.mktime(d.timetuple()))</span></code> on platforms where the native C\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\"><strike>ctime</strike>()</span></code> function (which <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.<strike>ctime</strike>()</span></code> invokes, but which\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">date.<strike>ctime</strike>()</span></code> does not invoke) conforms to the C standard.</p>", 
                        "", 
                        "<p><code>date.ctime()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>ctime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "pfd|a=uoFC", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.strftime(<em>format</em>)", 
                        "Python <code>date</code> prop", 
                        "<p>Return a string representing the date, controlled by an explicit format string.\nFormat codes referring to hours, minutes or seconds will see 0 values. For a\ncomplete list of formatting directives, see\n<span class=\"std std-ref\"><strike>strftime</strike>() and strptime() Behavior</span>.</p>", 
                        "", 
                        "<p><code>date.strftime(<em>format</em>)<em><em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>strftime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "O7!d~S<}p*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "date.__format__(<em>format</em>)", 
                        "Python <code>date</code> prop", 
                        "<p>Same as <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">date.strftime()</span></code>. This makes it possible to specify a format\nstring for a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">date</span></code> object in <span class=\"std std-ref\">formatted string\nliterals</span> and when using <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></code>. For a\ncomplete list of formatting directives, see\n<span class=\"std std-ref\">strftime() and strptime() Behavior</span>.</p>", 
                        "", 
                        "<p><code>date.__format__(<em>format</em>)<em><em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>__format__()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "uey]5JZhz+", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.datetime(<em>year</em>,, <em>month</em>,, <em>day</em>,, <em>hour=0</em>,, <em>minute=0</em>,, <em>second=0</em>,, <em>microsecond=0</em>,, <em>tzinfo=None</em>,, <em>*</em>,, <em>fold=0</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>The year, month and day arguments are required.  <em>tzinfo</em> may be <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, or an\ninstance of a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass.  The remaining arguments may be integers,\nin the following ranges:</p>", 
                        "", 
                        "<p>class <code>datetime.datetime(<em>year</em>,, <em>month</em>,, <em>day</em>,, <em>hour=0</em>,, <em>minute=0</em>,, <em>second=0</em>,, <em>microsecond=0</em>,, <em>tzinfo=None</em>,, <em>*</em>,, <em>fold=0</em>)<em><em>year</em>,, <em>month</em>,, <em>day</em>,, <em>hour=0</em>,, <em>minute=0</em>,, <em>second=0</em>,, <em>microsecond=0</em>,, <em>tzinfo=None</em>,, <em>*</em>,, <em>fold=0</em></em></code></p><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">MINYEAR</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">year</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">MAXYEAR</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">1</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">month</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">12</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">1</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">day</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">number</span> <span class=\"pre\">of</span> <span class=\"pre\">days</span> <span class=\"pre\">in</span> <span class=\"pre\">the</span> <span class=\"pre\">given</span> <span class=\"pre\">month</span> <span class=\"pre\">and</span> <span class=\"pre\">year</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">hour</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">24</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">minute</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">60</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">second</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">60</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">microsecond</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">1000000</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">fold</span> <span class=\"pre\">in</span> <span class=\"pre\">[0,</span> <span class=\"pre\">1]</span></code>.</li>\n</ul><p>If an argument outside those ranges is given, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> is raised.</p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6: </span>Added the <code class=\"docutils literal\"><span class=\"pre\">fold</span></code> argument.</p>\n</div>", 
                        "reverse", 
                        "<code>datetime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "N,TN;i!3Km", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.today()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the current local datetime, with <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> <code class=\"docutils literal\"><span class=\"pre\">None</span></code>. This is\nequivalent to <code class=\"docutils literal\"><span class=\"pre\">datetime.fromtimestamp(time.time())</span></code>. See also <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">now()</span></code>,\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromtimestamp()</span></code>.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.today()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>today()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "z%2&DD1j%u", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.now(<em>tz=None</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the current local date and time.  If optional argument <em>tz</em> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>\nor not specified, this is like <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">today()</span></code>, but, if possible, supplies more\nprecision than can be gotten from going through a <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.time()</span></code> timestamp\n(for example, this may be possible on platforms supplying the C\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\">gettimeofday()</span></code> function).</p>", 
                        "", 
                        "<p>classmethod <code>datetime.now(<em>tz=None</em>)<em><em>tz=None</em></em></code></p><p>If <em>tz</em> is not <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, it must be an instance of a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass, and the\ncurrent date and time are converted to <em>tz</em>’s time zone.  In this case the\nresult is equivalent to <code class=\"docutils literal\"><span class=\"pre\">tz.fromutc(datetime.utcnow().replace(tzinfo=tz))</span></code>.\nSee also <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">today()</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcnow()</span></code>.</p>", 
                        "reverse", 
                        "<code>now()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "I%0D@FO|+y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.utcnow()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the current UTC date and time, with <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> <code class=\"docutils literal\"><span class=\"pre\">None</span></code>. This is like\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">now()</span></code>, but returns the current UTC date and time, as a naive\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object.  An aware current UTC datetime can be obtained by\ncalling <code class=\"docutils literal\"><span class=\"pre\">datetime.now(timezone.utc)</span></code>.  See also <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">now()</span></code>.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.utcnow()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>utcnow()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "u/bGQV=uuq", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.fromtimestamp(<em>timestamp</em>,, <em>tz=None</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the local date and time corresponding to the POSIX timestamp, such as is\nreturned by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.time()</span></code>. If optional argument <em>tz</em> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code> or not\nspecified, the timestamp is converted to the platform’s local date and time, and\nthe returned <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object is naive.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.fromtimestamp(<em>timestamp</em>,, <em>tz=None</em>)<em><em>timestamp</em>,, <em>tz=None</em></em></code></p><p>If <em>tz</em> is not <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, it must be an instance of a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass, and the\ntimestamp is converted to <em>tz</em>’s time zone.  In this case the result is\nequivalent to\n<code class=\"docutils literal\"><span class=\"pre\">tz.fromutc(datetime.utcfromtimestamp(timestamp).replace(tzinfo=tz))</span></code>.</p><p><code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromtimestamp()</span></code> may raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code>, if the timestamp is out of\nthe range of values supported by the platform C <code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> or\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> functions, and <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code> on <code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> or\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> failure.\nIt’s common for this to be restricted to years in\n1970 through 2038. Note that on non-POSIX systems that include leap seconds in\ntheir notion of a timestamp, leap seconds are ignored by <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromtimestamp()</span></code>,\nand then it’s possible to have two timestamps differing by a second that yield\nidentical <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> objects. See also <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcfromtimestamp()</span></code>.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> instead of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> if the timestamp\nis out of the range of values supported by the platform C\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> or <code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> functions. Raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code>\ninstead of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> on <code class=\"xref c c-func docutils literal\"><span class=\"pre\">localtime()</span></code> or <code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code>\nfailure.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span><code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromtimestamp()</span></code> may return instances with <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">fold</span></code> set to 1.</p>\n</div>", 
                        "reverse", 
                        "<code>fromtimestamp()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "p.?ilkrjvU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.utcfromtimestamp(<em>timestamp</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the UTC <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> corresponding to the POSIX timestamp, with\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> <code class=\"docutils literal\"><span class=\"pre\">None</span></code>. This may raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code>, if the timestamp is\nout of the range of values supported by the platform C <code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> function,\nand <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code> on <code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> failure.\nIt’s common for this to be restricted to years in 1970 through 2038.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.utcfromtimestamp(<em>timestamp</em>)<em><em>timestamp</em></em></code></p><p>To get an aware <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object, call <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromtimestamp()</span></code>:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">fromtimestamp</span><span class=\"p\">(</span><span class=\"n\">timestamp</span><span class=\"p\">,</span> <span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>On the POSIX compliant platforms, it is equivalent to the following\nexpression:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"n\">timestamp</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>except the latter formula always supports the full years range: between\n<code class=\"xref py py-const docutils literal\"><span class=\"pre\">MINYEAR</span></code> and <code class=\"xref py py-const docutils literal\"><span class=\"pre\">MAXYEAR</span></code> inclusive.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span>Raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> instead of <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> if the timestamp\nis out of the range of values supported by the platform C\n<code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> function. Raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OSError</span></code> instead of\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> on <code class=\"xref c c-func docutils literal\"><span class=\"pre\">gmtime()</span></code> failure.</p>\n</div>", 
                        "reverse", 
                        "<code>utcfromtimestamp()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "q$|}6hs[-]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.fromordinal(<em>ordinal</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> corresponding to the proleptic Gregorian ordinal,\nwhere January 1 of year 1 has ordinal 1. <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> is raised unless <code class=\"docutils literal\"><span class=\"pre\">1</span>\n<span class=\"pre\">&lt;=</span> <span class=\"pre\">ordinal</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">datetime.max.toordinal()</span></code>.  The hour, minute, second and\nmicrosecond of the result are all 0, and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.fromordinal(<em>ordinal</em>)<em><em>ordinal</em></em></code></p>", 
                        "reverse", 
                        "<code>fromordinal()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "t:7v)(~fIV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.combine(<em>date</em>,, <em>time</em>,, <em>tzinfo=self.tzinfo</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a new <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object whose date components are equal to the\ngiven <code class=\"xref py py-class docutils literal\"><span class=\"pre\">date</span></code> object’s, and whose time components\nare equal to the given <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> object’s.  If the <em>tzinfo</em>\nargument is provided, its value is used to set the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> attribute\nof the result, otherwise the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> attribute of the <em>time</em> argument\nis used.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.combine(<em>date</em>,, <em>time</em>,, <em>tzinfo=self.tzinfo</em>)<em><em>date</em>,, <em>time</em>,, <em>tzinfo=self.tzinfo</em></em></code></p><p>For any <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object <em>d</em>,\n<code class=\"docutils literal\"><span class=\"pre\">d</span> <span class=\"pre\">==</span> <span class=\"pre\">datetime.combine(d.date(),</span> <span class=\"pre\">d.time(),</span> <span class=\"pre\">d.tzinfo)</span></code>.  If date is a\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object, its time components and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> attributes\nare ignored.</p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Added the <em>tzinfo</em> argument.</p>\n</div>", 
                        "reverse", 
                        "<code>combine()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "h:+*m&O4en", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.strptime(<em>date_string</em>,, <em>format</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> corresponding to <em>date_string</em>, parsed according to\n<em>format</em>.  This is equivalent to <code class=\"docutils literal\"><span class=\"pre\">datetime(*(time.<strike>strptime</strike>(date_string,</span>\n<span class=\"pre\">format)[0:6]))</span></code>. <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> is raised if the date_string and format\ncan’t be parsed by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.<strike>strptime</strike>()</span></code> or if it returns a value which isn’t a\ntime tuple. For a complete list of formatting directives, see\n<span class=\"std std-ref\">strftime() and <strike>strptime</strike>() Behavior</span>.</p>", 
                        "", 
                        "<p>classmethod <code>datetime.strptime(<em>date_string</em>,, <em>format</em>)<em><em>date_string</em>,, <em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>strptime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "M>?McRo%1}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.min", 
                        "Python <code>datetime</code> prop", 
                        "<p>The earliest representable <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code>, <code class=\"docutils literal\"><span class=\"pre\">datetime(MINYEAR,</span> <span class=\"pre\">1,</span> <span class=\"pre\">1,</span>\n<span class=\"pre\">tzinfo=None)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>min</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "FWB]}yWUs1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.max", 
                        "Python <code>datetime</code> prop", 
                        "<p>The latest representable <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code>, <code class=\"docutils literal\"><span class=\"pre\">datetime(MAXYEAR,</span> <span class=\"pre\">12,</span> <span class=\"pre\">31,</span> <span class=\"pre\">23,</span> <span class=\"pre\">59,</span>\n<span class=\"pre\">59,</span> <span class=\"pre\">999999,</span> <span class=\"pre\">tzinfo=None)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>max</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "zoK*c21F.x", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.resolution", 
                        "Python <code>datetime</code> prop", 
                        "<p>The smallest possible difference between non-equal <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> objects,\n<code class=\"docutils literal\"><span class=\"pre\">timedelta(microseconds=1)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>resolution</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "j?wZ$a!2]J", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.year", 
                        "Python <code>datetime</code> prop", 
                        "<p>Between <code class=\"xref py py-const docutils literal\"><span class=\"pre\">MINYEAR</span></code> and <code class=\"xref py py-const docutils literal\"><span class=\"pre\">MAXYEAR</span></code> inclusive.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>year</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "mHDy%abW-H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.hour", 
                        "Python <code>datetime</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(24)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>hour</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "i6E9_%M|*Z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.minute", 
                        "Python <code>datetime</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(60)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>minute</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "v&@8q+.H3Z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.second", 
                        "Python <code>datetime</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(60)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>second</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "b0YIypR`nO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.microsecond", 
                        "Python <code>datetime</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(1000000)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>microsecond</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "H;E;l;z;t1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.fold", 
                        "Python <code>datetime</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">[0,</span> <span class=\"pre\">1]</span></code>.  Used to disambiguate wall times during a repeated interval.  (A\nrepeated interval occurs when clocks are rolled back at the end of daylight saving\ntime or when the UTC offset for the current zone is decreased for political reasons.)\nThe value 0 (1) represents the earlier (later) of the two moments with the same wall\ntime representation.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6.</span></p>\n</div>", 
                        "reverse", 
                        "<code>fold</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "ktYr&(hC46", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.date()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>date</strike></span></code> object with same year, month and day.</p>", 
                        "", 
                        "<p><code>datetime.date()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>date()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "C>}*za3$!T", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.time()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return <code class=\"xref py py-class docutils literal\"><span class=\"pre\"><strike>time</strike></span></code> object with same hour, minute, second, microsecond and fold.\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.  See also method <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>time</strike>tz()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.time()<em>()</em></code></p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>The fold value is copied to the returned <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> object.</p>\n</div>", 
                        "reverse", 
                        "<code>time()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "p?43yw-Rma", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timetz()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> object with same hour, minute, second, microsecond, fold, and\ntzinfo attributes.  See also method <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">time()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.timetz()<em>()</em></code></p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>The fold value is copied to the returned <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> object.</p>\n</div>", 
                        "reverse", 
                        "<code>timetz()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "g%*TV#2g.o", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.replace(<em>year=self.year</em>,, <em>month=self.month</em>,, <em>day=self.day</em>,, <em>hour=self.hour</em>,, <em>minute=self.minute</em>,, <em>second=self.second</em>,, <em>microsecond=self.microsecond</em>,, <em>tzinfo=self.tzinfo</em>,, <em>* fold=0</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a datetime with the same attributes, except for those attributes given\nnew values by whichever keyword arguments are specified.  Note that\n<code class=\"docutils literal\"><span class=\"pre\">tzinfo=None</span></code> can be specified to create a naive datetime from an aware\ndatetime with no conversion of date and time data.</p>", 
                        "", 
                        "<p><code>datetime.replace(<em>year=self.year</em>,, <em>month=self.month</em>,, <em>day=self.day</em>,, <em>hour=self.hour</em>,, <em>minute=self.minute</em>,, <em>second=self.second</em>,, <em>microsecond=self.microsecond</em>,, <em>tzinfo=self.tzinfo</em>,, <em>* fold=0</em>)<em><em>year=self.year</em>,, <em>month=self.month</em>,, <em>day=self.day</em>,, <em>hour=self.hour</em>,, <em>minute=self.minute</em>,, <em>second=self.second</em>,, <em>microsecond=self.microsecond</em>,, <em>tzinfo=self.tzinfo</em>,, <em>* fold=0</em></em></code></p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6: </span>Added the <code class=\"docutils literal\"><span class=\"pre\">fold</span></code> argument.</p>\n</div>", 
                        "reverse", 
                        "<code>replace()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "P!]jN>nGyr", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.astimezone(<em>tz=None</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object with new <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> attribute <em>tz</em>,\nadjusting the date and time data so the result is the same UTC time as\n<em>self</em>, but in <em>tz</em>’s local time.</p>", 
                        "", 
                        "<p><code>datetime.astimezone(<em>tz=None</em>)<em><em>tz=None</em></em></code></p><p>If provided, <em>tz</em> must be an instance of a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass, and its\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code> and <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> methods must not return <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.  If <em>self</em>\nis naive (<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo</span> <span class=\"pre\">is</span> <span class=\"pre\">None</span></code>), it is presumed to represent time in the\nsystem timezone.</p><p>If called without arguments (or with <code class=\"docutils literal\"><span class=\"pre\">tz=None</span></code>) the system local\ntimezone is assumed for the target timezone.  The <code class=\"docutils literal\"><span class=\"pre\">.tzinfo</span></code> attribute of the converted\ndatetime instance will be set to an instance of <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timezone</span></code>\nwith the zone name and offset obtained from the OS.</p><p>If <code class=\"docutils literal\"><span class=\"pre\">self.tzinfo</span></code> is <em>tz</em>, <code class=\"docutils literal\"><span class=\"pre\">self.astimezone(tz)</span></code> is equal to <em>self</em>:  no\nadjustment of date or time data is performed. Else the result is local\ntime in the timezone <em>tz</em>, representing the same UTC time as <em>self</em>:  after\n<code class=\"docutils literal\"><span class=\"pre\">astz</span> <span class=\"pre\">=</span> <span class=\"pre\">dt.astimezone(tz)</span></code>, <code class=\"docutils literal\"><span class=\"pre\">astz</span> <span class=\"pre\">-</span> <span class=\"pre\">astz.utcoffset()</span></code> will have\nthe same date and time data as <code class=\"docutils literal\"><span class=\"pre\">dt</span> <span class=\"pre\">-</span> <span class=\"pre\">dt.utcoffset()</span></code>.</p><p>If you merely want to attach a time zone object <em>tz</em> to a datetime <em>dt</em> without\nadjustment of date and time data, use <code class=\"docutils literal\"><span class=\"pre\">dt.replace(tzinfo=tz)</span></code>.  If you\nmerely want to remove the time zone object from an aware datetime <em>dt</em> without\nconversion of date and time data, use <code class=\"docutils literal\"><span class=\"pre\">dt.replace(tzinfo=None)</span></code>.</p><p>Note that the default <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">tzinfo.fromutc()</span></code> method can be overridden in a\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass to affect the result returned by <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">astimezone()</span></code>.\nIgnoring error cases, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">astimezone()</span></code> acts like:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">astimezone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">tz</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">tzinfo</span> <span class=\"ow\">is</span> <span class=\"n\">tz</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span>\n    <span class=\"c1\"># Convert self to UTC, and attach the new time zone object.</span>\n    <span class=\"n\">utc</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"bp\">self</span> <span class=\"o\">-</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">utcoffset</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">tz</span><span class=\"p\">)</span>\n    <span class=\"c1\"># Convert from UTC to tz's local time.</span>\n    <span class=\"k\">return</span> <span class=\"n\">tz</span><span class=\"o\">.</span><span class=\"n\">fromutc</span><span class=\"p\">(</span><span class=\"n\">utc</span><span class=\"p\">)</span>\n</pre></div>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.3: </span><em>tz</em> now can be omitted.</p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>The <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">astimezone()</span></code> method can now be called on naive instances that\nare presumed to represent system local time.</p>\n</div>", 
                        "reverse", 
                        "<code>astimezone()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "C[z49%4=-G", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.utcoffset()", 
                        "Python <code>datetime</code> prop", 
                        "<p>If <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, else returns\n<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo.<strike>utcoffset</strike>(self)</span></code>, and raises an exception if the latter doesn’t\nreturn <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, or a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object representing a whole number of\nminutes with magnitude less than one day.</p>", 
                        "", 
                        "<p><code>datetime.utcoffset()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>utcoffset()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "hr.EY^qQt/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.dst()", 
                        "Python <code>datetime</code> prop", 
                        "<p>If <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, else returns\n<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo.<strike>dst</strike>(self)</span></code>, and raises an exception if the latter doesn’t return\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>, or a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object representing a whole number of minutes\nwith magnitude less than one day.</p>", 
                        "", 
                        "<p><code>datetime.dst()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>dst()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "QAN)6rEUtD", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.tzname()", 
                        "Python <code>datetime</code> prop", 
                        "<p>If <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, else returns\n<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo.<strike>tzname</strike>(self)</span></code>, raises an exception if the latter doesn’t return\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code> or a string object,</p>", 
                        "", 
                        "<p><code>datetime.tzname()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>tzname()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "CYV@7W9^Wh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timetuple()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time.struct_time</span></code> such as returned by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.localtime()</span></code>.\n<code class=\"docutils literal\"><span class=\"pre\">d.<strike>timetuple</strike>()</span></code> is equivalent to <code class=\"docutils literal\"><span class=\"pre\">time.struct_time((d.year,</span> <span class=\"pre\">d.month,</span> <span class=\"pre\">d.day,</span>\n<span class=\"pre\">d.hour,</span> <span class=\"pre\">d.minute,</span> <span class=\"pre\">d.second,</span> <span class=\"pre\">d.weekday(),</span> <span class=\"pre\">yday,</span> <span class=\"pre\">dst))</span></code>, where <code class=\"docutils literal\"><span class=\"pre\">yday</span> <span class=\"pre\">=</span>\n<span class=\"pre\">d.toordinal()</span> <span class=\"pre\">-</span> <span class=\"pre\">date(d.year,</span> <span class=\"pre\">1,</span> <span class=\"pre\">1).toordinal()</span> <span class=\"pre\">+</span> <span class=\"pre\">1</span></code> is the day number within\nthe current year starting with <code class=\"docutils literal\"><span class=\"pre\">1</span></code> for January 1st. The <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_isdst</span></code> flag\nof the result is set according to the <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> method: <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code> or <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_isdst</span></code> is set to <code class=\"docutils literal\"><span class=\"pre\">-1</span></code>;\nelse if <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> returns a non-zero value, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_isdst</span></code> is set to <code class=\"docutils literal\"><span class=\"pre\">1</span></code>;\nelse <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_isdst</span></code> is set to <code class=\"docutils literal\"><span class=\"pre\">0</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.timetuple()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>timetuple()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "b<xAmsXaJz", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.utctimetuple()", 
                        "Python <code>datetime</code> prop", 
                        "<p>If <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instance <em>d</em> is naive, this is the same as\n<code class=\"docutils literal\"><span class=\"pre\">d.timetuple()</span></code> except that <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_isdst</span></code> is forced to 0 regardless of what\n<code class=\"docutils literal\"><span class=\"pre\">d.dst()</span></code> returns.  DST is never in effect for a UTC time.</p>", 
                        "", 
                        "<p><code>datetime.utctimetuple()<em>()</em></code></p><p>If <em>d</em> is aware, <em>d</em> is normalized to UTC time, by subtracting\n<code class=\"docutils literal\"><span class=\"pre\">d.utcoffset()</span></code>, and a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time.struct_time</span></code> for the\nnormalized time is returned.  <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_isdst</span></code> is forced to 0. Note\nthat an <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> may be raised if <em>d</em>.year was\n<code class=\"docutils literal\"><span class=\"pre\">MINYEAR</span></code> or <code class=\"docutils literal\"><span class=\"pre\">MAXYEAR</span></code> and UTC adjustment spills over a year\nboundary.</p>", 
                        "reverse", 
                        "<code>utctimetuple()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "JYRyaqxjT4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.toordinal()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the proleptic Gregorian ordinal of the date.  The same as\n<code class=\"docutils literal\"><span class=\"pre\">self.date().<strike>toordinal</strike>()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.toordinal()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>toordinal()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "FP;7]:=I-A", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timestamp()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return POSIX <strike>timestamp</strike> corresponding to the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code>\ninstance.  The return value is a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">float</span></code> similar to that\nreturned by <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.time()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.timestamp()<em>()</em></code></p><p>Naive <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instances are assumed to represent local\ntime and this method relies on the platform C <code class=\"xref c c-func docutils literal\"><span class=\"pre\">mktime()</span></code>\nfunction to perform the conversion.  Since <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code>\nsupports wider range of values than <code class=\"xref c c-func docutils literal\"><span class=\"pre\">mktime()</span></code> on many\nplatforms, this method may raise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">OverflowError</span></code> for times far\nin the past or far in the future.</p><p>For aware <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instances, the return value is computed\nas:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"p\">(</span><span class=\"n\">dt</span> <span class=\"o\">-</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">total_seconds</span><span class=\"p\">()</span>\n</pre></div>\n</div><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.3.</span></p>\n</div><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>The <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">timestamp()</span></code> method uses the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">fold</span></code> attribute to\ndisambiguate the times during a repeated interval.</p>\n</div><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p>There is no method to obtain the POSIX timestamp directly from a\nnaive <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instance representing UTC time.  If your\napplication uses this convention and your system timezone is not\nset to UTC, you can obtain the POSIX timestamp by supplying\n<code class=\"docutils literal\"><span class=\"pre\">tzinfo=timezone.utc</span></code>:</p>\n<div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">timestamp</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">timestamp</span><span class=\"p\">()</span>\n</pre></div>\n</div>\n<p>or by calculating the timestamp directly:</p>\n<div class=\"last highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"n\">timestamp</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">dt</span> <span class=\"o\">-</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">1970</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">seconds</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre></div>\n</div>\n</div>", 
                        "reverse", 
                        "<code>timestamp()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "IhWg!zF:KK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.weekday()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the day of the week as an integer, where Monday is 0 and Sunday is 6.\nThe same as <code class=\"docutils literal\"><span class=\"pre\">self.date().<strike>weekday</strike>()</span></code>. See also <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">iso<strike>weekday</strike>()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.weekday()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>weekday()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "jd!7^=7peV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.isoweekday()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return the day of the week as an integer, where Monday is 1 and Sunday is 7.\nThe same as <code class=\"docutils literal\"><span class=\"pre\">self.date().<strike>isoweekday</strike>()</span></code>. See also <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">weekday()</span></code>,\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">isocalendar()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.isoweekday()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>isoweekday()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "zhsO!74/U+", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.isocalendar()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a 3-tuple, (ISO year, ISO week number, ISO weekday).  The same as\n<code class=\"docutils literal\"><span class=\"pre\">self.date().<strike>isocalendar</strike>()</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.isocalendar()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>isocalendar()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "u/H;4*m+lX", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.isoformat(<em>sep=’T’</em>,, <em>timespec=’auto’</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a string representing the date and time in ISO 8601 format,\nYYYY-MM-DDTHH:MM:SS.mmmmmm or, if <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code> is 0,\nYYYY-MM-DDTHH:MM:SS</p>", 
                        "", 
                        "<p><code>datetime.isoformat(<em>sep=’T’</em>,, <em>timespec=’auto’</em>)<em><em>sep=’T’</em>,, <em>timespec=’auto’</em></em></code></p><p>If <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code> does not return <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, a 6-character string is\nappended, giving the UTC offset in (signed) hours and minutes:\nYYYY-MM-DDTHH:MM:SS.mmmmmm+HH:MM or, if <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code> is 0\nYYYY-MM-DDTHH:MM:SS+HH:MM</p><p>The optional argument <em>sep</em> (default <code class=\"docutils literal\"><span class=\"pre\">'T'</span></code>) is a one-character separator,\nplaced between the date and time portions of the result.  For example,</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"k\">import</span> <span class=\"n\">tzinfo</span><span class=\"p\">,</span> <span class=\"n\">timedelta</span><span class=\"p\">,</span> <span class=\"n\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">class</span> <span class=\"nc\">TZ</span><span class=\"p\">(</span><span class=\"n\">tzinfo</span><span class=\"p\">):</span>\n<span class=\"gp\">... </span>    <span class=\"k\">def</span> <span class=\"nf\">utcoffset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">):</span> <span class=\"k\">return</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">minutes</span><span class=\"o\">=-</span><span class=\"mi\">399</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2002</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">TZ</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n<span class=\"go\">'2002-12-25 00:00:00-06:39'</span>\n</pre></div>\n</div><p>The optional argument <em>timespec</em> specifies the number of additional\ncomponents of the time to include (the default is <code class=\"docutils literal\"><span class=\"pre\">'auto'</span></code>).\nIt can be one of the following:</p><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">'auto'</span></code>: Same as <code class=\"docutils literal\"><span class=\"pre\">'seconds'</span></code> if <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code> is 0,\nsame as <code class=\"docutils literal\"><span class=\"pre\">'microseconds'</span></code> otherwise.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'hours'</span></code>: Include the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code> in the two-digit HH format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'minutes'</span></code>: Include <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">minute</span></code> in HH:MM format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'seconds'</span></code>: Include <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">minute</span></code>, and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">second</span></code>\nin HH:MM:SS format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'milliseconds'</span></code>: Include full time, but truncate fractional second\npart to milliseconds. HH:MM:SS.sss format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'microseconds'</span></code>: Include full time in HH:MM:SS.mmmmmm format.</li>\n</ul><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Excluded time components are truncated, not rounded.</p>\n</div><p><code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> will be raised on an invalid <em>timespec</em> argument.</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"k\">import</span> <span class=\"n\">datetime</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(</span><span class=\"n\">timespec</span><span class=\"o\">=</span><span class=\"s1\">'minutes'</span><span class=\"p\">)</span>\n<span class=\"go\">'2002-12-25T00:00'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2015</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"mi\">59</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(</span><span class=\"n\">timespec</span><span class=\"o\">=</span><span class=\"s1\">'microseconds'</span><span class=\"p\">)</span>\n<span class=\"go\">'2015-01-01T12:30:59.000000'</span>\n</pre></div>\n</div><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6: </span>Added the <em>timespec</em> argument.</p>\n</div>", 
                        "reverse", 
                        "<code>isoformat()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "p*6T&]wg@m", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.__str__()", 
                        "Python <code>datetime</code> prop", 
                        "<p>For a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instance <em>d</em>, <code class=\"docutils literal\"><span class=\"pre\">str(d)</span></code> is equivalent to\n<code class=\"docutils literal\"><span class=\"pre\">d.isoformat('</span> <span class=\"pre\">')</span></code>.</p>", 
                        "", 
                        "<p><code>datetime.__str__()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>__str__()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "rfJp47^xqa", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.ctime()", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a string representing the date and time, for example <code class=\"docutils literal\"><span class=\"pre\">datetime(2002,</span> <span class=\"pre\">12,</span>\n<span class=\"pre\">4,</span> <span class=\"pre\">20,</span> <span class=\"pre\">30,</span> <span class=\"pre\">40).<strike>ctime</strike>()</span> <span class=\"pre\">==</span> <span class=\"pre\">'Wed</span> <span class=\"pre\">Dec</span>  <span class=\"pre\">4</span> <span class=\"pre\">20:30:40</span> <span class=\"pre\">2002'</span></code>. <code class=\"docutils literal\"><span class=\"pre\">d.<strike>ctime</strike>()</span></code> is\nequivalent to <code class=\"docutils literal\"><span class=\"pre\">time.<strike>ctime</strike>(time.mktime(d.timetuple()))</span></code> on platforms where the\nnative C <code class=\"xref c c-func docutils literal\"><span class=\"pre\"><strike>ctime</strike>()</span></code> function (which <code class=\"xref py py-func docutils literal\"><span class=\"pre\">time.<strike>ctime</strike>()</span></code> invokes, but which\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">datetime.<strike>ctime</strike>()</span></code> does not invoke) conforms to the C standard.</p>", 
                        "", 
                        "<p><code>datetime.ctime()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>ctime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "uPNSX/hw^m", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.strftime(<em>format</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Return a string representing the date and time, controlled by an explicit format\nstring.  For a complete list of formatting directives, see\n<span class=\"std std-ref\"><strike>strftime</strike>() and strptime() Behavior</span>.</p>", 
                        "", 
                        "<p><code>datetime.strftime(<em>format</em>)<em><em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>strftime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "KpvWuSS3sp", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.__format__(<em>format</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>Same as <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">datetime.strftime()</span></code>.  This makes it possible to specify a format\nstring for a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object in <span class=\"std std-ref\">formatted string\nliterals</span> and when using <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></code>.  For a\ncomplete list of formatting directives, see\n<span class=\"std std-ref\">strftime() and strptime() Behavior</span>.</p>", 
                        "", 
                        "<p><code>datetime.__format__(<em>format</em>)<em><em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>__format__()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "nX];*>K6R_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.time(<em>hour=0</em>,, <em>minute=0</em>,, <em>second=0</em>,, <em>microsecond=0</em>,, <em>tzinfo=None</em>,, <em>*</em>,, <em>fold=0</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>All arguments are optional.  <em>tzinfo</em> may be <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, or an instance of a\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass.  The remaining arguments may be integers, in the\nfollowing ranges:</p>", 
                        "", 
                        "<p>class <code>datetime.time(<em>hour=0</em>,, <em>minute=0</em>,, <em>second=0</em>,, <em>microsecond=0</em>,, <em>tzinfo=None</em>,, <em>*</em>,, <em>fold=0</em>)<em><em>hour=0</em>,, <em>minute=0</em>,, <em>second=0</em>,, <em>microsecond=0</em>,, <em>tzinfo=None</em>,, <em>*</em>,, <em>fold=0</em></em></code></p><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">hour</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">24</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">minute</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">60</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">second</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">60</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">0</span> <span class=\"pre\">&lt;=</span> <span class=\"pre\">microsecond</span> <span class=\"pre\">&lt;</span> <span class=\"pre\">1000000</span></code>,</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">fold</span> <span class=\"pre\">in</span> <span class=\"pre\">[0,</span> <span class=\"pre\">1]</span></code>.</li>\n</ul><p>If an argument outside those ranges is given, <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> is raised.  All\ndefault to <code class=\"docutils literal\"><span class=\"pre\">0</span></code> except <em>tzinfo</em>, which defaults to <code class=\"xref py py-const docutils literal\"><span class=\"pre\">None</span></code>.</p>", 
                        "reverse", 
                        "<code>time()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "uY?ggn2[B4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.min", 
                        "Python <code>time</code> prop", 
                        "<p>The earliest representable <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code>, <code class=\"docutils literal\"><span class=\"pre\">time(0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0,</span> <span class=\"pre\">0)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>min</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "g^DICLl;!e", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.max", 
                        "Python <code>time</code> prop", 
                        "<p>The latest representable <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code>, <code class=\"docutils literal\"><span class=\"pre\">time(23,</span> <span class=\"pre\">59,</span> <span class=\"pre\">59,</span> <span class=\"pre\">999999)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>max</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "F_4vhN5@01", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.resolution", 
                        "Python <code>time</code> prop", 
                        "<p>The smallest possible difference between non-equal <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> objects,\n<code class=\"docutils literal\"><span class=\"pre\">timedelta(microseconds=1)</span></code>, although note that arithmetic on\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> objects is not supported.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>resolution</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "JA4^M|igy&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.hour", 
                        "Python <code>time</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(24)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>hour</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "l/6fxAA|rh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.minute", 
                        "Python <code>time</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(60)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>minute</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "bsLMGNH|WV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.second", 
                        "Python <code>time</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(60)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>second</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "oG4*!J0u;U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.microsecond", 
                        "Python <code>time</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">range(1000000)</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>microsecond</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "IEcii4v<ND", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.tzinfo", 
                        "Python <code>time</code> prop", 
                        "<p>The object passed as the <strike>tzinfo</strike> argument to the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> constructor, or\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code> if none was passed.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>tzinfo</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "Huq#[&tCDi", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.fold", 
                        "Python <code>time</code> prop", 
                        "<p>In <code class=\"docutils literal\"><span class=\"pre\">[0,</span> <span class=\"pre\">1]</span></code>.  Used to disambiguate wall times during a repeated interval.  (A\nrepeated interval occurs when clocks are rolled back at the end of daylight saving\ntime or when the UTC offset for the current zone is decreased for political reasons.)\nThe value 0 (1) represents the earlier (later) of the two moments with the same wall\ntime representation.</p>", 
                        "", 
                        "<div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6.</span></p>\n</div>", 
                        "reverse", 
                        "<code>fold</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "vKFK%-&ous", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.replace(<em>hour=self.hour</em>,, <em>minute=self.minute</em>,, <em>second=self.second</em>,, <em>microsecond=self.microsecond</em>,, <em>tzinfo=self.tzinfo</em>,, <em>* fold=0</em>)", 
                        "Python <code>time</code> prop", 
                        "<p>Return a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> with the same value, except for those attributes given\nnew values by whichever keyword arguments are specified.  Note that\n<code class=\"docutils literal\"><span class=\"pre\">tzinfo=None</span></code> can be specified to create a naive <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> from an\naware <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code>, without conversion of the time data.</p>", 
                        "", 
                        "<p><code>time.replace(<em>hour=self.hour</em>,, <em>minute=self.minute</em>,, <em>second=self.second</em>,, <em>microsecond=self.microsecond</em>,, <em>tzinfo=self.tzinfo</em>,, <em>* fold=0</em>)<em><em>hour=self.hour</em>,, <em>minute=self.minute</em>,, <em>second=self.second</em>,, <em>microsecond=self.microsecond</em>,, <em>tzinfo=self.tzinfo</em>,, <em>* fold=0</em></em></code></p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6: </span>Added the <code class=\"docutils literal\"><span class=\"pre\">fold</span></code> argument.</p>\n</div>", 
                        "reverse", 
                        "<code>replace()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "eNu_cxi{tJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.isoformat(<em>timespec=’auto’</em>)", 
                        "Python <code>time</code> prop", 
                        "<p>Return a string representing the time in ISO 8601 format, HH:MM:SS.mmmmmm or, if\n<code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code> is 0, HH:MM:SS If <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code> does not return <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, a\n6-character string is appended, giving the UTC offset in (signed) hours and\nminutes: HH:MM:SS.mmmmmm+HH:MM or, if self.microsecond is 0, HH:MM:SS+HH:MM</p>", 
                        "", 
                        "<p><code>time.isoformat(<em>timespec=’auto’</em>)<em><em>timespec=’auto’</em></em></code></p><p>The optional argument <em>timespec</em> specifies the number of additional\ncomponents of the time to include (the default is <code class=\"docutils literal\"><span class=\"pre\">'auto'</span></code>).\nIt can be one of the following:</p><ul class=\"simple\">\n<li><code class=\"docutils literal\"><span class=\"pre\">'auto'</span></code>: Same as <code class=\"docutils literal\"><span class=\"pre\">'seconds'</span></code> if <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">microsecond</span></code> is 0,\nsame as <code class=\"docutils literal\"><span class=\"pre\">'microseconds'</span></code> otherwise.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'hours'</span></code>: Include the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code> in the two-digit HH format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'minutes'</span></code>: Include <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code> and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">minute</span></code> in HH:MM format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'seconds'</span></code>: Include <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">hour</span></code>, <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">minute</span></code>, and <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">second</span></code>\nin HH:MM:SS format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'milliseconds'</span></code>: Include full time, but truncate fractional second\npart to milliseconds. HH:MM:SS.sss format.</li>\n<li><code class=\"docutils literal\"><span class=\"pre\">'microseconds'</span></code>: Include full time in HH:MM:SS.mmmmmm format.</li>\n</ul><div class=\"admonition note\">\n<p class=\"first admonition-title\">Note</p>\n<p class=\"last\">Excluded time components are truncated, not rounded.</p>\n</div><p><code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> will be raised on an invalid <em>timespec</em> argument.</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"k\">import</span> <span class=\"n\">time</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">time</span><span class=\"p\">(</span><span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">minute</span><span class=\"o\">=</span><span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"mi\">56</span><span class=\"p\">,</span> <span class=\"n\">microsecond</span><span class=\"o\">=</span><span class=\"mi\">123456</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(</span><span class=\"n\">timespec</span><span class=\"o\">=</span><span class=\"s1\">'minutes'</span><span class=\"p\">)</span>\n<span class=\"go\">'12:34'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"p\">(</span><span class=\"n\">hour</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"n\">minute</span><span class=\"o\">=</span><span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"n\">second</span><span class=\"o\">=</span><span class=\"mi\">56</span><span class=\"p\">,</span> <span class=\"n\">microsecond</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(</span><span class=\"n\">timespec</span><span class=\"o\">=</span><span class=\"s1\">'microseconds'</span><span class=\"p\">)</span>\n<span class=\"go\">'12:34:56.000000'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">isoformat</span><span class=\"p\">(</span><span class=\"n\">timespec</span><span class=\"o\">=</span><span class=\"s1\">'auto'</span><span class=\"p\">)</span>\n<span class=\"go\">'12:34:56'</span>\n</pre></div>\n</div><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.6: </span>Added the <em>timespec</em> argument.</p>\n</div>", 
                        "reverse", 
                        "<code>isoformat()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "kDNF1.+H/E", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.__str__()", 
                        "Python <code>time</code> prop", 
                        "<p>For a time <em>t</em>, <code class=\"docutils literal\"><span class=\"pre\">str(t)</span></code> is equivalent to <code class=\"docutils literal\"><span class=\"pre\">t.isoformat()</span></code>.</p>", 
                        "", 
                        "<p><code>time.__str__()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>__str__()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "KHs#;,5_F3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.strftime(<em>format</em>)", 
                        "Python <code>time</code> prop", 
                        "<p>Return a string representing the time, controlled by an explicit format\nstring.  For a complete list of formatting directives, see\n<span class=\"std std-ref\"><strike>strftime</strike>() and strptime() Behavior</span>.</p>", 
                        "", 
                        "<p><code>time.strftime(<em>format</em>)<em><em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>strftime()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "xt&V!y1TqC", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.__format__(<em>format</em>)", 
                        "Python <code>time</code> prop", 
                        "<p>Same as <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">time.strftime()</span></code>. This makes it possible to specify a format string\nfor a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">time</span></code> object in <span class=\"std std-ref\">formatted string\nliterals</span> and when using <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">str.format()</span></code>.  For a\ncomplete list of formatting directives, see\n<span class=\"std std-ref\">strftime() and strptime() Behavior</span>.</p>", 
                        "", 
                        "<p><code>time.__format__(<em>format</em>)<em><em>format</em></em></code></p>", 
                        "reverse", 
                        "<code>__format__()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "i{1dCgaP2h", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.utcoffset()", 
                        "Python <code>time</code> prop", 
                        "<p>If <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, else returns\n<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo.<strike>utcoffset</strike>(None)</span></code>, and raises an exception if the latter doesn’t\nreturn <code class=\"docutils literal\"><span class=\"pre\">None</span></code> or a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object representing a whole number of\nminutes with magnitude less than one day.</p>", 
                        "", 
                        "<p><code>time.utcoffset()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>utcoffset()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "HQ>!y:0%Oh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.dst()", 
                        "Python <code>time</code> prop", 
                        "<p>If <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, else returns\n<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo.<strike>dst</strike>(None)</span></code>, and raises an exception if the latter doesn’t return\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code>, or a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object representing a whole number of minutes\nwith magnitude less than one day.</p>", 
                        "", 
                        "<p><code>time.dst()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>dst()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "hX]`4m}KWQ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "time.tzname()", 
                        "Python <code>time</code> prop", 
                        "<p>If <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code> is <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, else returns\n<code class=\"docutils literal\"><span class=\"pre\">self.tzinfo.<strike>tzname</strike>(None)</span></code>, or raises an exception if the latter doesn’t\nreturn <code class=\"docutils literal\"><span class=\"pre\">None</span></code> or a string object.</p>", 
                        "", 
                        "<p><code>time.tzname()<em>()</em></code></p>", 
                        "reverse", 
                        "<code>tzname()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "lxd&?,:u)c", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tzinfo.utcoffset(<em>dt</em>)", 
                        "Python <code>tzinfo</code> prop", 
                        "<p>Return offset of local time from UTC, in minutes east of UTC.  If local time is\nwest of UTC, this should be negative.  Note that this is intended to be the\ntotal offset from UTC; for example, if a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> object represents both\ntime zone and DST adjustments, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>utcoffset</strike>()</span></code> should return their sum.  If\nthe UTC offset isn’t known, return <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.  Else the value returned must be a\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object specifying a whole number of minutes in the range\n-1439 to 1439 inclusive (1440 = 24*60; the magnitude of the offset must be less\nthan one day).  Most implementations of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>utcoffset</strike>()</span></code> will probably look\nlike one of these two:</p>", 
                        "", 
                        "<p><code>tzinfo.utcoffset(<em>dt</em>)<em><em>dt</em></em></code></p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">return</span> <span class=\"n\">CONSTANT</span>                 <span class=\"c1\"># fixed-offset class</span>\n<span class=\"k\">return</span> <span class=\"n\">CONSTANT</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">dst</span><span class=\"p\">(</span><span class=\"n\">dt</span><span class=\"p\">)</span>  <span class=\"c1\"># daylight-aware class</span>\n</pre></div>\n</div><p>If <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code> does not return <code class=\"docutils literal\"><span class=\"pre\">None</span></code>, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> should not return\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code> either.</p><p>The default implementation of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code> raises\n<code class=\"xref py py-exc docutils literal\"><span class=\"pre\">NotImplementedError</span></code>.</p>", 
                        "reverse", 
                        "<code>utcoffset()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "M6CZq,ax|1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tzinfo.dst(<em>dt</em>)", 
                        "Python <code>tzinfo</code> prop", 
                        "<p>Return the daylight saving time (DST) adjustment, in minutes east of UTC, or\n<code class=\"docutils literal\"><span class=\"pre\">None</span></code> if DST information isn’t known.  Return <code class=\"docutils literal\"><span class=\"pre\">timedelta(0)</span></code> if DST is not\nin effect. If DST is in effect, return the offset as a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> object\n(see <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code> for details). Note that DST offset, if applicable, has\nalready been added to the UTC offset returned by <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">utcoffset()</span></code>, so there’s\nno need to consult <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>dst</strike>()</span></code> unless you’re interested in obtaining DST info\nseparately.  For example, <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">datetime.timetuple()</span></code> calls its <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tzinfo</span></code>\nattribute’s <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>dst</strike>()</span></code> method to determine how the <code class=\"xref py py-attr docutils literal\"><span class=\"pre\">tm_is<strike>dst</strike></span></code> flag\nshould be set, and <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">tzinfo.fromutc()</span></code> calls <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>dst</strike>()</span></code> to account for\nDST changes when crossing time zones.</p>", 
                        "", 
                        "<p><code>tzinfo.dst(<em>dt</em>)<em><em>dt</em></em></code></p><p>An instance <em>tz</em> of a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass that models both standard and\ndaylight times must be consistent in this sense:</p><p><code class=\"docutils literal\"><span class=\"pre\">tz.utcoffset(dt)</span> <span class=\"pre\">-</span> <span class=\"pre\">tz.dst(dt)</span></code></p><p>must return the same result for every <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> <em>dt</em> with <code class=\"docutils literal\"><span class=\"pre\">dt.tzinfo</span> <span class=\"pre\">==</span>\n<span class=\"pre\">tz</span></code>  For sane <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclasses, this expression yields the time\nzone’s “standard offset”, which should not depend on the date or the time, but\nonly on geographic location.  The implementation of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">datetime.astimezone()</span></code>\nrelies on this, but cannot detect violations; it’s the programmer’s\nresponsibility to ensure it.  If a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclass cannot guarantee\nthis, it may be able to override the default implementation of\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">tzinfo.fromutc()</span></code> to work correctly with <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">astimezone()</span></code> regardless.</p><p>Most implementations of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> will probably look like one of these two:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">dst</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">):</span>\n    <span class=\"c1\"># a fixed-offset class:  doesn't account for DST</span>\n    <span class=\"k\">return</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>or</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">dst</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Code to set dston and dstoff to the time zone's DST</span>\n    <span class=\"c1\"># transition times based on the input dt.year, and expressed</span>\n    <span class=\"c1\"># in standard local time.  Then</span>\n\n    <span class=\"k\">if</span> <span class=\"n\">dston</span> <span class=\"o\">&lt;=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span> <span class=\"n\">dstoff</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"n\">hours</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">timedelta</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre></div>\n</div><p>The default implementation of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">dst()</span></code> raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">NotImplementedError</span></code>.</p>", 
                        "reverse", 
                        "<code>dst()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "pSGbA<=YoX", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tzinfo.tzname(<em>dt</em>)", 
                        "Python <code>tzinfo</code> prop", 
                        "<p>Return the time zone name corresponding to the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> object <em>dt</em>, as\na string. Nothing about string names is defined by the <code class=\"xref py py-mod docutils literal\"><span class=\"pre\">datetime</span></code> module,\nand there’s no requirement that it mean anything in particular.  For example,\n“GMT”, “UTC”, “-500”, “-5:00”, “EDT”, “US/Eastern”, “America/New York” are all\nvalid replies.  Return <code class=\"docutils literal\"><span class=\"pre\">None</span></code> if a string name isn’t known.  Note that this is\na method rather than a fixed string primarily because some <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code>\nsubclasses will wish to return different names depending on the specific value\nof <em>dt</em> passed, especially if the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> class is accounting for\ndaylight time.</p>", 
                        "", 
                        "<p><code>tzinfo.tzname(<em>dt</em>)<em><em>dt</em></em></code></p><p>The default implementation of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">tzname()</span></code> raises <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">NotImplementedError</span></code>.</p>", 
                        "reverse", 
                        "<code>tzname()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "Gm~x46(EDS", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tzinfo.fromutc(<em>dt</em>)", 
                        "Python <code>tzinfo</code> prop", 
                        "<p>This is called from the default <code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime.astimezone()</span></code>\nimplementation.  When called from that, <code class=\"docutils literal\"><span class=\"pre\">dt.tzinfo</span></code> is <em>self</em>, and <em>dt</em>’s\ndate and time data are to be viewed as expressing a UTC time.  The purpose\nof <code class=\"xref py py-meth docutils literal\"><span class=\"pre\"><strike>fromutc</strike>()</span></code> is to adjust the date and time data, returning an\nequivalent datetime in <em>self</em>’s local time.</p>", 
                        "", 
                        "<p><code>tzinfo.fromutc(<em>dt</em>)<em><em>dt</em></em></code></p><p>Most <code class=\"xref py py-class docutils literal\"><span class=\"pre\">tzinfo</span></code> subclasses should be able to inherit the default\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromutc()</span></code> implementation without problems.  It’s strong enough to handle\nfixed-offset time zones, and time zones accounting for both standard and\ndaylight time, and the latter even if the DST transition times differ in\ndifferent years.  An example of a time zone the default <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromutc()</span></code>\nimplementation may not handle correctly in all cases is one where the standard\noffset (from UTC) depends on the specific date and time passed, which can happen\nfor political reasons. The default implementations of <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">astimezone()</span></code> and\n<code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromutc()</span></code> may not produce the result you want if the result is one of the\nhours straddling the moment the standard offset changes.</p><p>Skipping code for error cases, the default <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">fromutc()</span></code> implementation acts\nlike:</p><div class=\"highlight-python3\"><div class=\"highlight\"><pre><span></span><span class=\"k\">def</span> <span class=\"nf\">fromutc</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">):</span>\n    <span class=\"c1\"># raise ValueError error if dt.tzinfo is not self</span>\n    <span class=\"n\">dtoff</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">utcoffset</span><span class=\"p\">()</span>\n    <span class=\"n\">dtdst</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">dst</span><span class=\"p\">()</span>\n    <span class=\"c1\"># raise ValueError if dtoff is None or dtdst is None</span>\n    <span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">dtoff</span> <span class=\"o\">-</span> <span class=\"n\">dtdst</span>  <span class=\"c1\"># this is self's standard offset</span>\n    <span class=\"k\">if</span> <span class=\"n\">delta</span><span class=\"p\">:</span>\n        <span class=\"n\">dt</span> <span class=\"o\">+=</span> <span class=\"n\">delta</span>   <span class=\"c1\"># convert to standard local time</span>\n        <span class=\"n\">dtdst</span> <span class=\"o\">=</span> <span class=\"n\">dt</span><span class=\"o\">.</span><span class=\"n\">dst</span><span class=\"p\">()</span>\n        <span class=\"c1\"># raise ValueError if dtdst is None</span>\n    <span class=\"k\">if</span> <span class=\"n\">dtdst</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">dt</span> <span class=\"o\">+</span> <span class=\"n\">dtdst</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">dt</span>\n</pre></div>\n</div>", 
                        "reverse", 
                        "<code>fromutc()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "PlXePR!+z:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "datetime.timezone(<em>offset</em>,, <em>name=None</em>)", 
                        "Python <code>datetime</code> prop", 
                        "<p>The <em>offset</em> argument must be specified as a <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code>\nobject representing the difference between the local time and UTC.  It must\nbe strictly between <code class=\"docutils literal\"><span class=\"pre\">-timedelta(hours=24)</span></code> and\n<code class=\"docutils literal\"><span class=\"pre\">timedelta(hours=24)</span></code> and represent a whole number of minutes,\notherwise <code class=\"xref py py-exc docutils literal\"><span class=\"pre\">ValueError</span></code> is raised.</p>", 
                        "", 
                        "<p>class <code>datetime.timezone(<em>offset</em>,, <em>name=None</em>)<em><em>offset</em>,, <em>name=None</em></em></code></p><p>The <em>name</em> argument is optional.  If specified it must be a string that\nwill be used as the value returned by the <code class=\"xref py py-meth docutils literal\"><span class=\"pre\">datetime.tzname()</span></code> method.</p><div class=\"versionadded\">\n<p><span class=\"versionmodified\">New in version 3.2.</span></p>\n</div>", 
                        "reverse", 
                        "<code>timezone()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "zLg>WYCBi]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timezone.utcoffset(<em>dt</em>)", 
                        "Python <code>timezone</code> prop", 
                        "<p>Return the fixed value specified when the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timezone</span></code> instance is\nconstructed.  The <em>dt</em> argument is ignored.  The return value is a\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">timedelta</span></code> instance equal to the difference between the\nlocal time and UTC.</p>", 
                        "", 
                        "<p><code>timezone.utcoffset(<em>dt</em>)<em><em>dt</em></em></code></p>", 
                        "reverse", 
                        "<code>utcoffset()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "G+/8!p@,_A", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timezone.tzname(<em>dt</em>)", 
                        "Python <code>timezone</code> prop", 
                        "<p>Return the fixed value specified when the <code class=\"xref py py-class docutils literal\"><span class=\"pre\">timezone</span></code> instance\nis constructed.  If <em>name</em> is not provided in the constructor, the\nname returned by <code class=\"docutils literal\"><span class=\"pre\"><strike>tzname</strike>(dt)</span></code> is generated from the value of the\n<code class=\"docutils literal\"><span class=\"pre\">offset</span></code> as follows.  If <em>offset</em> is <code class=\"docutils literal\"><span class=\"pre\">timedelta(0)</span></code>, the name\nis “UTC”, otherwise it is a string ‘UTC±HH:MM’, where ± is the sign\nof <code class=\"docutils literal\"><span class=\"pre\">offset</span></code>, HH and MM are two digits of <code class=\"docutils literal\"><span class=\"pre\">offset.hours</span></code> and\n<code class=\"docutils literal\"><span class=\"pre\">offset.minutes</span></code> respectively.</p>", 
                        "", 
                        "<p><code>timezone.tzname(<em>dt</em>)<em><em>dt</em></em></code></p><div class=\"versionchanged\">\n<p><span class=\"versionmodified\">Changed in version 3.6: </span>Name generated from <code class=\"docutils literal\"><span class=\"pre\">offset=timedelta(0)</span></code> is now plain ‘UTC’, not\n‘UTC+00:00’.</p>\n</div>", 
                        "reverse", 
                        "<code>tzname()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "OVl77(ns$#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timezone.dst(<em>dt</em>)", 
                        "Python <code>timezone</code> prop", 
                        "<p>Always returns <code class=\"docutils literal\"><span class=\"pre\">None</span></code>.</p>", 
                        "", 
                        "<p><code>timezone.dst(<em>dt</em>)<em><em>dt</em></em></code></p>", 
                        "reverse", 
                        "<code>dst()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "Li5P--TFW3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timezone.fromutc(<em>dt</em>)", 
                        "Python <code>timezone</code> prop", 
                        "<p>Return <code class=\"docutils literal\"><span class=\"pre\">dt</span> <span class=\"pre\">+</span> <span class=\"pre\">offset</span></code>.  The <em>dt</em> argument must be an aware\n<code class=\"xref py py-class docutils literal\"><span class=\"pre\">datetime</span></code> instance, with <code class=\"docutils literal\"><span class=\"pre\">tzinfo</span></code> set to <code class=\"docutils literal\"><span class=\"pre\">self</span></code>.</p>", 
                        "", 
                        "<p><code>timezone.fromutc(<em>dt</em>)<em><em>dt</em></em></code></p>", 
                        "reverse", 
                        "<code>fromutc()</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "GeKe=)wexq", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "timezone.utc", 
                        "Python <code>timezone</code> prop", 
                        "<p>The UTC timezone, <code class=\"docutils literal\"><span class=\"pre\">timezone(timedelta(0))</span></code>.</p>", 
                        "", 
                        "", 
                        "reverse", 
                        "<code>utc</code>", 
                        "https://docs.python.org/3.6/library/datetime.html"
                    ], 
                    "flags": 0, 
                    "guid": "qQ:eO+)ht_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "python"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python version of static variables", 
                        "", 
                        "<p>Can use decorators, or do something like:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">def</span> <span style=\"color: #447fcf\">foo</span><span style=\"color: #d0d0d0\">():</span>\n    <span style=\"color: #d0d0d0\">foo.counter</span> <span style=\"color: #d0d0d0\">+=</span> <span style=\"color: #3677a9\">1</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span> <span style=\"color: #ed9d13\">\"Counter is %d\"</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #d0d0d0\">foo.counter</span>\n<span style=\"color: #d0d0d0\">foo.counter</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">0</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">myfunc</span><span style=\"color: #d0d0d0\">():</span>\n  <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #6ab825; font-weight: bold\">not</span> <span style=\"color: #24909d\">hasattr</span><span style=\"color: #d0d0d0\">(myfunc,</span> <span style=\"color: #ed9d13\">\"counter\"</span><span style=\"color: #d0d0d0\">):</span>\n     <span style=\"color: #d0d0d0\">myfunc.counter</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">0</span>\n  <span style=\"color: #d0d0d0\">myfunc.counter</span> <span style=\"color: #d0d0d0\">+=</span> <span style=\"color: #3677a9\">1</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">def</span> <span style=\"color: #447fcf\">myfunc</span><span style=\"color: #d0d0d0\">():</span>\n    <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #ed9d13\">\"counter\"</span> <span style=\"color: #6ab825; font-weight: bold\">not</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">foo.__dict__:</span> <span style=\"color: #d0d0d0\">foo.counter</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">0</span>\n    <span style=\"color: #d0d0d0\">myfunc.counter</span> <span style=\"color: #d0d0d0\">+=</span> <span style=\"color: #3677a9\">1</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDcxNDEyNDYsICJpZCI6ICIxNTA3MTQxMDMzODEzLTAwMiIsICJtZCI6ICJDYW4gdXNlIGRlY29yYXRvcnMsIG9yIGRvIHNvbWV0aGluZyBsaWtlOlxuICBcbiAgICA6OjpweXRob25cbiAgICBkZWYgZm9vKCk6XG4gICAgICAgIGZvby5jb3VudGVyICs9IDFcbiAgICAgICAgcHJpbnQgJnF1b3Q7Q291bnRlciBpcyAlZCZxdW90OyAlIGZvby5jb3VudGVyXG4gICAgZm9vLmNvdW50ZXIgPSAwXG4gIFxuICAgIGRlZiBteWZ1bmMoKTpcbiAgICAgIGlmIG5vdCBoYXNhdHRyKG15ZnVuYywgJnF1b3Q7Y291bnRlciZxdW90Oyk6XG4gICAgICAgICBteWZ1bmMuY291bnRlciA9IDBcbiAgICAgIG15ZnVuYy5jb3VudGVyICs9IDFcbiAgXG4gICAgZGVmIG15ZnVuYygpOlxuICAgICAgICBpZiAmcXVvdDtjb3VudGVyJnF1b3Q7IG5vdCBpbiBmb28uX19kaWN0X186IGZvby5jb3VudGVyID0gMFxuICAgICAgICBteWZ1bmMuY291bnRlciArPSAxXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://stackoverflow.com/questions/279561/what-is-the-python-equivalent-of-static-variables-inside-a-function"
                    ], 
                    "flags": 0, 
                    "guid": "dnxK,E8.E(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <code>collections</code> datatypes", 
                        "", 
                        "<ul style=\"margin-left: 20px; \"><li><code>namedtuple()</code>&nbsp;(<b>2.6</b>)</li><li><code>deque</code>&nbsp;(<b>2.4</b>)</li><li><code>Counter</code>&nbsp;(<b>2.7</b>)</li><li><code>OrderedDict</code>&nbsp;(<b>2.7</b>)</li><li><code>defaultdict</code> (<b>2.5</b>)</li><li><code>ChainMap</code></li><li><code>UserDict</code></li><li><code>UserList</code></li><li><code>UserString</code></li></ul>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w<a+s4|&rE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "pass failure code from <code>doctest</code> to system", 
                        "", 
                        "<pre class=\"lang-py prettyprint prettyprinted\" style=\"\"><code><span class=\"pln\">sys</span><span class=\"pun\">.</span><span class=\"pln\">exit</span><span class=\"pun\">(</span><span class=\"pln\">doctest</span><span class=\"pun\">.</span><span class=\"pln\">testmod</span><span class=\"pun\">()[</span><span class=\"lit\">0</span><span class=\"pun\">])</span></code></pre><div><br /></div><div>or&nbsp;</div><div><br /></div><div><div class=\"post-text\" itemprop=\"text\">\n<p>I find using <code>doctest.testmod(raise_on_error=True)</code> will cause an exception to be raised when a test fails, which causes the script exits with a non-zero code.</p>\n<p><a href=\"http://docs.python.org/2/library/doctest.html#doctest.testfile\" rel=\"nofollow\">Python doc here</a>:</p>\n<blockquote>\n<p>Optional argument <code>raise_on_error</code> defaults to false. If true, an\n  exception is raised upon the first failure or unexpected exception in\n  an example. This allows failures to be post-mortem debugged. Default\n  behavior is to continue running examples.</p>\n</blockquote></div></div>", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "https://stackoverflow.com/questions/18782721/doctest-failed-with-zero-exit-code"
                    ], 
                    "flags": 0, 
                    "guid": "J>V4,n>gr?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "053ef699-45d9-11e7-bad8-2c56dc924912", 
            "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 264, 
            "extendRev": 50, 
            "media_files": [
                "outline-paren.png", 
                "=HTML-dl3.png", 
                "=HTML-dl1.png", 
                "outline-colon.png", 
                "mdn-logo-sm.png", 
                "=HTML-dl2.png"
            ], 
            "mid": "1475043240989", 
            "name": "HTML", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;html&gt;</code>", 
                        "", 
                        "<small>HTML main root element</small><br />represents the <b>root of an HTML document</b>, so it is also referred to as the <em>root element</em>. All other elements must be descendants of this element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>manifest</code></strong> <i> </i></dt> <dd>Specifies the URI of a resource manifest indicating resources that should be cached locally. See Using the application cache for details.</dd> <dt><strong><code>version</code></strong> <i> </i></dt> <dd>Specifies the version of the HTML Document Type Definition  that governs the current document. This attribute is not needed,  because it is redundant with the version information in the document  type declaration.</dd> <dt><strong><code>xmlns</code></strong>&nbsp;</dt> <dd>Specifies the XML Namespace of the document. Default value is <code>\"http://www.w3.org/1999/xhtml\"</code>. This is required in documents parsed with XML parsers, and optional in text/html documents.</dd></dl>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/html"
                    ], 
                    "flags": 0, 
                    "guid": "C3wXBOwCy3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;base&gt;</code>", 
                        "", 
                        "<small>HTML document metadata element</small><br />specifies the <b>base URL to use for all relative URLs</b> contained within a document. There can be only one&nbsp;in a document", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>href</code></strong></dt> <dd>The base URL to be used throughout the document for relative URL  addresses. If this attribute is specified, this element must come before  any other elements with attributes whose values are URLs. Absolute and  relative URLs are allowed.</dd> <dt><strong><code>target</code></strong></dt> <dd>A name or keyword indicating the default location to display the  result when hyperlinks or forms cause navigation, for elements that do  not have an explicit target reference. It is a name of, or keyword for, a  <em>browsing context</em> (for example: tab, window, or inline frame). The following keywords have special meanings:  <ul> <li><code>_self</code>: Load the result into the same browsing  context&nbsp;as the current one. This value is the default if the attribute  is not specified.</li> <li><code>_blank</code>: Load the result into a new unnamed browsing context.</li> <li><code>_parent</code>: Load the result into the parent browsing  context of the current one. If there is no parent, this option behaves  the same way as <code>_self</code>.</li> <li><code>_top</code>: Load the result into the top-level browsing  context (that is, the browsing context that is an ancestor of the  current one, and has no parent). If there is no parent, this option  behaves the same way as <code>_self</code>.</li> </ul> </dd> </dl> <h2>Usage notes</h2> <p>If multiple <code>&lt;base&gt;</code> elements are specified, only the first <strong>href</strong> and first <strong>target</strong> value are used; all others are ignored.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base"
                    ], 
                    "flags": 0, 
                    "guid": "cR{`Ts2`Tn", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;head&gt;</code>", 
                        "", 
                        "<small>HTML document metadata element</small><br /><b>metadata about the document</b>, including its title and links to its scripts and style sheets", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>profile</code></strong> <i> </i></dt> <dd>The URIs of one or more metadata profiles, separated by white space.</dd></dl>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/head"
                    ], 
                    "flags": 0, 
                    "guid": "Gk9Sr%fjGc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;link&gt;</code>", 
                        "", 
                        "<small>HTML document metadata element</small><br />specifies <b>relationship to an external resource</b>. Possible uses for this element include defining a relational framework for navigation. This element is most used to link to style sheets", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>charset</code></strong><i> </i></dt> <dd>This attribute defines the character encoding of the linked  resource. The value is a space- and/or comma-delimited list of character  sets as defined in RFC 2045. The default value is <code>iso-8859-1</code>.  <div><strong>Usage note:</strong> This attribute is obsolete and <em>must</em> <strong>not be used by authors</strong>. To achieve its effect, use the <code>Content-Type</code> HTTP header on the linked resource.</div> </dd> <dt><strong><code>crossorigin</code></strong></dt> <dd>This enumerated attribute indicates whether CORS must be used when fetching the related image. CORS-enabled images can be reused in the <code>&lt;canvas&gt;</code> element without being <em>tainted</em>. The allowed values are:  <dl> <dt><code>\"anonymous\"</code></dt> <dd>A cross-origin request (i.e. with <code>Origin:</code> HTTP  header) is performed. But no credential is sent (i.e. no cookie, no  X.509 certificate and no HTTP Basic authentication is sent). If the  server does not give credentials to the origin site (by not setting the <code>Access-Control-Allow-Origin:</code> HTTP header) the image will be <em>tainted</em> and its usage restricted.</dd> <dt><code>\"use-credentials\"</code></dt> <dd>A cross-origin request (i.e. with <code>Origin:</code> HTTP  header) is performed with credential is sent (i.e. a cookie, a  certificate and HTTP Basic authentication is performed). If the server  does not give credentials to the origin site (through <code>Access-Control-Allow-Credentials:</code> HTTP header), the image will be <em>tainted</em> and its usage restricted.</dd> </dl>  When not present, the resource is fetched without a CORS request (i.e. without sending the <code>Origin:</code> HTTP header), preventing its non-tainted used in <code>&lt;canvas&gt;</code> elements. If invalid, it is handled as if the enumerated keyword <strong>anonymous</strong> was used. See CORS settings attributes for additional information.</dd> <dt><strong><code>disabled</code></strong> <i> </i></dt> <dd>This attribute is used to disable a link relationship. In  conjunction with scripting, this attribute could be used to turn on and  off various style sheet relationships.  <div> <p><strong>Note: </strong>While there is no <code>disabled</code> attribute in the HTML standard, there <strong>is</strong> a <code>disabled</code> attribute on the <code>HTMLLinkElement</code> DOM object.</p> <p>The use of <code>disabled</code> as an HTML attribute is non-standard and only used by some browsers (W3 #27677). <strong>Do not use it</strong>. To achieve a similar effect, use one of the following techniques:</p> <ul> <li>If the <code>disabled</code> attribute has been added directly to the element on the page, do not include the <code>&lt;link&gt;</code> element instead;</li> <li>Set the <code>disabled</code> <strong>property</strong> of the <code>StyleSheet</code> DOM object via scripting.</li> </ul> </div> </dd> <dt><strong><code>href</code></strong></dt> <dd>This attribute specifies the URL of the linked resource. A URL might be absolute or relative.</dd> <dt><strong><code>hreflang</code></strong></dt> <dd>This attribute indicates the language of the linked resource. It is purely advisory. Allowed values are determined by BCP47. Use this attribute only if the <code>href</code> attribute is present.</dd> <dt><strong><code>integrity</code></strong> <i> </i></dt> <dd>Contains inline metadata, a base64-encoded&nbsp;cryptographic hash of a  resource (file) you’re telling the browser to fetch,&nbsp;that a user agent  can use to verify that a fetched resource has been delivered free of  unexpected manipulation. See Subresource Integrity.</dd> <dt><strong><code>media</code></strong></dt> <dd>This attribute specifies the media which the linked resource applies to. Its value must be a media query.  This attribute is mainly useful when linking to external stylesheets by  allowing the user agent to pick the best adapted one for the device it  runs on.  <div><strong>Usage note: </strong> <ul> <li>In HTML 4, this can only be a simple white-space-separated list of media description literals, i.e., media types and groups, where defined and allowed as values for this attribute, such as <code>print</code>, <code>screen</code>, <code>aural</code>, <code>braille</code>. HTML5 extended this to any kind of media queries, which are a superset of the allowed values of HTML 4.</li> <li>Browsers not supporting the CSS3 Media Queries  won't necessarily recognize the adequate link; do not forget to set  fallback links, the restricted set of media queries defined in HTML 4.</li> </ul> </div> </dd> <dt><strong><code>methods</code></strong> <i> </i></dt> <dd>The value of this attribute provides information about the  functions that might be performed on an object. The values generally are  given by the HTTP protocol when it is used, but it might (for similar  reasons as for the <strong>title</strong> attribute) be useful to  include advisory information in advance in the link. For example, the  browser might choose a different rendering of a link as a function of  the methods specified; something that is searchable might get a  different icon, or an outside link might render with an indication of  leaving the current site. This attribute is not well understood nor  supported, even by the defining browser, Internet Explorer 4. See Methods Property (MSDN).</dd> <dt><strong><code>prefetch</code></strong> <i> </i></dt> <dd>This attribute identifies a resource that might be required by the  next navigation and that the user agent should retrieve it. This allows  the user agent to respond faster when the resource is requested in the  future.</dd> <dt><strong><code>referrerpolicy</code></strong> <i> </i></dt> <dd>A string indicating which referrer to use when fetching the resource:  <ul> <li><code>'no-referrer'</code> meaning that the <code>Referer</code> header will not be sent.</li> <li><code>'no-referrer-when-downgrade'</code> meaning that no&nbsp;<code>Referer</code>  header will be sent when navigating to an origin without TLS  (HTTPS).&nbsp;This is a user agent’s default behavior, if no policy is  otherwise specified.</li> <li><code>'origin'</code> meaning that the referrer will be the origin of the page, that is roughly the scheme, the host and the port.</li> <li><code>'origin-when-cross-origin'</code> meaning that navigating to  other origins will be limited to the scheme, the host and the port,  while navigating on the same origin will include the referrer's path.&nbsp;</li> <li><code>'unsafe-url'</code> meaning that the referrer will include  the origin and the path (but not the fragment, password, or username).  This case is unsafe because it can leak origins and paths from  TLS-protected resources to insecure origins.</li> </ul> </dd> <dt><strong><code>rel</code></strong></dt> <dd>This attribute names a relationship of the linked document to the  current document. The attribute must be a space-separated list of the link types values. The most common use of this attribute is to specify a link to an external style sheet: the <strong>rel</strong> attribute is set to <code>stylesheet</code>, and the <strong>href</strong> attribute is set to the URL of an external style sheet to format the page. WebTV also supports the use of the value <code>next</code> for <strong>rel</strong> to preload the next page in a document series.</dd> <dt><strong><code>rev</code></strong><i> </i></dt> <dd>The value of this attribute shows the relationship of the current document to the linked document, as defined by the <code>href</code> attribute. The attribute thus defines the reverse relationship compared to the value of the <strong>rel</strong> attribute. Link types values for the attribute are similar to the possible values for <code>rel</code>.  <div><strong>Usage note: </strong>This attribute is obsolete in HTML5. <strong>Do not use it</strong>. To achieve its effect, use the <code>rel</code> attribute with the opposite link types values, e.g. <code>made</code> should be replaced by <code>author</code>. Also this attribute doesn't mean <em>revision</em> and must not be used with a version number, which is unfortunately the case on numerous sites.</div> </dd> <dt><strong><code>sizes</code></strong></dt> <dd>This attribute defines the sizes of the icons for visual media contained in the resource. It must be present only if the <code>rel</code> contains the <code>icon</code> link types value. It may have the following values:  <ul> <li><code>any</code>, meaning that the icon can be scaled to any size as it is in a vectorial format, like <code>image/svg+xml</code>.</li> <li>a white-space separated list of sizes, each in the format <code><em>&lt;width in pixels&gt;</em>x<em>&lt;height in pixels&gt;</em></code> or <code><em>&lt;width in pixels&gt;</em>X<em>&lt;height in pixels&gt;</em></code>. Each of these sizes must be contained in the resource.</li> </ul> <div><strong>Usage note: </strong> <ul> <li>Most icon format are only able to store one single icon; therefore most of the time the <code>sizes</code> contains only one entry. MS's ICO format does, as well as Apple's ICNS. ICO being more ubiquitous, you should use it.</li> <li>Apple's iOS does not support this attribute, hence Apple's iPhone and iPad use special, non-standard link types values to define icon to be used as Web Clip or start-up placeholder: <code>apple-touch-icon</code> and <code>apple-touch-startup-icon</code>.</li> </ul> </div> </dd> <dt><strong><code>target</code></strong><i> </i></dt> <dd>Defines the frame or window name that has the defined linking  relationship or that will show the rendering of any linked resource.</dd> <dt><strong><code>title</code></strong></dt> <dd>The <code>title</code> attribute has special semantics on the <code>&lt;link&gt;</code> element. When used on a <code>&lt;link rel=\"stylesheet\"&gt;</code> it defines a preferred or an alternate stylesheet. Incorrectly using it may cause the stylesheet to be ignored.</dd> <dt><strong><code>type</code></strong></dt> <dd>This attribute is used to define the type of the content linked to. The value of the attribute should be a MIME type such as <strong>text/html</strong>, <strong>text/css</strong>, and so on. The common use of this attribute is to define the type of style sheet linked and the most common current value is <strong>text/css</strong>, which indicates a Cascading Style Sheet format.</dd></dl>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/link"
                    ], 
                    "flags": 0, 
                    "guid": "H-G&XcLg*7", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;meta&gt;</code>", 
                        "", 
                        "<small>HTML document metadata element</small><br />represents <b>metadata </b>that <b>cannot be represented by other HTML meta-related elements</b>, like <code>&lt;base&gt;</code>, <code>&lt;link&gt;</code>, <code>&lt;script&gt;</code>, <code>&lt;style&gt;</code> or <code>&lt;title&gt;</code>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <div> <p><strong>Note:</strong> the global attribute <code>name</code> has a specific meaning for the <code>&lt;meta&gt;</code> element, and the <code>itemprop</code> attribute must not be set on the same <code>&lt;meta&gt;</code> element that has any existing <code>name</code>, <code>http-equiv</code> or <code>charset</code> attributes.</p> </div> <dl> <dt><strong><code>charset</code></strong></dt> <dd>Declares the page's character encoding. This attribute must contain a standard IANA MIME name for character encodings. Although the standard doesn't request a specific encoding, it suggests…         <ul> <li>Authors are encouraged to use <code>UTF-8</code>.</li> <li>Authors should not use ASCII-incompatible encodings to avoid  security risk: browsers not supporting them may interpret harmless  content as HTML. This happens with at least <code>JIS_C6226-1983</code>, <code>JIS_X0212-1990</code>, <code>HZ-GB-2312</code>, <code>JOHAB</code>, the ISO-2022 family, and the EBCDIC family. (ASCII-incompatible encodings are those that don't map the 8-bit code points <code>0x20</code> to <code>0x7E</code> to the <code>0x0020</code> to <code>0x007E</code> Unicode code points)</li> <li>Authors <strong>must not</strong> use <code>CESU-8</code>, <code>UTF-7</code>, <code>BOCU-1</code> and <code>SCSU</code>, because cross-site scripting attacks with these encodings have been demonstrated.</li> <li>Authors should not use <code>UTF-32</code> because not all HTML5 encoding algorithms can distinguish it from <code>UTF-16</code>.</li> </ul> <div><strong>Notes:</strong> <ul> <li>The declared character encoding must match the one the page was saved with, to avoid garbled characters and security holes.</li> <li>The <code>&lt;meta&gt;</code> element declaring the encoding must be inside the <code>&lt;head&gt;</code> element and <strong>within the first 1024 bytes</strong> of the HTML, as some browsers only look at those bytes before choosing an encoding.</li> <li>This <code>&lt;meta&gt;</code> element is only one part of the algorithm to determine a page's character set. The <code>Content-Type</code> header and any Byte-Order Marks override this element.</li> <li>It is strongly recommended to define the character encoding. If a  page's encoding is undefined, cross-scripting techniques are possible,  such as the <code>UTF-7</code> fallback cross-scripting technique.</li> <li>The <code>&lt;meta&gt;</code> element with a <code>charset</code> attribute is a synonym for the pre-HTML5 <code>&lt;meta http-equiv=\"Content-Type\" content=\"text/html; charset=<em>IANAcharset</em>\"&gt;</code>, where <em><code>IANAcharset</code></em> contains the value of the equivalent <code>charset</code> attribute. This syntax is still allowed, although no longer recommended.</li> </ul> </div> </dd> <dt><strong><code>content</code></strong></dt> <dd>This attribute contains the value for the <code>http-equiv</code> or <code>name</code> attribute, depending on which was used.</dd> <dt><strong><code>http-equiv</code></strong></dt> <dd>This attribute can contain the name of an HTTP header, hence the attribute name <strong>http-equiv</strong>alent.  It defines an instruction that can alter server and user-agent  behavior. The value of the instruction is defined inside the <code>content</code> attribute, and can be one of the following:         <dl> <dt><code>\"content-language\"</code> <i> </i></dt> <dd>Defines the default language of the page. It can be overridden by the lang attribute on any element.                 <div>Do not use this value, as it is obsolete. Prefer the <code>lang</code> attribute on the <code>&lt;html&gt;</code> element.</div> </dd> <dt><code>\"content-security-policy\"</code></dt> <dd>Allows page authors to define a content policy  for the current page. Content policies mostly specify allowed server  origins and script endpoints, which helps guard against cross-site  scripting attacks.</dd> <dt><code>\"content-type\"</code> <i> </i></dt> <dd>Defines the MIME type of the document, followed by its character encoding. It follows the same syntax as the HTTP <code>content-type</code> entity-header field, but as it is inside an HTML page, most values other than <code>text/html</code> are impossible. Therefore the valid syntax for its <code>content</code> is the string '<code>text/html</code>' followed by a character set with the following syntax: '<code>; charset=<em>IANAcharset</em></code>', where <code>IANAcharset</code> is the <em>preferred MIME name</em> for a character set as defined by the IANA. <div><strong>Usage note:</strong> <ul> <li>Do not use this value, as it is obsolete. Prefer the <code>charset</code> attribute on the <code>&lt;meta&gt;</code> element.</li> <li>As <code>&lt;meta&gt;</code> can't change documents' types in XHTML or HTML5's XHTML serialization, never set the MIME type to an XHTML MIME type with <code>&lt;meta&gt;</code>.</li> </ul> </div> </dd> <dt><code>\"refresh\"</code></dt> <dd>This instruction specifies:                 <ul> <li>The number of seconds until the page should be reloaded, if the <code>content</code> attribute contains only a positive integer.</li> <li>The number of seconds until the page should redirect to another, if the <code>content</code> attribute contains a positive integer followed by the string '<code>;url=</code>', then a valid URL.</li> </ul> </dd> <dt><code>\"set-cookie\"</code> <i> </i></dt> <dd>Defines a cookie for the page. Its content must follow the syntax defined in the IETF HTTP Cookie Specification.                 <div><strong>Note:</strong> Do not use this instruction, as it is obsolete. Use the HTTP header <code>Set-Cookie</code> instead.</div> </dd> </dl> </dd> <dt><strong><code>name</code></strong></dt> <dd> <p>This attribute defines the name of a piece of document-level metadata. It should not be set if one of the attributes <code>itemprop</code>, <code>http-equiv</code> or <code>charset</code> is also set.</p> <p>This metadata name is associated with the value contained by the <code>content</code> attribute. The possible values for the name attribute are:</p> <ul> <li><code>application-name</code> defines the name of the application running in the web page.                  <div><strong>Note:</strong> <ul> <li>Browsers may use this to identify the application. It is different from the <code>&lt;title&gt;</code> element, which usually contain the application name, but may also contain information like the document name or a status.</li> <li>Simple web pages shouldn't define an application-name.</li> </ul> </div> </li> <li><code>author</code> defines the name of the document's author.</li> <li><code>description</code> contains a short and accurate summary of  the content of the page. Several browsers, like Firefox and Opera, use  this as the default description of bookmarked pages.</li> <li><code>generator</code> contains the identifier of the software that generated the page.</li> <li><code>keywords</code> contains words relevant to the page's content, separated by commas.</li> <li><code>referrer</code> <i> </i> controls the <code>Referer</code> HTTP header attached to requests sent from the document:                 <table> <caption>Values for the <code>content</code> attribute of <code>&lt;meta name=\"referrer\"&gt;</code></caption> <tbody> <tr> <td><code>no-referrer</code></td> <td>Do not send a HTTP <code>Referer</code> header.</td> </tr> <tr> <td><code>origin</code></td> <td>Send the origin of the document.</td> </tr> <tr> <td><code>no-referrer-when-downgrade</code></td> <td>Send the origin  as referrer to URLs as secure as the current page, (https→https), but  don't send a referrer to less secure URLs (https→http). This is the  default behavior.</td> </tr> <tr> <td><code>origin-when-crossorigin</code></td> <td>Send the full URL (stripped of parameters) for same-origin requests, but only send the origin for other cases.</td> </tr> <tr> <td><code>unsafe-URL</code></td> <td>Send the full URL (stripped of parameters) for same-origin or cross-origin requests.</td> </tr> </tbody> </table> <div> <ul> <li>Some browsers support the deprecated values <code>always</code>, <code>default</code>, and <code>never</code> for referrer.</li> <li>Dynamically inserting <code>&lt;meta name=\"referrer\"&gt;</code> (with <code>document.write</code> or <code>appendChild</code>) makes referrer behavior unpredictable.</li> <li>When several conflicting policies are defined, the no-referrer policy is applied.</li> </ul> </div> <p>The attribute may also have a value taken from the extended list defined on WHATWG Wiki MetaExtensions page. Although none have been formally accepted yet, a few commonly used names are:</p> <ul> <li><code>creator</code> defines the name of the creator of the document, such as an organization or institution. If there are more than one, several <code>&lt;meta&gt;</code> elements should be used.</li> <li><code>googlebot</code>, a synonym of <code>robots</code>, but is only followed by Googlebot, the indexing crawler for Google.</li> <li><code>publisher</code> defines the name of the document's publisher.</li> <li><code>robots</code> defines the behavior that cooperative  crawlers, or \"robots\", should use with the page. It is a comma-separated  list of the values below:                         <table> <caption>Values for the content of <code>&lt;meta name=\"robots\"&gt;</code></caption> <thead> <tr> <th scope=\"col\">Value</th> <th scope=\"col\">Description</th> <th scope=\"col\">Used by</th> </tr> </thead> <tbody> <tr> <td><code>index</code></td> <td>Allows the robot to index the page (default).</td> <td>All</td> </tr> <tr> <td><code>noindex</code></td> <td>Requests the robot to not index the page.</td> <td>All</td> </tr> <tr> <td><code>follow</code></td> <td>Allows the robot to follow the links on the page (default).</td> <td>All</td> </tr> <tr> <td><code>nofollow</code></td> <td>Requests the robot to not follow the links on the page.</td> <td>All</td> </tr> <tr> <td><code>none</code></td> <td>Equivalent to <code>noindex, nofollow</code></td> <td>Google</td> </tr> <tr> <td><code>noodp</code></td> <td>Prevents using the Open Directory Project description, if any, as the page description in search engine results.</td> <td> <p>Google, Yahoo, Bing</p> </td> </tr> <tr> <td><code>noarchive</code></td> <td>Requests the search engine not cache the page content.</td> <td>Google, Yahoo, Bing</td> </tr> <tr> <td><code>nosnippet</code></td> <td>Prevents displaying any description of the page in search engine results.</td> <td>Google, Bing</td> </tr> <tr> <td><code>noimageindex</code></td> <td>Requests this page not appear as the referring page of an indexed image.</td> <td>Google</td> </tr> <tr> <td><code>nocache</code></td> <td>Synonym of <code>noarchive</code>.</td> <td>Bing</td> </tr> </tbody> </table> <div><strong>Notes:</strong> <ul> <li>Only cooperative robots follow these rules. Do not expect to prevent e-mail harvesters with them.</li> <li>The robot still needs to access the page in order to read these rules. To prevent bandwidth consumption, use a <em>robots.txt</em> file.</li> <li>If you want to remove a page, <code>noindex</code> will work, but only after the robot visits the page again. Ensure that the <code>robots.txt</code> file doesn't preventing revisits. Some search engines have developer's tools, allowing quick removal of pages.</li> <li>Some values are mutually exclusive, like <code>index</code> and <code>noindex</code>, or <code>follow</code> and <code>nofollow</code>. In these cases the robot's behavior is undefined and may vary between them.</li> <li>Some crawler robots, like Google, Yahoo, and Bing, support the same values for the HTTP header <code>X-Robot-Tags</code>; this allows non-HTML documents like images to use these rules.</li> </ul> </div> </li> <li><code>slurp</code>, a synonym of <code>robots</code>, but only for Slurp, the crawler for Yahoo Search.</li> </ul> <p>Finally, a few names are in common use, though not in the process of being standardized:</p> <ul> <li><code>viewport</code>, which gives hints about the size of the initial size of the viewport. Used by mobile devices only.                          <table> <caption>Values for the content of <code>&lt;meta name=\"viewport\"&gt;</code></caption> <thead> <tr> <th scope=\"col\">Value</th> <th scope=\"col\">Possible subvalues</th> <th scope=\"col\">Description</th> </tr> </thead> <tbody> <tr> <td><code>width</code></td> <td>A positive integer number, or the text <code>device-width</code></td> <td>Defines the pixel width of the viewport, or allows the viewport to adapt to the device's screen width.</td> </tr> <tr> <td><code>height</code></td> <td>A positive integer, or the text <code>device-height</code></td> <td>Defines the height of the viewport. Not used by any browser.</td> </tr> <tr> <td><code>initial-scale</code></td> <td>A positive number between <code>0.0</code> and <code>10.0</code></td> <td>Defines the ratio between the device width (<code>device-width</code> in portrait mode or <code>device-height</code> in landscape mode) and the viewport size.</td> </tr> <tr> <td><code>maximum-scale</code></td> <td>A positive number between <code>0.0</code> and <code>10.0</code></td> <td>Defines the maximum amount to zoom in. It must be greater or equal to the <code>minimum-scale</code> or the behavior is undefined. Browser settings can ignore this rule, and iOS10+ ignores it by default.</td> </tr> <tr> <td><code>minimum-scale</code></td> <td>A positive number between <code>0.0</code> and <code>10.0</code></td> <td>Defines the minimum zoom level. It must be smaller or equal to the <code>maximum-scale</code> or the behavior is undefined. Browser settings can ignore this rule, and iOS10+ ignores it by default.</td> </tr> <tr> <td><code>user-scalable</code></td> <td><code>yes</code> or <code>no</code></td> <td>If set to <code>no</code>, the user is not able to zoom in the webpage. The default is <code>yes</code>. Browser settings can ignore this rule, and iOS10+ ignores it by default.</td> </tr> </tbody> </table> <table> <thead> <tr> <th scope=\"col\">Specification</th> <th scope=\"col\">Status</th> <th scope=\"col\">Comment</th> </tr> </thead> <tbody> <tr> <td>CSS Device Adaptation<br /><small lang=\"en-US\">The definition of '&lt;meta name=\"viewport\"&gt;' in that specification.</small></td> <td>Working Draft</td> <td>Non-normatively describes the Viewport META element</td> </tr> </tbody> </table> <div>See also: <code>@viewport</code></div> <div><strong>Notes:</strong> <ul> <li>Though unstandardized, this declaration is respected by most mobile browsers due to de-facto dominance.</li> <li>The default values may vary between devices and browsers.</li> <li>To learn about this declaration in Firefox for Mobile, see this article.</li> </ul> </div> </li> </ul> </li> </ul> </dd> <dt><strong><code>scheme</code></strong> <i> </i></dt> <dd>This attribute defines the scheme in which metadata is described. A  scheme is a context leading to the correct interpretations of the <code>content</code> value, like a format.         <div><strong>Notes:</strong> Do not use this value, as it is obsolete. There is no replacement as there was no real usage for it.</div> </dd> </dl> <h2>Notes</h2> <p>Depending on the attributes set, the kind of metadata can be one of the following:</p> <ul> <li>If <code>name</code> is set, it is <em>document-level</em> <em>metadata</em>, applying to the whole page.</li> <li>If <code>http-equiv</code> is set, it is a <em>pragma directive</em> — information normally given by the web server about how the web page is served.</li> <li>If <code>charset</code> is set, it is a <em>charset declaration</em> — the character encoding used by the webpage.</li> <li>If <code>itemprop</code> is set, it is <em>user-defined metadata</em> — transparent for the user-agent as the semantics of the metadata is user-specific.&nbsp;<i> </i></li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta"
                    ], 
                    "flags": 0, 
                    "guid": "p{3bGwE3)1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;style&gt;</code>", 
                        "", 
                        "<small>HTML document metadata element</small><br />contains<b> style information</b> for a document, or part of a document. By default, the style instructions written inside that element are expected to be CSS", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>type</code></strong></dt> <dd>This attribute defines the styling language as a MIME type (charset  should not be specified). This attribute is optional and default to <code>text/css</code> if it's missing.</dd> <dt><strong><code>media</code></strong></dt> <dd>This attribute&nbsp;defines which media the style should apply to. It's value is a media query, which default to <code>all</code> if the attribute is missing.</dd> <dt><strong><code>title</code></strong></dt> <dd>Specifies alternative style sheet sets.</dd> <dt><strong><code>scoped</code></strong> <i> </i> <i> </i></dt> <dd>Specifies that the styles only apply to this element's parent element and that element's child elements.</dd></dl>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/style"
                    ], 
                    "flags": 0, 
                    "guid": "Fa/H4+iN5(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;title&gt;</code>", 
                        "", 
                        "<small>HTML document metadata element</small><br />defines the <b>title of the document</b>, shown in a browser's title bar or on the page's tab. It can only contain text, and any contained tags are ignored", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/title"
                    ], 
                    "flags": 0, 
                    "guid": "Ij1U!ts!O{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;address&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br />supplies <b>contact information</b> for its nearest <code>&lt;article&gt;</code> or <code>&lt;body&gt;</code> ancestor; in the latter case, it applies to the whole document", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>To represent an arbitrary address, one that is not related to the contact information, use a <code>&lt;p&gt;</code> element rather than the <code>&lt;address&gt;</code> element.</li> <li>This element should not contain more information than the contact information, like a publication date (which belongs in a <code>&lt;time&gt;</code> element).</li> <li>Typically an <code>&lt;address&gt;</code> element can be placed inside the <code>&lt;footer&gt;</code> element of the current section, if any.</li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/address"
                    ], 
                    "flags": 0, 
                    "guid": "P/uXWXM2!#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;article&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br />represents a <b>self-contained composition</b> in a document, page, application, or site, which is intended to be independently distributable or reusable (e.g., in syndication). Examples include: a forum post, a magazine or newspaper article, or a blog entry", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Each <code>&lt;article&gt;</code> should be identified, typically by including a heading (<code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code> element) as a child of the <code>&lt;article&gt;</code> element.</li> <li>When an <code>&lt;article&gt;</code> element is nested, the inner  element represents an article related to the outer element. For example,  the comments of a blog post can be <code>&lt;article&gt;</code> elements nested in the <code>&lt;article&gt;</code> representing the blog post.</li> <li>Author information of an <code>&lt;article&gt;</code> element can be provided through the <code>&lt;address&gt;</code> element, but it doesn't apply to nested <code>&lt;article&gt;</code> elements.</li> <li>The publication date and time of an <code>&lt;article&gt;</code> element can be described using the <code>datetime</code> attribute of a <code>&lt;time&gt;</code> element. <em>Note that the&nbsp;<code>pubdate</code> attribute of <code>&lt;time&gt;</code> is no longer a part of the W3C HTML 5 standard.</em></li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article"
                    ], 
                    "flags": 0, 
                    "guid": "zHRpe7)=F]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;aside&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br />represents a section of a document with <b>content connected tangentially to the main content</b> of the document (often presented as a sidebar)", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Do not use the <code>&lt;aside&gt;</code> element to tag parenthesized text, as this kind of text is considered part of the main flow.</li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/aside"
                    ], 
                    "flags": 0, 
                    "guid": "iss^Z~D4=0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;footer&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br /><b>footer for its nearest sectioning element</b>. A footer typically contains information about the author of the section, copyright data or links to related documents", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Enclose information about the author in an <code>&lt;address&gt;</code> element that can be included into the <code>&lt;footer&gt;</code> element.</li> <li>The <code>&lt;footer&gt;</code> element is not sectioning content and therefore doesn't introduce a new section in the outline.</li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer"
                    ], 
                    "flags": 0, 
                    "guid": "HHO{y;cv;%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;h1–h6&gt;</code>", 
                        "", 
                        "HTML content sectioning elements represent six levels of section <b>headings</b>. <code>&lt;h1&gt;</code> is the highest section level and <code>&lt;h6&gt;</code> is the lowest", 
                        "", 
                        "<h2>Attributes</h2> <p>These elements include the global attributes.</p> <p>The <code>align</code> attribute is obsolete; don't use it.</p> <h2>Usage notes</h2> <ul> <li>Heading information may be used by user agents, for example, to construct a table of contents for a document automatically.</li> <li>Do not use lower levels to decrease heading font size: use the CSS <code>font-size</code> property instead.</li> <li>Avoid skipping heading levels: always start from <code>&lt;h1&gt;</code>, next use <code>&lt;h2&gt;</code> and so on.</li> <li>With the <code>&lt;section&gt;</code>  element, you should consider avoiding using &lt;h1&gt; more than once  on a page; by convention and for&nbsp;accessibility, it's used for the page's  displayed title, with all headings below starting with <code>&lt;h2&gt;</code>. When using sections, you should use one <code>&lt;h1&gt;</code> per section. See \"Defining sections\" in Using HTML sections and outlines for more information.</li> </ul> <h2>Examples</h2> <h3>All headings</h3> <p>The following code shows all the heading levels, in use.</p> <pre><code>&lt;h1&gt;Heading level 1&lt;/h1&gt; &lt;h2&gt;Heading level 2&lt;/h2&gt; &lt;h3&gt;Heading level 3&lt;/h3&gt; &lt;h4&gt;Heading level 4&lt;/h4&gt; &lt;h5&gt;Heading level 5&lt;/h5&gt; &lt;h6&gt;Heading level 6&lt;/h6&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/h1–h6"
                    ], 
                    "flags": 0, 
                    "guid": "H((N>_#t/[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;header&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br /><b>group of introductory or navigational aids</b>. It may contain some heading elements but also other elements like a logo, a search form, and so on", 
                        "", 
                        "<h2>Usage notes</h2> <p>The <code>&lt;header&gt;</code> element is not sectioning content and therefore does not introduce a new section in the outline. That said, a <code>header</code> element is intended to usually contain the surrounding <code>section</code>'s heading (an <code>h1</code>–<code>h6</code> element), but this is <strong>not</strong> required.</p> <h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <pre><code>&lt;header&gt;   &lt;h1&gt;Main Page Title&lt;/h1&gt;   &lt;img src=\"mdn-logo-sm.png\" alt=\"MDN logo\"&gt; &lt;/header&gt;</code></pre> <h1></h1>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header"
                    ], 
                    "flags": 0, 
                    "guid": "cUQ3sFq2r6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;hgroup&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br>represents a multi-level heading for a section of a document. It groups a set of <code>&lt;h1&gt;–&lt;h6&gt;</code> elements", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <div> <p>The <code>&lt;hgroup&gt;</code> element has been removed from the  HTML5 (W3C) specification, but it still is in the WHATWG version of  HTML. It is partially implemented in most browsers, though, so is  unlikely to go away.<br />  However, given that a key purpose of the <code>&lt;hgroup&gt;</code> element is to affect how headings are displayed by the outline algorithm defined in the HTML specification—but <strong>the HTML outline algorithm is not implemented in any browsers</strong>—then the <code>&lt;hgroup&gt;</code> semantics are in practice only theoretical.<br />  So the HTML5 (W3C) specification provides advice on how to mark up Subheadings, subtitles, alternative titles and taglines without using <code>&lt;hgroup&gt;</code>.</p> </div> <p>The <code>&lt;hgroup&gt;</code> element allows the primary heading  for a document section to be grouped with any secondary headings—such as  subheadings or alternative titles—to form a <em>multi-level</em> heading.</p> <p>In other words, the <code>&lt;hgroup&gt;</code> element prevents any of its secondary <code>&lt;h1&gt;–&lt;h6&gt;</code> children from creating separate sections of their own in the outline—as those&nbsp;<code>&lt;h1&gt;–&lt;h6&gt;</code> elements otherwise normally would if they were not children of any <code>&lt;hgroup&gt;</code>.</p> <p>So in the abstract outline produced by the HTML outline algorithm defined in the HTML specification, the <code>&lt;hgroup&gt;</code> as a whole forms a single logical heading, with the entire set of <code>&lt;h1&gt;–&lt;h6&gt;</code> children of the <code>&lt;hgroup&gt;</code> going into the outline as one <em>multi-level</em> unit, to comprise that single logical heading in the abstract outline.</p> <p>To produce any (non-abstract) <em>rendered</em> view of such an outline, some choice must be made in the design of the rendering tool about how to render <code>&lt;hgroup&gt;</code> headings in such a way as to convey their multi-level nature. There are a variety of ways an <code>&lt;hgroup&gt;</code> might be shown in a rendered outline; for example:</p> <ul> <li>an <code>&lt;hgroup&gt;</code> might be shown in a rendered outline in with a colon character and space (“<code>: </code>”)  or other such punctuation after the primary heading and before the  first secondary heading (and with the same or similar punctuation before  any other secondary headings</li> <li>an <code>&lt;hgroup&gt;</code> might be shown in a rendered outline in with the primary heading followed by parentheses around the secondary heading(s)</li> </ul> <p>Consider the following HTML document:</p> <pre><code>&lt;!DOCTYPE html&gt; &lt;title&gt;HTML Standard&lt;/title&gt; &lt;body&gt;   &lt;hgroup&gt;     &lt;h1&gt;HTML&lt;/h1&gt;     &lt;h2&gt;Living Standard — Last Updated 12 August 2016&lt;/h2&gt;   &lt;/hgroup&gt;   &lt;p&gt;Some intro to the document.&lt;/p&gt;   &lt;h2&gt;Table of contents&lt;/h2&gt;   &lt;ol id=toc&gt;...&lt;/ol&gt;   &lt;h2&gt;First section&lt;/h2&gt;   &lt;p&gt;Some intro to the first section.&lt;/p&gt; &lt;/body&gt;</code></pre> <p>A rendered outline for that document might look like the following:</p> <p><img src=\"outline-colon.png\" /></p> <p>That is, the rendered outline might show the primary title, <em>HTML</em>, followed by a colon and space, followed by the secondary title, <em>Living Standard — Last Updated 12 August 2016</em>.</p> <p>Or, the rendered outline for that document might instead look like the following:</p> <p><img src=\"outline-paren.png\" /></p> <p>That is, the rendered outline might show the primary title, <em>HTML</em>, followed by the secondary title shown in parentheses:<em> (Living Standard — Last Updated 12 August 2016)</em>.</p> <h2>Examples</h2> <pre><code>&lt;hgroup&gt;   &lt;h1&gt;HTML&lt;/h1&gt;   &lt;h2&gt;Living Standard — Last Updated 12 August 2016&lt;/h2&gt; &lt;/hgroup&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hgroup"
                    ], 
                    "flags": 0, 
                    "guid": "IVmL@5|dm8", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;nav&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br />represents a section of a page whose purpose is to provide <b>navigation links</b>, either within the current document or to other documents. Common examples of navigation sections are menus, tables of contents, and indexes", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Not all links of a document must be in a <code>&lt;nav&gt;</code> element, which is intended only for major block of navigation links; typically the <code>&lt;footer&gt;</code> element often has a list of links that don't need to be in a <code>&lt;nav&gt;</code> element.</li> <li>A document may have several <code>&lt;nav&gt;</code> elements, for example, one for site navigation and one for intra-page navigation.</li> <li>User agents, such as screen readers targeting disabled users, can  use this element to determine whether to omit the initial rendering of  this content.</li> </ul> <h2>Examples</h2> <p>In this example, a <code>&lt;nav&gt;</code> block is used to contain an unordered list (<code>&lt;ul&gt;</code>) of links. With appropriate CSS, this can be presented as a sidebar, navigation bar, or drop-down menu.</p> <pre><code>&lt;nav&gt;   &lt;ul&gt;     &lt;li&gt;&lt;a&gt;Home&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a&gt;About&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a&gt;Contact&lt;/a&gt;&lt;/li&gt;   &lt;/ul&gt; &lt;/nav&gt;</code></pre> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav"
                    ], 
                    "flags": 0, 
                    "guid": "pem%iGxKnS", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;section&gt;</code>", 
                        "", 
                        "<small>HTML content sectioning element</small><br /><b>standalone section</b> of functionality contained within an HTML document, typically with a heading, which doesn't have a more specific semantic element to represent it", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Each <code>&lt;section&gt;</code> should be identified, typically by including a heading (<code>&lt;h1&gt;</code>-<code>&lt;h6&gt;</code> element) as a child of the <code>&lt;section&gt;</code> element.</li> <li>If it makes sense to separately syndicate the content of a <code>&lt;section&gt;</code> element, use an <code>&lt;article&gt;</code> element instead.</li> <li>Do not use the <code>&lt;section&gt;</code> element as a generic container; this is what <code>&lt;div&gt;</code>  is for, especially when the sectioning is only for styling purposes. A  rule of thumb is that a section should logically appear in the outline  of a document.</li> </ul> <h2>Example 1</h2> <h3>Before</h3> <pre><code>&lt;div&gt;   &lt;h1&gt;Heading&lt;/h1&gt;   &lt;p&gt;Bunch of awesome content&lt;/p&gt; &lt;/div&gt;</code></pre> <h3>After</h3> <pre><code>&lt;section&gt;   &lt;h1&gt;Heading&lt;/h1&gt;   &lt;p&gt;Bunch of awesome content&lt;/p&gt; &lt;/section&gt;</code></pre> <h2>Example 2</h2> <h3>Before</h3> <pre><code>&lt;div&gt;   &lt;h2&gt;Heading&lt;/h2&gt;   &lt;img src=\"bird.jpg\" alt=\"bird\"&gt; &lt;/div&gt;</code></pre> <h3>After</h3> <pre><code>&lt;section&gt;   &lt;h2&gt;Heading&lt;/h2&gt;   &lt;img src=\"bird.jpg\" alt=\"bird\"&gt; &lt;/section&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section"
                    ], 
                    "flags": 0, 
                    "guid": "cISwLWSxh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;blockquote&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br /><b>extended quotation</b>,&nbsp;usually indentated<div>source URL may be given using the <code>cite</code> attribute, while a text representation of the source can be given using the <code>&lt;cite&gt;</code> element</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>cite</code></strong></dt> <dd>A URL that designates a source document or message for the  information quoted. This attribute is intended to point to information  explaining the context or the reference for the quote.</dd> </dl> <h2>Notes</h2> <p>To change <code>&lt;blockquote&gt;</code> indent, use CSS <code>margin</code> property.</p> <p>For short quotes use the <code>&lt;q&gt;</code> element.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote"
                    ], 
                    "flags": 0, 
                    "guid": "yX`#OIb~CF", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;dd&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />indicates the <b>description of a term</b> in a description list (<code>&lt;dl&gt;</code>)", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>nowrap</code></strong> <i> </i></dt> <dd>If the value of this attribute is set to <code>yes</code>, the definition text will not wrap. The default value is <code>no</code>.</dd> </dl> <h2>Example</h2> <p>For an example, see &lt;dl&gt; examples.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dd"
                    ], 
                    "flags": 0, 
                    "guid": "x&[H32bMr[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;div&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />is the <b>generic container</b> for flow content and does not inherently represent anything. Use it to group elements for purposes such as styling (using the <code>class</code> or <code>id</code> attributes), marking a section of a document in a different language (using the <code>lang</code> attribute), and so on", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <p>The <strong>align</strong> attribute is obsolete; do not use it anymore.</p> <h2>Usage notes</h2> <ul> <li>The &lt;div&gt; element should be used only when no other semantic element (such as <code>&lt;article&gt;</code> or <code>&lt;nav&gt;</code>) is appropriate.</li> </ul> <h2>Examples</h2> <pre><code>&lt;div&gt;   &lt;p&gt;Any kind of content here. Such as   &amp;lt;p&amp;gt;, &amp;lt;table&amp;gt;. You name it!&lt;/p&gt; &lt;/div&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div"
                    ], 
                    "flags": 0, 
                    "guid": "hPxXszXyRZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;dl&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />represents a <b>description list</b>. The element encloses a list of groups of terms and descriptions. Common uses for this element are to implement a glossary or to display metadata (a list of key-value pairs)", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>compact</code></strong> <i> </i></dt> <dd>Forces the description to appear on the same line as the term. This attribute is currently unsupported</dd> </dl> <h2>Examples</h2> <h3>Single term and description</h3> <pre><code>&lt;dl&gt;   &lt;dt&gt;Firefox&lt;/dt&gt;   &lt;dd&gt;     A free, open source, cross-platform,     graphical web browser developed by the     Mozilla Corporation and hundreds of     volunteers.   &lt;/dd&gt;    &lt;!-- Other terms and descriptions --&gt; &lt;/dl&gt;</code></pre> <p>Output:</p> <p><img src=\"=HTML-dl1.png\" /></p> <h3>Multiple terms, single description</h3> <pre><code>&lt;dl&gt;   &lt;dt&gt;Firefox&lt;/dt&gt;   &lt;dt&gt;Mozilla Firefox&lt;/dt&gt;   &lt;dt&gt;Fx&lt;/dt&gt;   &lt;dd&gt;     A free, open source, cross-platform,     graphical web browser developed by the     Mozilla Corporation and hundreds of     volunteers.   &lt;/dd&gt;    &lt;!-- Other terms and descriptions --&gt; &lt;/dl&gt;</code></pre> <p>Output:</p> <p><img src=\"=HTML-dl2.png\" /></p> <h3>Single term, multiple descriptions</h3> <pre><code>&lt;dl&gt;   &lt;dt&gt;Firefox&lt;/dt&gt;   &lt;dd&gt;     A free, open source, cross-platform,     graphical web browser developed by the     Mozilla Corporation and hundreds of     volunteers.   &lt;/dd&gt;   &lt;dd&gt;     The Red Panda also known as the Lesser     Panda, Wah, Bear Cat or Firefox, is a     mostly herbivorous mammal, slightly large     than a domestic cat (60 cm long).   &lt;/dd&gt;    &lt;!-- Other terms and descriptions --&gt; &lt;/dl&gt;</code></pre> <p>Output:</p> <p><img src=\"=HTML-dl3.png\" /></p> <h3>Multiple terms and descriptions</h3> <p>It is also possible to define multiple terms with multiple corresponding descriptions, by combining the examples above.</p> <h3>Metadata</h3> <p>Description lists are useful for displaying metadata as a list of key-value pairs.</p> <pre><code>&lt;dl&gt;   &lt;dt&gt;Name&lt;/dt&gt;       &lt;dd&gt;Godzilla&lt;/dd&gt;   &lt;dt&gt;Born&lt;/dt&gt;   &lt;dd&gt;1952&lt;/dd&gt;   &lt;dt&gt;Birthplace&lt;/dt&gt;   &lt;dd&gt;Japan&lt;/dd&gt;   &lt;dt&gt;Color&lt;/dt&gt;   &lt;dd&gt;Green&lt;/dd&gt; &lt;/dl&gt;</code></pre> <p>Tip: It can be handy to define a key-value seperator in the CSS, such as:</p> <pre><code>dt::after {   content: \": \"; }</code></pre> <h3>Wrapping name-value groups in <code>&lt;div&gt;</code> elements</h3> <p>WHATWG HTML allows wrapping each name-value group in a <code>&lt;dl&gt;</code> element in a <code>&lt;div&gt;</code> element. This can be useful when using microdata, or when global attributes apply to a whole group, or for styling purposes.</p> <pre><code>&lt;dl&gt;   &lt;div&gt;     &lt;dt&gt;Name&lt;/dt&gt;     &lt;dd&gt;Godzilla&lt;/dd&gt;   &lt;/div&gt;   &lt;div&gt;     &lt;dt&gt;Born&lt;/dt&gt;     &lt;dd&gt;1952&lt;/dd&gt;   &lt;/div&gt;   &lt;div&gt;     &lt;dt&gt;Birthplace&lt;/dt&gt;     &lt;dd&gt;Japan&lt;/dd&gt;   &lt;/div&gt;   &lt;div&gt;     &lt;dt&gt;Color&lt;/dt&gt;     &lt;dd&gt;Green&lt;/dd&gt;   &lt;/div&gt; &lt;/dl&gt;</code></pre> <h2>Notes</h2> <p>Do not use this element&nbsp;(nor <code>&lt;ul&gt;</code>  elements)&nbsp;to merely create indention on a page. Although it works, this  is a bad practice and obscures the meaning of description&nbsp;lists.</p> <p>To change the indention of a description term, use the CSS <code>margin</code> property.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dl"
                    ], 
                    "flags": 0, 
                    "guid": "l>J&?:.f*-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;dt&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />identifies a <b>term in a description list</b>. This element can occur only as a child element of a <code>&lt;dl&gt;</code>. It is usually followed by a <code>&lt;dd&gt;</code> element; however, multiples of this&nbsp;element in a row indicate several terms that are all defined by the immediate next <code>&lt;dd&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <p>For example see description list.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dt"
                    ], 
                    "flags": 0, 
                    "guid": "eg(jyRF/Tw", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;figcaption&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br>represents a caption or a legend associated with a figure or an illustration described by the rest of the data of the <code>&lt;figure&gt;</code> element which is its immediate ancestor", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Examples</h2> <p>Please see the <code>&lt;figure&gt;</code> page for examples on <code>&lt;figcaption&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figcaption"
                    ], 
                    "flags": 0, 
                    "guid": "L+><poVJGa", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;figure&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br>represents self-contained content, frequently with a caption (<code>&lt;figcaption&gt;</code>), and is typically referenced as a single unit", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Usually a <code>&lt;figure&gt;</code> is an image, illustration,  diagram, code snippet, etc., that is referenced in the main flow of a  document, but that can be moved to another part of the document or to an  appendix without affecting the main flow.</li> <li>Being a sectioning root, the outline of the content of the <code>&lt;figure&gt;</code> element is excluded from the main outline of the document.</li> <li>A caption can be associated with the <code>&lt;figure&gt;</code> element by inserting a <code>&lt;figcaption&gt;</code> inside it (as the first or the last child).</li> </ul> <h2>Examples</h2> <h3>Example 1</h3> <pre><code>&lt;!-- Just a figure --&gt; &lt;figure&gt;   &lt;img   src=\"https://developer.cdn.mozilla.net/media/img/mdn-logo-sm.png\"   alt=\"An awesome picture\"&gt; &lt;/figure&gt; &lt;p&gt;&lt;/p&gt; &lt;!-- Figure with figcaption --&gt; &lt;figure&gt;   &lt;img   src=\"https://developer.cdn.mozilla.net/media/img/mdn-logo-sm.png\"   alt=\"An awesome picture\"&gt;           &lt;figcaption&gt;Fig1. MDN Logo&lt;/figcaption&gt; &lt;/figure&gt; &lt;p&gt;&lt;/p&gt;</code></pre> <figure><img src=\"https://developer.cdn.mozilla.net/media/img/mdn-logo-sm.png\" /></figure> <figure><img src=\"https://developer.cdn.mozilla.net/media/img/mdn-logo-sm.png\" /> <figcaption>Fig1. MDN Logo</figcaption> </figure> <h3>Example 2</h3> <pre><code>&lt;figure&gt;   &lt;figcaption&gt;Get browser details using navigator&lt;/figcaption&gt;   &lt;pre&gt; function NavigatorExample() {   var txt;   txt = \"Browser CodeName: \" + navigator.appCodeName;   txt+= \"Browser Name: \" + navigator.appName;   txt+= \"Browser Version: \" + navigator.appVersion ;   txt+= \"Cookies Enabled: \" + navigator.cookieEnabled;   txt+= \"Platform: \" + navigator.platform;   txt+= \"User-agent header: \" + navigator.userAgent; }               &lt;/pre&gt; &lt;/figure&gt;</code></pre> <figure> <figcaption>Get browser details using navigator</figcaption> <pre><code>function NavigatorExample() {   var txt;   txt = \"Browser CodeName: \" + navigator.appCodeName;   txt+= \"Browser Name: \" + navigator.appName;   txt+= \"Browser Version: \" + navigator.appVersion ;   txt+= \"Cookies Enabled: \" + navigator.cookieEnabled;   txt+= \"Platform: \" + navigator.platform;   txt+= \"User-agent header: \" + navigator.userAgent; }</code></pre></figure><figure> </figure> <h3>Example 3</h3> <pre><code>&lt;figure&gt;   &lt;figcaption&gt;&lt;cite       &gt;Edsger Dijkstra :-&lt;/cite&gt;&lt;/figcaption&gt;   &lt;p&gt;\"If debugging is the process of removing software bugs,   &lt;br /&gt;   then programming must be the process of putting them in\"&lt;/p&gt; &lt;/figure&gt;</code></pre> <figure> <figcaption><cite>Edsger Dijkstra :-</cite></figcaption> <p>\"If debugging is the process of removing software bugs,<br /> then programming must be the process of putting them in\"</p> <h3>Example 4</h3> <p>&lt;figure&gt; element could be used to markup a poem.</p> <pre><code>&lt;figure&gt;  &lt;p&gt;   Depression is running through my head,&lt;br&gt;   These thoughts make me think of death,&lt;br&gt;   A darkness which blanks my mind,&lt;br&gt;   A walk through the graveyard, what can I find?....  &lt;/p&gt;  &lt;figcaption&gt;&lt;cite&gt;Depression&lt;/cite&gt;.   By: Darren Harris&lt;/figcaption&gt; &lt;/figure&gt;</code></pre></figure>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/figure"
                    ], 
                    "flags": 0, 
                    "guid": "cgxHC1j^hX", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;hr&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br /><b>thematic break</b> between paragraph-level elements, often represented a horizontal rule<div>for example, a change of scene in a story, or a shift of topic with a section</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>align</code></strong> <i> </i></dt> <dd>Sets the alignment of the rule on the page. If no value is specified, the default value is <code>left</code>.</dd> <dt><strong><code>color</code></strong> <i> </i></dt> <dd>Sets the color of the rule through color name or hexadecimal value.</dd> <dt><strong><code>noshade</code></strong>&nbsp;<i> </i></dt> <dd>Sets the rule to have no shading.</dd> <dt><strong><code>size</code></strong>&nbsp;<i> </i></dt> <dd>Sets the height, in pixels, of the rule.</dd> <dt><strong><code>width</code></strong>&nbsp;<i> </i></dt> <dd>Sets the length of the rule on the page through a pixel or percentage value.</dd> </dl> <h2>Example</h2> <pre><code>&lt;p&gt;   This is the first paragraph of text.   This is the first paragraph of text.   This is the first paragraph of text.   This is the first paragraph of text. &lt;/p&gt;  &lt;hr&gt;  &lt;p&gt;   This is the second paragraph of text.   This is the second paragraph of text.   This is the second paragraph of text.   This is the second paragraph of text. &lt;/p&gt;</code></pre> <p>Above HTML will output:</p> <p>This is the first paragraph of text. This is the first paragraph of  text. This is the first paragraph of text. This is the first paragraph  of text.</p> <hr /> <p>This is the second paragraph of text. This is the second paragraph of  text. This is the second paragraph of text. This is the second  paragraph of text.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/hr"
                    ], 
                    "flags": 0, 
                    "guid": "L[VRkfU%>J", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;li&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />is used to represent an <b>item in a list</b>. It must be contained in a parent element: an ordered list (<code>&lt;ol&gt;</code>), an unordered list (<code>&lt;ul&gt;</code>), or a menu (<code>&lt;menu&gt;</code>). In menus and unordered lists, list items are usually displayed using bullet points. In ordered lists, they are usually displayed with an ascending counter on the left, such as a number or letter", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>value</code></strong></dt> <dd>This integer attribute indicates the current ordinal value of the list item as defined by the <code>&lt;ol&gt;</code>  element. The only allowed value for this attribute is a number, even if  the list is displayed with Roman numerals or letters. List items that  follow this one continue numbering from the value set. The <strong>value</strong> attribute has no meaning for unordered lists (<code>&lt;ul&gt;</code>) or for menus (<code>&lt;menu&gt;</code>).  <div><strong>Note</strong>: This attribute was deprecated in HTML4, but reintroduced in HTML5.</div> <div> <p><strong>Note:</strong> Prior to Gecko&nbsp;9.0, negative values were incorrectly converted to 0. Starting in Gecko&nbsp;9.0 all integer values are correctly parsed.</p> </div> </dd> <dt><strong><code>type</code></strong> <i> </i></dt> <dd>This character attribute indicates the numbering type:  <ul> <li><code>a</code>: lowercase letters</li> <li><code>A</code>: uppercase letters</li> <li><code>i</code>: lowercase Roman numerals</li> <li><code>I</code>: uppercase Roman numerals</li> <li><code>1</code>: numbers</li> </ul>  This type overrides the one used by its parent <code>&lt;ol&gt;</code> element, if any.   <div><strong>Usage note:</strong> This attribute has been deprecated: use the CSS <code>list-style-type</code> property instead.</div> </dd> </dl> <h2>Examples</h2> <pre><code>&lt;ol&gt;     &lt;li&gt;first item&lt;/li&gt;     &lt;li&gt;second item&lt;/li&gt;     &lt;li&gt;third item&lt;/li&gt; &lt;/ol&gt;</code></pre> <p>The above HTML will output:</p> <ol> <li>first item</li> <li>second item</li> <li>third item</li> </ol> <pre><code>&lt;ol type=\"I\"&gt;     &lt;li value=\"3\"&gt;third item&lt;/li&gt;     &lt;li&gt;fourth item&lt;/li&gt;     &lt;li&gt;fifth item&lt;/li&gt; &lt;/ol&gt;</code></pre> <p>The above HTML will output:</p> <ol style=\"list-style-type: upper-roman;\" start=\"3\"> <li>third item</li> <li>fourth item</li> <li>fifth item</li> </ol> <pre><code>&lt;ul&gt;     &lt;li&gt;first item&lt;/li&gt;     &lt;li&gt;second item&lt;/li&gt;     &lt;li&gt;third item&lt;/li&gt; &lt;/ul&gt;</code></pre> <ul> <li>first item</li> <li>second item</li> <li>third item</li> </ul> <p>For more detailed examples, see the &lt;ol&gt; and &lt;ul&gt; pages.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/li"
                    ], 
                    "flags": 0, 
                    "guid": "m*<wa#%z^(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;main&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br /><b>main content of the <code>&lt;body&gt;</code> </b>of a document or application. The main content area consists of content that is directly related to, or expands upon the central topic of a document or the central functionality of an application", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <p>While the WHATWG living standard for HTML allows multiple <code>&lt;main&gt;</code> elements in a page, the W3C version of the specification does not. In addition, the W3C version of the HTML specification doesn't allow <code>&lt;main&gt;</code> as a descendant of <code>&lt;article&gt;</code>, <code>&lt;aside&gt;</code>, <code>&lt;footer&gt;</code>, <code>&lt;header&gt;</code>, or <code>&lt;nav&gt;</code>.</p> <p>The content of a <code>&lt;main&gt;</code> element should be unique  to the document, excluding any content that is repeated across a set of  documents such as sidebars, navigation links, copyright information,  site logos, and search forms (unless the document's main function is as a  search form).</p> <h2>Example</h2> <pre><code>&lt;!-- other content --&gt;  &lt;main&gt;   &lt;h1&gt;Apples&lt;/h1&gt;   &lt;p&gt;The apple is the pomaceous fruit of the apple tree.&lt;/p&gt;      &lt;article&gt;     &lt;h2&gt;Red Delicious&lt;/h2&gt;     &lt;p&gt;These bright red apples are the most common found in many     supermarkets.&lt;/p&gt;     &lt;p&gt;... &lt;/p&gt;     &lt;p&gt;... &lt;/p&gt;   &lt;/article&gt;    &lt;article&gt;     &lt;h2&gt;Granny Smith&lt;/h2&gt;     &lt;p&gt;These juicy, green apples make a great filling for     apple pies.&lt;/p&gt;     &lt;p&gt;... &lt;/p&gt;     &lt;p&gt;... &lt;/p&gt;   &lt;/article&gt;  &lt;/main&gt;  &lt;!-- other content --&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main"
                    ], 
                    "flags": 0, 
                    "guid": "t~hlUP`Mpw", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;ol&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />represents an <b>ordered list</b> of items, typically rendered as a numbered list", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>compact</code></strong><i> </i></dt> <dd>This Boolean attribute hints that the list should be rendered in a  compact style. The interpretation of this attribute depends on the user  agent and it doesn't work in all browsers. <div><strong>Note:</strong>&nbsp;Do not use this attribute, as it has been deprecated: the <code>&lt;ol&gt;</code> element should be styled using CSS. To give an effect similar to&nbsp;the <code>compact</code> attribute, the CSS property <code>line-height</code> can be used with a value of <code>80%</code>.</div></dd> <dt><strong><code>reversed</code></strong> HTML5</dt> <dd>This Boolean attribute specifies that the items of the list are specified in reversed order.</dd> <dt><strong><code>start</code></strong>HTML5</dt> <dd>This integer attribute specifies the start value for numbering the  individual list items. Although the ordering type of list elements might  be Roman numerals, such as XXXI, or letters, the value of start is  always represented as a number. To start numbering elements from the  letter \"C\", use <code>&lt;ol start=\"3\"&gt;</code>.  <div><strong>Note</strong>: This attribute was deprecated in HTML4, but reintroduced in HTML5.</div> </dd> <dt><strong><code>type</code></strong></dt> <dd>Indicates the numbering type:  <ul> <li><code>'a'</code> indicates lowercase letters,</li> <li><code>'A'</code> indicates uppercase letters,</li> <li><code>'i'</code> indicates lowercase Roman numerals,</li> <li><code>'I'</code> indicates uppercase Roman numerals,</li> <li>and <code>'1'</code> indicates numbers (default).</li> </ul> <p>The type set is used for the entire list unless a different <code>type</code> attribute is used within an enclosed <code>&lt;li&gt;</code> element.</p> <div><strong>Note:&nbsp;</strong>This attribute was deprecated  in HTML4, but reintroduced in HTML5. Unless the value of the list number  matters (e.g. in legal or technical documents where items are to be  referenced by their number/letter), the CSS <code>list-style-type</code> property should be used instead.</div> </dd> </dl> <h2>Usage notes</h2> <ul> <li>Typically, ordered-list items are displayed with a preceding  numbering, which can be of any form, like numerals, letters or Romans  numerals or even simple bullets. This numbered style is not defined in  the HTML description of the page, but in its associated CSS, using the <code>list-style-type</code> property.</li> <li>There is no limitation to the depth and alternation of nested lists defined with the <code>&lt;ol&gt;</code> and <code>&lt;ul&gt;</code> elements.</li> <li>The <code>&lt;ol&gt;</code> and <code>&lt;ul&gt;</code> both represent a list of items. They differ in the way that, with the <code>&lt;ol&gt;</code>  element, the order is meaningful. As a rule of thumb to determine which  one to use, try changing the order of the list items; if the meaning is  changed, the <code>&lt;ol&gt;</code> element should be used, else the <code>&lt;ul&gt;</code> is adequate.</li> </ul> <h2>Examples</h2> <h3>Simple example</h3> <pre><code>&lt;ol&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item&lt;/li&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ol&gt;</code></pre> <p>Above HTML will output:</p> <ol> <li>first item</li> <li>second item</li> <li>third item</li> </ol> <h3>Using the <code>start</code> attribute</h3> <pre><code>&lt;ol start=\"7\"&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item&lt;/li&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ol&gt;</code></pre> <p>Above HTML will output:</p> <ol start=\"7\"> <li>first item</li> <li>second item</li> <li>third item</li> </ol> <h3>Nesting lists</h3> <pre><code>&lt;ol&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item  &lt;!-- closing &lt;/li&gt; tag not here! --&gt;     &lt;ol&gt;       &lt;li&gt;second item first subitem&lt;/li&gt;       &lt;li&gt;second item second subitem&lt;/li&gt;       &lt;li&gt;second item third subitem&lt;/li&gt;     &lt;/ol&gt;   &lt;/li&gt;            &lt;!-- Here's the closing &lt;/li&gt; tag --&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ol&gt;</code></pre> <p>Above HTML will output:</p> <ol> <li>first item</li> <li>second item   <ol> <li>second item first subitem</li> <li>second item second subitem</li> <li>second item third subitem</li> </ol> </li> <li>third item</li> </ol> <h3>Nested &lt;ol&gt; and &lt;ul&gt;</h3> <pre><code>&lt;ol&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item  &lt;!-- closing &lt;/li&gt; tag not here! --&gt;     &lt;ul&gt;       &lt;li&gt;second item first subitem&lt;/li&gt;       &lt;li&gt;second item second subitem&lt;/li&gt;       &lt;li&gt;second item third subitem&lt;/li&gt;     &lt;/ul&gt;   &lt;/li&gt;            &lt;!-- Here's the closing &lt;/li&gt; tag --&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ol&gt;</code></pre> <p>Above HTML will output:</p> <ol> <li>first item</li> <li>second item   <ul> <li style=\"list-style-type: square;\">second item first subitem</li> <li style=\"list-style-type: square;\">second item second subitem</li> <li style=\"list-style-type: square;\">second item third subitem</li> </ul> </li> <li>third item</li></ol>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol"
                    ], 
                    "flags": 0, 
                    "guid": "y?gS+eX|sd", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;p&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br /><b>paragraph</b> of text", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <div> <p><strong>Note:</strong> The <code>align</code> attribute on <code>&lt;p&gt;</code>&nbsp;tags is obsolete and should no longer be used.</p> </div> <h2>Example</h2> <pre><code>&lt;p&gt;This is the first paragraph of text.   This is the first paragraph of text.   This is the first paragraph of text.   This is the first paragraph of text.&lt;/p&gt; &lt;p&gt;This is the second paragraph.  This is the second paragraph.  This is the second paragraph.  This is the second paragraph.&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/p"
                    ], 
                    "flags": 0, 
                    "guid": "Onyn{/XpGe", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;pre&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />represents <b>preformatted text</b>. Text within this element is typically displayed in a non-proportional (\"monospace\") font exactly as it is laid out in the file. Whitespace inside this element is displayed as typed", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <dl> <dt><strong><code>cols</code></strong> <i> </i><i> </i></dt> <dd>Contains the <em>preferred</em> count of characters that a line should have. It was a non-standard synonym of <code>width</code>. To achieve such an effect, use CSS <code>width</code> instead.</dd> <dt><strong><code>width</code></strong> <i> </i></dt> <dd>Contains the <em>preferred</em> count of characters that a line  should have. Though technically still implemented, this attribute has no  visual effect; to achieve such an effect, use CSS <code>width</code> instead.</dd> <dt><strong><code>wrap</code></strong> <i> </i></dt> <dd>Is a <em>hint</em> indicating how the overflow must happen. In  modern browser this hint is ignored and no visual effect results in its  present; to achieve such an effect, use CSS <code>white-space</code> instead.</dd> </dl> <h2>Examples</h2> <pre><code>&lt;!-- Some example CSS code --&gt; &lt;pre&gt; body {   color:red; } &lt;/pre&gt;</code></pre> <h3>Result</h3> <pre><code>body {   color:red; }</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/pre"
                    ], 
                    "flags": 0, 
                    "guid": "yk`7i88xM[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;ul&gt;</code>", 
                        "", 
                        "<small>HTML text content element</small><br />represents an <b>unordered list</b> of items, typically rendered as a bulleted list", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>compact</code></strong><i> </i></dt> <dd>This Boolean attribute hints that the list should be rendered in a  compact style. The interpretation of this attribute depends on the user  agent and it doesn't work in all browsers.  <div><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it has been deprecated: the <code>&lt;ul&gt;</code> element should be styled using CSS. To give a similar effect as the <code>compact</code> attribute, the CSS property line-height can be used with a value of <code>80%</code>.</div> </dd> </dl> <dl> <dt><strong><code>type</code></strong><i> </i></dt> <dd>Used to set the bullet style for the list. The values defined under HTML3.2 and the transitional version of HTML 4.0/4.01 are:  <ul> <li><code>circle</code>,</li> <li><code>disc</code>,</li> <li>and <code>square</code>.</li> </ul> <p>A fourth bullet type has been defined in the WebTV interface, but not all browsers support it: <code>triangle.</code></p> <p>If not present and if no CSS <code>list-style-type</code> property does apply to the element, the user agent decide to use a kind of bullets depending on the nesting level of the list.</p> <div><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated; use the CSS <code>list-style-type</code> property instead.</div> </dd> </dl> <h2>Usage notes</h2> <ul> <li>The <code>&lt;ul&gt;</code> element is for grouping a collection of  items that do not have a numerical ordering, and their order in the  list is meaningless. Typically, unordered-list items are displayed with a  bullet, which can be of several forms, like a dot, a circle or a  squared. The bullet style is not defined in the HTML description of the  page, but in its associated CSS, using the <code>list-style-type</code> property.</li> <li>There is no limitation to the depth and alternation&nbsp;of nested lists defined with the <code>&lt;ol&gt;</code> and <code>&lt;ul&gt;</code> elements.</li> <li>The <code>&lt;ol&gt;</code> and <code>&lt;ul&gt;</code> elements both represent a list of items. They differ in that, with the <code>&lt;ol&gt;</code>  element, the order is meaningful. As a rule of thumb to determine which  one to use, try changing the order of the list items; if the meaning is  changed, the <code>&lt;ol&gt;</code> element should be used, otherwise you can use <code>&lt;ul&gt;</code>.</li> </ul> <h2>Examples</h2> <h3>Simple example</h3> <pre><code>&lt;ul&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item&lt;/li&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ul&gt;</code></pre> <p>Above HTML will output:</p> <ul> <li>first item</li> <li>second item</li> <li>third item</li> </ul> <h3>Nesting list</h3> <pre><code>&lt;ul&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item        &lt;!-- Look, the closing &lt;/li&gt; tag is not placed here! --&gt;     &lt;ul&gt;       &lt;li&gt;second item first subitem&lt;/li&gt;       &lt;li&gt;second item second subitem       &lt;!-- Same for the second nested unordered list! --&gt;         &lt;ul&gt;           &lt;li&gt;second item second subitem first sub-subitem&lt;/li&gt;           &lt;li&gt;second item second subitem second sub-subitem&lt;/li&gt;           &lt;li&gt;second item second subitem third sub-subitem&lt;/li&gt;         &lt;/ul&gt;       &lt;/li&gt; &lt;!-- Closing &lt;/li&gt; tag for the li that                   contains the third unordered list --&gt;       &lt;li&gt;second item third subitem&lt;/li&gt;     &lt;/ul&gt;   &lt;!-- Here is the closing &lt;/li&gt; tag --&gt;   &lt;/li&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ul&gt;</code></pre> <p>Above HTML will output:</p> <ul> <li>first item</li> <li>second item   <ul> <li>second item first subitem</li> <li>second item second subitem     <ul style=\"\"> <li>second item second subitem first sub-subitem</li> <li>second item second subitem second sub-subitem</li> <li>second item second subitem third sub-subitem</li> </ul> </li> <li>second item third subitem</li> </ul> </li> <li>third item</li> </ul> <h3>Nested &lt;ul&gt; and &lt;ol&gt;</h3> <pre><code>&lt;ul&gt;   &lt;li&gt;first item&lt;/li&gt;   &lt;li&gt;second item   &lt;!-- Look, the closing &lt;/li&gt; tag is not placed here! --&gt;     &lt;ol&gt;       &lt;li&gt;second item first subitem&lt;/li&gt;       &lt;li&gt;second item second subitem&lt;/li&gt;       &lt;li&gt;second item third subitem&lt;/li&gt;     &lt;/ol&gt;   &lt;!-- Here is the closing &lt;/li&gt; tag --&gt;   &lt;/li&gt;   &lt;li&gt;third item&lt;/li&gt; &lt;/ul&gt;</code></pre> <p>Above HTML will output:</p> <ul> <li>first item</li> <li>second item   <ol> <li>second item first subitem</li> <li>second item second subitem</li> <li>second item third subitem</li> </ol> </li> <li>third item</li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ul"
                    ], 
                    "flags": 0, 
                    "guid": "NEg3:s#8F)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;a&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>creates a hyperlink</b> to other web pages, files, locations within the same page, email addresses, or any other URL", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>download</code></strong> HTML5</dt> <dd>This attribute instructs browsers to download a URL instead of  navigating to it, so the user will be prompted to save it as a local  file. If the attribute has a value, it is used as the pre-filled file  name in the Save prompt (the user can still change the file name if they  want). There are no restrictions on allowed values, though <code>/</code> and <code>\\</code>  are converted to underscores. Most file systems limit some punctuation  in file names, and browsers will adjust the suggested name accordingly.  <div><strong>Notes:</strong> <ul> <li>This attribute only works for same-origin URLs.</li> <li>This attribute can be used with <code>blob:</code> URLs and <code>data:</code> URLs to download content generated by JavaScript, such as pictures created in an image-editor Web app.</li> <li>If the HTTP header <code>Content-Disposition:</code> gives a different filename than this attribute, the HTTP header takes priority over this attribute.</li> <li>If <code>Content-Disposition:</code> is set to <code>inline</code>, Firefox prioritizes <code>Content-Disposition</code>, like the filename case, while Chrome prioritizes the <code>download</code> attribute.</li> </ul> </div> </dd> <dt><strong><code>href</code></strong></dt> <dd>Contains a URL or a URL fragment that the hyperlink points to.</dd> <dd>A URL fragment is a name preceded by a hash mark (<code>#</code>), which specifies an internal target location (an ID  of an HTML element) within the current document. URLs are not  restricted to Web (HTTP)-based documents, but can use any protocol  supported by the browser. For example, <code>file:</code>, <code>ftp:</code>, and <code>mailto:</code> work in most browsers.</dd> <dd>This attribute may be omitted (as of HTML5) to create a placeholder  link. A placeholder link resembles a traditional hyperlink, but does  not lead anywhere.  <div> <p><strong>Note:</strong> You can use <code>href=\"#top\"</code> or the empty fragment <code>href=\"#\"</code> to link to the top of the current page. This behavior is specified by HTML5.</p> </div> </dd> <dt><strong><code>hreflang</code></strong></dt> <dd>This attribute indicates the human language of the linked resource.  It is purely advisory, with no built-in functionality. Allowed values  are determined by BCP47.</dd> <dt><strong><code>referrerpolicy</code></strong> <i> </i></dt> <dd>Indicates which referrer to send when fetching the URL:  <ul> <li><code>'no-referrer'</code> means the <code>Referer:</code> header will not be sent.</li> <li><code>'no-referrer-when-downgrade'</code> means no <code>Referer:</code> header will be sent when navigating to an origin without HTTPS. This is the default behavior.</li> <li><code>'origin'</code> means the referrer will be the origin of the page, not including information after the domain.</li> <li><code>'origin-when-cross-origin'</code> meaning that navigations  to other origins will be limited to the scheme, the host and the port,  while navigations on the same origin will include the referrer's path.</li> <li><code>'unsafe-url'</code> means the referrer will include the  origin and path, but not the fragment, password, or username. This is  unsafe because it can leak data from secure URLs to insecure ones.</li> </ul> </dd> <dt><strong><code>rel</code></strong></dt> <dd>Specifies the relationship of the target object to the link object. The value is a space-separated list of link types.</dd> <dt><strong><code>target</code></strong></dt> <dd>Specifies where to display the linked URL. It is a name of, or keyword for, a <em>browsing context</em>: a tab, window, or <code>&lt;iframe&gt;</code>. The following keywords have special meanings:  <ul> <li><code>_self</code>: Load the URL into the same browsing context as the current one. This is the default behavior.</li> <li><code>_blank</code>: Load the URL into a new browsing context. This is usually a tab, but users can configure browsers to use new windows instead.</li> <li><code>_parent</code>: Load the URL into the parent browsing context of the current one. If there is no parent, this behaves the same way as <code>_self</code>.</li> <li><code>_top</code>: Load the URL into the top-level browsing  context (that is, the \"highest\" browsing context that is an ancestor of  the current one, and has no parent). If there is no parent,&nbsp;this behaves  the same way as <code>_self</code>.</li> </ul> <div> <p><strong>Note:</strong> When using <code>target</code>, consider adding <code>rel=\"noopener noreferrer\"</code> to avoid exploitation of the <code>window.opener</code> API.</p> </div> </dd> <dt><strong><code>type</code></strong></dt> <dd>Specifies the media type in the form of a MIME type for the linked URL. It is purely advisory, with no built-in functionality.</dd> </dl> <h3>Obsolete</h3> <dl> <dt><strong><code>charset</code></strong> Obsolete since HTML5</dt> <dd>This attribute defined the character encoding of the linked URL. The value should be a space- and/or comma-delimited list of character sets defined in RFC 2045. The default value is <code>ISO-8859-1</code>.  <div> <p><strong>Usage note:</strong> This attribute is obsolete in HTML5 and <strong>should not be used by authors</strong>. To achieve its effect, use the HTTP <code>Content-Type:</code> header on the linked URL.</p> </div> </dd> <dt><strong><code>coords</code></strong> HTML 4 only, Obsolete since HTML5</dt> <dd>For use with the below <code>shape</code> attribute, this attribute used a comma-separated list of numbers to define the coordinates of the link on the page.</dd> <dt><strong><code>name</code></strong> HTML 4 only, Obsolete since HTML5</dt> <dd>This attribute was required for anchors defining a possible target location within a page. In HTML 4.01, <code>id</code> and <code>name</code> could be used simultaneously on a <code>&lt;a&gt;</code> element as long as they have identical values.  <div> <p><strong>Usage note:</strong> This attribute is obsolete in HTML5, use the global attribute <code>id</code> instead.</p> </div> </dd> <dt><strong><code>rev</code></strong> HTML 4 only, Obsolete since HTML5</dt> <dd>This attribute specified a reverse link, the inverse relationship of the <strong>rel</strong> attribute. It was deprecated for being very confusing.</dd> <dt><strong><code>shape</code></strong> HTML 4 only, Obsolete since HTML5</dt> <dd>This attribute was used to define a region for hyperlinks to create an image map. The values are <code>circle</code>, <code>default</code>, <code>polygon</code>, and <code>rect</code>. The format of the <strong>coords</strong> attribute depends on the value of shape. For <code>circle</code>, the value is <code>x,y,r</code> where <code>x</code> and <code>y</code> are the pixel coordinates for the center of the circle and <code>r</code> is the radius value in pixels. For <code>rect</code>, the <strong>coords</strong> attribute should be <code>x,y,w,h</code>. The <code>x,y</code> values define the upper-left-hand corner of the rectangle, while <code>w</code> and <code>h</code> define the width and height respectively. A value of <code>polygon</code> for <strong>shape</strong> requires <code>x1,y1,x2,y2,...</code> values for <strong>coords</strong>. Each of the <code>x,y</code>  pairs defines a point in the polygon, with successive points being  joined by straight lines and the last point joined to the first. The  value <code>default</code> for shape requires that the entire enclosed area, typically an image, be used.  <div><strong>Note:</strong> Use the <code>usemap</code> attribute for the <code>&lt;img&gt;</code> element and the associated <code>&lt;map&gt;</code> element to define hotspots instead of the <code>shape</code> attribute.</div> </dd> </dl> <h2>Examples</h2> <h3>Linking to an external location</h3> <pre><code>&lt;!-- anchor linking to external file --&gt; &lt;a&gt; External Link &lt;/a&gt;</code></pre> <h4>Result</h4> <p>External Link</p> <h3>Linking to another section on the same page</h3> <pre><code>&lt;!-- links to element on this page with --&gt; &lt;a&gt; Description of Same-Page Links &lt;/a&gt;</code></pre> <h4>Result</h4> <p>Description of Same Page Links</p> <h3>Creating a clickable image</h3> <p>This example uses an image to link to the MDN home page. The home  page will open in a new browsing context, that is, a new page or a new  tab.</p> <pre><code>&lt;a target=\"_blank\"&gt;   &lt;img src=\"https://mdn.mozillademos.org/files/6851/mdn_logo.png\"        alt=\"MDN logo\" /&gt; &lt;/a&gt;</code></pre> <h4>Result</h4> <figure> <p><iframe src=\"https://mdn.mozillademos.org/en-US/docs/Web/HTML/Element/a$samples/Creating_a_clickable_image?revision=1234409\" width=\"320\" height=\"64\" frameborder=\"0\"></iframe></p><div></div><p></p></figure><h3>Creating an email link</h3> <p>It's common to create links that open in the user's email program to allow them to send a new message. This is done with a <code>mailto:</code> link. Here's a simple example:</p> <pre><code>&lt;a&gt;Send email to nowhere&lt;/a&gt;</code></pre> <h4>Result</h4> <p>Send email to nowhere</p> <p>For additional details about the <code>mailto</code> URL scheme, such as including the subject, body, or other predetermined content, see Email links or RFC 6068.</p> <h3>Creating a phone link</h3> <p>Offering phone links is helpful for users viewing web documents and laptops connected to phones.</p> <pre><code>&lt;a&gt;+49 157 0156&lt;/a&gt;</code></pre> <p>For additional details about the <code>tel</code> URL scheme, see RFC 2806 and RFC 2396.</p> <h3>Using the <code>download</code> attribute to save a <code>&lt;canvas&gt;</code> as a PNG</h3> <p>If you want to let users download an HTML <code>&lt;canvas&gt;</code> element as an image, you can create a link with a <code>download</code> attribute and the canvas data as a file URL:</p> <pre><code>var link = document.createElement('a'); link.innerHTML = 'download image';  link.addEventListener('click', function(ev) {     link.href = canvas.toDataURL();     link.download = \"mypainting.png\"; }, false);  document.body.appendChild(link);</code></pre> <p>You can see this in action at jsfiddle.net/codepo8/V6ufG/2/.</p> <h2>Notes</h2> <p>HTML 3.2 defines only the <code>name</code>, <code>href</code>, <code>rel</code>, <code>rev</code>, and <code>title</code> attributes.</p> <h3>Accessibility recommendations</h3> <p>Anchor tags are often abused with the <code>onclick</code> event to create psuedo-buttons by setting&nbsp;<strong>href</strong>&nbsp;to <code>\"#\"</code> or <code>\"javascript:void(0)\"</code>&nbsp;to  prevent the page from refreshing. These values cause unexpected  behavior when copying/dragging links, opening links in a new  tabs/windows, bookmarking, and when JavaScript is still downloading,  errors out, or is disabled. This also conveys incorrect semantics to  assistive technologies (e.g., screen readers). In these cases, it is  recommended to use&nbsp;a <code>&lt;button&gt;</code> instead. In general you should only use an anchor for&nbsp;navigation using a proper URL.&nbsp;</p> <h3>Clicking and focus</h3> <p>Whether clicking on an <code>&lt;a&gt;</code> causes it to become focused varies by browser and OS.</p> <table> <caption>Does clicking on an <code>&lt;a&gt;</code> give it focus?</caption> <tbody> <tr> <td>Desktop Browsers</td> <th>Windows 8.1</th> <th>OS X 10.9</th> </tr> <tr> <th>Firefox 30.0</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: LawnGreen;\">Yes</td> </tr> <tr> <th>Chrome ≥39<br />     (Chromium bug 388666)</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: LawnGreen;\">Yes</td> </tr> <tr> <th>Safari 7.0.5</th> <td style=\"background-color: silver;\">N/A</td> <td style=\"background-color: yellow;\">Only when it has a <code>tabindex</code></td> </tr> <tr> <th>Internet Explorer 11</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: silver;\">N/A</td> </tr> <tr> <th>Presto (Opera 12)</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: LawnGreen;\">Yes</td> </tr> </tbody> </table> <table> <caption>Does tapping on an <code>&lt;a&gt;</code> give it focus?</caption> <tbody> <tr> <td>Mobile Browsers</td> <th>iOS 7.1.2</th> <th>Android 4.4.4</th> </tr> <tr> <th>Safari Mobile</th> <td style=\"background-color: yellow;\">Only when it has a <code>tabindex</code></td> <td style=\"background-color: silver;\">N/A</td> </tr> <tr> <th>Chrome 35</th> <td>???</td> <td style=\"background-color: yellow;\">Only when it has a <code>tabindex</code></td> </tr> </tbody> </table> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/a"
                    ], 
                    "flags": 0, 
                    "guid": "H;sP`h)J:*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;abbr&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>represents an abbreviation</b> and optionally provides a full description for it. If present, the <code>title</code> attribute must contain this full description and nothing else", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <p>Use the <code>title</code>&nbsp;attribute to define the&nbsp;full description of the abbreviation. Many user agents present this as a tooltip.</p> <div> <p><strong>Note: </strong>In languages with grammatical number  (especially languages with more than two&nbsp;numbers, like Arabic), use the  same grammatical number in your&nbsp;<code>title</code>&nbsp;attribute as inside your&nbsp;<code>&lt;abbr&gt;</code> element.</p> </div> <h2>Example</h2> <pre><code>&lt;abbr&gt;I18N&lt;/abbr&gt;</code></pre> <p>See more in-depth examples in the <em>How to mark abbreviations and make them understandable</em> article.</p> <h2>Default styling</h2> <p>The purpose of this element is purely for the convenience of the author and all browsers display it inline (<code>display</code><code>: inline</code>) by default, though its default styling varies from one browser to another:</p> <ul> <li>Some browsers, like Internet Explorer, do not style it differently than a <code>&lt;span&gt;</code> element.</li> <li>Opera, Firefox, and some others add a dotted underline to the content of the element.</li> <li>A few browsers not only add a dotted underline, but also put it in small caps; to avoid this styling, adding something like <code>font-variant</code><code>: none</code> in the CSS takes care of this case.</li></ul>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/abbr"
                    ], 
                    "flags": 0, 
                    "guid": "qF#I>>7x&$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;b&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />text <b>stylistically different</b> (typically boldface) but <b>without special importance or relevance</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Use the <code>&lt;b&gt;</code> for cases like keywords in a  summary, product names in a review, or other spans of text whose typical  presentation would be boldfaced.</li> <li>Do not confuse the <code>&lt;b&gt;</code> element with the <code>&lt;strong&gt;</code>, <code>&lt;em&gt;</code>, or <code>&lt;mark&gt;</code> elements. The <code>&lt;strong&gt;</code> element represents text of certain <em>importance</em>, <code>&lt;em&gt;</code> puts some emphasis on the text and the <code>&lt;mark&gt;</code> element represents text of certain <em>relevance</em>. The <code>&lt;b&gt;</code> element doesn't convey such special semantic information; use it only when no others fit.</li> <li>Similarly, do not mark titles and headings using the <code>&lt;b&gt;</code> element. For this purpose, use the <code>&lt;h1&gt;</code> to <code>&lt;h6&gt;</code> tags. Further, stylesheets can change the default style of these elements, with the result that they are not <em>necessarily</em> displayed in bold.</li> <li>It is a good practice to use the <strong>class</strong> attribute on the <code>&lt;b&gt;</code> in order to convey additional semantic information (for example <code>&lt;b&gt;</code>  for the first sentence in a paragraph). This eases the development of  several stylings of a web document, without the need to change its HTML  code.</li> <li>Historically, the <code>&lt;b&gt;</code> element was meant to make text boldface. Styling information has been deprecated since HTML4, so the meaning of the <code>&lt;b&gt;</code> element has been changed.</li> <li>If there is no semantic purpose on using the &lt;b&gt; element, using css property font-weight with bold value would be a better choice for making text bold.</li> </ul> <h2>Example</h2> <pre><code>&lt;p&gt;   This article describes several &lt;b&gt;text-level&lt;/b&gt; elements.   It explains their usage in an &lt;b&gt;HTML&lt;/b&gt; document.    &lt;/p&gt; Keywords are displayed with the default style of the &lt;b&gt; element, likely in bold.</code></pre> <h3>Result</h3> <p>This article describes several <strong>text-level</strong> elements. It explains their usage in an <strong>HTML</strong> document.</p> <p>Keywords are displayed with the default style of the &lt;b&gt; element, likely in bold.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/b"
                    ], 
                    "flags": 0, 
                    "guid": "o(+OwR]|<N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;bdi&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />isolates a span of <b>text that might be formatted in a different direction</b> from other text outside it", 
                        "", 
                        "<h2>Attributes</h2> <p>Like all other HTML elements, this element has the global attributes, with a slight semantic difference: the <strong>dir</strong> attribute is not inherited. If not set, its default value is the <code>auto</code> which let the browser decide the direction based on the element's content.</p> <h2>Usage notes</h2> <p>Though the same visual effect can be achieved using the CSS rule <code>unicode-bidi</code><code>: isolate</code> on a <code>&lt;span&gt;</code> or another text-formatting element, the semantic meaning is only conveyed by the <code>&lt;bdi&gt;</code>  element. Especially, browsers are allowed to ignore CSS styling. In  such a case, the text would still be correctly displayed using the HTML  element, but will become garbage when using the CSS styling to convey  semantic.</p> <h2>Example</h2> <pre><code>&lt;p dir=\"ltr\"&gt;This arabic word &lt;bdi&gt;ARABIC_PLACEHOLDER&lt;/bdi&gt; is automatically displayed right-to-left.&lt;/p&gt;</code></pre> <h3>Result</h3> <p dir=\"ltr\">This arabic word REDLOHECALP_CIBARA is automatically displayed right-to-left.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdi"
                    ], 
                    "flags": 0, 
                    "guid": "KS(D`2@5x.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;bdo&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />is used to <b>override the current directionality</b> of text. It causes the directionality of the characters to be ignored in favor of the specified directionality", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>dir</code></strong></dt> <dd>Text direction in this element. Possible values are:  <ul> <li><code>ltr</code>: Indicates that the text should go in a left-to-right direction.</li> <li><code>rtl</code>: Indicates that the text should go in a right-to-left direction.</li> </ul> </dd> </dl> <h2>Examples</h2> <pre><code>&lt;!-- Switch text direction --&gt; &lt;p&gt;This text will go left to right.&lt;/p&gt; &lt;p&gt;&lt;bdo dir=\"rtl\"&gt;This text will go right to left.&lt;/bdo&gt;&lt;/p&gt;</code></pre> <h3>Result</h3> <p>This text will go left to right.</p> <p>.tfel ot thgir og lliw txet sihT</p> <h2>Notes</h2> <p>The HTML 4 specification did not specify events for this element; they were added in XHTML. This is most likely an oversight.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/bdo"
                    ], 
                    "flags": 0, 
                    "guid": "m,I{:$!l.q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;br&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />produces a <b>line break</b> in text (carriage-return). It is useful for writing a poem or an address, where the division of lines is significant", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>clear</code></strong> Deprecated since HTML4.01 Obsolete since HTML5</dt> <dd>Indicates where to begin the next line after the break.  <div> <p><strong>Usage note: </strong>This attribute is obsolete in HTML5 and <strong>should not be used by authors</strong>. Use the CSS <code>clear</code> property instead.</p> </div> </dd> </dl> <h2>Notes</h2> <p>Do not use <code>&lt;br&gt;</code> to increase the gap between lines of text; use the CSS <code>margin</code> property or the <code>&lt;p&gt;</code> element.</p> <h2>Example</h2> <pre><code>Mozilla Foundation&lt;br&gt; 1981 Landings Drive&lt;br&gt; Building K&lt;br&gt; Mountain View, CA 94043-0801&lt;br&gt; USA</code></pre> <p>The HTML above outputs:</p> <p>Mozilla Foundation<br />  1981 Landings Drive<br />  Building K<br />  Mountain View, CA 94043-0801<br />  USA</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br"
                    ], 
                    "flags": 0, 
                    "guid": "w(}xGes+*9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;cite&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>reference to a creative work</b>. It must include the title of a work or a URL reference, which may be in an abbreviated form according to the conventions used for the addition of citation metadata", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>A creative work may include a book, a paper, an essay, a poem, a  score, a song, a script, a film, a TV show, a game, a sculpture, a  painting, a theater production, a play, an opera, a musical, an  exhibition, a legal case report, a computer program, a web site, a web  page, a blog post or comment, a forum post or comment, a tweet, a  written or oral statement, etc.</li> <li>The W3C spec states that a reference to a creative work may include  the author's name, while WHATWG has declared that it may not include a  person's name under any circumstances.</li> <li>Use the <code>cite</code> attribute on a <code>&lt;blockquote&gt;</code> or <code>&lt;q&gt;</code> element to reference an online resource for a source.</li> <li>To avoid the default italic style from being used for the &lt;cite&gt; element use the CSS <code>font-style</code> property.</li> </ul> <h2>Example</h2> <pre><code>More information can be found in &lt;cite&gt;[ISO-0000]&lt;/cite&gt;.</code></pre> <p>The HTML above outputs:</p> <p>More information can be found in <cite>[ISO-0000].</cite></p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/cite"
                    ], 
                    "flags": 0, 
                    "guid": "m0`P{?@;`i", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;code&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>fragment of computer code</b>, usually monospace", 
                        "", 
                        "<div> <div> <div style=\"width: auto; max-height: none;\"> In This Article <ol> <li>Attributes</li><li>Example<ol><li>Result</li></ol></li><li>Note</li><li>Specifications</li><li>Browser compatibility</li><li>See also </li></ol> </div> </div> <div> <article> </article><p>The <strong>HTML <code>&lt;code&gt;</code> element</strong> represents a fragment of computer code. By default, it is displayed in the browser's default monospace font.</p> <table> <tbody> <tr> <th scope=\"row\">Content categories</th> <td>Flow content, phrasing content, palpable content.</td> </tr> <tr> <th scope=\"row\">Permitted content</th> <td>Phrasing content.</td> </tr> <tr> <th scope=\"row\">Tag omission</th> <td>None, both the starting and ending tag are mandatory.</td> </tr> <tr> <th scope=\"row\">Permitted parents</th> <td>Any element that accepts phrasing content.</td> </tr> <tr> <th scope=\"row\">Permitted ARIA roles</th> <td>Any</td> </tr> <tr> <th scope=\"row\">DOM interface</th> <td><code>HTMLElement</code> Up to Gecko 1.9.2 (Firefox 4) inclusive, Firefox implements the <code>HTMLSpanElement</code> interface for this element.</td> </tr> </tbody> </table> <h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <p>Regular text, followed by code.</p> <pre><code>&lt;p&gt;This is how we declare a Javascript variable:&lt;br\\&gt; &lt;code&gt;var i = 0;&lt;/code&gt; &lt;/p&gt;</code></pre></div></div> <h3>Result</h3> <p>This is how we declare a Javascript variable:<br /> <code>var i = 0; </code></p> <h2>Note</h2> <p>A CSS rule can be defined for the <code>code</code> selector to override the browser's default font face. Preferences set by the user might take precedence over the specified CSS.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/code"
                    ], 
                    "flags": 0, 
                    "guid": "IakxKm[@c(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;data&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />links a given content with a <b>machine readable translation</b>. Use&nbsp;<code>&lt;time&gt;</code>&nbsp;if time or date related.", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>value</code></strong></dt> <dd>This attribute specifies the machine-readable translation of the content of the element.</dd> </dl> <h2>Example</h2> <p>The following example displays product names but also associates each name with a product number.</p> <pre><code>&lt;p&gt;New Products&lt;/p&gt; &lt;ul&gt;  &lt;li&gt;&lt;data value=\"398\"&gt;Mini Ketchup&lt;/data&gt;&lt;/li&gt;  &lt;li&gt;&lt;data value=\"399\"&gt;Jumbo Ketchup&lt;/data&gt;&lt;/li&gt;  &lt;li&gt;&lt;data value=\"400\"&gt;Mega Jumbo Ketchup&lt;/data&gt;&lt;/li&gt; &lt;/ul&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/data"
                    ], 
                    "flags": 0, 
                    "guid": "w4U{y!$!/R", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;dfn&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>defining instance of a term</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <p>In HTML5, the <code>title</code> attribute has special meaning, as noted above.</p> <h2>Usage notes</h2> <ul> <li>The <code>&lt;dfn&gt;</code> element marks the term being defined; the definition of the term should be given by the surrounding <code>&lt;p&gt;</code>, <code>&lt;section&gt;</code> or definition list group (usually a <code>&lt;dt&gt;</code>, <code>&lt;dd&gt;</code> pair).</li> <li>The exact value of the term being defined is determined by the following rules:   <ol> <li>If the <code>&lt;dfn&gt;</code> element has a <code>title</code> attribute, then the term is the value of that attribute.</li> <li>Else, if it contains only an <code>&lt;abbr&gt;</code> element with a <code>title</code> attribute, then the term is the value of that attribute.</li> <li>Otherwise, the text content of the <code>&lt;dfn&gt;</code> element is the term being defined.</li> </ol> </li> </ul> <h2>Examples</h2> <p>The following examples are valid in HTML5.</p> <pre><code>&lt;!-- Define \"The Internet\" --&gt; &lt;p&gt;&lt;dfn&gt;The Internet&lt;/dfn&gt; is a global system of interconnected networks that use the Internet Protocol Suite (TCP/IP) to serve billions of users worldwide.&lt;/p&gt;</code></pre> <p>Later in the same document:</p> <pre><code>&lt;dl&gt;   &lt;!-- Define \"World-Wide Web\" and reference        definition for \"the Internet\" --&gt;   &lt;dt&gt;     &lt;dfn&gt;       &lt;abbr&gt;WWW&lt;/abbr&gt;     &lt;/dfn&gt;   &lt;/dt&gt;   &lt;dd&gt;The World-Wide Web (WWW) is a system of   interlinked hypertext documents accessed on   &lt;a&gt;the Internet&lt;/a&gt;.&lt;/dd&gt; &lt;/dl&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dfn"
                    ], 
                    "flags": 0, 
                    "guid": "z&9od~*)ne", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;em&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />marks text that has <b>stress emphasis</b>. This element <i>can be nested</i>, with each level of nesting indicating a greater degree of emphasis", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <p>Typically this element is displayed in italic type. However, it  should not be used simply to apply italic styling; use the CSS styling  for that purpose. Use the <code>&lt;cite&gt;</code>  element to mark the title of a work (book, play, song, etc.); it is  also typically styled with italic type, but carries different meaning.  Use the <code>&lt;strong&gt;</code> element to mark text that has greater importance than surrounding text.</p> <h2>Example</h2> <p>The <code>&lt;em&gt;</code> element is often used to indicate an implicit or explicit contrast.</p> <pre><code>&lt;p&gt;   In HTML 5, what was previously called   &lt;em&gt;block-level&lt;/em&gt; content is now called   &lt;em&gt;flow&lt;/em&gt; content. &lt;/p&gt;</code></pre> <h3>Result</h3> <p>In HTML 5, what was previously called <em>block-level</em> content is now called <em>flow</em> content.</p> <h2>&lt;i&gt; vs. &lt;em&gt;</h2> <p>It is often confusing to new developers why there are so many  elements to express emphasis on some text. &lt;i&gt; and &lt;em&gt; are  perhaps one of the most common. Why use <code>&lt;em&gt;&lt;/em&gt;</code> vs <code>&lt;i&gt;&lt;/i&gt;</code>? They produce exactly the same result, right?</p> <p>Not exactly. The visual result is, by default, the same - both tags  render its content in italics. But the semantic meaning is different.  The <code>&lt;em&gt;</code> tag represents stress emphasis of its  contents, while the &lt;i&gt; tag represents text that is set off from  the normal prose, such as the name of a movie or book, a foreign word,  or when the text refers to the definition of a word instead of  representing its semantic meaning.</p> <p>An example for <code>&lt;em&gt;</code> could be: \"Just <em>do</em> it already!\", or: \"We <em>had</em> to do something about it\". A person or software reading the text would pronounce the words in italics with an emphasis.</p> <p>An example for <code>&lt;i&gt;</code> could be: \"The <em>Queen Mary</em>  sailed last night\". Here, there is no added emphasis or importance on  the word \"Queen Mary\". It is merely indicated that the object in  question is not a queen named Mary, but a ship named <em>Queen Mary</em> . Another example for <code>&lt;i&gt;</code> could be: \"The word <em>the</em> is an article\".</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/em"
                    ], 
                    "flags": 0, 
                    "guid": "q#_]@jmG1F", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;i&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>text that is set off</b> from the normal text for some reason, typically displayed in italic type<div>for example, technical terms, foreign language phrases, or fictional character thoughts</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <pre><code>&lt;p&gt;The Latin phrase &lt;i&gt;Veni, vidi, vici&lt;/i&gt; is often mentioned in music, art, and literature&lt;/p&gt;</code></pre> <h3>Result</h3> <p>The Latin phrase <em>Veni, vidi, vici</em> is often mentioned in music, art, and literature</p> <h2>Notes</h2> <p>In earlier versions of the HTML specification, the <code>&lt;i&gt;</code> tag was merely a presentational element used to display text in italics, much like the <code>&lt;b&gt;</code>  tag was used to display text in bold letters. This is no longer true,  as these tags now define semantics rather than typographic appearance.  The <code>&lt;i&gt;</code> tag should represent a range of text with a  different semantic meaning whose typical typographic representation is  italicized. &nbsp;This means a browser will typically still display its  contents in italic type, but is, by definition, no longer required to.</p> <p>Use this element only when there is not a more appropriate semantic element. For example:</p> <ul> <li>Use <code>&lt;em&gt;</code> to indicate emphasis or stress.</li> <li>Use <code>&lt;strong&gt;</code> to indicate importance.</li> <li>Use <code>&lt;mark&gt;</code> to indicate relevance.</li> <li>Use <code>&lt;cite&gt;</code> to mark the name of a work, such as a book, play, or song.</li> <li>Use <code>&lt;dfn&gt;</code> to mark the defining instance of a term.</li> </ul> <p>It is a good idea to use the <strong>class</strong> attribute to  identify why the element is being used, so that if the presentation  needs to change at a later date, it can be done selectively with style  sheets.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/i"
                    ], 
                    "flags": 0, 
                    "guid": "}ou(gm2f}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;kbd&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />represents <b>user input</b> and produces an inline element displayed in the browser's default monospace font", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Examples</h2> <pre><code>&lt;p&gt;Type the following in the Run dialog:   &lt;kbd&gt;cmd&lt;/kbd&gt;&lt;br /&gt;Then click the OK button.&lt;/p&gt;  &lt;p&gt;Save the document by pressing   &lt;kbd&gt;Ctrl&lt;/kbd&gt; + &lt;kbd&gt;S&lt;/kbd&gt;&lt;/p&gt;</code></pre> <h3>Result</h3> <p><iframe src=\"https://mdn.mozillademos.org/en-US/docs/Web/HTML/Element/kbd$samples/Examples?revision=1163638\" width=\"350\" height=\"120\" frameborder=\"0\"></iframe></p><div></div><p></p><h2>Note</h2> <p>A CSS rule can be defined for the <code>kbd</code> selector to override the browser's default font face. Preferences set by the user might take precedence over the specified CSS.</p> <p>When the <code>&lt;kbd&gt;</code> element is nested inside a <code>&lt;samp&gt;</code> element, it represents the input as it was echoed by the system.</p> <p>When the <code>&lt;kbd&gt;</code> element <em>contains</em> a <code>&lt;samp&gt;</code> element, it represents input based on system output, for example invoking a menu item.</p> <p>When the <code>&lt;kbd&gt;</code> element is nested inside another <code>&lt;kbd&gt;</code> element, it represents an actual key or other single unit of input as appropriate for the input mechanism.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd"
                    ], 
                    "flags": 0, 
                    "guid": "EW!Lz;mlwo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;mark&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />text <b>highlighted&nbsp;due to its relevance</b> in a particular context<div><i>i.e.</i>, a run of text marked for reference purpose</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>In a quotation or another block, the highlighted text typically  marks text that is referenced outside the quote, or marked for specific  scrutiny even though the original author didn't consider it important.</li> <li>In the main text, the highlighted text typically marks text that  may be of special relevance for the user's current activity, like search  results.</li> <li>Do not use the <code>&lt;mark&gt;</code> element for syntax highlighting; use the <code>&lt;span&gt;</code> element for this purpose.</li> <li>Do not confuse the <code>&lt;mark&gt;</code> element with the <code>&lt;strong&gt;</code> element. The <code>&lt;strong&gt;</code> element is used to denote spans of text of <em>importance </em>in context of the text, when the <code>&lt;mark&gt;</code> element is used to denote spans of text of <em>relevance</em> to a different context.</li> </ul> <h2>Examples</h2> <pre><code>&lt;p&gt;The &amp;lt;mark&amp;gt; element is used to   &lt;mark&gt;highlight&lt;/mark&gt; text&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark"
                    ], 
                    "flags": 0, 
                    "guid": "kvlEXg<Qu6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;q&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>short inline quotation</b>. This element is intended for short quotations that don't require paragraph breaks; for long quotations use the <code>&lt;blockquote&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>cite</code></strong></dt> <dd>The value of this attribute is a URL that designates a source  document or message for the information quoted. This attribute is  intended to point to information explaining the context or the reference  for the quote.</dd> </dl> <h2>Example</h2> <h3>HTML Content</h3> <pre><code>&lt;p&gt;According to Mozilla's website,   &lt;q   cite=\"https://www.mozilla.org/en-US/about/history/details/\"&gt;Firefox 1.0   was released in 2004 and became a big success.&lt;/q&gt;&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/q"
                    ], 
                    "flags": 0, 
                    "guid": "D3a@Xf;aPQ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;rp&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />is used to provide <b>fall-back parentheses</b> for browsers that do not support display of ruby annotations using the <code>&lt;ruby&gt;</code> element<div><br /></div><div>Alternative to this element:</div><div><pre class=\"style\">rt:before { content: \"(\" }\nrt:after { content: \")\" }</pre></div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>Ruby annotations are for showing pronunciation of East Asian  characters, like using Japanese furigana or Taiwanese bopomofo  characters. The <code>&lt;rp&gt;</code> element is used in the case of lack of <code>&lt;ruby&gt;</code> element support; the <code>&lt;rp&gt;</code> content provides what should be displayed in order to indicate the presence of a ruby annotation, usually parentheses.</li> </ul> <h2>Example</h2> <pre><code>&lt;ruby&gt;   漢 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;Kan&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;   字 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ji&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; &lt;/ruby&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rp"
                    ], 
                    "flags": 0, 
                    "guid": "Pk8W.L^kq#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;rt&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />embraces <b>pronunciation</b> of characters presented in a ruby annotations, which are used to describe the pronunciation of East Asian characters. This element is always used inside a <code>&lt;ruby&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <pre><code>&lt;ruby&gt;   漢 &lt;rt&gt;Kan&lt;/rt&gt;   字 &lt;rt&gt;ji&lt;/rt&gt; &lt;/ruby&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rt"
                    ], 
                    "flags": 0, 
                    "guid": "I{X>+s^#/e", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;rtc&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />embraces <b>semantic annotations</b> of characters presented in a ruby of <code>&lt;rb&gt;</code> elements used inside of <code>&lt;ruby&gt;</code> element. <code>&lt;rb&gt;</code> elements can have both pronunciation&nbsp;and semantic&nbsp;annotations", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <pre><code>&lt;ruby&gt;    &lt;rb&gt;旧&lt;/rb&gt;    &lt;rb&gt;金&lt;/rb&gt;    &lt;rb&gt;山&lt;/rb&gt;    &lt;rt&gt;jiù&lt;/rt&gt;    &lt;rt&gt;jīn&lt;/rt&gt;    &lt;rt&gt;shān&lt;/rt&gt;    &lt;rtc&gt;San Francisco&lt;/rtc&gt; &lt;/ruby&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/rtc"
                    ], 
                    "flags": 0, 
                    "guid": "eNYT8>Xda!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;ruby&gt;</code>", 
                        "", 
                        "<p><small>HTML inline text semantics element</small><br />\n<strong>ruby annotation</strong>, for showing pronunciation of East Asian characters</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">ruby</span> <span style=\"color: #bbbbbb\">xml:lang</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"ja\"</span><span style=\"color: #d0d0d0\">&gt;</span>\n  <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rbc</span><span style=\"color: #d0d0d0\">&gt;</span>\n    <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rb</span><span style=\"color: #d0d0d0\">&gt;</span>斎<span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rb</span><span style=\"color: #d0d0d0\">&gt;</span>\n    <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rb</span><span style=\"color: #d0d0d0\">&gt;</span>藤<span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rb</span><span style=\"color: #d0d0d0\">&gt;</span>\n  <span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rbc</span><span style=\"color: #d0d0d0\">&gt;</span>\n  <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rtc</span> <span style=\"color: #bbbbbb\">class</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"reading\"</span><span style=\"color: #d0d0d0\">&gt;</span>\n    <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rt</span><span style=\"color: #d0d0d0\">&gt;</span>さい<span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rt</span><span style=\"color: #d0d0d0\">&gt;</span>\n    <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rt</span><span style=\"color: #d0d0d0\">&gt;</span>とう<span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rt</span><span style=\"color: #d0d0d0\">&gt;</span>\n  <span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rtc</span><span style=\"color: #d0d0d0\">&gt;</span>\n  <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rtc</span> <span style=\"color: #bbbbbb\">class</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"annotation\"</span><span style=\"color: #d0d0d0\">&gt;</span>\n    <span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">rt</span> <span style=\"color: #bbbbbb\">rbspan</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"2\"</span> <span style=\"color: #bbbbbb\">xml:lang</span><span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"en\"</span><span style=\"color: #d0d0d0\">&gt;</span>W3C Associate Chairman<span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rt</span><span style=\"color: #d0d0d0\">&gt;</span>\n  <span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">rtc</span><span style=\"color: #d0d0d0\">&gt;</span>\n<span style=\"color: #d0d0d0\">&lt;/</span><span style=\"color: #6ab825; font-weight: bold\">ruby</span><span style=\"color: #d0d0d0\">&gt;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY5OTI3OTcsICJpZCI6ICIxNDk2MjAxMjQ3OTE4LTAwMSIsICJtZCI6ICJIVE1MIGlubGluZSB0ZXh0IHNlbWFudGljcyBlbGVtZW50ICBcbioqcnVieSBhbm5vdGF0aW9uKiouIFJ1YnkgYW5ub3RhdGlvbnMgYXJlIGZvciBzaG93aW5nIHByb251bmNpYXRpb24gb2YgRWFzdCBBc2lhbiBjaGFyYWN0ZXJzXG4gIFxuICAgIDo6Omh0bWxcbiAgICAmbHQ7cnVieSB4bWw6bGFuZz0mcXVvdDtqYSZxdW90OyZndDtcbiAgICAgICZsdDtyYmMmZ3Q7XG4gICAgICAgICZsdDtyYiZndDtcdTY1OGUmbHQ7L3JiJmd0O1xuICAgICAgICAmbHQ7cmImZ3Q7XHU4NWU0Jmx0Oy9yYiZndDtcbiAgICAgICZsdDsvcmJjJmd0O1xuICAgICAgJmx0O3J0YyBjbGFzcz0mcXVvdDtyZWFkaW5nJnF1b3Q7Jmd0O1xuICAgICAgICAmbHQ7cnQmZ3Q7XHUzMDU1XHUzMDQ0Jmx0Oy9ydCZndDtcbiAgICAgICAgJmx0O3J0Jmd0O1x1MzA2OFx1MzA0NiZsdDsvcnQmZ3Q7XG4gICAgICAmbHQ7L3J0YyZndDtcbiAgICAgICZsdDtydGMgY2xhc3M9JnF1b3Q7YW5ub3RhdGlvbiZxdW90OyZndDtcbiAgICAgICAgJmx0O3J0IHJic3Bhbj0mcXVvdDsyJnF1b3Q7IHhtbDpsYW5nPSZxdW90O2VuJnF1b3Q7Jmd0O1czQyBBc3NvY2lhdGUgQ2hhaXJtYW4mbHQ7L3J0Jmd0O1xuICAgICAgJmx0Oy9ydGMmZ3Q7XG4gICAgJmx0Oy9ydWJ5Jmd0O1xuIn0=---->", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Examples</h2> <h3>Example 1: Character</h3> <pre><code>&lt;ruby&gt;   漢 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;Kan&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt;   字 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;ji&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; &lt;/ruby&gt;</code></pre> <h3>Example 2: Word</h3> <pre><code>&lt;ruby&gt;   明日 &lt;rp&gt;(&lt;/rp&gt;&lt;rt&gt;Ashita&lt;/rt&gt;&lt;rp&gt;)&lt;/rp&gt; &lt;/ruby&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ruby"
                    ], 
                    "flags": 0, 
                    "guid": "P3~H3-1.UH", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;s&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />renders text with a strikethrough, or a line through it. Use this&nbsp;element to represent things that are<b> no longer relevant</b> or no longer accurate. However, this element is not appropriate when indicating document edits; for that, use the <code>&lt;del&gt;</code> and <code>&lt;ins&gt;</code> elements, as appropriate", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <div><strong>Implementation note: </strong>Up to Gecko 1.9.2 inclusive, Firefox implements the <code>HTMLSpanElement</code> interface for this element.</div> <h2>Example</h2> <pre><code>&lt;s&gt;Today's Special: Salmon&lt;/s&gt; SOLD OUT&lt;br&gt; &lt;span style=\"text-decoration:line-through;\"&gt;Today's Special:   Salmon&lt;/span&gt; SOLD OUT</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/s"
                    ], 
                    "flags": 0, 
                    "guid": "B`PBkOS][O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;samp&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>sample output</b> from a computer program, usually monospace", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <p>Regular text, followed by sample output, and then regular text again.</p> <pre><code>&lt;p&gt;The diet-tracking app said: &lt;samp&gt;You're not eating your veggies&lt;/samp&gt; and that was true&lt;/p&gt;</code></pre> <h3>Result</h3> <p>The diet-tracking app said: <samp>You're not eating your veggies.</samp> and that was true.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/samp"
                    ], 
                    "flags": 0, 
                    "guid": "O:&-POgB>[", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;small&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>side-comments and small print</b>&nbsp;(since HTML5), including copyright and legal text, independent of its styled presentation", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <div> <p><strong>Implementation note: </strong>up to Gecko 1.9.2 inclusive, Firefox implements the <code>HTMLSpanElement</code> interface for this element.</p> </div> <h2>Examples</h2> <h3>Example 1</h3> <pre><code>&lt;p&gt;This is the first sentence. &lt;small&gt;This whole sentence   is in small letters.&lt;/small&gt;&lt;/p&gt;</code></pre> <h4>Result</h4> <p>This is the first sentence. <small>This whole sentence is in small letters.</small></p> <h3>Example 2 (CSS alternative)</h3> <pre><code>&lt;p&gt;This is the first sentence.   &lt;span style=\"font-size:0.8em\"&gt;This whole sentence is in small   letters.&lt;/span&gt;&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/small"
                    ], 
                    "flags": 0, 
                    "guid": "P$vw{znV35", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;span&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />is a <b>generic inline container</b> for phrasing content, which does not inherently represent anything. It can be used to group elements for styling purposes (using the <code>class</code> or <code>id</code> attributes), or because they share attribute values, such as <code>lang</code>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example 2</h2> <pre><code>&lt;li&gt;&lt;span&gt;     &lt;a target=\"_blank\"&gt;See my portfolio&lt;/a&gt;&nbsp; </code></pre><h2>&lt;/span&gt;&lt;/li&gt;</h2><h2>Example 1</h2> <pre><code>&lt;p&gt;&lt;span&gt;Some text&lt;/span&gt;&lt;/p&gt;</code></pre><pre><code><br /></code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span"
                    ], 
                    "flags": 0, 
                    "guid": "DM<t8Ry<K6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;strong&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />gives text <b>strong importance</b>, and is typically displayed in bold", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <pre><code>&lt;p&gt;When doing x it is &lt;strong&gt;imperative&lt;/strong&gt;    to do y before proceeding.&lt;/p&gt;</code></pre> <h3>Result</h3> <p>When doing x it is <strong>imperative</strong> to do y before proceeding.</p> <h3>Bold vs. Strong</h3> <p>It is often confusing to new developers why there are so many ways to  express the same thing on a rendered website. Bold and Strong are  perhaps one of the most common. Why use &lt;strong&gt;&lt;/strong&gt; vs  &lt;b&gt;&lt;/b&gt;? You have to type a whole lot more with strong and  it produces the exact same result, right?</p> <p>Perhaps not; strong is a logical state, and bold is a physical state.  Logical states separate presentation from the content, and by doing so  allow for it to be expressed in many different ways. Perhaps instead of  rendering some text as bold you want to render it red, or a different  size, or underlined, or whatever. It makes more sense to change the  presentational properties of strong than it does bold. This is because  bold is a physical state; there is no separation of presentation and  content, and making bold do anything other than bold text would be  confusing and illogical.</p> <p>It is important to note that &lt;b&gt;&lt;/b&gt; does have other  uses, when one wants to draw attention without increasing importance.</p> <h3>Emphasis vs. Strong</h3> <p>While in HTML4, Strong simply indicated a stronger emphasis, in  HTML5, the element is described as representing \"strong importance for  its contents.\" This is an important distinction to make. While Emphasis  is used to change the meaning of a sentence (\"I <em>love</em> carrots\" vs. \"I love <em>carrots</em>\"), Strong is used to give portions of a sentence added importance (e.g., \"<strong>Warning!</strong> This is <strong>very dangerous.</strong>\") Both Strong and Emphasis can be nested to increase the relative degree of importance or stress emphasis, respectively.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strong"
                    ], 
                    "flags": 0, 
                    "guid": "M/Mdm|JK3#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;sub&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />text that should be <b>displayed, for typographic reasons, lower, and often smaller</b>, than the main span of text", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>This element should be used for typographical reasons only, i.e.  changing the position of the text changing its meaning like in  mathematical (like <var>t<sub>2</sub></var>, though the use of a MathML formula should be considered) or chemical formulas (like <code>H<sub>2</sub>O</code>).</li> <li>This element must not be used for styling purpose like the styling of the product name Latex. In that case CSS style should be used: the <code>vertical-align</code> property with the <code>sub</code> value will achieve the same effect.</li> </ul> <h2>Examples</h2> <pre><code>&lt;p&gt;The chemical formula of water: H&lt;sub&gt;2&lt;/sub&gt;O&lt;/p&gt;</code></pre> <h4>Result</h4> <p>The chemical formula of water: H<sub>2</sub>O</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sub"
                    ], 
                    "flags": 0, 
                    "guid": "H@S%z5-/c", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;sup&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />text that should be <b>displayed, for typographic reasons, higher</b>, and often smaller, than the main span of text", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <ul> <li>This element should be used for typographical reasons only, i.e.  changing the position of the text changing its meaning like in  mathematical (like <var>f<sup>4</sup></var>, though the use of a MathML formula should be considered) or in French abbreviations (like M<sup>lle</sup>, M<sup>me</sup> or C<sup>ie</sup>).</li> <li>This element must not be used for styling purpose like the styling of the product name Latex. In that case CSS style should be used: the <code>vertical-align</code> property with the <code>super</code> value will achieve the same effect.</li> </ul> <h2>Examples</h2> <pre><code>&lt;p&gt;This text is &lt;sup&gt;superscripted&lt;/sup&gt;&lt;/p&gt;</code></pre> <h4>Result</h4> <p>This text is <sup>superscripted</sup></p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/sup"
                    ], 
                    "flags": 0, 
                    "guid": "k)y@m)IjID", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;time&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />represents either a <b>time</b> on a 24-hour clock or a precise date in the Gregorian calendar (with optional time and timezone information)", 
                        "", 
                        "<h2>Attributes</h2> <p>Like all other HTML&nbsp;elements, this element supports the global attributes.</p> <dl> <dt><strong><code>datetime</code></strong></dt> <dd>This attribute indicates the time and date of the element and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp.</dd> </dl> <h2>Usage notes</h2> <p>This element is intended to be used presenting dates and times in a  machine readable format. This can be helpful for user agents to offer  any event scheduling for user's calendar.&nbsp;</p> <p>This element is not appropriate for instances where a specific date  cannot be calculated, nor should it be used for dates prior to the  introduction to the Gregorian calendar (due to complications with  calculating those dates).</p> <h2>Examples</h2> <h3>Simple example</h3> <h4>HTML</h4> <pre><code>&lt;p&gt;The concert starts at &lt;time&gt;20:00&lt;/time&gt;.&lt;/p&gt;</code></pre> <h4><code>datetime</code> example</h4> <h4>HTML</h4> <pre><code>&lt;p&gt;The concert took place on &lt;time   datetime=\"2001-05-15T19:00\"&gt;May 15&lt;/time&gt;.&lt;/p&gt;</code></pre> <h4></h4>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/time"
                    ], 
                    "flags": 0, 
                    "guid": "J~4%yH-=ps", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;u&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>unarticulated, though explicitly rendered, non-textual annotation</b>, such as labeling the text as being a proper name in Chinese text (a Chinese proper name mark), or labeling the text as being misspelled<div>Before HTML5: renders text with an underline, a line under the baseline of its content.&nbsp;</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <p>As with all pure styling elements, <code>&lt;u&gt;</code>  was deprecated in HTML 4 and XHTML 1, but was then re-introduced in  HTML5 with other semantics. If you want to underline text in a  non-semantic manner, you should use a <code>&lt;span&gt;</code> element, or another semantically appropriate element, and style it with the CSS <code>text-decoration</code> property, with the <code>underline</code> value.</p> <p><strong>Tip:</strong>&nbsp;Avoid using the <code>&lt;u&gt;</code> element where it could be confused for a hyperlink.</p> <div> <p><strong>Note:</strong>&nbsp;The HTML 5 specification reminds developers that other elements are almost always more appropriate than <code>&lt;u&gt;</code>.</p> </div> <h2>Example</h2> <div> <p>The following are examples of how elements other than <code>&lt;u&gt;</code> should be used instead.</p> </div> <pre><code>&lt;u&gt;Today's Special&lt;/u&gt;: Salmon&lt;br /&gt; &lt;span style=\"text-decoration:underline;\"&gt;Today's Special&lt;/span&gt;:   Salmon &lt;!-- Here &lt;span&gt; is used as the underlining is purely decorative   and it is applied with CSS --&gt;</code></pre> <p><u>Today's Special</u>: Salmon</p> <p><u>Today's Special</u>: Salmon</p> <pre><code>&lt;p&gt;&lt;u&gt;All&lt;/u&gt; of that is explained in   &lt;u&gt;Dive into Python&lt;/u&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;All&lt;/em&gt; of that is explained in   &lt;i&gt;Dive into Python&lt;/i&gt;&lt;/p&gt; &lt;!-- Here the \"All\" is marked as stressed, using &lt;em&gt;,   while \"Dive into Python\" is marked as a name using &lt;i&gt; --&gt;</code></pre> <p><u>All</u> of that is explained in <u>Dive into Python</u>.</p> <p><em>All</em> of that is explained in<em> Dive into Python</em>.</p> <p>Due to the default styling of <code>&lt;em&gt;</code> and <code>&lt;i&gt;</code> they have been displayed in italics, however CSS can be used to style those elements with a normal font style and underline.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/u"
                    ], 
                    "flags": 0, 
                    "guid": "f}/6x9u,Q6", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;var&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br />represents a <b>variable</b> in a mathematical expression or a programming context", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Typical default style properties</h2> <pre><code>var {   font-style: italic;  }</code></pre> <h2>Example</h2> <pre><code>&lt;p&gt; A simple equation:   &lt;var&gt;x&lt;/var&gt; = &lt;var&gt;y&lt;/var&gt; + 2 &lt;/p&gt;</code></pre> <p>A simple equation: <var>x</var> = <var>y</var> + 2</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/var"
                    ], 
                    "flags": 0, 
                    "guid": "murAM(?=x-", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;wbr&gt;</code>", 
                        "", 
                        "<small>HTML inline text semantics element</small><br /><b>word break opportunity</b>—a position within text where the browser may optionally break a line, though its line-breaking rules would not otherwise create a break at that location", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Notes</h2> <p>On UTF-8 encoded pages, <code>&lt;wbr&gt;</code> behaves like the <code>U+200B</code><code> ZERO-WIDTH SPACE</code> code point. In particular, it behaves like a Unicode bidi BN code point, meaning it has no effect on bidi-ordering: <code>&lt;div dir=rtl&gt;123,&lt;wbr&gt;456&lt;/div&gt;</code> displays, when not broken on two lines, <code>123,456</code> and not <code>456,123</code>.</p> <p>For the same reason, the <code>&lt;﻿wbr﻿&gt;</code> element does not  introduce a hyphen at the line break point. To make a hyphen appear only  at the end of a line, use the soft hyphen character entity (<code>&amp;﻿shy;</code>) instead.</p> <p>This element was first implemented in Internet Explorer 5.5 and was officially defined in HTML5.</p> <h2>Example</h2> <p><em>The Yahoo Style Guide </em>recommends breaking a URL <em>before</em> punctuation, to avoid leaving a punctuation mark at the end of the line, which the reader might mistake for the end of the URL.</p> <pre><code>&lt;p&gt;http://this&lt;wbr&gt;.is&lt;wbr&gt;.a&lt;wbr&gt;.really&lt;wbr&gt;.long&lt;wbr&gt;.example&lt;wbr&gt;.com/With&lt;wbr&gt;/deeper&lt;wbr&gt;/level&lt;wbr&gt;/pages&lt;wbr&gt;/deeper&lt;wbr&gt;/level&lt;wbr&gt;/pages&lt;wbr&gt;/deeper&lt;wbr&gt;/level&lt;wbr&gt;/pages&lt;wbr&gt;/deeper&lt;wbr&gt;/level&lt;wbr&gt;/pages&lt;wbr&gt;/deeper&lt;wbr&gt;/level&lt;wbr&gt;/pages&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/wbr"
                    ], 
                    "flags": 0, 
                    "guid": "l@BKcXkF#e", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;area&gt;</code>", 
                        "", 
                        "<small>HTML media element</small><br />defines a <b>hot-spot region</b> on an image, and optionally associates it with a hypertext link. This element is used only within a <code>&lt;map&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>accesskey</code></strong> HTML 4 only, Obsolete since Gecko 5.0</dt> <dd>Specifies a keyboard navigation accelerator for the element.  Pressing ALT or a similar key in association with the specified  character selects the form control correlated with that key sequence.  Page designers are forewarned to avoid key sequences already bound to  browsers. This attribute is global since HTML5.</dd> </dl> <dl> <dt><strong><code>alt</code></strong></dt> <dd>A text string alternative to display on browsers that do not  display images. The text should be phrased so that it presents the user  with the same kind of choice as the image would offer when displayed  without the alternative text. In HTML4, this attribute is required, but  may be the empty string (\"\"). In HTML5, this attribute is required only  if the <strong>href</strong> attribute is used.</dd> </dl> <dl> <dt><strong><code>coords</code></strong></dt> <dd>A set of values specifying the coordinates of the hot-spot region.  The number and meaning of the values depend upon the value specified for  the <strong>shape</strong> attribute. For a <code>rect</code> or rectangle shape, the <strong>coords</strong> value is two x,y pairs: left, top, right, and bottom. For a <code>circle</code> shape, the value is <code>x,y,r</code> where <code>x,y</code> is a pair specifying the center of the circle and <code>r</code> is a value for the radius. For a <code>poly</code> or polygon&nbsp;shape, the value is a set of x,y pairs for each point in the polygon: <code>x1,y1,x2,y2,x3,y3,</code>  and so on. In HTML4, the values are numbers of pixels or percentages,  if a percent sign (%) is appended; in HTML5, the values are numbers of  CSS&nbsp;pixels.</dd> <dt><strong><code>download</code></strong> HTML5</dt> <dd>This attribute, if present, indicates that the author intends the hyperlink to be used for downloading a resource. See <code>&lt;a&gt;</code> for a full description of the <code>download</code> attribute.</dd> </dl> <dl> <dt><strong><code>href</code></strong></dt> <dd>The hyperlink target for the area. Its value is a valid URL. In HTML4, either this attribute or the <strong>nohref</strong>  attribute must be present in the element. In HTML5, this attribute may  be omitted; if so, the area element does not represent a hyperlink.</dd> </dl> <dl> <dt><strong><code>hreflang</code></strong> HTML5</dt> <dd>Indicates the language of the linked resource. Allowed values are determined by BCP47. Use this attribute only if the <strong>href</strong> attribute is present.</dd> </dl> <dl> <dt><strong><code>name</code></strong> HTML 4 only, Obsolete since Gecko 5.0</dt> <dd>Define a names for the clickable area so that it can be scripted by older browsers.</dd> </dl> <dl> <dt><strong><code>media</code></strong> HTML5</dt> <dd>A hint of the media for which the linked resource was designed, for example <code>print and screen</code>. If omitted, it defaults to <code>all</code>. Use this attribute only if the <strong>href</strong> attribute is present.</dd> </dl> <dl> <dt><strong><code>nohref</code></strong> HTML 4 only, Obsolete since Gecko 5.0</dt> <dd>Indicates that no hyperlink exists for the associated area. Either this attribute or the <strong>href</strong> attribute must be present in the element.  <div> <p><strong>Usage note: </strong>This attribute is obsolete in HTML5, instead omitting the <strong>href</strong> attribute is sufficient.</p> </div> </dd> </dl> <dl> <dt><strong><code>referrerpolicy</code></strong> <i> </i></dt> <dd>A string indicating which referrer to use when fetching the resource:  <ul> <li><code>\"no-referrer\"</code> meaning that the <code>Referer:</code>&nbsp;header will not be sent.</li> <li>\"<code>no-referrer-when-downgrade</code>\" meaning that no <code>Referer:</code>  header will be sent when navigating to an origin without TLS  (HTTPS).&nbsp;This is a user agent’s default behavior, if no policy is  otherwise specified.</li> <li><code>\"origin\"</code> meaning that the referrer will be the origin of the page, that is roughly the scheme, the host and the port.</li> <li>\"origin-when-cross-origin\" meaning that navigations to other  origins will be limited to the scheme, the host and the port, while  navigations on the same origin will include the referrer's path.&nbsp;</li> <li><code>\"unsafe-url\"</code> meaning that the referrer will include  the origin and the path (but not the fragment, password, or username).  This case is unsafe because it can leak origins and paths from  TLS-protected resources to insecure origins.</li> </ul> </dd> <dt><strong><code>rel</code></strong> HTML5</dt> <dd>For anchors containing the <strong>href</strong> attribute, this  attribute specifies the relationship of the target object to the link  object. The value is a comma-separated list of link types values.  The values and their semantics will be registered by some authority  that might have meaning to the document author. The default  relationship, if no other is given, is void. Use this attribute only if  the <strong>href</strong> attribute is present.</dd> <dt><strong><code>shape</code></strong></dt> <dd>The shape of the associated hot spot. The specifications for HTML 5 and HTML 4 define the values <code>rect</code>, which defines a rectangular region; <code>circle</code>, which defines a circular region; <code>poly</code>, which defines a polygon; and <code>default</code>, which indicates the entire region beyond any defined shapes. Many browsers, notably Internet Explorer 4 and higher, support <code>circ</code>, <code>polygon</code>, and <code>rectangle</code> as valid values for <strong>shape</strong>; these values are <i> </i>.</dd> <dt><strong><code>tabindex</code></strong> HTML 4 only, Obsolete since Gecko 5.0</dt> <dd>A numeric value specifying the position of the defined area in the browser tabbing order. This attribute is global in HTML5.</dd> </dl> <dl> <dt><strong><code>target</code></strong></dt> <dd>This attribute specifies where to display the linked resource. In  HTML4, this is the name of, or a keyword for, a frame. In HTML5, it is a  name of, or keyword for, a <em>browsing context</em> (for example, tab, window, or inline frame). The following keywords have special meanings:  <ul> <li><code>_self</code>: Load the response into the same HTML4 frame  (or HTML5 browsing context) as the current one. This value is the  default if the attribute is not specified.</li> <li><code>_blank</code>: Load the response into a new unnamed HTML4 window or HTML5 browsing context.</li> <li><code>_parent</code>: Load the response into the HTML4 frameset  parent of the current frame or HTML5 parent browsing context of the  current one. If there is no parent, this option behaves the same way as <code>_self</code>.</li> <li><code>_top</code>: In HTML4: Load the response into the full,  original window, canceling all other frames. In HTML5: Load the response  into the top-level browsing context (that is, the browsing context that  is an ancestor of the current one, and has no parent). If there is no  parent, this option behaves the same way as <code>_self</code>.</li> </ul>  Use this attribute only if the <strong>href</strong> attribute is present.</dd> <dt><strong><code>type</code></strong>&nbsp;Obsolete since Gecko 5.1</dt> <dd>This attribute specifies the media type in the form of a MIME type  for the link target. Generally, this is provided strictly as advisory  information; however, in the future a browser might add a small icon for  multimedia types. For example, a browser might add a small speaker icon  when type is set to audio/wav. For a complete list of recognized MIME  types, see https://www.w3.org/TR/html4/references.html#ref-MIMETYPES. Use this attribute only if the <strong>href</strong> attribute is present.</dd> </dl> <h2>Example</h2> <pre><code>&lt;map name=\"primary\"&gt;   &lt;area shape=\"circle\" coords=\"75,75,75\" alt=\"Click to go Left\"&gt;   &lt;area shape=\"circle\" coords=\"275,75,75\" alt=\"Click to go Right\"&gt; &lt;/map&gt; &lt;img usemap=\"#primary\" src=\"http://placehold.it/350x150\" alt=\"350 x 150 pic\"&gt;</code></pre><div></div><p></p><h2>Notes</h2> <p>Under the HTML 3.2, 4.0, and 5 specifications, the closing tag <code>&lt;/area&gt;</code> is forbidden.</p> <p>The XHTML 1.0 specification requires a trailing slash: <code>&lt;area /&gt;</code>.</p> <p>The <strong>id</strong>, <strong>class</strong>, and <strong>style</strong>  attributes have the same meaning as the core attributes defined in the  HTML 4 specification, but only Netscape and Microsoft define them.</p> <p>Netscape 1–level browsers do not understand the <strong>target</strong> attribute as it relates to frames.</p> <p>HTML 3.2 defines only <strong>alt</strong>, <strong>coords</strong>, <strong>href</strong>, <strong>nohref</strong>, and <strong>shape</strong>.</p> <p>HTML 5.1 defines obsolete the attribute <strong>type</strong> on this tag.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/area"
                    ], 
                    "flags": 0, 
                    "guid": "p>5x_v${HU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;audio&gt;</code>", 
                        "", 
                        "<small>HTML media element</small><br />is used to <b>embed sound content</b> in documents. It may contain one or more audio sources, represented using the <code>src</code> attribute or the <code>&lt;source&gt;</code> element: the browser will choose the most suitable one. It can also be the destination for streamed media, using a <code>MediaStream</code>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>autoplay</code></strong></dt> <dd>A Boolean attribute:&nbsp;if specified (even if the value is <code>\"false\"</code>!),  the audio will automatically begin playback as soon as it can do so,  without waiting for the entire audio file to finish downloading.  <div>Sites which automatically play audio (or videos with  an audio track) can be an unpleasant experience for users, so it should  be avoided when possible. If you must offer autoplay functionality, you  should make it opt-in (requiring a user to specifically enable it).  However, this can be useful when creating media elements whose source  will be set at a later time, under user control.</div> </dd> <dt><strong><code>autobuffer</code></strong> Obsolete since Gecko 2.0</dt> <dd>A Boolean attribute:&nbsp;if specified, the audio will automatically  begin being downloaded, even if not set to autoplay. This continues  until the media cache is full, or the entire audio file has been  downloaded, whichever comes first. This should only be used when it is  expected that the user will choose to play the audio; for example, if  the user has navigated to a page using a \"Play this audio\" link. This  attribute was removed in Gecko 2.0 (Firefox 4 / Thunderbird 3.3 /  SeaMonkey 2.1) in favor of the <code>preload</code> attribute.</dd> <dt><strong><code>buffered</code></strong></dt> <dd>An attribute you can read to determine which time ranges of the media have been buffered. This attribute contains a <code>TimeRanges</code> object.</dd> <dt><strong><code>controls</code></strong></dt> <dd>If this attribute is present, the browser will offer controls to  allow the user to control audio playback, including volume, seeking, and  pause/resume playback.</dd> <dt><strong><code>loop</code></strong></dt> <dd>A Boolean attribute:&nbsp;if specified, will&nbsp;automatically seek back to the start&nbsp;upon reaching the end of the audio.</dd> <dt><strong><code>mozCurrentSampleOffset</code></strong> <i> </i></dt> <dd>The offset, specified as the number of samples since the beginning of the audio stream, at which the audio is currently playing.</dd> <dt><strong><code>muted</code></strong></dt> <dd>A Boolean attribute which indicates whether the audio will be initially silenced. Its default value is false.</dd> <dt><strong><code>played</code></strong></dt> <dd>A <code>TimeRanges</code> object indicating all the ranges of the audio that have been played.</dd> <dt><strong><code>preload</code></strong></dt> <dd>This enumerated attribute is intended to provide a hint to the  browser about what the author thinks will lead to the best user  experience. It may have one of the following values:  <ul> <li><code>none</code>: indicates that the audio should not be preloaded;</li> <li><code>metadata</code>: indicates that only audio metadata (e.g. length) is fetched;</li> <li><code>auto</code>: indicates that the whole audio file could be downloaded, even if the user is not expected to use it;</li> <li>the <em>empty string</em>: synonym of the <code>auto</code> value.</li> </ul> <p>If not set, its default value is browser-defined (i.e. each browser  may have its own default value). The spec advises it to be set to <code>metadata</code>.</p> <div><strong>Usage notes:</strong> <ul> <li>The <code>autoplay</code> attribute has precedence over&nbsp;<code>preload</code>. If <code>autoplay</code> is specified, the browser would obviously need to start downloading the audio for playback.</li> <li>The browser is not forced by the specification to follow the value of this attribute; it is a mere hint.</li> </ul> </div> </dd> <dt><strong><code>src</code></strong></dt> <dd>The URL of the audio to embed. This is subject to HTTP access controls. This is optional; you may instead use the <code>&lt;source&gt;</code> element within the audio block to specify the audio to embed.</dd> <dt><strong><code>volume</code></strong></dt> <dd>The playback volume, in the range 0.0 (silent) to 1.0 (loudest).</dd> </dl> <p>Time offsets are specified as float values indicating the number of seconds to offset.</p> <div><strong>Note:</strong> The time offset value definition has not yet been completed in the HTML5 specification and is subject to change.</div> <h2>Events</h2> <p>An audio element can fire various events.</p> <h2>Usage notes</h2> <p>Fallback content for browsers not supporting the <code>&lt;audio&gt;</code> element can be added&nbsp;inside the opening and closing <code>&lt;audio&gt;&lt;/audio&gt;</code> tags.</p> <p>The most basic playback functionality can be made available using the <code>controls</code>  attribute (see below); for more advanced usage, audio playback and  controls can be manipulated using the HTML Media API, and more  specifically the features defined in the <code>HTMLAudioElement</code> interface.</p> <p>You can also use the Web Audio API to directly generate and manipulate audio streams from JavaScript code. See Web Audio API for details.</p> <h2>Examples</h2> <h3>Basic usage</h3> <pre><code>&lt;!-- Simple audio playback --&gt; &lt;audio   src=\"http://developer.mozilla.org/@api/deki/files/2926/=AudioTest_(1).ogg\"   autoplay&gt;   Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element. &lt;/audio&gt;  &lt;!-- Audio playback with captions --&gt; &lt;audio src=\"foo.ogg\"&gt;   &lt;track kind=\"captions\" src=\"foo.en.vtt\" srclang=\"en\" label=\"English\"&gt;   &lt;track kind=\"captions\" src=\"foo.sv.vtt\" srclang=\"sv\" label=\"Svenska\"&gt; &lt;/audio&gt;</code></pre> <h3>Audio element with source element</h3> <pre><code>&lt;audio controls=\"controls\"&gt;   Your browser does not support the &lt;code&gt;audio&lt;/code&gt; element.   &lt;source src=\"foo.wav\" type=\"audio/wav\"&gt; &lt;/audio&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/audio"
                    ], 
                    "flags": 0, 
                    "guid": "INps>n4%g1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;img&gt;</code>", 
                        "", 
                        "<small>HTML media element</small><br /><b>image</b> in the document", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> Deprecated since HTML4.01, Obsolete since HTML5&nbsp;</dt> <dd>The alignment of the image with respect to its surrounding context. In HTML5, use the&nbsp;<code>float</code> and/or <code>vertical-align</code> CSS properties instead.</dd> <dt><strong><code>alt</code></strong></dt> <dd>This attribute defines the alternative text describing the image.  Users will see this text displayed if the image URL is wrong, the image  is not in one of the supported formats, or if the image is not yet downloaded.  <div> <p>Browsers do not always display the image referenced by the element.  This is the case for non-graphical browsers (including those used by  people with vision impairments), if the user chooses not to display  images, or if the browser cannot display the image because it is invalid  or an unsupported type. In these cases, the browser may replace the image with the text defined in this element's <code>alt</code> attribute. You should, for these reasons and others, provide a useful value for <code>alt</code> whenever possible.</p> </div> <div> <p>Omitting this attribute altogether&nbsp;indicates that the image is a key  part of the content, and no textual equivalent is available. Setting  this attribute to an empty string (<code>alt=\"\")</code> indicates that this image is <em>not</em> a key part of the content, and that&nbsp;non-visual browsers may omit it from rendering.</p> </div> </dd> <dt><strong><code>border</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>The width of a border around the image. In HTML5, use the <code>border</code> CSS property instead.</dd> <dt><strong><code>crossorigin</code></strong> HTML5</dt> <dd>This enumerated attribute indicates if the fetching of the related image must be done using CORS or not. CORS-enabled images can be reused in the <code>&lt;canvas&gt;</code> element without being \"tainted.\" The allowed values are:</dd> <dd> <dl> <dt><code>anonymous</code></dt> <dd>A cross-origin request (i.e., with <code>Origin:</code> HTTP  header) is performed. But no credential is sent (i.e., no cookie, no  X.509 certificate, and no HTTP Basic authentication is sent). If the  server does not give credentials to the origin site (by not setting the <code>Access-Control-Allow-Origin:</code> HTTP header), the image will be tainted and its usage restricted.</dd> <dt><code>use-credentials</code></dt> <dd>A cross-origin request (i.e., with <code>Origin:</code> HTTP  header) performed with credential is sent (i.e., a cookie, a  certificate, and HTTP Basic authentication is performed). If the server  does not give credentials to the origin site (through <code>Access-Control-Allow-Credentials:</code> HTTP header), the image will be tainted and its usage restricted.</dd> </dl>  When not present, the resource is fetched without a CORS request (i.e., without sending the <code>Origin:</code> HTTP header), preventing its non-tainted usage in <code>&lt;canvas&gt;</code> elements. If invalid, it is handled as if the enumerated keyword <strong>anonymous</strong> was used. See CORS settings attributes for additional information.</dd> <dt><strong><code>height</code></strong></dt> <dd>The intrinsic height of the image in&nbsp;pixels.&nbsp;In HTML 4, the height could be defined&nbsp;pixels or as a percentage. In&nbsp;HTML5, however, the value must be in pixels.</dd> <dt><strong><code>hspace</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>The number of pixels of white space to insert to the left and right of the image. In HTML5, use the <code>margin</code> CSS property&nbsp;instead.</dd> <dt><strong><code>ismap</code></strong></dt> <dd>This Boolean attribute indicates that the image is part of a  server-side map. If so, the precise coordinates of a click are sent to  the server.  <div> <p>This attribute is allowed only if the <code>&lt;img&gt;</code> element is a descendant of an <code>&lt;a&gt;</code> element with a valid <code>href</code> attribute.</p> </div> </dd> <dt><strong><code>longdesc</code></strong></dt> <dd>A link to a more detailed description of the image. Possible values are a URL or an element&nbsp;id.</dd> <dt><strong><code>name</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>A name for the element. It is supported in HTML 4 only for backward compatibility. Use the <code>id</code> attribute instead.</dd> <dt><strong><code>referrerpolicy</code></strong> <i> </i></dt> <dd>A string indicating which referrer to use when fetching the resource:  <ul> <li><code>no-referrer:</code>&nbsp;the <code>Referer</code>&nbsp;header will not be sent.</li> <li><code>no-referrer-when-downgrade:</code>&nbsp;no <code>Referer</code>&nbsp;header  will be sent when navigating to an origin without TLS (HTTPS). This is a  user agent’s default behavior&nbsp;if no policy is otherwise specified.</li> <li><code>origin:</code>&nbsp;the <code>Referer</code> header&nbsp;will include the page of origin's&nbsp;scheme, the host and the port.</li> <li><code>origin-when-cross-origin:</code>&nbsp;navigating&nbsp;to other origins  will limit&nbsp;the included referral&nbsp;data&nbsp;to the scheme, the host and the  port, while navigating&nbsp;from the same origin will include the referrer's  full path.</li> <li><code>unsafe-url:</code>&nbsp;the <code>Referer</code> header will  include the origin and the path,&nbsp;but not the fragment, password&nbsp;or  username. This case is unsafe because it can leak origins and paths from  TLS-protected resources to insecure origins.</li> </ul> </dd> <dt><strong><code>sizes</code></strong>HTML5</dt> <dd>A list of one or more strings separated by commas indicating a set of source sizes. Each source size consists of:  <ol> <li>a media condition. This must be omitted for the last item.</li> <li>a source size value.</li> </ol> <p>Source size values specify the intended display size of the image.  User agents use the current source size to select one of the sources  supplied by the <code>srcset</code> attribute, when those sources are described using width ('<code>w</code>')  descriptors. The selected source size affects the intrinsic size of the  image (the image’s display size if no CSS styling is applied). If the <code>srcset</code> attribute is absent, or contains no values with a width (<code>w</code>) descriptor, then the <code>sizes</code> attribute has no effect.</p> </dd> <dt><strong><code>src</code></strong></dt> <dd>The image URL. This attribute is mandatory for the <code>&lt;img&gt;</code> element. On browsers supporting <code>srcset</code>, <code>src</code> is treated like a candidate image with a pixel density descriptor <code>1x</code> unless an image with this pixel density descriptor is already defined in <code>srcset,</code> or unless&nbsp;<code>srcset</code> contains '<code>w</code>' descriptors.</dd> <dt><strong><code>srcset</code></strong>HTML5</dt> <dd>A list of one or more strings separated by commas indicating a set  of possible image sources for the user agent to use. Each string is  composed of:  <ol> <li>a URL to an image,</li> <li>optionally, whitespace followed by one of:    <ul> <li>a width descriptor, or&nbsp;a positive integer directly followed by '<code>w</code>'. The width descriptor is divided by the source size given in the&nbsp;<code>sizes</code> attribute to calculate the effective pixel density.</li> <li>a pixel density descriptor, which is a positive floating point number directly followed by '<code>x</code>'.</li> </ul> </li> </ol> <p>If no descriptor is specified, the source is assigned the default descriptor: <code>1x</code>.</p> <p>It is incorrect&nbsp;to mix width descriptors and pixel density descriptors in the same <code>srcset</code> attribute. Duplicate descriptors (for instance, two sources in the same <code>srcset</code> which are both described with '<code>2x</code>') are invalid, too.</p> <p>The user agent selects any one of the available sources at its  discretion.&nbsp;This provides them with significant leeway to tailor their  selection based on things like user preferences or bandwidth conditions.</p> </dd> <dt><strong><code>width</code></strong></dt> <dd>The intrinsic width of the image in pixels.&nbsp;In HTML 4, either a percentage or pixels were acceptable values. In&nbsp;HTML5, however, only pixels are acceptable.</dd> <dt><strong><code>usemap</code></strong></dt> <dd>The partial URL (starting with '#') of an image map associated with the element.  <div> <p><strong>Usage note: </strong>You cannot use this attribute if the <code>&lt;img&gt;</code> element is a descendant of an <code>&lt;a&gt;</code> or <code>&lt;button&gt;</code> element.</p> </div> </dd> <dt><strong><code>vspace</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>The number of pixels of white space to insert above and below the image. In HTML5, use the <code>margin</code>&nbsp;CSS property&nbsp;instead.</dd> </dl> <h2>Supported image formats</h2> <p>The HTML standard doesn't give a list of image formats that must be  supported, so each user agent supports a different set of formats. Gecko supports:</p> <ul> <li>JPEG</li> <li>GIF, including animated GIFs</li> <li>PNG</li> <li>APNG </li> <li>SVG </li> <li>BMP</li> <li>BMP ICO</li> <li>PNG ICO </li> </ul> <h2>Interaction with CSS</h2> <p>Regarding CSS, <code>&lt;img&gt;</code> is a replaced element. It has no baseline, so when images are used in an inline formatting context with <code>vertical-align</code><code>: baseline</code>, the bottom of the image will be placed on the container's baseline.</p> <p>Depending on its type, an image may have an intrinsic width and  height. For some image types, however, intrinsic dimensions&nbsp;are not  necessary.&nbsp;SVG images, for instance,&nbsp;have no intrinsic dimensions.</p> <h2>Errors</h2> <p>If an error occurs while trying to load or render the image, and an <code>onerror</code> event handler has been configured to handle the <code>error</code> event, that event handler will get called. This can happen in a number of situations, including:</p> <ul> <li>The <code>src</code> attribute is empty or <code>null</code>.</li> <li>The specified <code>src</code> URL is the same as the URL of the page the user is currently on.</li> <li>The specified image is corrupted in some way that prevents it from being loaded.</li> <li>The specified image's metadata is corrupted in such a way that it's  impossible to retrieve its dimensions, and no dimensions were specified  in the <code>&lt;img&gt;</code> element's attributes.</li> <li>The specified image is in a format not supported by the user agent.</li> </ul> <h2>Example 1: &nbsp;Alternative text</h2> <pre><code>&lt;img src=\"mdn-logo-sm.png\" alt=\"MDN\"&gt;</code></pre> <p><img src=\"https://developer.cdn.mozilla.net/media/img/mdn-logo-sm.png\" /></p> <h2>Example 2: Image link</h2> <pre><code>&lt;a&gt;MDN&lt;img src=\"mdn-logo-sm.png\" alt=\"MDN\"&gt;&lt;/a&gt;</code></pre> <p><img src=\"mdn-logo-sm.png\" /></p> <h2>Example 3: Using the <code>srcset</code> attribute</h2> <p>The <code>src</code> attribute is a <code>1x</code> candidate in user agents that support <code>srcset</code>.</p> <pre><code>&lt;img src=\"mdn-logo-sm.png\"        alt=\"MDN\"        srcset=\"mdn-logo-HD.png 2x\"&gt;</code></pre> <h2>Example 4: Using the <code>srcset</code> and <code>sizes</code> attributes</h2> <p>The <code>src</code> attribute is ignored in user agents that support <code>srcset</code> when using '<code>w</code>' descriptors. When the <code>(min-width: 600px)</code> media condition matches, the image will be 200px wide, otherwise it will be 50vw wide (50% of the viewport width).</p> <pre><code>&lt;img src=\"clock-demo-thumb-200.png\"        alt=\"Clock\"        srcset=\"clock-demo-thumb-200.png 200w,           clock-demo-thumb-400.png 400w\"       sizes=\"(min-width: 600px) 200px, 50vw\"&gt;</code></pre> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img"
                    ], 
                    "flags": 0, 
                    "guid": "l%qTVyi-qi", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;map&gt;</code>", 
                        "", 
                        "<small>HTML media element</small><br />is used with <code>&lt;area&gt;</code> elements to <b>define an image map</b> (a clickable link area)", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>name</code></strong></dt> <dd>The name attribute gives the map a name so that it can be  referenced. The attribute must be present and must have a non-empty  value with no space characters. The value of the name attribute must not  be a compatibility-caseless match for the value of the name attribute  of another map element in the same document. If the id attribute is also  specified, both attributes must have the same value.</dd> </dl> <h2>Example</h2> <pre><code>&lt;map name=\"primary\"&gt;   &lt;area shape=\"circle\" coords=\"75,75,75\"&gt;   &lt;area shape=\"circle\" coords=\"275,75,75\"&gt; &lt;/map&gt; &lt;img usemap=\"#primary\" src=\"http://placehold.it/350x150\" alt=\"350 x 150 pic\"&gt;</code></pre> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/map"
                    ], 
                    "flags": 0, 
                    "guid": "m<>6TzbfW0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;track&gt;</code>", 
                        "", 
                        "<small>HTML media element</small><br />is used as a child of the media elements <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code>. It lets you <b>specify timed text tracks</b> (or time-based data), for example to automatically handle subtitles. The tracks are formatted in WebVTT format (<code>.vtt</code> files) — Web Video Text Tracks", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>default</code></strong></dt> <dd>This attribute indicates that the track should be enabled unless  the user's preferences indicate that another track is more appropriate.  This may only be used on one <code>track</code> element per media element.</dd> <dt><strong><code>kind</code></strong></dt> <dd>How the text track is meant to be used. If omitted the default kind is <code>subtitles</code>. If the attribute is not present, it will use the <code>subtitles</code>. If the attribute contains an invalid value, it will use <code>metadata</code>. (Versions of Chrome earlier than 52 treated an invalid value as <code>subtitles</code>.)&nbsp;The following keywords are allowed:  <ul> <li><code>subtitles</code> <ul> <li>Subtitles provide translation of content that cannot be  understood by the viewer. For example dialogue or text that is not  English in an English language film.</li> <li>Subtitles may contain additional content, usually extra  background information. For example the text at the beginning of the  Star Wars films, or the date, time, and location of a scene.</li> </ul> </li> <li><code>captions</code> <ul> <li>Closed captions provide a transcription and possibly a translation of audio.</li> <li>It may include important non-verbal information such as music  cues or sound effects. It may indicate the cue's source (e.g. music,  text, character).</li> <li>Suitable for users who are deaf or when the sound is muted.</li> </ul> </li> <li><code>descriptions</code> <ul> <li>Textual description of the video content.</li> <li>Suitable for users who are blind or where the video cannot be seen.</li> </ul> </li> <li><code>chapters</code> <ul> <li>Chapter titles are intended to be used when the user is navigating the media resource.</li> </ul> </li> <li><code>metadata</code> <ul> <li>Tracks used by scripts. Not visible to the user.</li> </ul> </li> </ul> </dd> <dt><strong><code>label</code></strong></dt> <dd>A user-readable title of the text track which is used by the browser when listing available text tracks.</dd> <dt><strong><code>src</code></strong></dt> <dd>Address of the track (<code>.vtt</code> file). Must be a valid URL. This attribute must be defined.</dd> <dt><strong><code>srclang</code></strong></dt> <dd>Language of the track text data. It must be a valid BCP 47 language tag. If the <code>kind</code> attribute is set to&nbsp;<code>subtitles,</code> then <code>srclang</code> must be defined.</dd> </dl> <h2>Usage notes</h2> <p>The type of data that <code> track</code> adds to the media is set in the <code>kind</code> attribute, which can take values of <code>subtitles</code>, <code>captions</code>, <code>descriptions</code>, <code>chapters</code> or <code>metadata</code>. The element points to a source file containing timed text that the browser exposes when the user requests additional data.</p> <p>A <code>media</code> element cannot have more than one <code>track</code> with the same <code>kind</code>, <code>srclang</code>, and <code>label</code>.</p> <h2>Examples</h2> <pre><code>&lt;video controls poster=\"/images/sample.gif\"&gt;    &lt;source src=\"sample.mp4\" type=\"video/mp4\"&gt;    &lt;source src=\"sample.ogv\" type=\"video/ogv\"&gt;    &lt;track kind=\"captions\" src=\"sampleCaptions.vtt\" srclang=\"en\"&gt;    &lt;track kind=\"descriptions\"      src=\"sampleDescriptions.vtt\" srclang=\"en\"&gt;    &lt;track kind=\"chapters\" src=\"sampleChapters.vtt\" srclang=\"en\"&gt;    &lt;track kind=\"subtitles\" src=\"sampleSubtitles_de.vtt\" srclang=\"de\"&gt;    &lt;track kind=\"subtitles\" src=\"sampleSubtitles_en.vtt\" srclang=\"en\"&gt;    &lt;track kind=\"subtitles\" src=\"sampleSubtitles_ja.vtt\" srclang=\"ja\"&gt;    &lt;track kind=\"subtitles\" src=\"sampleSubtitles_oz.vtt\" srclang=\"oz\"&gt;    &lt;track kind=\"metadata\" src=\"keyStage1.vtt\" srclang=\"en\"      label=\"Key Stage 1\"&gt;    &lt;track kind=\"metadata\" src=\"keyStage2.vtt\" srclang=\"en\"      label=\"Key Stage 2\"&gt;    &lt;track kind=\"metadata\" src=\"keyStage3.vtt\" srclang=\"en\"      label=\"Key Stage 3\"&gt;    &lt;!-- Fallback --&gt;    ... &lt;/video&gt;</code></pre> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/track"
                    ], 
                    "flags": 0, 
                    "guid": "F&.i/Z*~].", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;video&gt;</code>", 
                        "", 
                        "<small>HTML media element</small><br />is used to embed <b>video content</b> in a document", 
                        "", 
                        "<h2>Attributes</h2> <p>Like all other HTML elements, this element supports the global attributes.</p> <dl> <dt><strong><code>autoplay</code></strong></dt> <dd>A Boolean attribute; if specified, the video automatically begins  to play back as soon as it can do so without stopping to finish loading  the data.</dd> <dd> <p>Sites which automatically play audio (or videos with an  audio track) can be an unpleasant experience for users, so it should be  avoided when possible. If you must offer autoplay functionality, you  should make it opt-in (requiring a user to specifically enable it).  However, this can be useful when creating media elements whose source  will be set at a later time, under user control.</p> </dd> </dl> <dl> <dt><strong><code>buffered</code></strong></dt> <dd>An attribute you can read to determine the time ranges of the buffered media. This attribute contains a <code>TimeRanges</code> object.</dd> <dt><strong><code>controls</code></strong></dt> <dd>If this attribute is present, the browser will offer controls to  allow the user to control video playback, including volume, seeking, and  pause/resume playback.</dd> <dt><strong><code>crossorigin</code></strong></dt> <dd>This enumerated attribute indicates whether to use CORS to fetch the related image. CORS-enabled resources can be reused in the <code>&lt;canvas&gt;</code> element without being <em>tainted</em>. The allowed values are:  <dl> <dt>anonymous</dt> <dd>Sends a cross-origin request without a credential. In other words, it sends the <code>Origin:</code>  HTTP header without a cookie, X.509 certificate, or performing HTTP  Basic authentication. If the server does not give credentials to the  origin site (by not setting the <code>Access-Control-Allow-Origin:</code> HTTP header), the image will be <em>tainted</em>, and its usage restricted.</dd> <dt>use-credentials</dt> <dd>Sends a cross-origin request with a credential. In other words, it sends the <code>Origin:</code>  HTTP header with a cookie, a certificate, or performing HTTP Basic  authentication. If the server does not give credentials to the origin  site (through <code>Access-Control-Allow-Credentials:</code> HTTP header), the image will be <em>tainted</em> and its usage restricted.</dd> </dl>  When not present, the resource is fetched without a CORS request (i.e. without sending the <code>Origin:</code> HTTP header), preventing its non-tainted used in <code>&lt;canvas&gt;</code> elements. If invalid, it is handled as if the enumerated keyword <strong>anonymous</strong> was used. See CORS settings attributes for additional information.</dd> <dt><strong><code>height</code></strong></dt> <dd>The height of the video's display area, in&nbsp;CSS pixels. &nbsp;-- (Absolute values&nbsp;only. &nbsp;NO&nbsp;percentages)</dd> <dt><strong><code>loop</code></strong></dt> <dd>A Boolean attribute; if specified, we will, upon reaching the end of the video, automatically seek back to the start.</dd> <dt><strong><code>muted</code></strong></dt> <dd>A Boolean attribute which indicates the default setting of the  audio contained in the video. If set, the audio will be initially  silenced. Its default value is false, meaning that the audio will be  played when the video is played.</dd> <dt><strong><code>played</code></strong></dt> <dd>A <code>TimeRanges</code> object indicating all the ranges of the video that have been played.</dd> <dt><strong><code>preload</code></strong></dt> <dd>This enumerated attribute is intended to provide a hint to the  browser about what the author thinks will lead to the best user  experience. It may have one of the following values:  <ul> <li><code>none</code>: indicates that the video should not be preloaded.</li> <li><code>metadata</code>: indicates that only video metadata (e.g. length) is fetched.</li> <li><code>auto</code>: indicates that the whole video file could be downloaded, even if the user is not expected to use it.</li> <li>the <em>empty string</em>: synonym of the <code>auto</code> value.</li> </ul> <p>If not set, its default value is browser-defined (i.e. each browser  may have its default value). The spec advises it to be set to <code>metadata</code>.</p> <div><strong>Usage notes:</strong> <ul> <li>The <code>autoplay</code> attribute has precedence over <code>preload</code>. If <code>autoplay</code> is specified, the browser would obviously need to start downloading the video for playback.</li> <li>The specification does not force the browser to follow the value of this attribute; it is a mere hint.</li> </ul> </div> </dd> <dt><strong><code>poster</code></strong></dt> <dd>A URL indicating a poster frame to show until the user plays or  seeks. If this attribute isn't specified, nothing is displayed until the  first frame is available; then the first frame is shown as the poster  frame.</dd> <dt><strong><code>src</code></strong></dt> <dd>The URL of the video to embed. This is optional; you may instead use the <code>&lt;source&gt;</code> element within the video block to specify the video to embed.</dd> <dt><strong><code>width</code></strong></dt> <dd>The width of the video's display area, in&nbsp;CSS pixels. &nbsp;-- (Absolute values&nbsp;only. &nbsp;NO&nbsp;percentages)</dd> </dl> <h2>Events</h2> <p>The <code>&lt;video&gt;</code> element can fire many different events.</p> <h2>Usage notes</h2> <ul> <li>The <code>&lt;video&gt;</code> element contains one or more video sources. To specify a video source, use either the <code>src</code> attribute or the <code>&lt;source&gt;</code> element; the browser will choose the most suitable one. For a list of supported formats, see Media formats supported by the audio and video elements.</li> </ul> <h2>Examples</h2> <pre><code>&lt;!-- Simple video example --&gt; &lt;video src=\"videofile.webm\" autoplay poster=\"posterimage.jpg\"&gt; Sorry, your browser doesn't support embedded videos,  but don't worry, you can &lt;a&gt;download it&lt;/a&gt; and watch it with your favorite video player! &lt;/video&gt;  &lt;!-- Video with subtitles --&gt; &lt;video src=\"foo.webm\"&gt;   &lt;track kind=\"subtitles\" src=\"foo.en.vtt\" srclang=\"en\"     label=\"English\"&gt;   &lt;track kind=\"subtitles\" src=\"foo.sv.vtt\" srclang=\"sv\"     label=\"Svenska\"&gt; &lt;/video&gt;</code></pre> <p>The first example plays a video, starting playback as soon as enough  of the video has been received to allow playback without pausing to  download more. Until the video starts playing, the image  \"posterimage.jpg\" is displayed in its place.</p> <p>The second example allows the user to choose between different subtitles.</p> <h2>Multiple sources example</h2> <p>This example offers three different sources for the media; this  allows the video to be watched regardless of which video codecs are  supported by the browser; first WebM is tried. If that can't be played,  then MP4 is tried. Finally, OGG is tried.</p> <pre><code>&lt;video width=\"480\" controls   poster=\"https://archive.org/download/WebmVp8Vorbis/webmvp8.gif\" &gt;   &lt;source     src=\"https://archive.org/download/WebmVp8Vorbis/webmvp8.webm\"     type=\"video/webm\"&gt;   &lt;source     src=\"https://archive.org/download/WebmVp8Vorbis/webmvp8_512kb.mp4\"     type=\"video/mp4\"&gt;   &lt;source     src=\"https://archive.org/download/WebmVp8Vorbis/webmvp8.ogv\"     type=\"video/ogg\"&gt;   Your browser doesn't support HTML5 video tag. &lt;/video&gt;</code></pre> <p>You can try the preceding example on HTML5 video demo example with live preview code editor.</p> <h2>Server support</h2> <p>If the MIME type for the video is not set correctly on the server,  the video may not show or show a gray box containing an X (if JavaScript  is enabled).</p> <p>If you use Apache Web Server to serve Ogg Theora videos, you can fix  this problem by adding the video file type extensions to \"video/ogg\"  MIME type. The most common video file type extensions are \".ogm\",  \".ogv\", or \".ogg\". To do this, edit the \"mime.types\" file in  \"/etc/apache\" or use the \"AddType\" configuration directive in  httpd.conf.</p> <pre><code>AddType video/ogg .ogm AddType video/ogg .ogv AddType video/ogg .ogg</code></pre> <p>If you serve your videos as WebM, you can fix this problem for the  Apache Web Server by adding the extension used by your video files  (\".webm\" is the most common one) to the MIME type \"video/webm\" via the  \"mime.types\" file in \"/etc/apache\" or via the \"AddType\" configuration  directive in httpd.conf.</p> <pre><code>AddType video/webm .webm</code></pre> <p>Your web host may provide an easy interface to MIME type  configuration changes for new technologies until a global update  naturally occurs.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video"
                    ], 
                    "flags": 0, 
                    "guid": "O6$7HdRwFb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;embed&gt;</code>", 
                        "", 
                        "<small>HTML embedded content element</small><br />represents an <b>integration point for an external application</b> or interactive content (in other words, a plug-in)", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>height</code></strong></dt> <dd>The displayed height of the resource, in CSS pixels. &nbsp;-- (Absolute values&nbsp;only. &nbsp;NO&nbsp;percentages)</dd> <dt><strong><code>src</code></strong></dt> <dd>The URL&nbsp;of the resource being embedded.</dd> <dt><strong><code>type</code></strong></dt> <dd>The MIME&nbsp;type to use to select the plug-in to instantiate.</dd> <dt><strong><code>width</code></strong></dt> <dd>The displayed width of the resource, in CSS pixels. &nbsp;-- (Absolute values&nbsp;only. &nbsp;NO&nbsp;percentages)</dd> </dl> <h2>Examples</h2> <pre><code>&lt;embed type=\"video/quicktime\" src=\"movie.mov\" width=\"640\" height=\"480\"&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/embed"
                    ], 
                    "flags": 0, 
                    "guid": "sYpFw;JdXD", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;object&gt;</code>", 
                        "", 
                        "<small>HTML embedded content element</small><br />represents an <b>external resource</b>, which can be treated as an image, a nested browsing context, or a resource to be handled by a plugin", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>archive</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>A space-separated list of URIs for archives of resources for the object.</dd> <dt><strong><code>border</code></strong> Deprecated since HTML4.01; Obsolete since HTML5</dt> <dd>The width of a border around the control, in pixels.</dd> <dt><strong><code>classid</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>The URI of the object's implementation. It can be used together with, or in place of, the <strong>data</strong> attribute.</dd> <dt><strong><code>codebase</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>The base path used to resolve relative URIs specified by <strong>classid</strong>, <strong>data</strong>, or <strong>archive</strong>. If not specified, the default is the base URI of the current document.</dd> <dt><strong><code>codetype</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>The content type of the data specified by <strong>classid</strong>.</dd> <dt><strong><code>data</code></strong></dt> <dd>The address of the resource as a valid URL. At least one of <strong>data</strong> and <strong>type</strong> must be defined.</dd> <dt><strong><code>declare</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>The presence of this Boolean attribute makes this element a declaration only. The object must be instantiated by a subsequent <code>&lt;object&gt;</code> element. In HTML5, repeat the &lt;object&gt; element completely each that that the resource is reused.</dd> <dt><strong><code>form</code></strong> HTML5</dt> <dd>The form element, if any, that the object element is associated with (its <em>form owner</em>). The value of the attribute must be an ID of a <code>&lt;form&gt;</code> element in the same document.</dd> <dt><strong><code>height</code></strong></dt> <dd>The height of the displayed resource, in CSS pixels. &nbsp;-- (Absolute values&nbsp;only. &nbsp;NO&nbsp;percentages)</dd> <dt><strong><code>name</code></strong></dt> <dd>The name of valid browsing context (HTML5), or the name of the control (HTML 4).</dd> <dt><strong><code>standby</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>A message that the browser can show while loading the object's implementation and data.</dd> <dt><strong><code>tabindex</code></strong> HTML 4 only; Obsolete since HTML5</dt> <dd>The position of the element in the tabbing navigation order for the current document.</dd> <dt><strong><code>type</code></strong></dt> <dd>The content type of the resource specified by <strong>data</strong>. At least one of <strong>data</strong> and <strong>type</strong> must be defined.</dd> <dt><strong><code>typemustmatch</code></strong> HTML5</dt> <dd>This Boolean attribute indicates if the <strong>type</strong> and the actual content type resource must match in order of this one to be used.</dd> <dt><strong><code>usemap</code></strong></dt> <dd>A hash-name reference to a <code>&lt;map&gt;</code> element; that is a '#' followed by the value of a <code>name</code> of a map element.</dd> <dt><strong><code>width</code></strong></dt> <dd>The width of the display resource, in CSS pixels. &nbsp;-- (Absolute values&nbsp;only. &nbsp;NO&nbsp;percentages)</dd> </dl> <h2>Examples</h2> <h3>Embed a flash movie</h3> <pre><code>&lt;!-- Embed a flash movie --&gt; &lt;object data=\"movie.swf\"   type=\"application/x-shockwave-flash\"&gt;&lt;/object&gt;  &lt;!-- Embed a flash movie with parameters --&gt; &lt;object data=\"movie.swf\" type=\"application/x-shockwave-flash\"&gt;   &lt;param name=\"foo\" value=\"bar\"&gt; &lt;/object&gt;</code></pre> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/object"
                    ], 
                    "flags": 0, 
                    "guid": "vE(kr_e83i", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;param&gt;</code>", 
                        "", 
                        "<small>HTML embedded content element</small><br /><b>parameters</b> for an <code>&lt;object&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>name</code></strong></dt> <dd>Name of the parameter.</dd> <dt><strong><code>type</code></strong> <i> </i></dt> <dd>Only used if the <code>valuetype</code> is set to \"ref\". Specifies the MIME type of values found at the URI specified by value.</dd> <dt><strong><code>value</code></strong></dt> <dd>Specifies the value of the parameter.</dd> <dt><strong><code>valuetype</code></strong> <i> </i></dt> <dd>Specifies the type of the <code>value</code> attribute. Possible values are:  <ul> <li>data: Default value. The value is passed to the object's implementation as a string.</li> <li>ref: The value is a URI to a resource where run-time values are stored.</li> <li>object: An ID of another <code>&lt;object&gt;</code> in the same document.</li> </ul> </dd> </dl> <h2>Examples</h2> <p>Please see the <code>&lt;object&gt;</code> page for examples on &lt;param&gt;.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/param"
                    ], 
                    "flags": 0, 
                    "guid": "QZ5JI3,$++", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;source&gt;</code>", 
                        "", 
                        "<small>HTML embedded content element</small><br />specifies multiple <b>media resources</b> for either the <code>&lt;picture&gt;</code>, the <code>&lt;audio&gt;</code> or the <code>&lt;video&gt;</code> element. It is an empty element. It is commonly used to serve the same media content in multiple formats supported by different browsers", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>sizes</code></strong> <i> </i></dt> <dd>Is a list of source sizes that describes the final rendered width  of the image represented by the source. Each source size consists of a  comma-separated list of media condition-length pairs. This information  is used by the browser to determine, before laying the page out, which  image defined in <code>srcset</code> to use.<br />  The <code>sizes</code> attribute has an effect only when the <code>&lt;source&gt;</code> element is the direct child of a <code>&lt;picture&gt;</code> element.</dd> <dt><strong><code>src</code></strong></dt> <dd>Required for <code>&lt;audio&gt;</code> and <code>&lt;video&gt;</code>, address of the media resource. The value of this attribute is ignored when the <code>&lt;source&gt;</code> element is placed inside a <code>&lt;picture&gt;</code> element.</dd> <dt><strong><code>srcset</code></strong> <i> </i></dt> <dd>A list of one or more strings separated by commas indicating a set  of possible images represented by the source for the browser to use.  Each string is composed of:  <ol> <li>one URL to an image,</li> <li>a width descriptor, that is a positive integer directly followed by <code>'w'</code>. The default value, if missing, is the infinity.</li> <li>a pixel density descriptor, that is a positive floating number directly followed by <code>'x'</code>. The default value, if missing, is <code>1x</code>.</li> </ol> <p>Each string in the list must have at least a width descriptor or a  pixel density descriptor to be valid. Among the list, there must be only  one string containing the same tuple of width descriptor and pixel  density descriptor.<br />   The browser chooses the most adequate image to display at a given point of time.<br />   The <code>srcset</code> attribute has an effect only when the <code>&lt;source&gt;</code> element is the direct child of a <code>&lt;picture&gt;</code> element.</p> </dd> <dt><strong><code>type</code></strong></dt> <dd>The MIME-type of the resource, optionally with a <code>codecs</code> parameter. See RFC 4281 for information about how to specify codecs.</dd> <dt><strong><code>media</code></strong> <i> </i></dt> <dd>Media query of the resource's intended media; this should be used only in a <code>&lt;picture&gt;</code> element.</dd> </dl> <p>If the <strong>type</strong> attribute isn't specified, the media's  type is retrieved from the server and checked to see if Gecko can handle  it; if it can't be rendered, the next <strong>source</strong> is checked. If the <strong>type</strong>  attribute is specified, it's compared against the types Gecko can play,  and if it's not recognized, the server doesn't even get queried;  instead, the next <strong>source</strong> element is checked at once.</p> <h2>Examples</h2> <p>This example demonstrates how to offer a video in Ogg format for  users whose browsers support Ogg format, and a QuickTime format video  for users whose browsers support that. If the<code> audio</code> or <code>video</code>  element is not supported by the browser, a notice is displayed  instead.&nbsp; If the browser supports the element but does not support any  of the specified formats, an <code>error</code> event is raised and the default media controls (if enabled) will indicate an error. See also the list of media formats supported by the audio and video elements in various browsers.</p> <pre><code>&lt;video controls&gt;   &lt;source src=\"foo.webm\" type=\"video/webm\"&gt;   &lt;source src=\"foo.ogg\" type=\"video/ogg\"&gt;    &lt;source src=\"foo.mov\" type=\"video/quicktime\"&gt;   I'm sorry; your browser doesn't support HTML5 video. &lt;/video&gt;</code></pre> <p>For more examples, see Using audio and video in Firefox.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/source"
                    ], 
                    "flags": 0, 
                    "guid": "b<CBf=AAW}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;canvas&gt;</code>", 
                        "", 
                        "<small>HTML scripting element</small><br />is used with the <b>canvas scripting</b> API to draw graphics and animations", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>height</code></strong></dt> <dd>The height of the coordinate space in CSS pixels. Defaults to 150.</dd> <dt><strong><code>moz-opaque</code></strong> <i> </i></dt> <dd>Lets the canvas know whether or not translucency will be a factor.  If the canvas knows there's no translucency, painting performance can be  optimized.</dd> <dt><strong><code>width</code></strong></dt> <dd>The width of the coordinate space in CSS pixels. Defaults to 300.</dd> </dl> <h2>Usage notes</h2> <h3>Alternative content</h3> <p>You may (and should) provide alternate content inside the <code>&lt;canvas&gt;</code> block. That content will be rendered both on older browsers that don't support canvas and in browsers with JavaScript disabled.</p> <h3>Required <code>&lt;/canvas&gt;</code> tag</h3> <p>Unlike the <code>&lt;img&gt;</code> element, the <code>&lt;canvas&gt;</code> element <strong>requires</strong> the closing tag (<code>&lt;/canvas&gt;</code>).</p> <h3>Sizing the canvas</h3> <p>The displayed size of the canvas can be changed using a stylesheet.  The image is scaled during rendering to fit the styled size. If your  renderings seem distorted, try specifying your <code>width</code> and <code>height</code> attributes explicitly in the <code>&lt;canvas&gt;</code> attributes, and not using CSS.</p> <h2>Examples</h2> <p>This code snippet adds a canvas element to your HTML document. A  fallback text is provided if a browser is unable to render the canvas,  or if can't read a canvas. Providing a useful fallback text or sub DOM  helps to make the the canvas more accessible.</p> <pre><code>&lt;canvas width=\"300\" height=\"300\"&gt;   An alternative text describing what your canvas displays.  &lt;/canvas&gt;</code></pre> <p>If your canvas does not use transparency&nbsp;set the <code>moz-opaque</code>  attribute on the canvas tag. This information can be used internally to  optimize rendering. However, this attribute has not been standardized  and only works in Mozilla-based rendering engines.</p> <pre><code>&lt;canvas moz-opaque&gt;&lt;/canvas&gt;</code></pre> <h2></h2>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/canvas"
                    ], 
                    "flags": 0, 
                    "guid": "j,[gr>Q=BQ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;noscript&gt;</code>", 
                        "", 
                        "<small>HTML scripting element</small><br />HTML to be inserted <b>if a script type on the page is unsupported</b> or if scripting is currently turned off in the browser", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <pre><code>&lt;noscript&gt;   &lt;!-- anchor linking to external file --&gt;   &lt;a&gt;External Link&lt;/a&gt; &lt;/noscript&gt; &lt;p&gt;Rocks!&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noscript"
                    ], 
                    "flags": 0, 
                    "guid": "r$BP^[r%Wc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;script&gt;</code>", 
                        "", 
                        "<small>HTML scripting element</small><br />is used to embed or reference an <b>executable script</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>async</code></strong> HTML5</dt> <dd>Set this Boolean attribute to indicate that the browser should, if  possible, execute the script asynchronously. It has no effect on inline  scripts (i.e., scripts that don't have the <strong>src</strong> attribute).</dd> <dd>See Browser compatibility for notes on browser support. See also Async scripts for asm.js.</dd> <dt><strong><code>crossorigin</code></strong></dt> <dd>Normal <code>script</code> elements pass minimal information to the <code>window.onerror</code> for scripts which do not pass the standard CORS checks. To allow error logging for sites which use a separate domain for static media, use this attribute. See&nbsp;CORS settings attributes for a more descriptive explanation of the valid arguments.</dd> <dt><strong><code>defer</code></strong></dt> <dd>This Boolean attribute is set to indicate to a browser that the  script is meant to be executed after the document has been parsed, but  before firing&nbsp;<code>DOMContentLoaded</code>. The <code>defer</code> attribute should only be used on external scripts.</dd> <dt><strong><code>integrity</code></strong></dt> <dd>Contains inline metadata that a user agent can use to verify that a  fetched resource has been delivered free of unexpected manipulation.  See Subresource Integrity.</dd> <dt><strong><code>nomodule</code></strong> <i> </i></dt> <dd>This Boolean attribute is set to indicate that the script should not be executed in browsers that support ES6 modules — in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code.</dd> <dt><strong><code>src</code></strong></dt> <dd>This attribute specifies the <abbr>URI</abbr> of an external script; this can be used as an alternative to embedding a script directly within a document. If a <code>script</code> element has a <code>src</code> attribute specified, it should not have a script embedded inside its tags.</dd> <dt><strong><code>text</code></strong></dt> <dd>Like the&nbsp;<code>textContent&nbsp;</code>attribute, this attribute sets the text content of the element. &nbsp;Unlike the&nbsp;<code>textContent&nbsp;</code>attribute, however, this attribute is evaluated as executable&nbsp;code after the node is inserted into the DOM.</dd> <dt><strong><code>type</code></strong></dt> <dd>This attribute identifies the scripting language of code embedded within a <code>script</code> element or referenced via the element’s <code>src</code> attribute. This is specified as a <abbr>MIME</abbr> type; examples of supported <abbr>MIME</abbr> types include <code>text/javascript</code>, <code>text/ecmascript</code>, <code>application/javascript</code>, and <code>application/ecmascript</code>. If this attribute is absent, the script is treated as JavaScript.</dd> <dd>If the <abbr>MIME</abbr>  type specified is not a JavaScript type the content embedded within its  tags is treated as a data block which won't be processed by the  browser.</dd> <dd>If the type specified is <code>module</code> the code is treated as a JavaScript module <i> </i>. See ES6 in Depth: Modules<br /> <br />  Note that in Firefox you can use advanced features such as let statements and other features in later JS versions, by using <code>type=application/javascript;version=1.8</code>&nbsp;<i> </i>.&nbsp;Beware,  however, that&nbsp;as this is a non-standard feature, this will most likely  break support for&nbsp;other browsers, in particular Chromium-based browsers.</dd> <dd>For how to include <em>exotic programming languages</em>, read about Rosetta.</dd> </dl> <h3>Deprecated attributes</h3> <dl> <dt><strong><code>language</code></strong> <i> </i></dt> <dd>Like the <code>type</code> attribute, this attribute identifies the scripting language in use. Unlike the <code>type</code> attribute, however, this attribute’s possible values were never standardized. The <code>type</code> attribute should be used instead.</dd> </dl> <h2>Notes</h2> <p>Scripts without <code>async</code> or <code>defer</code> attributes, as well as inline scripts, are fetched and executed immediately, before the browser continues to parse the page.</p> <p>The script should be served with the <code>text/javascript</code> MIME type, but browsers are lenient and only block them if the script is served with an image type (<code>image/*</code>), a video type (<code>video/*</code>), an audio (<code>audio/*</code>) type, or <code>text/csv</code>. If the script is blocked, an <code>error</code> is sent to the element, if not a <code>load</code> event is sent.</p> <h2>Examples</h2> <pre><code>&lt;!-- HTML4 and (x)HTML --&gt; &lt;script type=\"text/javascript\" src=\"javascript.js\"&gt;&lt;/script&gt;  &lt;!-- HTML5 --&gt; &lt;script src=\"javascript.js\"&gt;&lt;/script&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/script"
                    ], 
                    "flags": 0, 
                    "guid": "fz2))gHbtc", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;del&gt;</code>", 
                        "", 
                        "<small>HTML edit demarcation element</small><br /><b>text that has been deleted</b>, usually as strike-through", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>cite</code></strong></dt> <dd>A URI for a resource that explains the change (for example, meeting minutes).</dd> <dt><strong><code>datetime</code></strong></dt> <dd>This attribute indicates the time and date of the change and must be a valid date string with an optional time. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp.</dd> </dl> <h2>Examples</h2> <pre><code>&lt;p&gt;&lt;del&gt;This text has been deleted&lt;/del&gt;, here is the rest of the paragraph.&lt;/p&gt; &lt;del&gt;&lt;p&gt;This paragraph has been deleted.&lt;/p&gt;&lt;/del&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/del"
                    ], 
                    "flags": 0, 
                    "guid": "j:$c6aGdc?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;ins&gt;</code>", 
                        "", 
                        "<small>HTML edit demarcation element</small><br />represents a range of <b>text that has been added</b> to a document", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>cite</code></strong></dt> <dd>This attribute defines the URI of a resource that explains the  change, such as a link to meeting minutes or a ticket in a  troubleshooting sytem.</dd> <dt><strong><code>datetime</code></strong></dt> <dd>This attribute indicates the time and date of the change and must be a valid date with an optional time string. If the value cannot be parsed as a date with an optional time string, the element does not have an associated time stamp.</dd> </dl> <h2>Examples</h2> <pre><code>&lt;ins&gt;This text has been inserted&lt;/ins&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ins"
                    ], 
                    "flags": 0, 
                    "guid": "n4jPEbTrpN", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;caption&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br /><b>title of a table</b><div>always first descendant of <code>&lt;table&gt;</code></div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> Deprecated since HTML4.01 Obsolete since HTML5</dt> <dd>This enumerated attribute indicates how the caption must be aligned with respect to the table. It may have the following values:  <ul> <li><code>left</code>, displayed to the left of the table</li> <li><code>top</code>, displayed before the the table</li> <li><code>right</code>, displayed to the right of the table</li> <li><code>bottom</code>, displayed under the table</li> </ul> <div><strong>Usage note: </strong>Do not use this attribute, as it has been deprecated: the <code>&lt;caption&gt;</code> element should be styled using CSS. To give a similar effect to the <code>align</code> attribute, use the the CSS properties <code>caption-side</code> and <code>text-align</code>.</div> </dd> </dl> <h2>Usage notes</h2> <p>When the <code>&lt;table&gt;</code> element that is the parent of this <code>&lt;caption&gt;</code> is the only descendant of a <code>&lt;figure&gt;</code> element, use the <code>&lt;figcaption&gt;</code> element instead.</p> <h2>Examples</h2> <p>Please see the <code>&lt;table&gt;</code> page for examples on <code>&lt;caption&gt;</code></p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption"
                    ], 
                    "flags": 0, 
                    "guid": "daMQj`^6Ip", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;col&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a <b>column within a table</b> and is used for defining common semantics on all common cells. It is generally found within a <code>&lt;colgroup&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cell</li> <li><code>center</code>, centering the content in the cell</li> <li><code>right</code>, aligning the content to the right of the cell</li> <li><code>justify</code>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes Unimplemented (see bug&nbsp;2212).</li> </ul> <p>If this attribute is not set, its value is inherited from the <code>align</code> of the <code>&lt;colgroup&gt;</code> element this <code>&lt;col&gt;</code> element belongs too. If there are none, the <code>left</code> value is assumed.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values:     <ul> <li>Do not try to set the <code>text-align</code> property on a selector giving a <code>&lt;col&gt;</code> element. Because <code>&lt;td&gt;</code> elements are not descendant of the <code>&lt;col&gt;</code> element, they won't inherit it.</li> <li>If the table doesn't use a <code>colspan</code> attribute, use the <code>td:nth-child(an+b)</code> CSS selector. Set <code>a</code> to zero and <code>b </code>to the position of the column in the table, e.g. <code>td:nth-child(2) { text-align: right; }</code> to right-align the second column.</li> <li>If the table does use a <code>colspan</code> attribute, the effect can be achieved by combining adequate CSS attribute selectors like <code>[colspan=n]</code>, though this is not trivial.</li> </ul> </li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell of the column. It is one of the 6-digit hexadecimal code as defined in sRGB, prefixed by a '#'. One of the sixteen predefined color strings may be used:  <table style=\"width: 80%;\"> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>teal</code> = \"#008080\"</td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:</strong> Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: the <code>&lt;col&gt;</code> element should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code>, on the relevant <code>&lt;td&gt;</code> elements.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to set the character to align the cells in a  column on. Typical values for this include a period (.) when attempting  to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment characters specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>span</code></strong></dt> <dd>This attribute contains a positive integer indicating the number of consecutive columns the <code>&lt;col&gt;</code> element spans. If not present, its default value is <code>1</code>.</dd> </dl> <dl> <dt><strong><code>valign</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each cell of the column. Possible values for this attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible;</li> <li><code>middle</code>, which will center the text in the cell;</li> <li>and <code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard:   <ul> <li>Do not try to set the <code>vertical-align</code> property on a selector giving a <code>&lt;col&gt;</code> element. Because <code>&lt;td&gt;</code> elements are not descendant of the <code>&lt;col&gt;</code> element, they won't inherit it.</li> <li>If the table doesn't use a <code>colspan</code> attribute, use the <code>td:nth-child(an+b)</code>  CSS selector where a is the total number of the columns in the table  and b is the ordinal position of the column in the table. Only after  this selector the <code>vertical-align</code> property can be used.</li> <li>If the table does use a <code>colspan</code> attribute, the effect can be achieved by combining adequate CSS attribute selectors like <code>[colspan=n]</code>, though this is not trivial.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>width</code></strong> Obsolete since HTML5</dt> <dd>This attribute specifies a default width for each column in the  current column group. In addition to the standard pixel and percentage  values, this attribute might take the special form <code>0*</code>,  which means that the width of each column in the group should be the  minimum width necessary to hold the column's contents. Relative widths  such as <code>0.5*</code> also can be used.</dd> </dl> <h2>Example</h2> <p>Please see the <code>&lt;table&gt;</code> page for examples on <code>&lt;col&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/col"
                    ], 
                    "flags": 0, 
                    "guid": "G,QA3V5V3k", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;colgroup&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a <b>group of columns within a table</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>align</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each column cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cell</li> <li><code>center</code>, centering the content in the cell</li> <li><code>right</code>, aligning the content to the right of the cell</li> <li><code>justify</code>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes Unimplemented (see bug&nbsp;2212).</li> </ul> <p>If this attribute is not set, the <code>left</code> value is assumed. The descendant <code>&lt;col&gt;</code> elements may override this value using their own <code>align</code> attribute.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values:     <ul> <li>Do not try to set the <code>text-align</code> property on a selector giving a <code>&lt;colgroup&gt;</code> element. Because <code>&lt;td&gt;</code> elements are not descendant of the <code>&lt;colgroup&gt;</code> element, they won't inherit it.</li> <li>If the table doesn't use a <code>colspan</code> attribute, use one <code>td:nth-child(an+b)</code>  CSS selector per column, where a is the total number of the columns in  the table and b is the ordinal position of this column in the table.  Only after this selector the <code>text-align</code> property can be used.</li> <li>If the table does use a <code>colspan</code> attribute, the effect can be achieved by combining adequate CSS attribute selectors like <code>[colspan=n]</code>, though this is not trivial.</li> </ul> </li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell of the  columns member of the column group. It is one of the 6-digit hexadecimal  code as defined in sRGB, prefixed by a '#'. One of the sixteen predefined color strings, as mentioned below, may be used:  <table> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>teal = \"#008080\"</code></td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it is non-standard and is only implemented in some versions of Microsoft Internet Explorer; the <code>&lt;colgroup&gt;</code> elements should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code> on the relevant <code>&lt;td&gt;</code> elements.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute specifies the alignment of the content in a column  group to a character. Typical values for this include a period (.) when  attempting to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored, though it will still be used as the default value for the <code>align</code> of the <code>&lt;col&gt;</code> which are members of this column group.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment character specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>span</code></strong></dt> <dd>This attribute contains a positive integer indicating the number of consecutive columns the <code>&lt;colgroup&gt;</code> element spans. If not present, its default value is <code>1</code>.  <div><strong>Note: </strong>This attribute is applied on  the attributes of the column group, it has no effect on the CSS styling  rules associated with it or, even more, to the cells of the column's  members of the group.  <ul> <li>The <code>span</code> attribute may not be present if there are one or more <code>&lt;col&gt;</code> elements within the <code>&lt;colgroup&gt;</code>.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>valign</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each cell of the column. Possible values for this attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible;</li> <li><code>middle</code>, which will center the text in the cell;</li> <li>and <code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard:   <ul> <li>Do not try to set the <code>vertical-align</code> property on a selector giving a <code>&lt;colgroup&gt;</code> element. Because <code>&lt;td&gt;</code> elements are not descendant of the <code>&lt;colgroup&gt;</code> element, they won't inherit it.</li> <li>If the table doesn't use a <code>colspan</code> attribute, use the <code>td:nth-child(an+b)</code>  CSS selector per column, where a is the total number of the columns in  the table and b is the ordinal position of the column in the table. Only  after this selector the <code>vertical-align</code> property can be used.</li> <li>If the table does use a <code>colspan</code> attribute, the effect can be achieved by combining adequate CSS attribute selectors like <code>[colspan=n]</code>, though this is not trivial.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>width</code></strong> Obsolete since HTML5</dt> <dd>This attribute specifies a default width for each column in the  current column group. In addition to the standard pixel and percentage  values, this attribute might take the special form <code>0*</code>,  which means that the width of each column in the group should be the  minimum width necessary to hold the column's contents. Relative widths  such as <code>0.5*</code> also can be used.</dd> </dl> <h2>Examples</h2> <p>Please see the <code>&lt;table&gt;</code> page for examples on <code>&lt;colgroup&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/colgroup"
                    ], 
                    "flags": 0, 
                    "guid": "$bhYv0jZ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;table&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br /><b>two-dimensional data table</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes. The following attributes listed on this page are now deprecated.</p> <dl> <dt><strong><code>align</code></strong> <i> </i></dt> <dd>This enumerated attribute indicates how the table must be aligned  inside the containing document. It may have the following values:  <ul> <li>left: the&nbsp;table is displayed on the left side of the document;</li> <li>center:&nbsp;the table is displayed in the center of the document;</li> <li>right:&nbsp;the table is displayed on the right side of the document.</li> </ul> <div><strong>Usage Note</strong> <ul> <li><strong>Do not use this attribute</strong>, as it has been deprecated. The <code>&lt;table&gt;</code> element should be styled using CSS. &nbsp;Set&nbsp;<code>margin-left</code> and <code>margin-right</code> to <code>auto</code>&nbsp;or <code>margin</code> to <code>0 auto</code>&nbsp;to achieve an effect that is similar to the align attribute.</li> <li>Prior to Firefox 4, Firefox also supported the <code>middle</code>, <code>absmiddle</code>, and <code>abscenter</code> values as synonyms of <code>center</code>, in quirks mode only.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of a table. It consists of a 6-digit hexadecimal code as defined in sRGB&nbsp;and is prefixed by&nbsp;'#'. This attribute may be used with one of sixteen predefined color strings&nbsp;:  <table> <tbody> <tr> <td style=\"width: 24px; background-color: black;\">&nbsp;</td> <td>black = \"#000000\"</td> <td style=\"width: 24px; background-color: green;\">&nbsp;</td> <td>green = \"#008000\"</td> </tr> <tr> <td style=\"width: 24px; background-color: silver;\">&nbsp;</td> <td>silver = \"#C0C0C0\"</td> <td style=\"width: 24px; background-color: lime;\">&nbsp;</td> <td>lime = \"#00FF00\"</td> </tr> <tr> <td style=\"width: 24px; background-color: gray;\">&nbsp;</td> <td>gray = \"#808080\"</td> <td style=\"width: 24px; background-color: olive;\">&nbsp;</td> <td>olive = \"#808000\"</td> </tr> <tr> <td style=\"width: 24px; background-color: white;\">&nbsp;</td> <td>white = \"#FFFFFF\"</td> <td style=\"width: 24px; background-color: yellow;\">&nbsp;</td> <td>yellow = \"#FFFF00\"</td> </tr> <tr> <td style=\"width: 24px; background-color: maroon;\">&nbsp;</td> <td>maroon = \"#800000\"</td> <td style=\"width: 24px; background-color: navy;\">&nbsp;</td> <td>navy = \"#000080\"</td> </tr> <tr> <td style=\"width: 24px; background-color: red;\">&nbsp;</td> <td>red = \"#FF0000\"</td> <td style=\"width: 24px; background-color: blue;\">&nbsp;</td> <td>blue = \"#0000FF\"</td> </tr> <tr> <td style=\"width: 24px; background-color: purple;\">&nbsp;</td> <td>purple = \"#800080\"</td> <td style=\"width: 24px; background-color: teal;\">&nbsp;</td> <td>teal = \"#008080\"</td> </tr> <tr> <td style=\"width: 24px; background-color: fuchsia;\">&nbsp;</td> <td>fuchsia = \"#FF00FF\"</td> <td style=\"width: 24px; background-color: aqua;\">&nbsp;</td> <td>aqua = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated. The <code>&lt;table&gt;</code> element should be styled using CSS. Use the <code>background-color</code> property &nbsp;in&nbsp;CSS&nbsp;to create an effect that is similar to the <code>bgcolor</code> attribute.</div> </dd> </dl> <dl> <dt><strong><code>border</code></strong> <i> </i></dt> <dd>This integer attribute defines, in pixels, the size of the frame surrounding the table. If set to 0, the <code>frame</code> attribute is set to void.  <div><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated. The <code>&lt;table&gt;</code> element should be styled using CSS. To create&nbsp;an effect similar to the border attribute, the <code>border</code>, <code>border-color</code>, <code>border-width</code> and <code>border-style</code>&nbsp;CSS properties&nbsp; should be used.</div> </dd> </dl> <dl> <dt><strong><code>cellpadding</code></strong> <i> </i></dt> <dd>This attribute defines the space between the content of a cell and  its border, displayed or not. If the cellpadding's length is defined in  pixels, this pixel-sized space will be applied to&nbsp;all four sides of the  cell's content. If the length is defined using a percentage value, the  content will be centered and the total vertical space (top and bottom)  will represent this value. The same is true for the total horizontal  space (left and right).  <div><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated. The <code>&lt;table&gt;</code> element should be styled using CSS. To create an effect similar to the cellpadding attribute, apply the&nbsp;<code>border-collapse</code> property to&nbsp;the <code>&lt;table&gt;</code> element, with its&nbsp;value set to collapse,&nbsp;and&nbsp;the <code>padding</code> property to&nbsp;the&nbsp;<code>&lt;td&gt;</code> element.</div> </dd> </dl> <dl> <dt><strong><code>cellspacing</code></strong> <i> </i></dt> <dd>This attribute defines the size of the space between two cells in  a&nbsp;percentage value or pixels,. The&nbsp;attribute is applied&nbsp;both  horizontally and vertically, to the space between the top of the table  and the cells of the first row, the left of the table and the first  column, the right of the table and the last column and the bottom of the  table and the last row.  <div><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated. The <code>&lt;table&gt;</code> element should be styled using CSS. To create&nbsp;an effect similar to the cellspacing&nbsp;attribute, apply the&nbsp;<code>border-spacing</code> property to&nbsp;the <code>&lt;table&gt;</code> element. Border-spacing does not have any effect if&nbsp;<code>border-collapse</code> is set to collapse.</div> </dd> </dl> <dl> <dt><strong><code>frame</code></strong> <i> </i></dt> <dd>This enumerated attribute defines which side of the frame  surrounding the table must be displayed. It may have the following  values:  <table style=\"width: 668px;\"> <tbody> <tr> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>above</td> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>below</td> </tr> <tr> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>hsides</td> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>vsides</td> </tr> <tr> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>lhs</td> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>rhs</td> </tr> <tr> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>border</td> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>box</td> </tr> <tr> <td style=\"width: 24px; background-color: rgb(224, 224, 224);\">&nbsp;</td> <td>void</td> </tr> </tbody> </table> <div><strong>Usage note:</strong> Do not use this attribute, as it has been deprecated. The <code>&lt;table&gt;</code> element should be styled using CSS. To create&nbsp;an effect similar to the frame attribute, use the <code>border-style</code> and <code>border-width</code> properties.</div> </dd> </dl> <dl> <dt><strong><code>rules</code></strong> <i> </i></dt> <dd>This enumerated attribute defines where rules, i.e. lines, should appear in a table. It can have the following values:  <ul> <li>none, which indicates that no rules will be displayed; it is the default value;</li> <li>groups, which will cause the rules to be displayed between row groups (defined by the <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code> and <code>&lt;tfoot&gt;</code> elements) and between column groups (defined by the <code>&lt;col&gt;</code> and <code>&lt;colgroup&gt;</code> elements) only;</li> <li>rows, which will cause&nbsp;the rules to be displayed between rows;</li> <li>columns, which will cause&nbsp;the rules to be displayed between columns;</li> <li>all, which wil cause&nbsp;the rules to be displayed between rows and columns.</li> </ul> <div><strong>Note</strong>:   <ul> <li>The styling of the rules is browser-dependant and cannot be modified.</li> <li>Do not use this attribute, as it has been deprecated. The&nbsp;rules should be defined and styled using CSS. Apply the <code>border</code> property to&nbsp;the appropriate <code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, <code>&lt;tfoot&gt;</code>, <code>&lt;col&gt;</code> or <code>&lt;colgroup&gt;</code> elements.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>summary</code></strong> <i> </i></dt> <dd>This attribute defines an alternative text that summarizes the  content of the table. Typically, it allows visually impaired people&nbsp;who  are browsing the web with&nbsp;a Braille screen, to acquire information about  the table. If the information added by&nbsp;this attribute is also&nbsp;useful to  people who are not visually impaired, consider using the <code>&lt;caption&gt;</code> instead. The summary attribute is not mandatory and may be omitted when a <code>&lt;caption&gt;</code> element fulfills its role.  <div><strong>Usage Note: </strong>Do not use this attribute, as it has been deprecated. Instead, choose one of these methods to add a description of a table:  <ul> <li>Use&nbsp;prose&nbsp;around&nbsp;the table (this method is less&nbsp;semantic).</li> <li>Add a description in the table's <code>&lt;caption&gt;</code> element.</li> <li>Add a description in a <code>&lt;details&gt;</code> element, inside the table's <code>&lt;caption&gt;</code> element.</li> <li>Include the <code>&lt;table&gt;</code> element in a <code>&lt;figure&gt;</code> element and add the description in prose next to it.</li> <li>Include the <code>&lt;table&gt;</code> element in a <code>&lt;figure&gt;</code> element and add the description in prose inside a <code>&lt;figcaption&gt;</code> element.</li> <li>Adjust the table so that a description is not&nbsp;needed (e.g.&nbsp;use&nbsp;<code>&lt;th&gt;</code> and <code>&lt;thead&gt;</code> elements).</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>width</code></strong> <i> </i></dt> <dd>This attribute defines the width of the table. The width may be  defined by pixels or a percentage value. A percentage value will be  defined by the width of the container in which the table is placed.  <div><strong>Usage Note: </strong>Do not use this attribute, as it has been deprecated. The rules should be defined and styled using CSS. Use the <code>width</code> property instead.</div> </dd> </dl> <h2>Examples</h2> <h3>Simple Table</h3> <pre><code>&lt;table&gt;   &lt;tr&gt;     &lt;td&gt;John&lt;/td&gt;     &lt;td&gt;Doe&lt;/td&gt;   &lt;/tr&gt;   &lt;tr&gt;     &lt;td&gt;Jane&lt;/td&gt;     &lt;td&gt;Doe&lt;/td&gt;   &lt;/tr&gt; &lt;/table&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table"
                    ], 
                    "flags": 0, 
                    "guid": "h#@GK}H,b?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;tbody&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />groups one or more <code>&lt;tr&gt;</code> elements as the <b>body of a <code>&lt;table&gt;</code></b> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> <i> </i> in HTML 4.01, <i> </i> in HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cell</li> <li><code>center</code>, centering the content in the cell</li> <li><code>right</code>, aligning the content to the right of the cell</li> <li><code>justify</code>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes.</li> </ul> <p>If this attribute is not set, the <code>left</code> value is assumed.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values, use the CSS <code>text-align</code> property on it.</li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell of the column. It is one of the 6-digit hexadecimal code as defined in sRGB, prefixed by a '#'. One of the sixteen predefined color strings may be used:  <table style=\"width: 80%;\"> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>teal</code> = \"#008080\"</td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it is non-standard and only implemented some versions of Microsoft Internet Explorer: the <code>&lt;tbody&gt;</code> element should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code>, on the relevant <code>&lt;td&gt;</code> or <code>&lt;th&gt;</code> elements.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> <i> </i> in HTML 4.01, <i> </i> in HTML5</dt> <dd>This attribute is used to set the character to align the cells in a  column on. Typical values for this include a period (.) when attempting  to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> <i> </i> in HTML 4.01, <i> </i> in HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment characters specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>valign</code></strong> <i> </i> in HTML 4.01, <i> </i> in HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each row of cells of the table header. Possible values for this  attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible;</li> <li><code>middle</code>, which will center the text in the cell;</li> <li>and <code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard: instead set the CSS&nbsp;<code>vertical-align</code> property on it.</div> </dd> </dl> <h2>Usage notes</h2> <ul> <li>In conjunction with a preceding <code>&lt;thead&gt;</code> and/or <code>&lt;tfoot&gt;</code> element, the <code>&lt;tbody&gt;</code> element provides additional semantic information for devices such as printers and displays.</li> <li>Of the parent table's child elements, <code>&lt;tbody&gt;</code> represents the content which, when longer than a page, will most likely differ for each page printed; while the content of <code>&lt;thead&gt;</code> and <code>&lt;tfoot&gt;</code> will be the same or similar for each page printed.</li> <li>For displays, <code>&lt;tbody&gt;</code> will enable separate scrolling of the <code>&lt;thead&gt;</code>, <code>&lt;tfoot&gt;</code>, and <code>&lt;caption&gt;</code> elements of the same parent <code>&lt;table&gt;</code> element.</li> <li>Unlike the <code>&lt;thead&gt;</code>, <code>&lt;tfoot&gt;</code>, and <code>&lt;caption&gt;</code> elements, multiple <code>&lt;tbody&gt;</code>  elements are permitted (if consecutive), allowing the rows in long  tables to be divided into different sections, each separately formatted  as needed.</li> </ul> <h2>Examples</h2> <p>Please see the <code>&lt;table&gt;</code> page for examples on <code>&lt;tbody&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody"
                    ], 
                    "flags": 0, 
                    "guid": "km5EBv`Kz|", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;td&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a <b>cell of a table</b> that contains data. It participates in the <em>table model</em>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>abbr</code></strong> Obsolete since HTML5</dt> <dd>This attribute contains a short abbreviated description of the  content of the cell. Some user-agents, such as speech readers, may  present this description before the content itself.  <div><strong>Note: </strong>Do not use this attribute as  it is obsolete in the latest standard: instead either consider starting  the cell content by an independent abbreviated content itself or use the  abbreviated content as the cell content and use the long content as the  description of the cell by putting it in the <strong>title</strong> attribute.</div> </dd> <dt><strong><code>align</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cell</li> <li><code>center</code>, centering the content in the cell</li> <li><code>right</code>, aligning the content to the right of the cell</li> <li><code>justify</code>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes Unimplemented (see bug&nbsp;2212).</li> </ul> <p>If this attribute is not set, the <code>left</code> value is assumed.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code>, or <code>justify</code> values, use the CSS <code>text-align</code> property on it.</li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>axis</code></strong> Obsolete since HTML5</dt> <dd>This attribute contains a list of space-separated strings. Each  string is the ID of a group of cells that this header applies to.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete in the latest standard: instead use the <code>scope</code> attribute.</div> </dd> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell of the  column. It is one of the 6-digit hexadecimal codes as defined in sRGB, prefixed by a '#'. One of the sixteen predefined color strings may be used:  <table style=\"width: 80%;\"> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>teal</code> = \"#008080\"</td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border: 1px solid black;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:</strong> Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: the <code>&lt;td&gt;</code> element should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code> instead.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to set the character to align the cells in a  column. Typical values for this include a period (.) when attempting to  align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> <dt><strong><code>charoff</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment characters specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> <dt><strong><code>colspan</code></strong></dt> <dd>This attribute contains a non-negative integer value that indicates for how many columns the cell extends. Its default value is <code>1</code>. Values higher than 1000 will be considered as incorrect and will be set to the default value (1).</dd> <dt><strong><code>headers</code></strong></dt> <dd>This attribute contains a list of space-separated strings, each corresponding to the <strong>id</strong> attribute of the <code>&lt;th&gt;</code> elements that apply to this element.</dd> <dt><strong><code>rowspan</code></strong></dt> <dd>This attribute contains a non-negative integer value that indicates for how many rows the cell extends. Its default value is <code>1</code>; if its value is set to <code>0</code>, it extends until the end of the table section (<code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code>, <code>&lt;tfoot&gt;</code>, even if implicitly defined, that the cell belongs to. Values higher than 65534 are clipped down to 65534.</dd> <dt><strong><code>scope</code></strong> Obsolete since HTML5</dt> <dd>&nbsp;</dd> <dt><strong><code>valign</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each row of cells of the table header. Possible values for this  attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the same size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible</li> <li><code>middle</code>, which will center the text in the cell</li> <li>and <code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard: instead set the CSS <code>vertical-align</code> property on it.</div> </dd> <dt><strong><code>width</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to define a recommended cell width. &nbsp;Properties&nbsp;cellspacing and cellpadding may add additional space, and element&nbsp;<code>&lt;col&gt;</code>&nbsp;width  may also have some effect. In general, if a column's width is too  narrow to show a particular cell properly, it, and thus the cells in it,  may be widened when displayed.  <div><strong>Note: </strong>Do not use this attribute in the latest standard: instead set the CSS <code>width</code> property.</div> </dd> </dl> <h2>Examples</h2> <p>Please see the <code>&lt;table&gt;</code> page for examples on <code>&lt;td&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td"
                    ], 
                    "flags": 0, 
                    "guid": "xs^b&YMmkX", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;tfoot&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a set of <b>rows summarizing the columns</b> of the table", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cell</li> <li><code>center</code>, centering the content in the cell</li> <li><code>right</code>, aligning the content to the right of the cell</li> <li><code>justify</code>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes Unimplemented (see bug&nbsp;2212).</li> </ul> <p>If this attribute is not set,&nbsp; the <code>left</code> value is assumed.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values, use the CSS <code>text-align</code> property on it.</li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell of the column. It is one of the 6-digit hexadecimal code as defined in sRGB, prefixed by a '#'. One of the sixteen predefined color strings may be used:  <table style=\"width: 80%;\"> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>teal</code> = \"#008080\"</td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it is non-standard and only implemented some versions of Microsoft Internet Explorer: the <code>&lt;tfoot&gt;</code> element should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code>, on the relevant <code>&lt;td&gt;</code> or <code>&lt;th&gt;</code> elements.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute is used to set the character to align the cells in a  column on. Typical values for this include a period (.) when attempting  to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment characters specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>valign</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each row of cells of the table header. Possible values for this  attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible;</li> <li><code>middle</code>, which will center the text in the cell;</li> <li>and <code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard: instead set the CSS&nbsp;<code>vertical-align</code> property on it.</div> </dd> </dl> <h2>Examples</h2> <p>Please see the <code>&lt;table&gt;</code> page for examples on <code>&lt;tfoot&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot"
                    ], 
                    "flags": 0, 
                    "guid": "J*mOP-){]_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;th&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a cell as <b>header of a group of table cells</b>. The exact nature of this group is defined by the <code>scope</code> and <code>headers</code> attributes", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>abbr</code></strong> <i> </i> in HTML5</dt> <dd>This attribute contains a short abbreviated description of the  cell's content. A user-agent (e.g.,&nbsp;a speech reader) may be present in  front of&nbsp;the description.  <div><strong>Usage Note: </strong>Do not use this  attribute as it has become&nbsp;obsolete in the latest standard.  Alternatively, you can put the abbreviated description inside the cell  and place the long content in the&nbsp;<strong>title</strong> attribute.</div> </dd> <dt><strong><code>align</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This enumerated attribute specifies how the cell&nbsp;content's horizontal alignment will be handled. Possible values are:  <ul> <li><code>left</code>: The content is aligned to the left of the cell.</li> <li><code>center</code>: The content is centered&nbsp;in the cell.</li> <li><code>right</code>:&nbsp; The content is aligned to the right of the cell.</li> <li><code>justify</code> (with text only): The content&nbsp;is stretched out inside the cell&nbsp;so that it covers its entire width.</li> <li><code>char</code> (with text only): The content is aligned&nbsp;to a character inside the <code>&lt;th&gt;</code> element with minimal offset. This character is&nbsp;defined by the <code>char</code> and <code>charoff</code> attributes.</li> </ul> <p>The default value when this attribute is not specified is <code>left</code>.</p> <div><strong>Usage Note: </strong>Do not use this attribute as it is obsolete in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values, apply&nbsp;the CSS <code>text-align</code> property to the attribute.</li> <li>To achieve the same effect as the <code>char</code> value, give the <code>text-align</code> property the same value you would use for&nbsp;the&nbsp;<code>char</code>.&nbsp;&nbsp;Unimplemented in CSS3.</li> </ul> </div> </dd> <dt><strong><code>axis</code></strong> <i> </i> in HTML5</dt> <dd>This attribute contains a list of space-separated strings. Each string is the <code>id</code> of a group of cells that this header applies&nbsp;to.  <div><strong>Usage Note: </strong>Do not use this attribute as it is obsolete in the latest standard: use the <code>scope</code> attribute instead.</div> </dd> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell in a&nbsp;column. It consists of a 6-digit hexadecimal code as defined in sRGB&nbsp;and is&nbsp;prefixed by&nbsp;'#'. This attribute may be used with one of&nbsp;sixteen predefined color strings:  <table> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>teal</code> = \"#008080\"</td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:</strong> Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: The <code>&lt;th&gt;</code> element should be styled using CSS. To create a similar effec&nbsp;use the <code>background-color</code> property in&nbsp;CSS.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>The content of a column is aligned to a character in the <code>&lt;th&gt;</code> element. Typical values include a period (.) to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Usage Note: </strong>Do not use this  attribute as it is no longer&nbsp;supported by the latest standard. To  achieve the same effect , you can specify the character as the  first&nbsp;value of&nbsp;the&nbsp;<code>text-align</code> property,&nbsp;&nbsp;Unimplemented in CSS3.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute is used to&nbsp;shift column&nbsp;data to the right of the&nbsp;character specified by&nbsp;the <strong>char</strong> attribute. Its value specifies the length of this shift.  <div><strong>Usage Note: </strong>Do not use this attribute as it is no longer supported&nbsp;by the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>colspan</code></strong></dt> <dd>This attribute contains a positive integer value that indicates over&nbsp;how many columns a cell is&nbsp;extended. Its default value is <code>1.</code> If its value is set to <code>0</code>, the cell is extended&nbsp;to the last element of the <code>&lt;colgroup&gt;</code>. Values higher than 1000 are clipped down to 1000.</dd> <dt><strong><code>headers</code></strong></dt> <dd>This attribute contains&nbsp;a list of space-separated strings, each corresponding to the <code>id</code> attributes of other <code>&lt;th&gt;</code> elements that relate to this element.</dd> <dt><strong><code>rowspan</code></strong></dt> <dd>This attribute contains a positive&nbsp;integer value that indicates over&nbsp;how many rows a cells is extended. Its default value is <code>1.</code> If its value is set to <code>0</code>, the cell is extended to the last element of the&nbsp;table sections (<code>&lt;thead&gt;</code>, <code>&lt;tbody&gt;</code> or&nbsp;<code>&lt;tfoot&gt;</code>). Values higher than 65534 are clipped down to 65534.</dd> <dt><strong><code>scope</code></strong></dt> <dd>This enumerated attribute defines the cells that the header (defined in the <code>&lt;th&gt;</code>) element relates to. It may have the following values:  <ul> <li><code>row</code>:&nbsp; The header relates to all cells of the row it belongs to.</li> <li><code>col</code>: The header relates to all cells of the column&nbsp;it belongs to.</li> <li><code>rowgroup</code>: The header belongs to a rowgroup and  relates to all of its cells. These cells can be placed to the right or  the left of the header, depending on&nbsp;the value of the <code>dir</code> attribute in&nbsp;the <code>&lt;table&gt;</code> element.</li> <li><code>colgroup</code>: The header belongs to a colgroup and relates to all of its cells.</li> <li><code>auto</code></li> </ul> </dd> <dt><strong><code>valign</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute specifies how a text is vertically aligned inside a cell. Possible values for this attribute are:  <ul> <li><code>baseline</code>: Positions the text near the bottom of the cell&nbsp;and&nbsp;aligns it with the baseline  of the characters instead of the bottom. If characters don't  descend&nbsp;below&nbsp;the baseline, the baseline&nbsp;value achieves the same effect  as <code>bottom</code>.</li> <li><code>bottom</code>: Positions the text near the bottom of the cell.</li> <li><code>middle</code>: Centers the text in the cell.</li> <li>and <code>top</code>: Positions the text near the top&nbsp;of the cell.</li> </ul> <div><strong>Usage Note: </strong>Do not use this attribute as it is no longer supported&nbsp;by&nbsp;the latest standard: use&nbsp;the CSS&nbsp;<code>vertical-align</code> property instead.</div> </dd> <dt><strong><code>width</code></strong> <i> </i> in HTML 4.01</dt> <dd>This attribute is used to define a recommended cell width. &nbsp;Additional space can be added with the&nbsp;cellspacing and cellpadding&nbsp;properties and the width of the <code>&lt;col&gt;</code>&nbsp;element  can also create extra width.&nbsp;But, if a column's width is too narrow to  show a particular cell properly, it will be widened when&nbsp;displayed.  <div><strong>Usage Note: </strong>Do not use this attribute in the latest standard: use the CSS <code>width</code> property instead.</div> </dd> </dl> <h2>Examples</h2> <p>See <code>&lt;table&gt;</code> for examples on <code>&lt;th&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th"
                    ], 
                    "flags": 0, 
                    "guid": "w!fjba<d&~", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;thead&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a set of rows defining the <b>head of the columns of the table</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cell</li> <li><code>center</code>, centering the content in the cell</li> <li><code>right</code>, aligning the content to the right of the cell</li> <li><code>justify</code>, inserting spaces into the textual content so that the content is justified in the cell</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes Unimplemented (see bug&nbsp;2212).</li> </ul> <p>If this attribute is not set,&nbsp; the <code>left</code> value is assumed.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values, use the CSS <code>text-align</code> property on it.</li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> <i> </i></dt> <dd>This attribute defines the background color of each cell of the column. It is one of the 6-digit hexadecimal code as defined in sRGB, prefixed by a '#'. One of the sixteen predefined color strings may be used:  <table style=\"width: 80%;\"> <tbody> <tr> <td style=\"background-color: black; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>black</code> = \"#000000\"</td> <td style=\"background-color: green; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>green</code> = \"#008000\"</td> </tr> <tr> <td style=\"background-color: silver; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>silver</code> = \"#C0C0C0\"</td> <td style=\"background-color: lime; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>lime</code> = \"#00FF00\"</td> </tr> <tr> <td style=\"background-color: gray; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>gray</code> = \"#808080\"</td> <td style=\"background-color: olive; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>olive</code> = \"#808000\"</td> </tr> <tr> <td style=\"background-color: white; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>white</code> = \"#FFFFFF\"</td> <td style=\"background-color: yellow; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>yellow</code> = \"#FFFF00\"</td> </tr> <tr> <td style=\"background-color: maroon; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>maroon</code> = \"#800000\"</td> <td style=\"background-color: navy; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>navy</code> = \"#000080\"</td> </tr> <tr> <td style=\"background-color: red; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>red</code> = \"#FF0000\"</td> <td style=\"background-color: blue; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>blue</code> = \"#0000FF\"</td> </tr> <tr> <td style=\"background-color: purple; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>purple</code> = \"#800080\"</td> <td style=\"background-color: teal; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>teal</code> = \"#008080\"</td> </tr> <tr> <td style=\"background-color: fuchsia; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>fuchsia</code> = \"#FF00FF\"</td> <td style=\"background-color: aqua; width: 24px; height: 24px; border-width: 1px; border-color: black; border-style: solid;\">&nbsp;</td> <td><code>aqua</code> = \"#00FFFF\"</td> </tr> </tbody> </table> <div><strong>Usage note:&nbsp;</strong>Do not use this attribute, as it is non-standard and only implemented in some versions of Microsoft Internet Explorer: the <code>&lt;thead&gt;</code> element should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code>, on the relevant <code>&lt;td&gt;</code> or <code>&lt;th&gt;</code> elements.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute is used to set the character to align the cells in a  column on. Typical values for this include a period (.) when attempting  to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment characters specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>valign</code></strong> <i> </i> in HTML 4, <i> </i> in HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each row of cells of the table header. Possible values for this  attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible;</li> <li><code>middle</code>, which will center the text in the cell;</li> <li><code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard: instead set the CSS&nbsp;<code>vertical-align</code> property on it.</div> </dd> </dl> <h2>Examples</h2> <p>See <code>&lt;table&gt;</code> for examples on<code> &lt;thead&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead"
                    ], 
                    "flags": 0, 
                    "guid": "ew93|zwpld", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;tr&gt;</code>", 
                        "", 
                        "<small>HTML table content element</small><br />defines a <b>row of cells</b> in a table. Those can be a mix of <code>&lt;td&gt;</code> and <code>&lt;th&gt;</code> elements", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>align</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This enumerated attribute specifies how horizontal alignment of each cell content will be handled. Possible values are:  <ul> <li><code>left</code>, aligning the content to the left of the cells</li> <li><code>center</code>, centering the content in the cells</li> <li><code>right</code>, aligning the content to the right of the cells</li> <li><code>justify</code>, widening the spaces in the textual content so that the content is justified in the cells</li> <li><code>char</code>, aligning the textual content on a special character with a minimal offset, defined by the <code>char</code> and <code>charoff</code> attributes Unimplemented (see bug&nbsp;2212)</li> </ul> <p>If this attribute is not set, the parent node's value is inherited.</p> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (not supported) in the latest standard.   <ul> <li>To achieve the same effect as the <code>left</code>, <code>center</code>, <code>right</code> or <code>justify</code> values, use the CSS <code>text-align</code> property on it.</li> <li>To achieve the same effect as the <code>char</code> value, in CSS3, you can use the value of the <code>char</code> as the value of the <code>text-align</code> property Unimplemented.</li> </ul> </div> </dd> </dl> <dl> <dt><strong><code>bgcolor</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute defines the background color of each cell of the row. It can be either an hexadecimal <code>#RRGGBB</code> or <code>#RGB</code> value or a color keyword.  <div><strong>Usage note: </strong>the <code>&lt;tr&gt;</code> element should be styled using CSS. To give a similar effect to the <strong>bgcolor</strong> attribute, use the CSS property <code>background-color</code>.</div> </dd> </dl> <dl> <dt><strong><code>char</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to set the character to align the cells in a  column on. Typical values for this include a period (.) when attempting  to align numbers or monetary values. If <code>align</code> is not set to <code>char</code>, this attribute is ignored.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard. To achieve the same effect as the <code>char</code>, in CSS3, you can use the character set using the <code>char</code> attribute as the value of the <code>text-align</code> property Unimplemented.</div> </dd> </dl> <dl> <dt><strong><code>charoff</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute is used to indicate the number of characters to  offset the column data from the alignment characters specified by the <strong>char</strong> attribute.  <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard.</div> </dd> </dl> <dl> <dt><strong><code>valign</code></strong> Deprecated since HTML4.01, Obsolete since HTML5</dt> <dd>This attribute specifies the vertical alignment of the text within  each row of cells of the table header. Possible values for this  attribute are:  <ul> <li><code>baseline</code>, which will put the text as close to the bottom of the cell as it is possible, but align it on the baseline of the characters instead of the bottom of them. If characters are all of the size, this has the same effect as <code>bottom</code>.</li> <li><code>bottom</code>, which will put the text as close to the bottom of the cell as it is possible;</li> <li><code>middle</code>, which will center the text in the cell;</li> <li>and <code>top</code>, which will put the text as close to the top of the cell as it is possible.</li> </ul> <div><strong>Note: </strong>Do not use this attribute as it is obsolete (and not supported) in the latest standard: instead set the CSS&nbsp;<code>vertical-align</code> property on it.</div> </dd> </dl> <h2>Examples</h2> <p>See <code>&lt;table&gt;</code> for examples on <code>&lt;tr&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr"
                    ], 
                    "flags": 0, 
                    "guid": "f9ZuDYS@St", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;button&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />represents a <b>clickable button</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element's attributes include the global attributes.</p> <dl> <dt><strong><code>autofocus</code></strong> HTML5</dt> <dd>This Boolean attribute lets you specify that the button should have  input focus when the page loads, unless the user overrides it, for  example by typing in a different control. Only one form-associated  element in a document can have this attribute specified.</dd> <dt><strong><code>autocomplete</code></strong> <i> </i></dt> <dd>The use of this attribute on a <code>&lt;button&gt;</code> is nonstandard and Firefox-specific. By default, unlike other browsers, Firefox persists the dynamic disabled state of a <code>&lt;button&gt;</code> across page loads. Setting the value of this attribute to <code>off</code> (i.e. <code>autocomplete=\"off\"</code>) disables this feature. See bug&nbsp;654072.</dd> <dt><strong><code>disabled</code></strong></dt> <dd> <p>This Boolean attribute indicates that the user cannot interact with  the button. If this attribute is not specified, the button inherits its  setting from the containing element, for example <code>&lt;fieldset&gt;</code>; if there is no containing element with the <strong>disabled</strong> attribute set, then the button is enabled.</p> <p>Firefox will, unlike other browsers, by default, persist the dynamic disabled state of a <code>&lt;button&gt;</code> across page loads. Use the <code>autocomplete</code> attribute to control this feature.</p> </dd> <dt><strong><code>form</code></strong> HTML5</dt> <dd>The form element that the button is associated with (its <em>form owner</em>). The value of the attribute must be the <strong>id</strong> attribute of a <code>&lt;form&gt;</code> element in the same document. If this attribute is not specified, the <code>&lt;button&gt;</code> element will&nbsp;be associated to an&nbsp;ancestor <code>&lt;form&gt;</code>&nbsp;element, if one exists. This attribute enables you to associate&nbsp;<code>&lt;button&gt;</code> elements to&nbsp;<code>&lt;form&gt;</code>&nbsp;elements anywhere&nbsp;within a document, not just as descendants of <code>&lt;form&gt;</code> elements.</dd> <dt><strong><code>formaction</code></strong> HTML5</dt> <dd>The URI of a program that processes the information submitted by the button. If specified, it overrides the <code>action</code> attribute of the button's form owner.</dd> <dt><strong><code>formenctype</code></strong> HTML5</dt> <dd>If the button is a submit button, this attribute specifies the type  of content that is used to submit the form to the server. Possible  values are:  <ul> <li><code>application/x-www-form-urlencoded</code>: The default value if the attribute is not specified.</li> <li><code>multipart/form-data</code>: Use this value if you are using an <code>&lt;input&gt;</code> element with the <code>type</code> attribute set to <code>file</code>.</li> <li><code>text/plain</code></li> </ul> <p>If this attribute is specified, it overrides the <code>enctype</code> attribute of the button's form owner.</p> </dd> <dt><strong><code>formmethod</code></strong> HTML5</dt> <dd>If the button is a submit button, this attribute specifies the HTTP  method that the browser uses to submit the form. Possible values are:  <ul> <li><code>post</code>: The data from the form is included in the body of the form and is sent to the server.</li> <li><code>get</code>: The data from the form are appended to the <strong>form</strong>  attribute URI, with a '?' as a separator, and the resulting URI is sent  to the server. Use this method when the form has no side-effects and  contains only ASCII characters.</li> </ul> <p>If specified, this attribute overrides the <code>method</code> attribute of the button's form owner.</p> </dd> <dt><strong><code>formnovalidate</code></strong> HTML5</dt> <dd>If the button is a submit button, this Boolean attribute specifies  that the form is not to be validated when it is submitted. If this  attribute is specified, it overrides the <code>novalidate</code> attribute of the button's form owner.</dd> <dt><strong><code>formtarget</code></strong> HTML5</dt> <dd>If the button is a submit button, this attribute is a name or  keyword indicating where to display the response that is received after  submitting the form. This is a name of, or keyword for, a <em>browsing context</em> (for example, tab, window, or inline frame). If this attribute is specified, it overrides the <code>target</code> attribute of the button's form owner. The following keywords have special meanings:  <ul> <li><code>_self</code>: Load the response into the same browsing  context as the current one. This value is the default if the attribute  is not specified.</li> <li><code>_blank</code>: Load the response into a new unnamed browsing context.</li> <li><code>_parent</code>: Load the response into the parent browsing  context of the current one. If there is no parent, this option behaves  the same way as <code>_self</code>.</li> <li><code>_top</code>: Load the response into the top-level browsing  context (that is, the browsing context that is an ancestor of the  current one, and has no parent). If there is no parent, this option  behaves the same way as <code>_self</code>.</li> </ul> </dd> <dt><strong><code>name</code></strong></dt> <dd>The name of the button, which is submitted with the form data.</dd> <dt><strong><code>type</code></strong></dt> <dd>The type of the button. Possible values are:  <ul> <li><code>submit</code>: The button submits the form data to the  server. This is the default if the attribute is not specified, or if the  attribute is dynamically changed to an empty or invalid value.</li> <li><code>reset</code>: The button resets all the controls to their initial values.</li> <li><code>button</code>: The button has no default behavior. It can  have client-side scripts associated with the element's events, which are  triggered when the events occur.</li> <li>menu: The button opens a popup menu defined via its designated <code>&lt;menu&gt;</code> element.</li> </ul> </dd> <dt><strong><code>value</code></strong></dt> <dd>The initial value of the button. It defines the value associated  with the button which is submitted with the form data. &nbsp;This value is  passed to the server in params&nbsp;when the form is submitted.</dd> </dl> <h2>Notes</h2> <p><code>&lt;button&gt;</code> elements are much easier to style than <code>&lt;input&gt;</code> elements. You can add inner HTML content (think <code>&lt;em&gt;</code>, <code>&lt;strong&gt;</code> or even <code>&lt;img&gt;</code>), and make use of <code>:after</code> and <code>:before</code> pseudo-element to achieve complex rendering while <code>&lt;input&gt;</code> only accepts a text value attribute.</p> <p>IE7 has a bug where when submitting a form with <code>&lt;button type=\"submit\" name=\"myButton\" value=\"foo\"&gt;Click me&lt;/button&gt;</code>, the <code>POST</code> data sent will result in <code>myButton=Click me</code> instead of <code>myButton=foo</code>.<br />  IE6 has an even worse bug where submitting a form through a button will  submit ALL buttons of the form, with the same bug as IE7.<br />  This bug has been fixed in IE8.</p> <p>Firefox will add, for accessibility purposes, a small dotted border  on a focused button. This border is declared through CSS, in the browser  stylesheet, but you can override it if necessary to add your own  focused style using <code>button</code><code>::-moz-focus-inner</code> { }</p> <p>Firefox will, unlike other browsers, by default, persist the dynamic disabled state of a <code>&lt;button&gt;</code> across page loads. Setting the value of the <code>autocomplete</code> attribute to <code>off</code> disables this feature. See bug&nbsp;654072.</p> <p>Firefox &lt;35 for Android sets a default <code>background-image</code> gradient on all buttons (see bug&nbsp;763671). This can be disabled using <code>background-image: none</code>.</p> <h3>Clicking and focus</h3> <p>Whether clicking on a <code>&lt;button&gt;</code> causes it to (by default) become focused varies by browser and OS. The results for <code>&lt;input&gt;</code> of <code>type=\"button\"</code> and <code>type=\"submit\"</code> were the same.</p> <table> <caption>Does clicking on a <code>&lt;button&gt;</code> give it the focus?</caption> <tbody> <tr> <td>Desktop Browsers</td> <th>Windows 8.1</th> <th>OS X 10.9</th> </tr> <tr> <th>Firefox 30.0</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: red;\">No (even with a <code>tabindex</code>)</td> </tr> <tr> <th>Chrome 35</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: LawnGreen;\">Yes</td> </tr> <tr> <th>Safari 7.0.5</th> <td style=\"background-color: silver;\">N/A</td> <td style=\"background-color: red;\">No (even with a <code>tabindex</code>)</td> </tr> <tr> <th>Internet Explorer 11</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: silver;\">N/A</td> </tr> <tr> <th>Presto (Opera 12)</th> <td style=\"background-color: LawnGreen;\">Yes</td> <td style=\"background-color: LawnGreen;\">Yes</td> </tr> </tbody> </table> <table> <caption>Does tapping on a <code>&lt;button&gt;</code> give it the focus?</caption> <tbody> <tr> <td>Mobile Browsers</td> <th>iOS 7.1.2</th> <th>Android 4.4.4</th> </tr> <tr> <th>Safari Mobile</th> <td style=\"background-color: red;\">No (even with a <code>tabindex</code>)</td> <td style=\"background-color: silver;\">N/A</td> </tr> <tr> <th>Chrome 35</th> <td style=\"background-color: red;\">No (even with a <code>tabindex</code>)</td> <td style=\"background-color: LawnGreen;\">Yes</td> </tr> </tbody> </table> <h2>Example</h2> <pre><code>&lt;button name=\"button\"&gt;Click me&lt;/button&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/button"
                    ], 
                    "flags": 0, 
                    "guid": "vek3iQb3pR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;datalist&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />contains a set of <code>&lt;option&gt;</code> elements that represent the <b>values available for other controls</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element has no other attributes than the global attributes, common to all elements.</p> <h2>Examples</h2> <pre><code>&lt;label&gt;Choose a browser from this list: &lt;input list=\"browsers\" name=\"myBrowser\" /&gt;&lt;/label&gt; &lt;datalist&gt;   &lt;option value=\"Chrome\"&gt;   &lt;option value=\"Firefox\"&gt;   &lt;option value=\"Internet Explorer\"&gt;   &lt;option value=\"Opera\"&gt;   &lt;option value=\"Safari\"&gt;   &lt;option value=\"Microsoft Edge\"&gt; &lt;/datalist&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/datalist"
                    ], 
                    "flags": 0, 
                    "guid": "r~yvtL0$!3", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;fieldset&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />is used to <b>group several controls</b> as well as labels (<code>&lt;label&gt;</code>) within a web form", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>disabled</code></strong> HTML5</dt> <dd>If this Boolean attribute is set, the form controls that are its descendants, except descendants of its first optional <code>&lt;legend&gt;</code>  element, are disabled, i.e., not editable. They won't receive any  browsing events, like mouse clicks or focus-related ones. Often browsers  display such controls as gray.</dd> <dt><strong><code>form</code></strong> HTML5</dt> <dd>This attribute has the value of the <strong>id </strong>attribute of the <code>&lt;form&gt;</code> element it's related to. Its default value is the <strong>id</strong> of the nearest <code>&lt;form&gt;</code> element it is a descendant of.</dd> <dt><strong><code>name</code></strong> HTML5</dt> <dd>The name associated with the group.<br />  &nbsp;  <div>The label for the field set is given by the first <code>&lt;legend&gt;</code> element that is a child of this field set.</div> </dd> </dl> <h2>Examples</h2> <h3>Example #1: Form with fieldset, legend, and label</h3> <pre><code>&lt;form action=\"test.php\" method=\"post\"&gt;   &lt;fieldset&gt;     &lt;legend&gt;Title&lt;/legend&gt;     &lt;input type=\"radio\"&gt;     &lt;label for=\"radio\"&gt;Click me&lt;/label&gt;   &lt;/fieldset&gt; &lt;/form&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/fieldset"
                    ], 
                    "flags": 0, 
                    "guid": "v-dk8fv}Q.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;form&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />document section that contains <b>interactive controls to submit information</b> to a web server", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>accept</code></strong> HTML 4 <i> </i></dt> <dd>A comma-separated list of content types that the server accepts.  <div><strong>Usage note:</strong> This attribute has been removed in HTML5 and should no longer be used. Instead, use the <code>accept</code> attribute of the specific <code>&lt;input&gt;</code> element.</div> </dd> <dt><strong><code>accept-charset</code></strong></dt> <dd>A space- or comma-delimited list of character encodings that the  server accepts. The browser uses them in the order in which they are  listed. The default value, the reserved string <code>\"UNKNOWN\"</code>, indicates the same encoding as that of the document containing the form element.<br />  In previous versions of HTML, the different character encodings could  be delimited by spaces or commas. In HTML5, only spaces are allowed as  delimiters.</dd> <dt><strong><code>action</code></strong></dt> <dd>The URI of a program that processes the form information. This value can be overridden by a <code>formaction</code> attribute on a <code>&lt;button&gt;</code> or <code>&lt;input&gt;</code> element.</dd> <dt><strong><code>autocapitalize</code></strong> <i> </i></dt> <dd>This is a nonstandard attribute used by iOS Safari Mobile which  controls whether and how the text value for textual form control  descendants should be automatically capitalized as it is entered/edited  by the user. If the <code>autocapitalize</code> attribute is specified on an individual form control descendant, it trumps the form-wide <code>autocapitalize</code> setting. The non-deprecated values are available in iOS 5 and later. The default value is <code>sentences</code>. Possible values are:  <ul> <li><code>none</code>: Completely disables automatic capitalization</li> <li><code>sentences</code>: Automatically capitalize the first letter of sentences.</li> <li><code>words</code>: Automatically capitalize the first letter of words.</li> <li><code>characters</code>: Automatically capitalize all characters.</li> <li><code>on</code>: <i> </i> Deprecated since iOS 5.</li> <li><code>off</code>: <i> </i> Deprecated since iOS 5.</li> </ul> </dd> <dt><strong><code>autocomplete</code></strong> HTML5</dt> <dd>Indicates whether input elements can by default have their values  automatically completed by the browser. This setting can be overridden  by an <code>autocomplete</code> attribute on an element belonging to the form. Possible values are:  <ul> <li><code>off</code>: The user must explicitly enter a value into each  field for every use, or the document provides its own auto-completion  method; the browser does not automatically complete entries.</li> <li><code>on</code>: The browser can automatically complete values based on values that the user has previously entered in the form.</li> </ul>  For most modern browsers (including Firefox 38+, Google Chrome 34+, IE  11+) setting the autocomplete attribute will not prevent a browser's  password manager from asking the user if they want to store login fields  (username and password), if the user permits the storage the browser  will autofill the login the next time the user visits the page. See The autocomplete attribute and login fields.</dd> <dd> <div> <p><strong>Note: </strong>If you set <code>autocomplete</code> to <code>off</code> in a form because the document provides its own auto-completion, then you should also set <code>autocomplete</code> to <code>off</code> for each of the form's <code>input</code> elements that the document can auto-complete. For details, see Google Chrome notes.</p> </div> </dd> <dt><strong><code>enctype</code></strong></dt> <dd>When the value of the <code>method</code> attribute is <code>post</code>, enctype is the MIME type of content that is used to submit the form to the server. Possible values are:  <ul> <li><code>application/x-www-form-urlencoded</code>: The default value if the attribute is not specified.</li> <li><code>multipart/form-data</code>: The value used for an <code>&lt;input&gt;</code> element with the <code>type</code> attribute set to \"file\".</li> <li><code>text/plain (HTML5)</code></li> </ul> <p>This value can be overridden by a <code>formenctype</code> attribute on a <code>&lt;button&gt;</code> or <code>&lt;input&gt;</code> element.</p> </dd> <dt><strong><code>method</code></strong></dt> <dd>The HTTP method that the browser uses to submit the form. Possible values are:  <ul> <li><code>post</code>: Corresponds to the HTTP POST method ; form data are included in the body of the form and sent to the server.</li> <li><code>get</code>: Corresponds to the HTTP GET method; form data are appended to the <code>action</code>  attribute URI with a '?' as separator, and the resulting URI is sent to  the server. Use this method when the form has no side-effects and  contains only ASCII characters.</li> </ul> <p>This value can be overridden by a <code>formmethod</code> attribute on a <code>&lt;button&gt;</code> or <code>&lt;input&gt;</code> element.</p> </dd> <dt><strong><code>name</code></strong></dt> <dd>The name of the form. In HTML 4, its use is deprecated (<code>id</code> should be used instead). It must be unique among the forms in a document and not just an empty string in HTML 5.</dd> <dt><strong><code>novalidate</code></strong> HTML5</dt> <dd>This Boolean attribute indicates that the form is not to be  validated when submitted. If this attribute is not specified (and  therefore the form is validated), this default setting can be overridden  by a <code>formnovalidate</code> attribute on a <code>&lt;button&gt;</code> or <code>&lt;input&gt;</code> element belonging to the form.</dd> <dt><strong><code>target</code></strong></dt> <dd>A name or keyword indicating where to display the response that is  received after submitting the form. In HTML 4, this is the name/keyword  for a frame. In HTML5, it is a name/keyword for a <em>browsing context</em> (for example, tab, window, or inline frame). The following keywords have special meanings:  <ul> <li><code>_self</code>: Load the response into the same HTML 4 frame  (or HTML5 browsing context) as the current one. This value is the  default if the attribute is not specified.</li> <li><code>_blank</code>: Load the response into a new unnamed HTML 4 window or HTML5 browsing context.</li> <li><code>_parent</code>: Load the response into the HTML 4 frameset  parent of the current frame, or HTML5 parent browsing context of the  current one. If there is no parent, this option behaves the same way as <code>_self</code>.</li> <li><code>_top</code>: HTML 4: Load the response into the full  original window, and cancel all other frames. HTML5: Load the response  into the top-level browsing context (i.e., the browsing context that is  an ancestor of the current one, and has no parent). If there is no  parent, this option behaves the same way as <code>_self</code>.</li> <li><em>iframename</em>: The response is displayed in a named <code>&lt;iframe&gt;</code>.</li> </ul> <p>HTML5: This value can be overridden by a <code>formtarget</code> attribute on a <code>&lt;button&gt;</code> or <code>&lt;input&gt;</code> element.</p> </dd> </dl> <h2>Examples</h2> <h3>HTML Content</h3> <pre><code>&lt;!-- Simple form which will send a GET request --&gt; &lt;form action=\"\" method=\"get\"&gt;   &lt;label for=\"GET-name\"&gt;Name:&lt;/label&gt;   &lt;input type=\"text\" name=\"name\"&gt;   &lt;input type=\"submit\" value=\"Save\"&gt; &lt;/form&gt;  &lt;!-- Simple form which will send a POST request --&gt; &lt;form action=\"\" method=\"post\"&gt;   &lt;label for=\"POST-name\"&gt;Name:&lt;/label&gt;   &lt;input type=\"text\" name=\"name\"&gt;   &lt;input type=\"submit\" value=\"Save\"&gt; &lt;/form&gt;  &lt;!-- Form with fieldset, legend, and label --&gt; &lt;form action=\"\" method=\"post\"&gt;   &lt;fieldset&gt;     &lt;legend&gt;Title&lt;/legend&gt;     &lt;input type=\"radio\" name=\"radio\"&gt;     &lt;label for=\"radio\"&gt;Click me&lt;/label&gt;   &lt;/fieldset&gt; &lt;/form&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form"
                    ], 
                    "flags": 0, 
                    "guid": "B&#<(h3SK0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;input&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />is used to create <b>interactive controls</b> <b>for forms</b> in order to accept data from the user", 
                        "", 
                        "<h2>Form <code>&lt;input&gt;</code> types</h2> <p>How an <code>&lt;input&gt;</code> works varies considerably depending on the value of its <code>type</code>  attribute, hence the different types are covered in their own separate  reference pages. If this attributes is not specified, the default type  adopted type is <code>text</code>.</p> <p>The available types are as follows:</p> <ul> <li><code>button</code>: A push button with no default behavior.</li> <li><code>checkbox</code>: A check box. You must use the <strong>value</strong> attribute to define the value submitted by this item. Use the <strong>checked</strong> attribute to indicate whether this item is selected. You can also use the <strong>indeterminate</strong>  attribute (which can only be set programmatically) to indicate that the  checkbox is in an indeterminate state (on most platforms, this draws a  horizontal line across the checkbox).</li> <li><code>color</code>: HTML5 A control for specifying a color. A color picker's UI has no required features other than accepting simple colors as text (more info).</li> <li><code>date</code>: HTML5 A control for entering a date (year, month, and day, with no time).</li> <li><code>datetime-local</code>: HTML5 A control for entering a date and time, with no time zone.</li> <li><code>email</code>: HTML5  A field for editing an e-mail address. The input value is validated to  contain either the empty string or a single valid e-mail address before  submitting. The <code>:valid</code> and <code>:invalid</code> CSS pseudo-classes are applied as appropriate.</li> <li><code>file</code>: A control that lets the user select a file. Use the <strong>accept</strong> attribute to define the types of files that the control can select.</li> <li><code>hidden</code>: A control that is not displayed&nbsp;but whose value is submitted to the server.</li> <li><code>image</code>: A graphical submit button. You must use the <strong>src</strong> attribute to define the source of the image and the <strong>alt</strong> attribute to define alternative text. You can use the <strong>height</strong> and <strong>width</strong> attributes to define the size of the image in pixels.</li> <li><code>month</code>: HTML5 A control for entering a month and year, with no time zone.</li> <li><code>number</code>: HTML5 A control for entering a number.</li> <li><code>password</code>: A single-line text field whose value is obscured. Use the <strong>maxlength</strong> attribute to specify the maximum length of the value that can be entered.   <div><strong>Note</strong>: Any forms involving sensitive  information like passwords (e.g. login forms) should be served over  HTTPS; Firefox now implements multiple mechanisms to warn against  insecure login forms — see Insecure passwords. Other browsers are also implementing similar mechanisms.</div> </li> <li><code>radio</code>: A radio button. You must use the <strong>value</strong> attribute to define the value submitted by this item. Use the <strong>checked</strong> attribute to indicate whether this item is selected by default. Radio buttons that have the same value for the <strong>name</strong> attribute are in the same \"radio button group\". Only one radio button in a group can be selected at a time.</li> <li><code>range</code>: HTML5  A control for entering a number whose exact value is not important.  This type control uses the following default values if the corresponding  attributes are not specified:   <ul> <li><code>min</code>: 0</li> <li><code>max</code>: 100</li> <li><code>value</code>: <code>min</code> + (<code>max -</code>&nbsp;<code>min</code>) / 2, or <code>min</code> if <code>max</code> is less than <code>min</code></li> <li><code>step</code>: 1</li> </ul> </li> <li><code>reset</code>: A button that resets the contents of the form to default values.</li> <li><code>search</code>: HTML5 A single-line text field for entering search strings. Line-breaks are automatically removed from the input value.</li> <li><code>submit</code>: A button that submits the form.</li> <li><code>tel</code>: HTML5  A control for entering a telephone number. Line-breaks are  automatically removed from the input value, but no other syntax is  enforced. You can use attributes such as <strong>pattern</strong> and <strong>maxlength</strong> to restrict values entered in the control. The <code>:valid</code> and <code>:invalid</code> CSS pseudo-classes are applied as appropriate.</li> <li><code>text</code>: A single-line text field. Line-breaks are automatically removed from the input value.</li> <li><code>time</code>: HTML5 A control for entering a time value with no time zone.</li> <li><code>url</code>: HTML5  A field for editing a URL. The input value is validated to contain  either the empty string or a valid absolute URL before submitting. You  can use attributes such as <strong>pattern</strong> and <strong>maxlength</strong> to restrict values entered in the control. The <code>:valid</code> and <code>:invalid</code> CSS pseudo-classes are applied as appropriate.</li> <li><code>week</code>: HTML5 A control for entering a date consisting of a week-year number and a week number with no time zone.</li> </ul> <p>Some input types are now obsolete:</p> <ul> <li><code>datetime</code>: HTML5 <i> </i> <i> </i> A control for entering a date and time (hour, minute, second, and fraction of a second) based on UTC time zone. <strong>This feature has been removed from WHATWG HTML.</strong></li> </ul> <h2>Attributes</h2> <h3>Global <code>&lt;input&gt;</code> attributes</h3> <p>This section lists the attributes available to all form <code>&lt;input&gt;</code> types. Non-global attributes — and global attributes that behave differently when specified on different <code>&lt;input&gt;</code> types — are listed on those types' individual pages.</p> <div> <p><strong>Note</strong>: This includes the global HTML attributes.</p> </div> <dl> <dt><strong><code>type</code></strong></dt> <dd>The type of control to render. See Form &lt;input&gt; types for the individual types, with links to more information about each.</dd> <dt><strong><code>accept</code></strong></dt> <dd>If the value of the <strong>type</strong> attribute is <code>file</code>,  then this attribute will indicate&nbsp;the types of files that the server  accepts,&nbsp;otherwise it will be&nbsp;ignored. The value must be a  comma-separated list of unique content type specifiers:  <ul> <li>A file extension starting with the STOP character (U+002E). (e.g.&nbsp;.jpg, .png, .doc).</li> <li>A valid MIME type with no extensions.</li> <li><code>audio/*</code> representing sound files. HTML5</li> <li><code>video/*</code> representing video files. HTML5</li> <li><code>image/*</code> representing image files. HTML5</li> </ul> </dd> <dt><strong><code>accesskey</code></strong> HTML 4 only, Obsolete since HTML5</dt> <dd>A single-character that the user can press to switch input focus to the control. This attribute is global in HTML5.</dd> <dt><strong><code>mozactionhint</code></strong> <i> </i></dt> <dd>Specifies an \"action hint\" used to determine how to label the enter  key on mobile devices with virtual keyboards. Supported values are <code>go</code>, <code>done</code>, <code>next</code>, <code>search</code>, and <code>send</code>. These automatically get mapped to the appropriate string and are case-insensitive.</dd> <dt><strong><code>autocapitalize</code></strong> <i> </i></dt> <dd>This is a nonstandard attribute used by Chrome  and iOS Safari Mobile, which controls whether and how the text value  should be automatically capitalized as it is entered/edited by the user.  The non-deprecated values are available in iOS 5 and later. Possible  values are:  <ul> <li><code>none</code>: Completely disables automatic capitalisation.</li> <li><code>sentences</code>: Automatically capitalise the first letter of sentences.</li> <li><code>words</code>: Automatically capitalise the first letter of words.</li> <li><code>characters</code>: Automatically capitalise all characters.</li> <li><code>on</code>: <i> </i> Deprecated since iOS 5.</li> <li><code>off</code>: <i> </i> Deprecated since iOS 5.</li> </ul> <code>autocapitalize</code> documentation in the Safari HTML Reference.</dd> <dt><strong><code>autocomplete</code></strong> HTML5</dt> <dd>This attribute indicates whether the value of the control can be automatically completed by the browser.</dd> <dd>Possible values are:  <ul> <li><code>off</code>: The user must explicitly enter a value into this  field for every use, or the document provides its own auto-completion  method. The browser does not automatically complete the entry.</li> <li><code>on</code>: The browser is allowed to automatically complete  the value based on values that the user has entered during previous  uses, however <code>on</code> does not provide any further information about what kind of data the user might be expected to enter.</li> <li><code>name</code>:&nbsp;Full name.</li> <li><code>honorific-prefix:&nbsp;</code>Prefix or title (e.g. \"Mr.\", \"Ms.\", \"Dr.\", \"Mlle\").</li> <li><code>given-name</code>:&nbsp;First name.</li> <li><code>additional-name</code>: Middle name.</li> <li><code>family-name</code>: Last name.</li> <li><code>honorific-suffix</code>:&nbsp;Suffix (e.g. \"Jr.\", \"B.Sc.\", \"MBASW\", \"II\").</li> <li><code>nickname</code></li> <li><code>email</code></li> <li><code>username</code></li> <li><code>new-password</code>:&nbsp;A new password (e.g. when creating an account or changing a password).</li> <li><code>current-password</code></li> <li><code>organization-title</code>:&nbsp;Job title (e.g. \"Software Engineer\", \"Senior Vice President\", \"Deputy Managing Director\").</li> <li><code>organization</code></li> <li><code>street-address</code></li> <li><code>address-line1</code>,&nbsp;<code>address-line2</code>,&nbsp;<code>address-line3</code>,&nbsp;<code>address-level4</code>,&nbsp;<code>address-level3</code>,&nbsp;<code>address-level2</code>,&nbsp;<code>address-level1</code></li> <li><code>country</code></li> <li><code>country-name</code></li> <li><code>postal-code</code></li> <li><code>cc-name</code>:&nbsp;Full name as given on the payment instrument.</li> <li><code>cc-given-name</code></li> <li><code>cc-additional-name</code></li> <li><code>cc-family-name</code></li> <li><code>cc-number</code>:&nbsp;Code identifying the payment instrument (e.g. the credit card number).</li> <li><code>cc-exp:</code>&nbsp;Expiration date of the payment instrument.</li> <li><code>cc-exp-month</code></li> <li><code>cc-exp-year</code></li> <li><code>cc-csc</code>:&nbsp;Security code for the payment instrument.</li> <li><code>cc-type</code>:&nbsp;Type of payment instrument (e.g.&nbsp;Visa).</li> <li><code>transaction-currency</code></li> <li><code>transaction-amount</code></li> <li><code>language</code>:&nbsp;Preferred language,&nbsp;valid BCP 47 language tag.</li> <li><code>bday</code></li> <li><code>bday-day</code></li> <li><code>bday-month</code></li> <li><code>bday-year</code></li> <li><code>sex</code>:&nbsp;Gender identity (e.g. Female, Fa'afafine), free-form text, no newlines.</li> <li><code>tel</code></li> <li><code>url</code>:&nbsp;Home page or other Web page corresponding to the  company, person, address, or contact information in the other fields  associated with this field.</li> <li><code>photo</code>:&nbsp;Photograph, icon, or other image corresponding  to the company, person, address, or contact information in the other  fields associated with this field.</li> </ul> <p>See the WHATWG Standard for more detailed information.</p> <p>If the <strong>autocomplete</strong> attribute is not specified on an input element&nbsp;then the browser uses the <strong>autocomplete</strong> attribute value of the <code>&lt;input&gt;</code> element's form owner. The form owner is either the <code>form</code> element that this <code>&lt;input&gt;</code> element is a descendant of&nbsp;or the form element whose <strong>id</strong> is specified by the <strong>form</strong> attribute of the input element. For more information, see the <code>autocomplete</code> attribute in <code>&lt;form&gt;</code>.</p> <p>The <strong>autocomplete</strong> attribute also controls whether Firefox will, unlike other browsers, persist the dynamic disabled state and (if applicable) dynamic checkedness of an <code>&lt;input&gt;</code> across page loads. The persistence feature is enabled by default. Setting the value of the <strong>autocomplete</strong> attribute to <code>off</code> disables this feature.&nbsp;This works even when the <strong>autocomplete</strong> attribute would normally not apply to the <code>&lt;input&gt;</code> by virtue of its <strong>type</strong>. See bug&nbsp;654072.</p> <p>For most modern browsers (including Firefox 38+, Google Chrome 34+, IE 11+), setting the <strong>autocomplete</strong> attribute will <em>not</em>  prevent a browser's password manager from asking the user if they want  to store login (username and password) fields and, if they agree, from  autofilling the login the next time the user visits the page. See the autocomplete attribute and login fields.</p> </dd> <dt><strong><code>autofocus</code></strong> HTML5</dt> <dd>This Boolean attribute lets you specify that a form control should  have input focus when the page loads, unless the user overrides it (e.g.  by typing in a different control). Only one form element in a document  can have the <strong>autofocus</strong> attribute, which is a Boolean. It cannot be applied if the <strong>type</strong> attribute is set to <code>hidden</code>  (that is, you cannot automatically set focus to a hidden control). Note  that the focusing of the control may occur before the firing of the <code>DOMContentLoaded</code> event.</dd> <dt><strong><code>capture</code></strong></dt> <dd> <p>When the value of the <strong>type</strong> attribute is <code>file</code>, the presence of this Boolean attribute indicates that capture of media directly from the device's environment using a media capture mechanism is preferred.</p> </dd> <dt><strong><code>checked</code></strong></dt> <dd> <p>When the value of the <strong>type</strong> attribute is <code>radio</code> or <code>checkbox</code>, the presence of this Boolean attribute indicates that the control is selected by default,&nbsp;otherwise it is ignored.</p> <p>Unlike other browsers, Firefox will by default persist the dynamic checked state of an <code>&lt;input&gt;</code> across page loads. Use the <code>autocomplete</code> attribute to control this feature.</p> </dd> <dt><strong><code>disabled</code></strong></dt> <dd> <p>This Boolean attribute indicates that the form control is not available for interaction. In particular, the <code>click</code> event will not be dispatched on disabled controls. Also, a disabled control's value isn't submitted with the form.</p> <p>Unlike other browsers, Firefox will by default persist the dynamic disabled state of an <code>&lt;input&gt;</code> across page loads. Use the <code>autocomplete</code> attribute to control this feature.</p> </dd> <dt><strong><code>form</code></strong> HTML5</dt> <dd>The form element that the input element is associated with (its <em>form owner</em>). The value of the attribute must be an <strong>id</strong> of a <code>&lt;form&gt;</code> element in the same document. If this attribute is not specified, this <code>&lt;input&gt;</code> element must be a descendant of a <code>&lt;form&gt;</code> element. This attribute enables you to place <code>&lt;input&gt;</code>  elements anywhere within a document, not just as descendants of their  form elements. An input can only be associated with one form.</dd> <dt><strong><code>formaction</code></strong> HTML5</dt> <dd>The URI of a program that processes the information submitted by  the input element, if it is a submit button or image. If specified, it  overrides the <code>action</code> attribute of the element's form owner.</dd> <dt><strong><code>formenctype</code></strong> HTML5</dt> <dd>If the input element is a submit button or image, this attribute  specifies the type of content that is used to submit the form to the  server. Possible values are:  <ul> <li><code>application/x-www-form-urlencoded</code>: The default value if the attribute is not specified.</li> <li><code>multipart/form-data</code>: Use this value if you are using an <code>&lt;input&gt;</code> element with the <code>type</code> attribute set to <code>file</code>.</li> <li><code>text/plain</code></li> </ul> <p>If this attribute is specified, it overrides the <code>enctype</code> attribute of the element's form owner.</p> </dd> <dt><strong><code>formmethod</code></strong> HTML5</dt> <dd>If the input element is a submit button or image, this attribute  specifies the HTTP method that the browser uses to submit the form.  Possible values are:  <ul> <li><code>post</code>: The data from the form is included in the body of the form and is sent to the server.</li> <li><code>get</code>: The data from the form are appended to the <strong>form</strong>  attribute URI, with a '?' as a separator, and the resulting URI is sent  to the server. Use this method when the form has no side-effects and  contains only ASCII characters.</li> </ul> <p>If specified, this attribute overrides the <code>method</code> attribute of the element's form owner.</p> </dd> <dt><strong><code>formnovalidate</code></strong> HTML5</dt> <dd>If the input element is a submit button or image, this Boolean  attribute specifies that the form is not to be validated when it is  submitted. If this attribute is specified, it overrides the <code>novalidate</code> attribute of the element's form owner.</dd> <dt><strong><code>formtarget</code></strong> HTML5</dt> <dd>If the input element is a submit button or image, this attribute is  a name or keyword indicating where to display the response that is  received after submitting the form. This is a name of, or keyword for, a  <em>browsing context</em> (e.g. tab, window, or inline frame). If this attribute is specified, it overrides the <code>target</code> attribute of the elements's form owner. The following keywords have special meanings:  <ul> <li>_<code>self</code>: Load the response into the same browsing  context as the current one. This value is the default if the attribute  is not specified.</li> <li><code>_blank</code>: Load the response into a new unnamed browsing context.</li> <li><code>_parent</code>: Load the response into the parent browsing  context of the current one. If there is no parent, this option behaves  the same way as <code>_self</code>.</li> <li><code>_top</code>: Load the response into the top-level browsing  context (i.e.&nbsp;the browsing context that is an ancestor of the current  one, and has no parent). If there is no parent, this option behaves the  same way as <code>_self</code>.</li> </ul> </dd> <dt><strong><code>height</code></strong> HTML5</dt> <dd>If the value of the <strong>type</strong> attribute is <code>image</code>, this attribute defines the height of the image displayed for the button.</dd> <dt><strong><code>inputmode</code></strong> HTML5</dt> <dd>A hint to the browser for which keyboard to display. This attribute applies when the value of the <strong>type</strong> attribute is text, password, email, or url. Possible values are:  <ul> <li><code>verbatim</code>: Alphanumeric, non-prose content such as usernames and passwords.</li> <li><code>latin</code>: Latin-script input in the user's preferred  language with typing aids such as text prediction enabled. For  human-to-computer communication such as search boxes.</li> <li><code>latin-name</code>: As <em>latin</em>, but for human names.</li> <li><code>latin-prose</code>: As <em>latin</em>, but with more aggressive typing aids. For human-to-human communication such as instant messaging or email.</li> <li><code>full-width-latin</code>: As <em>latin-prose</em>, but for the user's secondary languages.</li> <li><code>kana</code>: Kana or romaji input, typically hiragana input,  using full-width characters, with support for converting to kanji.  Intended for Japanese text input.</li> <li><code>katakana</code>: Katakana input, using full-width characters, with support for converting to kanji. Intended for Japanese text input.</li> <li><code>numeric</code>: Numeric input, including keys for the digits  0 to 9, the user's preferred thousands separator character, and the  character for indicating negative numbers. Intended for numeric codes  (e.g. credit card numbers). For actual numbers, prefer using &lt;input  type=\"number\"&gt;</li> <li><code>tel</code>: Telephone input, including asterisk and pound key. Use &lt;input type=\"tel\"&gt; if possible instead.</li> <li><code>email</code>: Email input. Use &lt;input type=\"email\"&gt; if possible instead.</li> <li><code>url</code>: URL input. Use &lt;input type=\"url\"&gt; if possible instead.</li> </ul> </dd> <dt><strong><code>list</code></strong> HTML5</dt> <dd>Identifies a list of pre-defined options to suggest to the user. The value must be the <strong>id</strong> of a <code>&lt;datalist&gt;</code>  element in the same document. The browser displays only options that  are valid values for this input element. This attribute is ignored when  the <strong>type</strong> attribute's value is <code>hidden</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, or a button type.</dd> <dt><strong><code>max</code></strong> HTML5</dt> <dd>The maximum (numeric or date-time) value for this item, which must not be less than its minimum (<strong>min</strong> attribute) value.</dd> <dt><strong><code>maxlength</code></strong></dt> <dd>If the value of the <strong>type</strong> attribute is <code>text</code>, <code>email</code>,<code> search</code>, <code>password</code>, <code>tel</code>, or <code>url</code>,  this attribute specifies the maximum number of characters (in Unicode  code points) that the user can enter.&nbsp;For other control types, it is  ignored. It can exceed the value of the <strong>size</strong> attribute.  If it is not specified, the user can enter an unlimited number of  characters. Specifying a negative number results in the default behavior  (i.e.&nbsp;the user can enter an unlimited number of characters). The  constraint is evaluated only when the value of the attribute has been  changed.</dd> <dt><strong><code>min</code></strong> HTML5</dt> <dd>The minimum (numeric or date-time) value for this item, which must not be greater than its maximum (<strong>max</strong> attribute) value.</dd> <dt><strong><code>minlength</code></strong> HTML5</dt> <dd>If the value of the <strong>type</strong> attribute is <code>text</code>, <code>email</code>,<code> search</code>, <code>password</code>, <code>tel</code>, or <code>url</code>,  this attribute specifies the minimum number of characters (in Unicode  code points) that the user can enter.&nbsp;For other control types, it is  ignored.</dd> <dt><strong><code>multiple</code></strong> HTML5</dt> <dd>This Boolean attribute indicates whether the user can enter more than one value. This attribute applies when the <strong>type</strong> attribute is set to <code>email</code>&nbsp;or <code>file</code>,&nbsp;otherwise it is ignored.</dd> <dt><strong><code>name</code></strong></dt> <dd>The name of the control, which is submitted with the form data.</dd> <dt><strong><code>pattern</code></strong> HTML5</dt> <dd>A regular expression that the control's value is checked against.  The pattern must match the entire value, not just some subset. Use the <strong>title</strong> attribute to describe the pattern to help the user. This attribute applies when the value of the <strong>type</strong> attribute is <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code>, <code>email</code>, or <code>password</code>,&nbsp;otherwise it is ignored. The regular expression language is the same as JavaScript <code>RegExp</code> algorithm, with the <code>'u'</code>  parameter that makes it treat the pattern as a sequence of unicode code  points. The pattern is not surrounded by forward slashes.</dd> <dt><strong><code>placeholder</code></strong> HTML5</dt> <dd>A hint to the user of what can be entered in the control . The  placeholder text must not contain carriage returns or line-feeds.&nbsp;  <div><strong>Note:</strong> Do not use the <code>placeholder</code> attribute instead of a <code>&lt;label&gt;</code> element, their purposes are different. The <code>&lt;label&gt;</code> attribute describes the role of the form element (i.e.&nbsp;it indicates what kind of information is expected), and the <code>placeholder</code> attribute is a hint about the format that the content should take. There are cases in which the <code>placeholder</code> attribute is never displayed to the user, so the form must be understandable without it.</div> </dd> <dt><strong><code>readonly</code></strong> HTML5</dt> <dd>This attribute indicates that the user cannot modify the value of  the control. The value of the attribute is irrelevant. If you need  read-write access to the input value, <em>do not</em> add the \"<strong>readonly</strong>\" attribute.&nbsp;It is ignored if the value of the <strong>type</strong> attribute is <code>hidden</code>, <code>range</code>, <code>color</code>, <code>checkbox</code>, <code>radio</code>, <code>file</code>, or a button type (such as <code>button</code> or <code>submit</code>).</dd> <dt><strong><code>required</code></strong> HTML5</dt> <dd>This attribute specifies that the user must fill in a value before submitting a form. It cannot be used when the <strong>type</strong> attribute is <code>hidden</code>, <code>image</code>, or a button type (<code>submit</code>, <code>reset</code>, or <code>button</code>). The <code>:optional</code> and <code>:required</code> CSS pseudo-classes will be applied to the field as appropriate.</dd> <dt><strong><code>selectionDirection</code></strong> HTML5</dt> <dd>The direction in which selection occurred. This is <code>\"forward\"</code> if the selection was made from left-to-right in an LTR locale or right-to-left in an RTL locale, or <code>\"backward\"</code>  if the selection was made in the opposite direction. On platforms on  which it's possible this value isn't known, the value can be <code>\"none\"</code>; for example, on macOS, the default direction is <code>\"none\"</code>,  then as the user begins to modify the selection using the keyboard,  this will change to reflect the direction in which the selection is  expanding.</dd> <dt><strong><code>selectionEnd</code></strong></dt> <dd>The offset into the element's text content of the last selected  character. If there's no selection, this value indicates the offset to  the character following the current text input cursor position (that is,  the position the next character typed would occupy).</dd> <dt><strong><code>selectionStart</code></strong></dt> <dd>The offset into the element's text content of the first selected  character. If there's no selection, this value indicates the offset to  the character following the current text input cursor position (that is,  the position the next character typed would occupy).</dd> <dt><strong><code>size</code></strong></dt> <dd>The initial size of the control. This value is in pixels unless the value of the <strong>type</strong> attribute is <code>text</code> or <code>password</code>, in which case&nbsp;it is an integer number of characters. Starting in HTML5, this attribute applies only when the <strong>type</strong> attribute is set to <code>text</code>, <code>search</code>, <code>tel</code>, <code>url</code>, <code>email</code>, or <code>password</code>,  otherwise it is ignored. In addition, the size must be greater than  zero. If you do not specify a size, a default value of 20 is used. HTML5  simply states&nbsp;\"the user agent should ensure that at least that many  characters are visible\", but different characters can have different  widths in certain&nbsp;fonts.&nbsp;In some browsers, a certain string with <em>x</em> characters will not be entirely visible even if size is defined to at least <em>x</em>.</dd> <dt><strong><code>spellcheck</code></strong> HTML5</dt> <dd>Setting the value of this attribute to <code>true</code> indicates that the element needs to have its spelling and grammar checked. The value <code>default</code> indicates that the element is to act according to a default behavior, possibly based on the parent element's own <code>spellcheck</code> value. The value <code>false</code> indicates that the element should not be checked.</dd> <dt><strong><code>src</code></strong></dt> <dd>If the value of the <strong>type</strong> attribute is <code>image</code>,  this attribute specifies a URI for the location of an image to display  on the graphical submit button,&nbsp;otherwise it is ignored.</dd> <dt><strong><code>step</code></strong> HTML5</dt> <dd>Works with the <strong>min</strong> and <strong>max</strong> attributes to limit the increments at which a numeric or date-time value can be set. It can be the string <code>any</code> or a positive floating point number. If this attribute is not set to <code>any</code>, the control accepts only values at multiples of the step value greater than the minimum.</dd> <dt><strong><code>tabindex</code></strong> element-specific in HTML 4, global in HTML5</dt> <dd>The position of the element in the tabbing navigation order for the current document.</dd> <dt><strong><code>usemap</code></strong> HTML 4 only, Obsolete since HTML5</dt> <dd>The name of a <code>&lt;map&gt;</code> element to be used as an image map.</dd> <dt><strong><code>value</code></strong></dt> <dd>The initial value of the control. This attribute is optional except when the value of the <strong>type</strong> attribute is <code>radio</code> or <code>checkbox</code>.<br />  Note that when reloading the page, Gecko and IE will ignore the value specified in the HTML source, if the value was changed before the reload.</dd> <dt><strong><code>width</code></strong> HTML5</dt> <dd>If the value of the <strong>type</strong> attribute is <code>image</code>, this attribute defines the width of the image displayed for the button.</dd> </dl> <h3>Non-standard <code>&lt;input&gt;</code> attributes</h3> <dl> <dt><strong><code>autocorrect</code></strong> <i> </i></dt> <dd>This is a non-standard attribute supported by Safari that is used  to control whether autocorrection should be enabled when the user is  entering/editing the text value of the <code>&lt;input&gt;</code>. Possible attribute values are:  <ul> <li><code>on</code>: Enable autocorrection.</li> <li><code>off</code>: Disable autocorrection.</li> </ul> <code>autocorrect</code> documentation in the Safari HTML Reference.</dd> <dt><strong><code>incremental</code></strong> <i> </i></dt> <dd>This is a nonstandard attribute supported by WebKit (Safari) and Blink (Chrome) that only applies when the <strong>type</strong> is <code>search</code>. If the attribute is present, regardless of what its value is, the <code>&lt;input&gt;</code> fires <code>search</code>  events as the user edits the text value. The event is only fired after  an implementation-defined timeout has elapsed since the most recent  keystroke, and new keystrokes reset the timeout. In other words, the  event firing is debounced. If the attribute is absent, the <code>search</code> event is only fired when the user explicitly initiates a search (e.g. by pressing the Enter key while within field). <code>incremental</code> documentation in the Safari HTML Reference</dd> <dt><strong><code>results</code></strong> <i> </i></dt> <dd>This is a nonstandard attribute supported by Safari that only applies when the <strong>type</strong> is <code>search</code>. It is used to control the maximum number of entries that should be displayed in the <code>&lt;input&gt;</code>'s native dropdown list of past search queries. Its value should be a nonnegative decimal integer.</dd> <dt><strong><code>webkitdirectory</code></strong>&nbsp;<i> </i></dt> <dd>This Boolean attribute indicates if the selector used when the <strong>type</strong> attribute is <code>file</code> has to allow for the selection of directories only.</dd> <dt><strong><code>x-moz-errormessage</code></strong> <i> </i></dt> <dd>This Mozilla extension allows you to specify the error message to display when a field doesn't successfully validate.</dd> </dl> <h2>Examples</h2> <p>You can find multiple examples of <code>&lt;input&gt;</code> element usage on the pages covering each individual type — see Form &lt;input&gt; types, and also see the Live example at the top of the article.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input"
                    ], 
                    "flags": 0, 
                    "guid": "iXN=4cM}fQ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;label&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />represents a caption for an item in a user interface", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>for</code></strong></dt> <dd>The ID of a labelable  form-related element in the same document as the label element. The  first such element in the document with an ID matching the value of the <code>for</code> attribute is the <em>labeled control </em>for this label element.<br />  &nbsp;  <div>A label element can have both a <code>for</code> attribute and a contained control element, as long as the <code>for</code> attribute points to the contained control element.</div> </dd> <dt><strong><code>form</code></strong> HTML5 <i> </i></dt> <dd>The form element with which the label is associated (its <em>form owner</em>). If specified, the value of the attribute is the ID of a <code>&lt;form&gt;</code>  element in the same document. This lets you place label elements  anywhere within a document, not just as descendants of their form  elements.<br />  &nbsp;  <div>This content attribute was removed from the HTML specification on April 28, 2016. However, scripts still have access to a read-only <code>HTMLLabelElement.form</code> attribute; it returns the form of which the label's associated control is a member, or <code>null</code> if the label is not associated with a control or the control isn't part of a form.</div> </dd> </dl> <h2>Usage notes</h2> <ul> <li>A <code>&lt;label&gt;</code> can be associated with a control either by placing the control element inside the <code>&lt;label&gt;</code> element, or by using the <code>for</code> attribute. Such a control is called the <em>labeled control</em> of the label element. One input can be associated with multiple labels.</li> <li>Labels are not themselves directly associated with forms. They are  only indirectly associated with forms through the controls with which  they're associated.</li> </ul> <h2>Examples</h2> <h3>Simple label example</h3> <pre><code>&lt;label&gt;Click me &lt;input type=\"text\"&gt;&lt;/label&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/label"
                    ], 
                    "flags": 0, 
                    "guid": "c0&yt@Cez:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;legend&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br>represents a caption for the content of its parent <code>&lt;fieldset&gt;</code>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Examples</h2> <p>See <code>&lt;form&gt;</code> for examples on <code>&lt;legend&gt;</code>.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/legend"
                    ], 
                    "flags": 0, 
                    "guid": "i07E,oaz^O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;meter&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />represents either a <b>scalar value</b> within a known range or a <b>fractional value</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>value</code></strong></dt> <dd>The current numeric value. This must be between the minimum and maximum values (<code>min</code> attribute and <code>max</code>  attribute) if they are specified. If unspecified or malformed, the  value is 0. If specified, but not within the range given by the <code>min</code> attribute and <code>max</code> attribute, the value is equal to the nearest end of the range.  <div><strong>Usage note: </strong>Unless the <code>value</code> attribute is between <code>0</code> and <code>1</code> (inclusive), the <code>min</code> and <code>max</code> attributes should define the range so that the <code>value</code> attribute's value is within it.</div> </dd> <dt><strong><code>min</code></strong></dt> <dd>The lower numeric bound of the measured range. This must be less than the maximum value (<code>max</code> attribute), if specified. If unspecified, the minimum value is 0.</dd> <dt><strong><code>max</code></strong></dt> <dd>The upper numeric bound of the measured range. This must be greater than the minimum value (<code>min</code> attribute), if specified. If unspecified, the maximum value is 1.</dd> <dt><strong><code>low</code></strong></dt> <dd>The upper numeric bound of the low end of the measured range. This must be greater than the minimum value (<code>min</code> attribute), and it also must be less than the high value and maximum value (<code>high</code> attribute and <code>max</code> attribute, respectively), if any are specified. If unspecified, or if less than the minimum value, the <code>low</code> value is equal to the minimum value.</dd> <dt><strong><code>high</code></strong></dt> <dd>The lower numeric bound of the high end of the measured range. This must be less than the maximum value (<code>max</code> attribute), and it also must be greater than the low value and minimum value (<code>low</code> attribute and <strong>min</strong> attribute, respectively), if any are specified. If unspecified, or if greater than the maximum value, the <code>high</code> value is equal to the maximum value.</dd> <dt><strong><code>optimum</code></strong></dt> <dd>This attribute indicates the optimal numeric value. It must be within the range (as defined by the <code>min</code> attribute and <code>max</code> attribute). When used with the <code>low</code> attribute and <code>high</code> attribute, it gives an indication where along the range is considered preferable. For example, if it is between the <code>min</code> attribute and the <code>low</code> attribute, then the lower range is considered preferred.</dd> <dt><strong><code>form</code></strong></dt> <dd>This attribute associates the element with a <code>form</code> element that has ownership of the <code>meter</code> element. For example, a <code>meter</code> might be displaying a range corresponding to an <code>input</code> element of <code>type</code> <em>number</em>. This attribute is only used if the <code>meter</code> element is being used as a form-associated element; even then, it may be omitted if the element appears as a descendant of a <code>form</code> element.</dd> </dl> <h2>Examples</h2> <h3>Simple example</h3> <h4>HTML content</h4> <pre><code>&lt;p&gt;Heat the oven to &lt;meter min=\"200\" max=\"500\"   value=\"350\"&gt;350 degrees&lt;/meter&gt;.&lt;/p&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meter"
                    ], 
                    "flags": 0, 
                    "guid": "kpX^r{ezh>", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;optgroup&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />creates a <b>grouping of options within a <code>&lt;select&gt;</code></b> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>disabled</code></strong></dt> <dd>If this Boolean attribute is set, none of the items in this option  group is selectable. Often browsers grey out such control and it won't  receive any browsing events, like mouse clicks or focus-related ones.</dd> <dt><strong><code>label</code></strong></dt> <dd>The name of the group of options, which the browser can use when  labeling the options in the user interface. This attribute is mandatory  if this element is used.</dd> </dl> <h2>Example</h2> <pre><code>&lt;select&gt;   &lt;optgroup label=\"Group 1\"&gt;     &lt;option&gt;Option 1.1&lt;/option&gt;   &lt;/optgroup&gt;    &lt;optgroup label=\"Group 2\"&gt;     &lt;option&gt;Option 2.1&lt;/option&gt;     &lt;option&gt;Option 2.2&lt;/option&gt;   &lt;/optgroup&gt;   &lt;optgroup label=\"Group 3\" disabled&gt;     &lt;option&gt;Option 3.1&lt;/option&gt;     &lt;option&gt;Option 3.2&lt;/option&gt;     &lt;option&gt;Option 3.3&lt;/option&gt;   &lt;/optgroup&gt; &lt;/select&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/optgroup"
                    ], 
                    "flags": 0, 
                    "guid": "rO}t_,`dBA", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;option&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />is used to define an <b>item contained in a <code>&lt;select&gt;</code></b>, an <code>&lt;optgroup&gt;</code>, or a <code>&lt;datalist&gt;</code> element. As such, this can represent menu items in popups and other lists of items in an HTML document", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>disabled</code></strong></dt> <dd>If this Boolean attribute is set, this option is not checkable.  Often browsers grey out such control and it won't receive any browsing  event, like mouse clicks or focus-related ones. If this attribute is not  set, the element can still be disabled if one its ancestors is a  disabled <code>&lt;optgroup&gt;</code> element.</dd> <dt><strong><code>label</code></strong></dt> <dd>This attribute is text for the label indicating the meaning of the option. If the <code>label</code> attribute isn't defined, its value is that of the element text content.</dd> <dt><strong><code>selected</code></strong></dt> <dd>If present, this Boolean attribute indicates that the option is initially selected. If the <code>&lt;option&gt;</code> element is the descendant of a <code>&lt;select&gt;</code> element whose <code>multiple</code> attribute is not set, only one single <code>&lt;option&gt;</code> of this <code>&lt;select&gt;</code> element may have the <code>selected</code> attribute.</dd> <dt><strong><code>value</code></strong></dt> <dd>The content of this attribute represents the value to be submitted  with the form, should this option be selected.&nbsp;If this attribute is  omitted, the value is taken from the text content of the option element.</dd> </dl> <h2>Examples</h2> <p>See <code>&lt;select&gt;</code> for examples.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/option"
                    ], 
                    "flags": 0, 
                    "guid": "vh=r=xt*si", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;output&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br /><b>result </b>of a calculation or user action", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>for</code></strong></dt> <dd>A list of IDs of other elements, indicating that those elements  contributed input values to (or otherwise affected) the calculation.</dd> <dt><strong><code>form</code></strong></dt> <dd>The form element that this element is associated with (its \"form  owner\"). The value of the attribute must be an ID of a form element in  the same document. If this attribute is not specified, the output  element must be a descendant of a form element. This attribute enables  you to place output elements anywhere within a document, not just as  descendants of their form elements.</dd> <dt><strong><code>name</code></strong></dt> <dd>The name of the element.</dd> </dl> <h2>Example</h2> <pre><code>&lt;form oninput=\"result.value=parseInt(a.value)+parseInt(b.value)\"&gt;     &lt;input type=\"range\" name=\"b\" value=\"50\" /&gt; +     &lt;input type=\"number\" name=\"a\" value=\"10\" /&gt; =     &lt;output name=\"result\"&gt;60&lt;/output&gt; &lt;/form&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/output"
                    ], 
                    "flags": 0, 
                    "guid": "iykjRS&f`H", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;progress&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />represents the <b>completion progress</b> of a task, typically displayed as a progress bar", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>max</code></strong></dt> <dd>This attribute describes how much work the task indicated by the <code>progress</code> element requires. The <code>max</code> attribute, if present, must have a value greater than zero and be a valid floating point number. The default value is 1.</dd> <dt><strong><code>value</code></strong></dt> <dd>This attribute specifies how much of the task that has been completed. It must be a valid floating point number between 0 and <code>max</code>, or between 0 and 1 if <code>max</code> is omitted. If there is no <code>value</code>  attribute, the progress bar is indeterminate; this indicates that an  activity is ongoing with no indication of how long it is expected to  take.</dd> </dl> <p>Note that the minimum value is always 0 and the min attribute is not allowed for the progress element. You can use the <code>-moz-orient</code> CSS property to specify whether the progress bar should be rendered horizontally (the default) or vertically. The <code>:indeterminate</code> pseudo-class can be used to match against indeterminate progress bars.</p> <h2>Examples</h2> <pre><code>&lt;progress value=\"70\" max=\"100\"&gt;70 %&lt;/progress&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress"
                    ], 
                    "flags": 0, 
                    "guid": "Q_VZwmMm<;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;select&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br /><b>control</b> that provides a <b>menu of options</b>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>autofocus</code></strong> HTML5</dt> <dd>This attribute lets you specify that a form control should have  input focus when the page loads, unless the user overrides it, for  example by typing in a different control. Only one form element in a  document can have the <code>autofocus</code> attribute, which is a Boolean.</dd> <dt><strong><code>disabled</code></strong></dt> <dd>This Boolean attribute indicates that the user cannot interact with  the control. If this attribute is not specified, the control inherits  its setting from the containing element, for example <code>fieldset</code>; if there is no containing element with the <code>disabled</code> attribute set, then the control is enabled.</dd> <dt><strong><code>form</code></strong> HTML5</dt> <dd>This attribute lets you specify the form element to&nbsp;which&nbsp;the  select element is associated&nbsp;(that is, its \"form owner\"). If this  attribute is specified, its value must be the ID of a form element in  the same document. This enables you to place select elements anywhere  within a document, not just as descendants of their form elements.</dd> <dt><strong><code>multiple</code></strong></dt> <dd>This Boolean attribute indicates that multiple options can be  selected in the list. If it is not specified, then only one option can  be selected at a time.</dd> <dt><strong><code>name</code></strong></dt> <dd>This attribute is used to specify the name of the control.</dd> <dt><strong><code>required</code></strong> HTML5</dt> <dd>A Boolean attribute indicating that an option with a non-empty string value must be selected.</dd> <dt><strong><code>size</code></strong></dt> <dd>If the control is presented as a scrolled list box, this attribute  represents the number of rows in the list that should be visible at one  time. Browsers are not required to present a select element as a  scrolled list box. The default value is 0.</dd> </dl> <div><strong>Firefox note:</strong> According to the HTML5  specification, the default value for size should be 1; however, in  practice, this has been found to break some web sites, and no other  browser currently does that, so Mozilla have opted to continue to return  0 for the time being with Firefox.</div> <h2>Examples</h2> <pre><code>&lt;!-- The second value will be selected initially --&gt; &lt;select name=\"select\"&gt; &lt;!--Supplement an id here instead of using 'name'--&gt;   &lt;option value=\"value1\"&gt;Value 1&lt;/option&gt;    &lt;option value=\"value2\" selected&gt;Value 2&lt;/option&gt;   &lt;option value=\"value3\"&gt;Value 3&lt;/option&gt; &lt;/select&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/select"
                    ], 
                    "flags": 0, 
                    "guid": "y18>t/uYHi", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;textarea&gt;</code>", 
                        "", 
                        "<small>HTML forms element</small><br />represents a <b>multi-line</b> plain-<b>text</b> editing control", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>autocapitalize</code></strong> <i> </i></dt> <dd>This is a nonstandard attribute supported by WebKit on iOS  (therefore nearly all browsers running on iOS, including Safari,  Firefox, and Chrome) which controls whether and how the text value  should be automatically capitalized as it is entered/edited by the user.  The non-deprecated values are available in iOS 5 and later. Possible  values are:  <ul> <li><code>none</code>: Completely disables automatic capitalization</li> <li><code>sentences</code>: Automatically capitalize the first letter of sentences.</li> <li><code>words</code>: Automatically capitalize the first letter of words.</li> <li><code>characters</code>: Automatically capitalize all characters.</li> <li><code>on</code>: <i> </i> Deprecated since iOS 5.</li> <li><code>off</code>: <i> </i> Deprecated since iOS 5.</li> </ul> </dd> <dt><strong><code>autocomplete</code></strong> HTML5</dt> <dd>This attribute indicates whether the value of the control can be automatically completed by the browser. Possible values are:  <ul> <li><code>off</code>: The user must explicitly enter a value into this  field for every use, or the document provides its own auto-completion  method; the browser does not automatically complete the entry.</li> <li><code>on</code>: The browser can automatically complete the value based on values that the user has entered during previous uses.</li> </ul> <p>If the <strong>autocomplete</strong> attribute is not specified on a <code>&lt;textarea&gt;</code> element, then the browser uses the <strong>autocomplete</strong> attribute value of the <code>&lt;textarea&gt;</code> element's form owner. The form owner is either the <code>&lt;form&gt;</code> element that this <code>&lt;textarea&gt;</code> element is a descendant of or the form element whose <strong>id</strong> is specified by the <strong>form</strong> attribute of the input element. For more information, see the <code>autocomplete</code> attribute in <code>&lt;form&gt;</code>.</p> </dd> <dt><strong><code>autofocus</code></strong> HTML5</dt> <dd>This Boolean attribute lets you specify that a form control should  have input focus when the page loads, unless the user overrides it, for  example by typing in a different control. Only one form-associated  element in a document can have this attribute specified.&nbsp;</dd> <dt><strong><code>cols</code></strong></dt> <dd>The visible width of the text control, in average character widths.  If it is specified, it must be a positive integer. If it is not  specified, the default value is <code>20</code> (HTML5).</dd> <dt><strong><code>disabled</code></strong></dt> <dd>This Boolean attribute indicates that the user cannot interact with  the control. (If this attribute is not specified, the control inherits  its setting from the containing element, for example <code>&lt;fieldset&gt;</code>; if there is no containing element with the <code>disabled</code> attribute set, then the control is enabled.)</dd> <dt><strong><code>form</code></strong> HTML5</dt> <dd>The form element that the <code>&lt;textarea&gt;</code> element is  associated with (its \"form owner\"). The value of the attribute must be  the ID of a form element in the same document. If this attribute is not  specified, the <code>&lt;textarea&gt;</code> element must be a descendant of a form element. This attribute enables you to place <code>&lt;textarea&gt;</code> elements anywhere within a document, not just as descendants of their form elements.</dd> <dt><strong><code>maxlength</code></strong> HTML5</dt> <dd>The maximum number of characters (Unicode code points) that the  user can enter. If this value isn't specified, the user can enter an  unlimited number of characters.</dd> <dt><strong><code>minlength</code></strong> HTML5</dt> <dd>The minimum number of characters (Unicode code points) required that the user should enter.</dd> <dt><strong><code>name</code></strong></dt> <dd>The name of the control.</dd> <dt><strong><code>placeholder</code></strong> HTML5</dt> <dd>A hint to the user of what can be entered in the control. Carriage  returns or line-feeds within the placeholder text must be treated as  line breaks when rendering the hint.</dd> <dt><strong><code>readonly</code></strong></dt> <dd>This Boolean attribute indicates that the user cannot modify the value of the control. Unlike the <code>disabled</code> attribute, the <code>readonly</code>  attribute does not prevent the user from clicking or selecting in the  control. The value of a read-only control is still submitted with the  form.</dd> <dt><strong><code>required</code></strong> HTML5</dt> <dd>This attribute specifies that the user must fill in a value before submitting a form.</dd> <dt><strong><code>rows</code></strong></dt> <dd>The number of visible text lines for the control.</dd> <dt><strong><code>selectionDirection</code></strong> HTML5</dt> <dd>The direction in which selection occurred. This is \"forward\" if the  selection was made from left-to-right in an LTR locale or right-to-left  in an RTL&nbsp;locale, or \"backward\" if the selection was made in the  opposite direction. This can be \"none\"&nbsp;if the selection direction is  unknown.</dd> <dt><strong><code>selectionEnd</code></strong></dt> <dd>The index to the last character in the current selection. If  there's no selection, the value is the index of the character following  the position of the text entry cursor.</dd> <dt><strong><code>selectionStart</code></strong></dt> <dd>The index to the first character in the current selection. If  there's no selection, this value is the index of the character following  the position of the text entry cursor.</dd> <dt><strong><code>spellcheck</code></strong> HTML5</dt> <dd>Setting the value of this attribute to <code>true</code> indicates that the element needs to have its spelling and grammar checked. The value <code>default</code> indicates that the element is to act according to a default behavior, possibly based on the parent element's own <code>spellcheck</code> value. The value <code>false</code> indicates that the element should not be checked.</dd> <dt><strong><code>wrap</code></strong> HTML5</dt> <dd>Indicates how the control wraps text. Possible values are:  <ul> <li><code>hard</code>: The browser automatically inserts line breaks (CR+LF) so that each line has no more than the width of the control; the <code>cols</code> attribute must be specified.</li> <li><code>soft</code>: The browser ensures that all line breaks in the value consist of a CR+LF pair, but does not insert any additional line breaks.</li> <li><code>off</code>: <i> </i> Like <code>soft</code> but changes appearance to <code>white-space: pre</code> so line segments exceeding <code>cols</code> are not wrapped and area becomes horizontally scrollable.</li> </ul> <p>If this attribute is not specified, <code>soft</code> is its default value.</p> </dd> </dl> <p></p><div> <h2>Resizable textareas</h2> Requires Gecko 2.0(Firefox 4 / Thunderbird 3.3 / SeaMonkey 2.1) </div><p></p> <p>Gecko&nbsp;2.0 introduced support for resizable textareas. This is controlled by the <code>resize</code> CSS property. Resizing of textareas is enabled by default, but you can explicitly disable it by including the following CSS:</p> <pre><code>textarea {   resize: none; }</code></pre><h2>Interaction with CSS</h2> <p>In regards to CSS, an <code>&lt;textarea&gt;</code> is a replaced element. The HTML specification doesn't define where the baseline of a <code>&lt;textarea&gt;</code> is. So different browsers set it to different positions. For Gecko, the <code>&lt;textarea&gt;</code>  baseline is set on the baseline of the first line of the textarea's  first line, on another browser it may be set on the bottom of the <code>&lt;textarea&gt;</code> box. Don't use <code>vertical-align</code><code>: baseline</code> on it, as the behavior will be unpredictable.</p> <p>A <em>textarea</em> has intrinsic dimensions, like a raster image.</p> <h2>Example</h2> <h3>HTML content</h3> <pre><code>&lt;textarea name=\"textarea\"    rows=\"10\" cols=\"50\"&gt;Write something here&lt;/textarea&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea"
                    ], 
                    "flags": 0, 
                    "guid": "m[P8lUh$Rm", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;details&gt;</code>", 
                        "", 
                        "<small>HTML interactive elements element</small><br />is used as a <b>disclosure widget</b> from which the user can retrieve additional information", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>open</code></strong></dt> <dd>This Boolean attribute indicates whether the details will be shown to the user on page load. Default is <code>false</code> and so details will be hidden.</dd> </dl> <h2>Example</h2> <pre><code>&lt;details&gt;   &lt;summary&gt;Some details&lt;/summary&gt;   &lt;p&gt;More info about the details.&lt;/p&gt; &lt;/details&gt;  &lt;details open&gt;   &lt;summary&gt;Even more details&lt;/summary&gt;   &lt;p&gt;Here are even more details about the details.&lt;/p&gt; &lt;/details&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details"
                    ], 
                    "flags": 0, 
                    "guid": "Csh|Tr1PY=", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;dialog&gt;</code>", 
                        "", 
                        "<small>HTML interactive elements element</small><br />represents a <b>dialog box</b> or other interactive component, such as an inspector or window", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes. The <code>tabindex</code> attribute must not be used on the <code>&lt;dialog&gt;</code> element.</p> <dl> <dt><strong><code>open</code></strong></dt> <dd>Indicates that the dialog is active and available for interaction.  When the open attribute is not set, it shouldn't be shown to the user.</dd> </dl> <h2>Usage notes</h2> <ul> <li><code>&lt;form&gt;</code> elements can be integrated within a dialog by specifying them with the attribute <code>method=\"dialog\"</code>. When such a form is submitted, the dialog is closed with a <code>returnValue</code> attribute set to the <code>value</code> of the submit button used.</li> <li>The <code>::backdrop</code> CSS pseudo-element can be used to style behind a <code>&lt;dialog&gt;</code> element, for example to dim inaccessible content whilst a modal dialog is active.</li> </ul> <h2>Examples</h2> <h3>Simple example</h3> <pre><code>&lt;dialog open&gt;   &lt;p&gt;Greetings, one and all!&lt;/p&gt; &lt;/dialog&gt;</code></pre><h2>Advanced example</h2> <p>This example opens a pop-up dialog box containing a form when the \"Update details\" button is clicked.</p> <h3>HTML content</h3> <pre><code>&lt;!-- Simple pop-up dialog box, containing a form --&gt; &lt;dialog open&gt;   &lt;form method=\"dialog\"&gt;     &lt;section&gt;       &lt;p&gt;&lt;label for=\"favAnimal\"&gt;Favorite animal:&lt;/label&gt;       &lt;select&gt;         &lt;option&gt;&lt;/option&gt;         &lt;option&gt;Brine shrimp&lt;/option&gt;         &lt;option&gt;Red panda&lt;/option&gt;         &lt;option&gt;Spider monkey&lt;/option&gt;       &lt;/select&gt;&lt;/p&gt;     &lt;/section&gt;     &lt;menu&gt;       &lt;button type=\"reset\"&gt;Cancel&lt;/button&gt;       &lt;button type=\"submit\"&gt;Confirm&lt;/button&gt;     &lt;/menu&gt;   &lt;/form&gt; &lt;/dialog&gt;  &lt;menu&gt;   &lt;button&gt;Update details&lt;/button&gt; &lt;/menu&gt;</code></pre><h3>JavaScript content</h3> <pre><code>(function() {   var updateButton = document.getElementById('updateDetails');   var cancelButton = document.getElementById('cancel');   var favDialog = document.getElementById('favDialog');    // Update button opens a modal dialog   updateButton.addEventListener('click', function() {     favDialog.showModal();   });    // Form cancel button closes the dialog box   cancelButton.addEventListener('click', function() {     favDialog.close();   }); })();</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog"
                    ], 
                    "flags": 0, 
                    "guid": "qzqlWh:[US", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;menu&gt;</code>", 
                        "", 
                        "<small>HTML interactive elements element</small><br />represents a <b>group of commands that a user can perform</b> or activate. This includes both list menus, which might appear across the top of a screen, as well as context menus, such as those that might appear underneath a button after it has been clicked", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>label</code></strong></dt> <dd>The name of the menu as shown to the user. Used within nested  menus, to provide a label through which the submenu can be accessed.  Must only be specified when the parent element is a <code>&lt;menu&gt;</code> in the <em>context menu</em> state.</dd> <dt><strong><code>type</code></strong></dt> <dd>This attribute indicates the kind of menu being declared, and can be one of two values.  <ul> <li><code>context</code>: Indicates the <em>popup menu</em> state, which represents a group of commands activated through another element. This might be as a button menu referenced by a <code>menu</code> attribute of a <code>&lt;button&gt;</code> element, or as context menu for an element with a <code>contextmenu</code> attribute. This value is the default if the attribute is missing and the parent element is also a <code>&lt;menu&gt;</code> element.</li> <li><code>toolbar</code>: Indicates the <em>toolbar</em> state, which  represents a toolbar consisting of a series of commands for user  interaction. This might be in the form of an unordered list of <code>&lt;li&gt;</code> elements, or, if the element has no <code>&lt;li&gt;</code> element children, flow content describing available commands. This value is the default if the attribute is missing.</li> </ul> </dd> </dl> <h2>Usage notes</h2> <p>The <code>&lt;menu&gt;</code> and <code>&lt;ul&gt;</code> elements both represent an unordered list of items. The key difference is that <code>&lt;ul&gt;</code> primarily contains items for display, whilst <code>&lt;menu&gt;</code> is intended for interactive items, to act on.</p> <p>An HTML menu can be used to create context menus (typically activated by right-clicking another element) or toolbars.</p> <p><strong>Context menus</strong> consist of a <code>&lt;menu&gt;</code> element which contains <code>&lt;menuitem&gt;</code> elements for each selectable option in the menu, <code>&lt;menu&gt;</code> elements for submenus within the menu, and <code>&lt;hr&gt;</code>  elements for separator lines to break up the menu's content into  sections. Context menus are then attached to the element they're  activated from using either the associated element's <code>contextmenu</code> attribute or, for button-activated menus attached to <code>&lt;button&gt;</code> elements, the <code>menu</code> attribute.</p> <p><strong>Toolbar menus</strong> consist of a <code>&lt;menu&gt;</code> element whose content is described in one of two ways: either as an unordered list of items represented by <code>&lt;li&gt;</code> elements (each representing a command or option the user can utilize), or (if there are no <code>&lt;li&gt;</code> elements), flow content describing the available commands and options.</p> <p>This element was deprecated in HTML4, but reintroduced in HTML5.1&nbsp;  and the HTML living standard. This document describes the current  Firefox implementation. Type 'list' is likely to change to 'toolbar'  according to HTML5.1.</p> <h2>Examples</h2> <h3>Context menu</h3> <h4>HTML content</h4> <pre><code>&lt;!-- A &lt;div&gt; element with a context menu --&gt; &lt;div contextmenu=\"popup-menu\"&gt;   Right-click to see the adjusted context menu &lt;/div&gt;  &lt;menu type=\"context\"&gt;   &lt;menuitem&gt;Action&lt;/menuitem&gt;   &lt;menuitem&gt;Another action&lt;/menuitem&gt;   &lt;hr&gt;   &lt;menuitem&gt;Separated action&lt;/menuitem&gt; &lt;/menu&gt;</code></pre><h4>CSS content</h4> <pre><code>div {   width: 300px;   height: 80px;   background-color: lightgreen; }</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menu"
                    ], 
                    "flags": 0, 
                    "guid": "j~[2!z$3%O", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;menuitem&gt;</code>", 
                        "", 
                        "<small>HTML interactive elements element</small><br />represents a <b>command that a user is able to invoke</b> through a popup menu. This includes context menus, as well as menus that might be attached to a menu button.<div><br /></div><div>A command can either be defined explicitly, with a textual label and  optional icon to describe its appearance, or alternatively as an <em>indirect command</em>  whose behavior is defined by a separate element. Commands can also  optionally include a checkbox or be grouped to share radio buttons.  (Menu items for indirect commands gain checkboxes or radio buttons when  defined against elements <code>&lt;input type=\"checkbox\"&gt;</code> and <code>&lt;input type=\"radio\"&gt;</code>.)</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes; in particular <code>title</code> can be used to describe the command, or provide usage hints.</p> <dl> <dt><strong><code>checked</code></strong></dt> <dd>Boolean attribute which indicates whether the command is selected. May only be used when the <code>type</code> attribute is <code>checkbox</code> or <code>radio</code>.</dd> <dt><strong><code>command</code></strong></dt> <dd>Specifies the ID of a separate element, indicating a command to be  invoked indirectly. May not be used within a menu item that also  includes the attributes <code>checked</code>, <code>disabled</code>, <code>icon</code>, <code>label</code>, <code>radiogroup</code> or <code>type</code>.</dd> <dt><strong><code>default</code></strong></dt> <dd>This Boolean attribute indicates use of the same command as the menu's subject element (such as a <code>button</code> or <code>input</code>).</dd> <dt><strong><code>disabled</code></strong></dt> <dd>Boolean attribute which indicates that the command is not available in the current state. Note that <code>disabled</code> is distinct from <code>hidden</code>; the <code>disabled</code> attribute is appropriate in any context where a change in circumstances might render the command relevant.</dd> <dt><strong><code>icon</code></strong></dt> <dd>Image URL, used to provide a picture to represent the command.</dd> <dt><strong><code>label</code></strong></dt> <dd>The name of the command as shown to the user. Required when a <code>command</code> attribute is not present.</dd> <dt><strong><code>radiogroup</code></strong></dt> <dd>This attribute specifies the name of a group of commands to be  toggled as radio buttons when selected. May only be used where the <code>type</code> attribute is <code>radio</code>.</dd> <dt><strong><code>type</code></strong></dt> <dd>This attribute indicates the kind of command, and can be one of three values.  <ul> <li><code>command</code>: A regular command with an associated action. This is the missing value default.</li> <li><code>checkbox</code>: Represents a command that can be toggled between two different states.</li> <li><code>radio</code>: Represent one selection from a group of commands that can be toggled as radio buttons.</li> </ul> </dd> </dl> <h2>Example</h2> <h3>HTML content</h3> <pre><code>&lt;!-- A &lt;div&gt; element with a context menu --&gt; &lt;div contextmenu=\"popup-menu\"&gt;   Right-click to see the adjusted context menu &lt;/div&gt;  &lt;menu type=\"context\"&gt;   &lt;menuitem type=\"checkbox\" onclick=\"toggleOption()\"     checked=\"true\"&gt;Checkbox&lt;/menuitem&gt;   &lt;menuitem type=\"command\" label=\"Command\" icon=\"icon.png\"     onclick=\"doSomething()\"&gt;Checkbox&lt;/menuitem&gt;   &lt;menuitem type=\"radio\" name=\"group1\" onclick=\"option()\"     checked=\"true\"&gt;Radio button 1&lt;/menuitem&gt;   &lt;menuitem type=\"radio\" name=\"group1\"     onclick=\"option()\"&gt;Radio button 2&lt;/menuitem&gt; &lt;/menu&gt;</code></pre><h3>CSS content</h3> <pre><code>div {   width: 300px;   height: 80px;   background-color: lightgreen; }</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/menuitem"
                    ], 
                    "flags": 0, 
                    "guid": "DdbsMF>Qj2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;summary&gt;</code>", 
                        "", 
                        "<small>HTML interactive elements element</small><br />is used as a summary, caption, or legend for the content of a <code>&lt;details&gt;</code> element", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Usage notes</h2> <p>If the <code>&lt;summary&gt;</code> element is omitted, the heading \"details\" will be used.</p> <p>The default style for <code>&lt;summary&gt;</code> is <code>display:list-item</code> per HTML standard.&nbsp; If the style is being changed to <code>display:block</code>, the disclosure triangle will be dismissed, which is expected. See Bug 1283989 for more information.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary"
                    ], 
                    "flags": 0, 
                    "guid": "q>7J$Dn]nJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;content&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML web components element (use&nbsp;<code>&lt;slot&gt;</code>)</small><br />was used inside of Shadow DOM as an insertion point, and wasn't meant to be used in ordinary HTML", 
                        "", 
                        "<h2 name=\"Attributes\">Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><code>select</code></dt> <dd>A comma-separated list of selectors. These have the same syntax as  CSS selectors. They select the content to insert in place of the <code>&lt;content&gt;</code> element.</dd></dl>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/content"
                    ], 
                    "flags": 0, 
                    "guid": "mQ<qO<ZmmO", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;element&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML web components element</small><br />was part of Web Components; this element was intended to be used to <b>define new custom DOM elements</b>. It was removed in favor of a JavaScript-driven methodology for creating new custom elements; however, that technology is not mature and no browers fully implement it", 
                        "", 
                        "<h2 name=\"Attributes\">Attributes</h2> <p>This element includes the global attributes.</p>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/element"
                    ], 
                    "flags": 0, 
                    "guid": "k(XoHkDa3w", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;shadow&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML web components element</small><br />was intended to be used as a <b>shadow DOM insertion point</b>. You might have used it if you have created multiple shadow roots under a shadow host. It is not useful in ordinary HTML", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <h2>Example</h2> <p>Here is a simple example of using the <code>&lt;shadow&gt;</code> element. It is an HTML file with everything needed in it.</p> <div> <p><strong>Note:</strong>&nbsp;This is an experimental technology. For this code to work, the browser you display it in must support Web Components. See Enabling Web Components in Firefox.</p> </div> <pre><code>&lt;html&gt;   &lt;head&gt;&lt;/head&gt;   &lt;body&gt;    &lt;!-- This &lt;div&gt; will hold the shadow roots. --&gt;   &lt;div&gt;     &lt;!-- This heading will not be displayed --&gt;     &lt;h4&gt;My Original Heading&lt;/h4&gt;   &lt;/div&gt;    &lt;script&gt;     // Get the &lt;div&gt; above with its content     var origContent = document.querySelector('div');     // Create the first shadow root     var shadowroot1 = origContent.createShadowRoot();     // Create the second shadow root     var shadowroot2 = origContent.createShadowRoot();      // Insert something into the older shadow root     shadowroot1.innerHTML =       '&lt;p&gt;Older shadow root inserted by           &amp;lt;shadow&amp;gt;&lt;/p&gt;';     // Insert into younger shadow root, including &lt;shadow&gt;.     // The previous markup will not be displayed unless     // &lt;shadow&gt; is used below.     shadowroot2.innerHTML =       '&lt;shadow&gt;&lt;/shadow&gt; &lt;p&gt;Younger shadow        root, displayed because it is the youngest.&lt;/p&gt;';   &lt;/script&gt;    &lt;/body&gt; &lt;/html&gt;</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/shadow"
                    ], 
                    "flags": 0, 
                    "guid": "m/7${fUu-u", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;slot&gt;</code>", 
                        "", 
                        "<small>HTML web components element</small><br />is a <b>placeholder</b> inside a web component that you can fill with your own markup, which lets you create <b>separate DOM trees</b> and present them together", 
                        "", 
                        "<h2>Attributes</h2> <p>This element includes the global attributes.</p> <dl> <dt><strong><code>name</code></strong></dt> <dd>The slot's name.</dd> <dd>A <strong><dfn>named slot</dfn></strong> is a <code>&lt;slot&gt;</code> element with a <code>name</code> attribute.</dd> </dl> <h2>Example</h2> <p>Let’s make an example using the <code>&lt;slot&gt;</code> element along with the <code>&lt;template&gt;</code> element.</p> <h3 name=\"Partnering_&lt;slot&gt;_with_&lt;template&gt;\">Partnering &lt;slot&gt; with &lt;template&gt;</h3> <p>The following set of code snippets show how to use the <code>&lt;slot&gt;</code> element together with the <code>&lt;template&gt;</code> element and some JavaScript to:</p> <ul> <li>create a <strong><code>&lt;element-details&gt;</code></strong> element with named slots in its shadow root</li> <li>design the <strong><code>&lt;element-details&gt;</code></strong>  element in such a way that, when used in documents, it is rendered from  composing the element’s content together with content from its shadow root—that is, pieces of the element’s content are used to fill in named slots in its shadow root</li> </ul> <h4>Use &lt;slot&gt; in &lt;template&gt; to make a doc fragment with named slots</h4> <p>First let’s use the <code>&lt;slot&gt;</code> element within a <code>&lt;template&gt;</code> element to create a new “element-details-template” document fragment containing some named slots.</p> <pre><code>&lt;template&gt;   &lt;style&gt;   details {font-family: \"Open Sans Light\",Helvetica,Arial}   .name {font-weight: bold; color: #217ac0; font-size: 120%}   h4 { margin: 10px 0 -8px 0; }   h4 span { background: #217ac0; padding: 2px 6px 2px 6px }   h4 span { border: 1px solid #cee9f9; border-radius: 4px }   h4 span { color: white }   .attributes { margin-left: 22px; font-size: 90% }   .attributes p { margin-left: 16px; font-style: italic }   &lt;/style&gt;   &lt;details&gt;     &lt;summary&gt;       &lt;span&gt;         &lt;code&gt;&amp;lt;&lt;slot name=\"element-name\"&gt;NEED NAME&lt;/slot&gt;&amp;gt;&lt;/code&gt;         &lt;i&gt;&lt;slot name=\"description\"&gt;NEED DESCRIPTION&lt;/slot&gt;&lt;/i&gt;       &lt;/span&gt;     &lt;/summary&gt;     &lt;div&gt;       &lt;h4&gt;&lt;span&gt;Attributes&lt;/span&gt;&lt;/h4&gt;       &lt;slot name=\"attributes\"&gt;&lt;p&gt;None&lt;/p&gt;&lt;/slot&gt;     &lt;/div&gt;   &lt;/details&gt;   &lt;hr&gt; &lt;/template&gt;</code></pre><p>That <code>&lt;template&gt;</code> element has several features:</p> <ul> <li>The <code>&lt;template&gt;</code> has a&nbsp;<code>&lt;style&gt;</code> element with a set of CSS styles that are scoped just to the document fragment the&nbsp; <code>&lt;template&gt;</code> creates.</li> <li>The&nbsp;<code>&lt;template&gt;</code> uses <code>&lt;slot&gt;</code> and its <code>name</code> attribute to make three named slots:   <ul> <li><code>&lt;slot name=\"element-name\"&gt;</code></li> <li><code>&lt;slot name=\"description\"&gt;</code></li> <li><code>&lt;slot name=\"attributes\"&gt;</code></li> </ul> </li> <li>The <code>&lt;template&gt;</code> wraps the&nbsp;named slots in a <code>&lt;details&gt;</code> element.</li> </ul> <h4>Create a new &lt;element-details&gt; element from a &lt;template&gt; element</h4> <p>Next, let’s create a new custom element named <strong><code>&lt;element-details&gt;</code></strong> and use <code>Element.attachShadow</code> to attach to it, as its shadow root, that document fragment we created with our <code>&lt;template&gt;</code> element above.</p> <pre><code>customElements.define('element-details',   class extends HTMLElement {     constructor() {       super();       var template = document         .getElementById('element-details-template')         .content;       const shadowRoot = this.attachShadow({mode: 'open'})         .appendChild(template.cloneNode(true));   } })</code></pre><h4>Use the &lt;element-details&gt; custom element with named slots</h4> <p>Now let’s take that <strong><code>&lt;element-details</code>&gt;</strong> element and actually use it in our document.</p> <pre><code>&lt;element-details&gt;   &lt;span slot=\"element-name\"&gt;slot&lt;/span&gt;   &lt;span slot=\"description\"&gt;A placeholder inside a web     component that users can fill with their own markup,     with the effect of composing different DOM trees     together.&lt;/span&gt;   &lt;dl slot=\"attributes\"&gt;     &lt;dt&gt;name&lt;/dt&gt;     &lt;dd&gt;The name of the slot.&lt;/dd&gt;   &lt;/dl&gt; &lt;/element-details&gt;  &lt;element-details&gt;   &lt;span slot=\"element-name\"&gt;template&lt;/span&gt;   &lt;span slot=\"description\"&gt;A mechanism for holding client-     side content that is not to be rendered when a page is     loaded but may subsequently be instantiated during     runtime using JavaScript.&lt;/span&gt; &lt;/element-details&gt;</code></pre><p>About that snippet, notice these points:</p> <ul> <li>The snippet has two instances of <strong><code>&lt;element-details&gt;</code></strong> elements which both use the <code>slot</code> attribute to reference the named slots <code>\"element-name\"</code> and <code>\"description\"</code> we put in the&nbsp;<code>&lt;element-details&gt;</code> shadow root .</li> <li>Only the first of those two <strong><code>&lt;element-details&gt;</code></strong> elements references the <code>\"attributes\"</code> named slot. The second <code><strong>&lt;element-details</strong>&gt;</code> element lacks any reference to the <code>\"attributes\"</code> named slot.</li> <li>The first <code>&lt;<strong>element-details&gt;</strong></code> element references the <code>\"attributes\"</code> named slot using a <code>&lt;dl&gt;</code> element with <code>&lt;dt&gt;</code> and <code>&lt;dd&gt;</code> children.</li> </ul> <h4>Add a final bit of style</h4> <p>Finishing touch: A tiny bit more CSS for the&nbsp;<code>&lt;dl&gt;</code>, <code>&lt;dt&gt;</code>, and <code>&lt;dd&gt;</code> elements in our doc.</p> <pre><code>  dl { margin-left: 6px; }   dt { font-weight: bold; color: #217ac0; font-size: 110% }   dt { font-family: Consolas, \"Liberation Mono\", Courier }   dd { margin-left: 16px }</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/slot"
                    ], 
                    "flags": 0, 
                    "guid": "PT5w/5h8+h", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;template&gt;</code>", 
                        "", 
                        "<small>HTML web components element</small><br />is a mechanism for holding client-side <b>content that is not to be rendered</b> when a page is loaded but may subsequently be instantiated during runtime using JavaScript.<div><br /></div><div>While parser does process the  contents of this<strong>&nbsp;</strong>element  while loading the page, it does so only to ensure that those contents  are valid; the element's contents are not rendered, however.</div>", 
                        "", 
                        "<h2>Attributes</h2> <p>This element only includes the global attributes.</p> <h2>Example</h2> <p>First we start with the HTML portion of the example.</p> <pre><code>&lt;table&gt;   &lt;thead&gt;     &lt;tr&gt;       &lt;td&gt;UPC_Code&lt;/td&gt;       &lt;td&gt;Product_Name&lt;/td&gt;     &lt;/tr&gt;   &lt;/thead&gt;   &lt;tbody&gt;     &lt;!-- existing data could optionally be included here --&gt;   &lt;/tbody&gt; &lt;/table&gt;  &lt;template&gt;   &lt;tr&gt;     &lt;td&gt;&lt;/td&gt;     &lt;td&gt;&lt;/td&gt;   &lt;/tr&gt; &lt;/template&gt;</code></pre><p>First,  we have a table into which we will later insert content using  JavaScript code. Then comes the template, which describes the structure  of an HTML fragment representing a single table row.</p> <p>Now that the table has been created and the template defined, we use  JavaScript to insert rows into the table, with each row being  constructed using the template as its basis.</p> <pre><code>// Test to see if the browser supports the HTML template element by checking // for the presence of the template element's content attribute. if ('content' in document.createElement('template')) {    // Instantiate the table with the existing HTML tbody   // and the row with the template   var t = document.querySelector('#productrow'),   td = t.content.querySelectorAll(\"td\");   td[0].textContent = \"1235646565\";   td[1].textContent = \"Stuff\";    // Clone the new row and insert it into the table   var tb = document.querySelector(\"tbody\");   var clone = document.importNode(t.content, true);   tb.appendChild(clone);      // Create a new row   td[0].textContent = \"0384928528\";   td[1].textContent = \"Acme Kidney Beans\";    // Clone the new row and insert it into the table   var clone2 = document.importNode(t.content, true);   tb.appendChild(clone2);  } else {   // Find another way to add the rows to the table because    // the HTML template element is not supported. }</code></pre>", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template"
                    ], 
                    "flags": 0, 
                    "guid": "sdq6y{i)4U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;acronym&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element (use&nbsp;<code>&lt;abbr&gt;</code>)</small><br />indicates an <b>acronym or abbreviation</b><div>removed in HTML5</div>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/acronym"
                    ], 
                    "flags": 0, 
                    "guid": "dt,F8k}}6Y", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;applet&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />identifies the inclusion of a <b>Java applet</b>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/applet"
                    ], 
                    "flags": 0, 
                    "guid": ".R>W5ffV2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;basefont&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />establishes a <b>default font size</b> for a document. Font size then can be varied relative to the base font size using the <code>&lt;font&gt;</code> element", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/basefont"
                    ], 
                    "flags": 0, 
                    "guid": "uhG5x6sB2}", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;big&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>makes the text <em>font size</em> one size bigger (for example, from small to medium, or from large to x-large) up to the browser's maximum font size", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/big"
                    ], 
                    "flags": 0, 
                    "guid": "u6yQqXYwtJ", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;blink&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>cause the enclosed text to flash slowly", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blink"
                    ], 
                    "flags": 0, 
                    "guid": "c)!NX4)s%]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;center&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />is a block-level element that can contain paragraphs and other block-level and inline elements. The entire content of this element is <b>centered horizontally</b> within its containing element (typically, the <code>&lt;body&gt;</code>)", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/center"
                    ], 
                    "flags": 0, 
                    "guid": "u;8gCUyx+;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;command&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>represents a command which the user can invoke", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/command"
                    ], 
                    "flags": 0, 
                    "guid": "KwbtH|7]Wn", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;dir&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>represents a directory, namely a collection of filenames", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dir"
                    ], 
                    "flags": 0, 
                    "guid": "Ie|o1lZ95,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;font&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>defines the font size, color and face for its content", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/font"
                    ], 
                    "flags": 0, 
                    "guid": "Byx_0u5/:U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;frame&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>defines a particular area in which another HTML document can be displayed. A frame should be used within a <code>&lt;frameset&gt;</code>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frame"
                    ], 
                    "flags": 0, 
                    "guid": "MX&UjwH70Z", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;frameset&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>is used to contain <code>&lt;frame&gt;</code> elements", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/frameset"
                    ], 
                    "flags": 0, 
                    "guid": "yg.KLV_>?0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;isindex&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>puts a text field in a page for querying the document", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex"
                    ], 
                    "flags": 0, 
                    "guid": "OGSTK*l%)0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;keygen&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>exists to facilitate generation of key material, and submission of the public key as part of an HTML form. This mechanism is designed for use with Web-based certificate management systems. It is expected this&nbsp;element will be used in an HTML form along with other information needed to construct a certificate request, and that the result of the process will be a signed certificate", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/keygen"
                    ], 
                    "flags": 0, 
                    "guid": "Bc!0&DCD*c", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;listing&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />enclosed HTML <b>not interpreted</b>, shown in <b>monospace</b><i>,&nbsp;</i>should be rendered wide enough to allow&nbsp;<b>132 characters&nbsp;per line</b>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/listing"
                    ], 
                    "flags": 0, 
                    "guid": "k#/:ahE_hh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;marquee&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />is used to insert a <b>scrolling area </b>of text. You can control what happens when the text reaches the edges of its content area using its attributes", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/marquee"
                    ], 
                    "flags": 0, 
                    "guid": "BY^;yl12Vv", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;multicol&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />was an experimental element designed to allow <b>multi-column layouts</b>. It never got any significant traction and is not implemented in any major browsers", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/multicol"
                    ], 
                    "flags": 0, 
                    "guid": "g+.48w*!ob", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;nextid&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br>served to enable the NeXT web designing tool to generate automatic NAME labels for its anchors", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nextid"
                    ], 
                    "flags": 0, 
                    "guid": "f^AGUhVR`.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;noembed&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />is a deprecated and non-standard way to provide alternative, or \"fallback\", <b>content for browsers that do not support&nbsp;<code>&lt;embed&gt;&nbsp;</code></b>or do not support embedded content an author wishes to use", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/noembed"
                    ], 
                    "flags": 0, 
                    "guid": "A3.]>2_Mn.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;plaintext&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />renders everything following the start tag as <b>raw text</b>, without interpreting any HTML. There is no closing tag, since everything after it is considered raw text", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/plaintext"
                    ], 
                    "flags": 0, 
                    "guid": "!U3Sy?UZg", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;spacer&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />allowed insertion of <b>empty spaces</b> on pages. It was devised by Netscape to accomplish the same effect as a single-pixel layout image, which was something web designers used to use to add white spaces to web pages without actually using an image. However, this element&nbsp;is no longer supported by any major browser and the same effects can now be achieved using simple CSS.", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/spacer"
                    ], 
                    "flags": 0, 
                    "guid": "H/&j5QlsSs", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;strike&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />places a <b>strikethrough</b> (horizontal line) over text", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/strike"
                    ], 
                    "flags": 0, 
                    "guid": "z~7Pd/>`b9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;tt&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />produces an inline element displayed in the browser's default monotype font. This element was intended to style text as it would display on a <b>fixed width display, such as a teletype</b>. It probably is more common to display fixed width type using the <code>&lt;code&gt;</code> element", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tt"
                    ], 
                    "flags": 0, 
                    "guid": "sqDjrYcx3h", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "HTML element <code>&lt;xmp&gt;</code>", 
                        "", 
                        "<small><b>Obsolete</b> HTML element</small><br />enclosed HTML<b> not interpreted</b>, shown in <b>monospace</b>,&nbsp;should be rendered wide enough to allow <b>80 characters per line</b>", 
                        "", 
                        "", 
                        "reverse", 
                        "", 
                        "https://developer.mozilla.org/en-US/docs/Web/HTML/Element/xmp"
                    ], 
                    "flags": 0, 
                    "guid": "h]rN&P,VT`", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "HTML"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⌘</code> (command)", 
                        "symbol", 
                        "<code>&amp;#x2318;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pWltz<s;Rs", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⌥</code> (option)", 
                        "symbol", 
                        "<code>&amp;#x2325;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D&>qaQ*|>j", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⇧</code> (shift)", 
                        "symbol", 
                        "<code>&amp;#x21e7;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z=:iWK2aSI", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⎋</code> (escape)", 
                        "symbol", 
                        "<code>&amp;#x238b;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wkCttCDV!l", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⇪</code> (caps lock)", 
                        "symbol", 
                        "<code>&amp;#x21ea;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gO6@&,$j,L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⏎</code> (return)", 
                        "symbol", 
                        "<code>&amp;#x23ce;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d<On,X~e)p", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⌫</code> (delete)", 
                        "symbol", 
                        "<code>&amp;#x232b;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lkD/Q+sm8U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⇥</code> (tab)", 
                        "symbol", 
                        "<code>&amp;#x21e5;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oo)&Dxv~$^", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>⌃</code> (control/up arrow)", 
                        "symbol", 
                        "<code>&amp;#x2303;</code>", 
                        "HTML Unicode escape", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cl313}^dkp", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }
            ]
        }
    ], 
    "crowdanki_uuid": "5426a6cc-35b7-11e7-ac96-2c56dc924912", 
    "deck_config_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
    "deck_configurations": [
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "54261142-35b7-11e7-8db2-2c56dc924912", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 1, 
                "leechFails": 10, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Default", 
            "new": {
                "bury": true, 
                "delays": [
                    10, 
                    120
                ], 
                "initialFactor": 2500, 
                "ints": [
                    2, 
                    20
                ], 
                "order": 1, 
                "perDay": 100, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 2.5, 
                "fuzz": 0.05, 
                "ivlFct": 1.5, 
                "maxIvl": 3650, 
                "minSpace": 1, 
                "perDay": 1000
            }, 
            "timer": 0
        }
    ], 
    "desc": "", 
    "dyn": 0, 
    "extendNew": 100, 
    "extendRev": 50, 
    "media_files": [
        "1280px-US-ASCII_code_chart.png", 
        "Screen Shot 2017-09-17 at 10.54.01.png", 
        "ANSI_layout_basic.svg", 
        "Screen-Shot-2015-10-20-at-12g-482x240.jpg", 
        "TTY33ASR.jpg", 
        "ISO_layout_basic.svg", 
        "Screen Shot 2017-09-17 at 12.25.29.png"
    ], 
    "mid": "1475043240989", 
    "name": "General::Technical", 
    "note_models": [
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "css": "@import url(\"dark4.css\");\narticle > section:first-child {text-align:left; display:inline-block;line-height:1em; white-space: nowrap;}\narticle > section:first-child code { white-space: nowrap;}\nsection {width: 100%;}\n.front #description, .front #synopsis, .front #examples { visibility:hidden; }\n</style><script>\n\nvar body = document.getElementsByTagName(\"body\")[0];\n// body.insertAdjacentHTML(\"beforeend\", '<div style=\"white-space:pre;position:fixed;top:0;left:0;width:100%;height:100%;z-index:999;text-align:left;font-size:12px;color:#fff;background-color: rgba(0,0,0,0.50);font-family:Monaco,monospace;\" id=\"debug\">DEBUG</div>');\nvar printDimensions = function(pre, extra){\n\tif( ! document.getElementById(\"debug\") ) return;\n\tdocument.getElementById(\"debug\").insertAdjacentHTML(\"beforeend\", \"<br>\" + pre\n\t\t+ \" W:\" + window.innerWidth + \"x\" + window.innerHeight\n\t\t+ \" O:\" + body.offsetWidth + \"x\" + body.offsetHeight\n\t\t+ \" C:\" + body.clientWidth + \"x\" + body.clientHeight\n\t\t+ \" S:\" + body.scrollWidth + \"x\" + body.scrollHeight\n\t\t+ extra\n\t);\n}\n\nfunction setStyle(selector, propName, propVal) { [].forEach.call(document.querySelectorAll(selector), function (el) { el.style[propName] = propVal; }); }\n\nfunction currentDeckMessages() {\n\n\tvar article = document.getElementsByTagName(\"article\")[0];\n\tsetStyle('.subdeck', 'display', 'none');\n\tvar subdeck = article.dataset.deck.replace(/^General(?:::Language)?::((?:(?!::).)*)(?:::.*)?/, '$1');\n\tif(subdeck === ''){ setStyle('.subdeck.Other', 'display', ''); }\n\telse { setStyle('.subdeck.' + subdeck, 'display', ''); }\n\n\tvar section = document.getElementsByTagName(\"section\");\n\tfor(var i = 0; i < section.length; i++){\n\t\t// replace hyphens not inside tags (properties) with nonbreaking hyphens\n\t\tsection[i].innerHTML = section[i].innerHTML.replace(/-(?![^<]*>)/g, '\\u2011'); // changed /-(?![^<]*>|[^<>]*<\\/)/g because targeting within tags too\n\t}\n\n\tvar body = document.getElementsByTagName(\"body\")[0];\n\tvar article = document.getElementsByTagName(\"article\")[0];\n\n\t// var bodyFontSize = parseInt(document.defaultView.getComputedStyle(body).getPropertyValue('font-size'));\n\tvar bodyFontSizeMin = 25;\n\tvar bodyFontSizeMax = 725;\n\tvar bodyFontSize = bodyFontSizeMin;\n\n\tfunction setBodyFontSize(int){ body.style.fontSize = int + 'px'; }\n\n\tvar step = 350;\n\t// while( step >= 1 ){\n\twhile( step >= 0.1 ){\n\t\tdo {\n\t\t\tbodyFontSize += step;\n\t\t\tsetBodyFontSize(bodyFontSize);\n\t\t\tprintDimensions(\"i \", \" fS:\" + bodyFontSize + \" step:\" + step);\n\t\t} while( window.innerWidth >= body.scrollWidth && window.innerHeight >= body.scrollHeight && bodyFontSize <= bodyFontSizeMax && bodyFontSize >= bodyFontSizeMin );\n\t\tbodyFontSize -= step+3;\n\t\tif( bodyFontSize < bodyFontSizeMin ){ bodyFontSize = bodyFontSizeMin; }\n\t\t// step = Math.floor(step / 4);\n\t\tstep = step / 4;\n\t\tsetBodyFontSize(bodyFontSizeMin);\n\t\tsetBodyFontSize(bodyFontSize);\n\t\tprintDimensions(\"o \", \" fS:\" + bodyFontSize);\n\t}\n\n}\n\n// setInterval(function(){ if(window.innerHeight < body.scrollHeight || window.innerHeight-50 > body.clientHeight){ currentDeckMessages(); } }, 500);\n// setInterval(function(){ currentDeckMessages();  }, 500);\n\nwindow.onclick = window.onresize = resize;\nfunction resize() { if(window.innerHeight < body.scrollHeight || window.innerHeight-50 > body.clientHeight){ currentDeckMessages(); } }\n\n</script><style>\n", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "sort name", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "command", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "extra type", 
                    "ord": 2, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "short option", 
                    "ord": 3, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "long option", 
                    "ord": 4, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "extra", 
                    "ord": 5, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "synopsis", 
                    "ord": 6, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "description", 
                    "ord": 7, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "examples", 
                    "ord": 8, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "command only", 
                    "ord": 9, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[18pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}", 
            "name": "Shell", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        7, 
                        9
                    ]
                ], 
                [
                    1, 
                    "all", 
                    [
                        3, 
                        7
                    ]
                ], 
                [
                    2, 
                    "all", 
                    [
                        4, 
                        7
                    ]
                ], 
                [
                    3, 
                    "all", 
                    [
                        5, 
                        7
                    ]
                ], 
                [
                    4, 
                    "all", 
                    [
                        3, 
                        5
                    ]
                ], 
                [
                    5, 
                    "all", 
                    [
                        4, 
                        5
                    ]
                ], 
                [
                    6, 
                    "all", 
                    [
                        3, 
                        4
                    ]
                ], 
                [
                    7, 
                    "all", 
                    [
                        7, 
                        9
                    ]
                ], 
                [
                    8, 
                    "all", 
                    [
                        3
                    ]
                ], 
                [
                    9, 
                    "all", 
                    [
                        4, 
                        7
                    ]
                ], 
                [
                    10, 
                    "all", 
                    [
                        5, 
                        7
                    ]
                ], 
                [
                    11, 
                    "all", 
                    [
                        3, 
                        5
                    ]
                ], 
                [
                    12, 
                    "all", 
                    [
                        4, 
                        5
                    ]
                ], 
                [
                    13, 
                    "all", 
                    [
                        3, 
                        4
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "curl"
            ], 
            "tmpls": [
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<mark><code>{{command}}</code></mark>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n\n\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc cmd", 
                    "ord": 0, 
                    "qfmt": "{{#description}}\n{{#command only}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<var class=\"q\">command</var>\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/command only}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{short option}}</mark></code>\n{{#long option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> <em>{{long option}}</em></code>{{/long option}}\n{{#extra}}<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small> <em><code>{{extra}}</code></em>{{/extra}}\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc -", 
                    "ord": 1, 
                    "qfmt": "{{#description}}\n{{#short option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<code><em>{{command}}</em> </code><small><var class=\"q\">{{#long option}}short {{/long option}}option</var></small>\n{{#long option}}<br><em><code>&nbsp;</code></em>{{/long option}}\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{long option}}</mark></code>\n{{#short option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> <em>{{short option}}</em></code>{{/short option}}\n{{#extra}}<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small> <em><code>{{extra}}</code></em>{{/extra}}\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc --", 
                    "ord": 2, 
                    "qfmt": "{{#description}}\n{{#long option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<code><em>{{command}}</em> </code><var class=\"q\">{{#short option}}long {{/short option}}option</var>\n{{#short option}}<br><em><code>&nbsp;</code></em>{{/short option}}\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<em>\n<code>{{command}}</code>\n{{#short option}}<code>{{short option}}</code>{{/short option}}\n{{^short option}}{{#long option}}<code><small>{{long option}}</small></code>{{/long option}}{{/short option}}\n</em>\n{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc extra", 
                    "ord": 3, 
                    "qfmt": "{{#description}}\n{{#extra}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<em>\n<code>{{command}}</code>\n{{#short option}}<code>{{short option}}</code>{{/short option}}\n{{^short option}}{{#long option}}<code>{{long option}}</code>{{/long option}}{{/short option}}\n</em>\n<var class=\"q\">{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</var>\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/extra}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n{{#command}}<mark><code>{{command}}</code></mark>{{/command}}\n\n<code><mark>{{short option}}</mark></code>\n=\n\n<cite><code>{{extra}}</code></cite>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "- extra", 
                    "ord": 4, 
                    "qfmt": "{{#extra}}\n{{#short option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n{{#command}}<mark><code>{{command}}</code></mark>{{/command}}\n\n<code><mark>{{short option}}</mark></code>\n=\n<var class=\"q\">{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</var>\n\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/extra}}"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n{{#command}}<mark><code>{{command}}</code></mark>{{/command}}\n\n<code><mark>{{long option}}</mark></code>\n=\n\n<cite><code>{{extra}}</code></cite>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "-- extra", 
                    "ord": 5, 
                    "qfmt": "{{#extra}}\n{{#long option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n{{#command}}<mark><code>{{command}}</code></mark>{{/command}}\n\n<code><mark>{{long option}}</mark></code>\n=\n<var class=\"q\">{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</var>\n\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{short option}}</mark></code>\n{{#long option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> <cite>{{long option}}</cite></code>{{/long option}}\n{{#extra}}<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small> <em><code>{{extra}}</code></em>{{/extra}}\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "- --", 
                    "ord": 6, 
                    "qfmt": "{{#long option}}\n{{#short option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{short option}}</mark></code>\n<br><code><em style=\"visibility:hidden;\">{{command}}</em> </code><small><var class=\"q\">long option</var></small>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/long option}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<mark><code>{{command}}</code></mark>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "cmd desc", 
                    "ord": 7, 
                    "qfmt": "{{#description}}\n{{#command only}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<mark><code>{{command}}</code></mark>\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/command only}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{short option}}</mark></code>\n{{#long option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> </code><em><code>{{long option}}</code></em>{{/long option}}\n{{#extra}}<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small> <em><code>{{extra}}</code></em>{{/extra}}\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "- desc", 
                    "ord": 8, 
                    "qfmt": "{{#description}}\n{{#short option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{short option}}</mark></code>\n{{#long option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> </code><em><code>&nbsp;</code></em>{{/long option}}\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{long option}}</mark></code>\n{{#short option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> </code><em><code>{{short option}}</code></em>{{/short option}}\n{{#extra}}<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small> <em><code>{{extra}}</code></em>{{/extra}}\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "-- desc", 
                    "ord": 9, 
                    "qfmt": "{{#description}}\n{{#long option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{long option}}</mark></code>\n{{#short option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> </code><em><code>&nbsp;</code></em>{{/short option}}\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<em>\n<code>{{command}}</code>\n{{#short option}}<code>{{short option}}</code>{{/short option}}\n{{^short option}}{{#long option}}<code>{{long option}}</code>{{/long option}}{{/short option}}\n</em>\n<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small>\n<mark><code>{{extra}}</code></mark>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "extra desc", 
                    "ord": 10, 
                    "qfmt": "{{#description}}\n{{#extra}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<em>\n<code>{{command}}</code>\n{{#short option}}<code>{{short option}}</code>{{/short option}}\n{{^short option}}{{#long option}}<code>{{long option}}</code>{{/long option}}{{/short option}}\n</em>\n<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</small>\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/extra}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<mark><code>{{extra}}</code></mark>\n<small>is {{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}} of</small>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<cite><code>{{short option}}</code></cite>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "extra -", 
                    "ord": 11, 
                    "qfmt": "{{#extra}}\n{{#short option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<mark><code>{{extra}}</code></mark>\n<small>\nis {{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}} of\n<var class=\"q\">{{#long option}}short{{/long option}} option</var>\n</small>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<mark><code>{{extra}}</code></mark>\n<small>is {{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}} of</small>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<cite><code>{{long option}}</code></cite>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "extra --", 
                    "ord": 12, 
                    "qfmt": "{{#extra}}\n{{#long option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<mark><code>{{extra}}</code></mark>\n<small>\nis {{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}} of\n<var class=\"q\">{{#short option}}long{{/short option}} option</var>\n</small>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{long option}}</mark></code>\n{{#short option}}<br><code><em style=\"visibility:hidden;\">{{command}}</em> <cite>{{short option}}</cite></code>{{/short option}}\n{{#extra}}<small>{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}<br></small> <em><code>{{extra}}</code></em>{{/extra}}\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "-- -", 
                    "ord": 13, 
                    "qfmt": "{{#long option}}\n{{#short option}}\n<article data-deck=\"{{Deck}}\" class=\"front\">\n\n<section>\n<code><em>{{command}}</em> <mark>{{long option}}</mark></code>\n<br><code><em style=\"visibility:hidden;\">{{command}}</em> </code><var class=\"q\">short option</var>\n</section>\n\n{{#description}}<section id=\"description\"><blockquote>{{description}}</blockquote></section>{{/description}}\n{{#synopsis}}<section id=\"synopsis\"><blockquote><code>{{synopsis}}</code></blockquote></section>{{/synopsis}}\n{{#examples}}\n<section id=\"examples\">\n<details><summary></summary>\n<blockquote>{{examples}}</blockquote>\n</details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/long option}}\n"
                }
            ], 
            "type": 0, 
            "vers": []
        }, 
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "css": "@import url(\"dark4.css\");\nmark { font-weight: bold; }\n.front.Forward .legend.backtype, .front.Reverse .legend.fronttype { visibility: hidden; }\narticle img { max-height: 70%; max-width: 100%; width:auto; }\ndetails { color: inherit; }\n</style><script>\n\nvar body = document.getElementsByTagName(\"body\")[0];\n// body.insertAdjacentHTML(\"beforeend\", '<div style=\"white-space:pre;position:fixed;top:0;left:0;width:100%;height:100%;z-index:999;text-align:left;font-size:12px;color:#fff;background-color: rgba(0,0,0,0.50);font-family:Monaco,monospace;\" id=\"debug\">DEBUG</div>');\nvar printDimensions = function(pre, extra){\n\tif( ! document.getElementById(\"debug\") ) return;\n\tdocument.getElementById(\"debug\").insertAdjacentHTML(\"beforeend\", \"<br>\" + pre\n\t\t+ \" W:\" + window.innerWidth + \"x\" + window.innerHeight\n\t\t+ \" O:\" + body.offsetWidth + \"x\" + body.offsetHeight\n\t\t+ \" C:\" + body.clientWidth + \"x\" + body.clientHeight\n\t\t+ \" S:\" + body.scrollWidth + \"x\" + body.scrollHeight\n\t\t+ extra\n\t);\n}\n\nfunction setStyle(selector, propName, propVal) { [].forEach.call(document.querySelectorAll(selector), function (el) { el.style[propName] = propVal; }); }\n\nfunction currentDeckMessages() {\n\n\tvar article = document.getElementsByTagName(\"article\")[0];\n\tsetStyle('.subdeck', 'display', 'none');\n\tvar subdeck = article.dataset.deck.replace(/^General(?:::Language)?::((?:(?!::).)*)(?:::.*)?/, '$1');\n\tif(subdeck === ''){ setStyle('.subdeck.Other', 'display', ''); }\n\telse { setStyle('.subdeck.' + subdeck, 'display', ''); }\n\n\tvar section = document.getElementsByTagName(\"section\");\n\tfor(var i = 0; i < section.length; i++){\n\t\t// replace hyphens not inside tags (properties) with nonbreaking hyphens\n\t\tsection[i].innerHTML = section[i].innerHTML.replace(/-(?![^<]*>|[^<>]*<\\/)/g, '\\u2011');\n\t}\n\n\tvar body = document.getElementsByTagName(\"body\")[0];\n\tvar article = document.getElementsByTagName(\"article\")[0];\n\n\t// var bodyFontSize = parseInt(document.defaultView.getComputedStyle(body).getPropertyValue('font-size'));\n\tvar bodyFontSizeMin = 35;\n\tvar bodyFontSizeMax = 725;\n\tvar bodyFontSize = bodyFontSizeMin;\n\n\tfunction setBodyFontSize(int){ body.style.fontSize = int + 'px'; }\n\n\tvar step = 350;\n\t// while( step >= 1 ){\n\twhile( step >= 0.1 ){\n\t\tdo {\n\t\t\tbodyFontSize += step;\n\t\t\tsetBodyFontSize(bodyFontSize);\n\t\t\tprintDimensions(\"i \", \" fS:\" + bodyFontSize + \" step:\" + step);\n\t\t} while( window.innerWidth >= body.scrollWidth && window.innerHeight >= body.scrollHeight && bodyFontSize <= bodyFontSizeMax && bodyFontSize >= bodyFontSizeMin );\n\t\tbodyFontSize -= step+5;\n\t\tif( bodyFontSize < bodyFontSizeMin ){ bodyFontSize = bodyFontSizeMin; }\n\t\t// step = Math.floor(step / 4);\n\t\tstep = step / 4;\n\t\tsetBodyFontSize(bodyFontSizeMin);\n\t\tsetBodyFontSize(bodyFontSize);\n\t\tprintDimensions(\"o \", \" fS:\" + bodyFontSize);\n\t}\n\n}\n\nfunction playSound() {\n\tvar article = document.getElementsByTagName(\"article\")[0];\n\tvar subdeck = article.dataset.deck.replace(/^General(?:::Language)?::((?:(?!::).)*)(?:::.*)?/, '$1');\n\tif(subdeck === 'English'){\n\t\tvar a = new Audio(document.getElementById(\"audio\"));\n\t\ta.play();\n\t}\n}\n\n// setInterval(function(){ if(window.innerHeight < body.scrollHeight || window.innerHeight-50 > body.clientHeight){ currentDeckMessages(); } }, 500);\n// setInterval(function(){ currentDeckMessages();  }, 500);\n\nfunction resize(e) { if(window.innerHeight < body.scrollHeight || window.innerHeight-50 > body.clientHeight){ currentDeckMessages(); } }\n//window.onclickE = window.onresize = resize;\nwindow.onresize = resize;\n\n\n</script><style>", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Front", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "FrontType", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Back", 
                    "ord": 2, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "BackType", 
                    "ord": 3, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Other", 
                    "ord": 4, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "ShowReversed", 
                    "ord": 5, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "AlternateFront", 
                    "ord": 6, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Source", 
                    "ord": 7, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[18pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}", 
            "name": "CNGBasic", 
            "req": [
                [
                    0, 
                    "any", 
                    [
                        0, 
                        1, 
                        3, 
                        6
                    ]
                ], 
                [
                    1, 
                    "all", 
                    [
                        5
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "curl"
            ], 
            "tmpls": [
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back {{Type}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n{{#FrontType}}<div class=\"legend fronttype\">{{FrontType}}</div>{{/FrontType}}\n<span id=\"title\"><mark>{{#AlternateFront}}{{AlternateFront}}{{/AlternateFront}}{{^AlternateFront}}{{Front}}{{/AlternateFront}}</mark></span>\n</section>\n\n<section>\n{{#BackType}}<div class=\"legend backtype\">{{BackType}}</div>{{/BackType}}\n<blockquote>{{Back}}</blockquote>\n</section>\n\n{{#Other}}\n<section>\n<blockquote class=\"subdeck Other Science Politics Culture Geography Math Personal Chinese\"><var>{{Other}}</var></blockquote>\n<details zopen=\"open\" class=\"subdeck Technical Spanish Python Science Math Politics\">\n<summary>info</summary>\n<blockquote>{{Other}}</blockquote>\n</details>\n</section>\n{{/Other}}\n\n</article>\n<script>currentDeckMessages();playSound();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "Forward", 
                    "ord": 0, 
                    "qfmt": "<article data-deck=\"{{Deck}}\" class=\"front {{Type}} {{Card}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a id=\"audio\" href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n<div class=\"legend fronttype\">{{#FrontType}}{{FrontType}}{{/FrontType}}{{^FrontType}}{{Subdeck}}{{/FrontType}}</div>\n<mark id=\"title\">{{#AlternateFront}}{{AlternateFront}}{{/AlternateFront}}{{^AlternateFront}}{{Front}}{{/AlternateFront}}</mark>\n</section>\n\n<section>\n<div class=\"legend backtype\">{{#BackType}}{{BackType}}{{/BackType}}{{^BackType}}{{Deck}}{{/BackType}}</div>\n<blockquote>\n{{#BackType}}<var class=\"q\">{{BackType}}</var>{{/BackType}}\n{{^BackType}}\n{{#FrontType}}\n<var class=\"q\">meaning</var>\n{{/FrontType}}\n{{^FrontType}}\n<var class=\"q subdeck English\">definition</var>\n<var class=\"q subdeck Spanish\">en inglés</var>\n{{/FrontType}}\n{{/BackType}}\n</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();playSound();</script>\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\" class=\"back {{Type}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n{{#FrontType}}<div class=\"legend fronttype\">{{FrontType}}</div>{{/FrontType}}\n<mark id=\"title\">{{#AlternateFront}}{{AlternateFront}}{{/AlternateFront}}{{^AlternateFront}}{{Front}}{{/AlternateFront}}</mark>\n</section>\n\n<section>\n{{#BackType}}<div class=\"legend backtype\">{{BackType}}</div>{{/BackType}}\n<blockquote>{{Back}}</blockquote>\n</section>\n\n{{#Other}}\n<section>\n<blockquote class=\"subdeck Other Science Politics Culture Geography Math Personal Chinese\"><var>{{Other}}</var></blockquote>\n<details zopen=\"open\" class=\"subdeck Technical Spanish Python Science Math Politics\">\n<summary>info</summary>\n<blockquote>{{Other}}</blockquote>\n</details>\n</section>\n{{/Other}}\n\n</article>\n<script>currentDeckMessages();playSound();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "Reverse", 
                    "ord": 1, 
                    "qfmt": "{{#ShowReversed}}\n<article data-deck=\"{{Deck}}\" class=\"front {{Type}} {{Card}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n\n<div class=\"legend fronttype\">{{#FrontType}}{{FrontType}}{{/FrontType}}{{^FrontType}}{{Subdeck}}{{/FrontType}}</div>\n<mark id=\"title\">\n{{#FrontType}}<var class=\"q\">{{FrontType}}</var>{{/FrontType}}\n{{^FrontType}}\n<var class=\"q subdeck Other Technical Politics Science\">{{Subdeck}} meaning</var>\n<var class=\"q subdeck English\">word or phrase</var>\n<var class=\"q subdeck Spanish\">en español</var>\n{{/FrontType}}\n</mark>\n\n</section>\n\n<section>\n{{#BackType}}<div class=\"legend backtype\">{{BackType}}</div>{{/BackType}}\n<blockquote>\n{{Back}}\n</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/ShowReversed}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }, 
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}\n", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Purpose", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Command", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Extra", 
                    "ord": 2, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Source", 
                    "ord": 3, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n", 
            "name": "Command line", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "Linux", 
                "bash", 
                "command", 
                "tar"
            ], 
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n<br>\n{{Extra}}\n<br>\n<a href=\"{{text:Source}}\">{{Source}}</a>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "TypeCard", 
                    "ord": 0, 
                    "qfmt": "{{Purpose}}\n<br>\n{{type:Command}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }
    ], 
    "notes": [
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Find version available on Homebrew", 
                "", 
                "<div><pre>brew search <i>keyword</i>\nbrew info <i>result</i></pre></div>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "nVw^)xx&{-", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>cmd: hex to decimal</div>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">echo</span> <span style=\"color: #6ab825; font-weight: bold\">$((</span><span style=\"color: #3677a9\">0</span>x15a<span style=\"color: #6ab825; font-weight: bold\">))</span>\n<span style=\"color: #24909d\">printf</span> <span style=\"color: #ed9d13\">'%d\\n'</span> 0x15a\nperl -e <span style=\"color: #ed9d13\">'printf (\"%d\\n\", 0x15a)'</span>\n<span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">'ibase=16;obase=A;15A'</span> <span style=\"color: #d0d0d0\">|</span> bc\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTY3ODIwNzEsICJpZCI6ICIxNDg5MzUwNjMzMzMwLTAwMSIsICJtZCI6ICIgICAgOjo6c2hlbGxcbiAgICBlY2hvICQoKDB4MTVhKSlcbiAgICBwcmludGYgJmFwb3M7JWRcXG4mYXBvczsgMHgxNWFcbiAgICBwZXJsIC1lICZhcG9zO3ByaW50ZiAoJnF1b3Q7JWRcXG4mcXVvdDssIDB4MTVhKSZhcG9zO1xuICAgIGVjaG8gJmFwb3M7aWJhc2U9MTY7b2Jhc2U9QTsxNUEmYXBvczsgfCBiY1xuIn0=---->", 
                "", 
                "Note&nbsp;<code>ibase</code>&nbsp;and&nbsp;<code>obase</code>&nbsp;specify the input and the output notation respectively. By default, the notation for both is decimal unless you change it using&nbsp;<code>ibase</code>&nbsp;or&nbsp;<code>obase</code>. Because you change the notation to hex using&nbsp;<code>ibase</code>, your&nbsp;<code>obase</code>&nbsp;needs to be specified in hex (<code>A</code>&nbsp;in hex =&nbsp;<code>10</code>&nbsp;in decimal). The input number (<code>15A</code>) needs to be in UPPER case.&nbsp;<code>15a</code>&nbsp;will give you a parse error.", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l!*NGvAC9L", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "lscpu", 
                "lscpu", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "<div>Gathers CPU architecture information like number of CPUs, threads, cores, sockets, NUMA nodes, information about&nbsp;CPU caches, CPU family, model, bogoMIPS, byte order and stepping from <code>sysfs</code> and <code>/proc/cpuinfo</code>, &nbsp;and &nbsp;prints &nbsp;it &nbsp;in &nbsp;a&nbsp;human-readable format. &nbsp;It supports both online and offline CPUs. &nbsp;It can also print out in a parsable format, including how different caches are shared by different CPUs, which can be fed to other programs.</div>", 
                "", 
                "y"
            ], 
            "flags": 0, 
            "guid": "Cim3wI+j=}", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "nproc", 
                "nproc", 
                "", 
                "", 
                "", 
                "", 
                "", 
                "print the number of processing units available", 
                "", 
                "y"
            ], 
            "flags": 0, 
            "guid": "AL0Y,j&8[@", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": [
                "command"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Simulate cron environment in script", 
                "", 
                "<p>Add to crontab:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">* * * * * env &gt; ~/cronenv\n</pre></div>\n<p>If adding to global <code>/etc/crontab</code>, need username too:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">* * * * * root env &gt; ~/cronenv\n</pre></div>\n<p>After it runs, do this:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">env - <span style=\"color: #ed9d13\">`</span>cat ~/cronenv<span style=\"color: #ed9d13\">`</span> /bin/sh\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU5NjE2MjQsICJpZCI6ICIxNDkwMDM5Mzc3NTU2LTAwMSIsICJtZCI6ICJBZGQgdG8gY3JvbnRhYjpcbiAgXG4gICAgOjo6c2hlbGxcbiAgICAqICogKiAqICogZW52ICZndDsgfi9jcm9uZW52XG4gIFxuSWYgYWRkaW5nIHRvIGdsb2JhbCBgL2V0Yy9jcm9udGFiYCwgbmVlZCB1c2VybmFtZSB0b286XG4gIFxuICAgIDo6OnNoZWxsXG4gICAgKiAqICogKiAqIHJvb3QgZW52ICZndDsgfi9jcm9uZW52XG4gIFxuQWZ0ZXIgaXQgcnVucywgZG8gdGhpczpcbiAgXG4gICAgOjo6c2hlbGxcbiAgICBlbnYgLSBgY2F0IH4vY3JvbmVudmAgL2Jpbi9zaFxuICBcbiAgXG4ifQ==---->", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "p3L$WG=&Q3", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Typical default cron environment", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">HOME <span style=\"color: #999999;font-style: italic\"># user's home directory</span>\nLOGNAME <span style=\"color: #999999; font-style: italic\"># user's login</span>\n<span style=\"color: #40ffff\">PATH</span><span style=\"color: #d0d0d0\">=</span>/usr/bin:/usr/sbin:. <span style=\"color: #999999; font-style: italic\"># usually no longer . for sec reasons</span>\n<span style=\"color: #40ffff\">SHELL</span><span style=\"color: #d0d0d0\">=</span>/usr/bin/sh\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY0MDQ3NzksICJpZCI6ICIxNDkwMDM5NDYxNjA5LTAwMiIsICJtZCI6ICIgICAgOjo6c2hcbiAgICBIT01FICMgdXNlciZhcG9zO3MgaG9tZSBkaXJlY3RvcnlcbiAgICBMT0dOQU1FICMgdXNlciZhcG9zO3MgbG9naW5cbiAgICBQQVRIPS91c3IvYmluOi91c3Ivc2JpbjouICMgdXN1YWxseSBubyBsb25nZXIgLiBmb3Igc2VjIHJlYXNvbnNcbiAgICBTSEVMTD0vdXNyL2Jpbi9zaFxuIn0=---->", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "q;,hp]SR(h", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "connect forked Git repo to original", 
                "", 
                "<div><code>git remote add upstream https://github.com/ORIG_OWNER/REPO.git</code></div>", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "xd+zWs5_@;", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Sync forked Git repo with original", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">git remote add upstream https://....git\ngit fetch upstream\ngit checkout master\ngit merge upstream/master\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4MjksICJpZCI6ICIxNDkwMjI0MjA1NTA4LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGdpdCByZW1vdGUgYWRkIHVwc3RyZWFtIGh0dHBzOi8vLi4uLmdpdFxuICAgIGdpdCBmZXRjaCB1cHN0cmVhbVxuICAgIGdpdCBjaGVja291dCBtYXN0ZXJcbiAgICBnaXQgbWVyZ2UgdXBzdHJlYW0vbWFzdGVyXG4ifQ==---->", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "k2Ht/!uc?-", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin printf %q", 
                "printf", 
                "extension", 
                "", 
                "", 
                "%q", 
                "", 
                "Causes <code>printf</code> to output the\ncorresponding <var>argument</var> in a format that can be reused as shell input.", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">printf</span> <span style=\"color: #ed9d13\">\"%q\\n\"</span> <span style=\"color: #ed9d13\">\"</span><span style=\"color: #6ab825; font-weight: bold\">$(</span>tput bold<span style=\"color: #6ab825; font-weight: bold\">)</span><span style=\"color: #ed9d13\">\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNjA0NDcsICJpZCI6ICIxNDkwNDE1ODA4NTc5LTAwNyIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHByaW50ZiAmcXVvdDslcVxcbiZxdW90OyAmcXVvdDskKHRwdXQgYm9sZCkmcXVvdDtcbiJ9---->", 
                ""
            ], 
            "flags": 0, 
            "guid": "Hs:N7A-peT", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "how to&nbsp;use find and xargs&nbsp;together", 
                "", 
                "<p>If you use <code>find</code> and <code>xargs</code> together, you should use <code>-print0</code> to separate filenames with a null character rather than new lines. You then need to use <code>-0</code> with xargs.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">david% touch <span style=\"color: #ed9d13\">\"foo bar\"</span>\ndavid% find <span style=\"color: #d0d0d0\">|</span> xargs ls\nls: ./foo: No such file or directory\nls: bar: No such file or directory\ndavid% find -print0 <span style=\"color: #d0d0d0\">|</span> xargs -0 ls\n./foo bar\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU2OTYyNjgsICJpZCI6ICIxNDkwNDE1ODI1OTUyLTAwMSIsICJtZCI6ICJJZiB5b3UgdXNlIGBmaW5kYCBhbmQgYCB4YXJnc2AgdG9nZXRoZXIsIHlvdSBzaG91bGQgdXNlIGAtcHJpbnQwYCB0byBzZXBhcmF0ZSBmaWxlbmFtZXMgd2l0aCBhIG51bGwgY2hhcmFjdGVyIHJhdGhlciB0aGFuIG5ldyBsaW5lcy4gWW91IHRoZW4gbmVlZCB0byB1c2UgYC0wYCB3aXRoIHhhcmdzLlxuICBcbiAgICA6OjpzaFxuICAgIGRhdmlkJSB0b3VjaCAmcXVvdDtmb28gYmFyJnF1b3Q7XG4gICAgZGF2aWQlIGZpbmQgfCB4YXJncyBsc1xuICAgIGxzOiAuL2ZvbzogTm8gc3VjaCBmaWxlIG9yIGRpcmVjdG9yeVxuICAgIGxzOiBiYXI6IE5vIHN1Y2ggZmlsZSBvciBkaXJlY3RvcnlcbiAgICBkYXZpZCUgZmluZCAtcHJpbnQwIHwgeGFyZ3MgLTAgbHNcbiAgICAuL2ZvbyBiYXJcbiJ9---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l^26ZBIZ/N", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "make shell exit on any nonzero return", 
                "", 
                "<pre>set -e\nset -o errexit</pre>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "w6gL;0D_[c", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<p>checking <code>$?</code> if using <code>set -e</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY0ODg0MjQsICJpZCI6ICIxNDkwNDcyNTU5OTc1LTAwMCIsICJtZCI6ICJjaGVja2luZyBgJD9gIGlmIHVzaW5nIGBzZXQgLWVgXG4ifQ==---->", 
                "", 
                "<p>Cannot do:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">command</span>\n<span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">[</span> <span style=\"color: #ed9d13\">\"</span><span style=\"color: #40ffff\">$?</span><span style=\"color: #ed9d13\">\"</span> -ne 0<span style=\"color: #d0d0d0\">];</span> <span style=\"color: #6ab825; font-weight: bold\">then</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"command failed\"</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #24909d\">exit </span>1<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">fi</span>\n</pre></div>\n<p>Alternative 1:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">command</span> <span style=\"color: #d0d0d0\">||</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"command failed\"</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #24909d\">exit </span>1<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #d0d0d0\">}</span>\n</pre></div>\n<p>Alternative 2:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">if</span> ! <span style=\"color: #24909d\">command</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">then</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"command failed\"</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #24909d\">exit </span>1<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">fi</span>\n</pre></div>\n<p>Alternative 3:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">set</span> +e\ncommand1\ncommand2\n<span style=\"color: #24909d\">set</span> -e\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDY0ODg0NTQsICJpZCI6ICIxNDkwNDcyNTU5OTc1LTAwMiIsICJtZCI6ICJDYW5ub3QgZG86XG4gIFxuICAgIDo6OmJhc2hcbiAgICBjb21tYW5kXG4gICAgaWYgWyAmcXVvdDskPyZxdW90OyAtbmUgMF07IHRoZW4gZWNobyAmcXVvdDtjb21tYW5kIGZhaWxlZCZxdW90OzsgZXhpdCAxOyBmaVxuICBcbkFsdGVybmF0aXZlIDE6XG4gIFxuICAgIDo6OmJhc2hcbiAgICBjb21tYW5kIHx8IHsgZWNobyAmcXVvdDtjb21tYW5kIGZhaWxlZCZxdW90OzsgZXhpdCAxOyB9XG4gIFxuQWx0ZXJuYXRpdmUgMjpcbiAgXG4gICAgOjo6YmFzaFxuICAgIGlmICEgY29tbWFuZDsgdGhlbiBlY2hvICZxdW90O2NvbW1hbmQgZmFpbGVkJnF1b3Q7OyBleGl0IDE7IGZpXG4gIFxuQWx0ZXJuYXRpdmUgMzpcbiAgXG4gICAgOjo6YmFzaFxuICAgIHNldCArZVxuICAgIGNvbW1hbmQxXG4gICAgY29tbWFuZDJcbiAgICBzZXQgLWVcbiAgXG4ifQ==---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "zXpl*Z#=a~", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "disable pipe returning code of last command", 
                "", 
                "<code>set -o pipefail</code><div><br /></div><div>Each command in a pipeline is executed in its own subshell. The exit status of a pipeline is the exit status of the last command in the pipeline, unless the<code>&nbsp;pipefail</code>&nbsp;option is enabled. If&nbsp;<code>pipefail</code>&nbsp;is enabled, the pipeline’s return status is the value of the last (rightmost) command to exit with a non-zero status, or zero if all commands exit successfully. If the reserved word&nbsp;<code>!</code>&nbsp;precedes the pipeline, the exit status is the logical negation of the exit status as described above. The shell waits for all commands in the pipeline to terminate before returning a value.</div>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Bq70=PbT}U", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "List all signals you can trap", 
                "", 
                "<code>kill -l</code>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "N.Z`Nq17H_", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "lockfile without race condition", 
                "", 
                "<p>It’s worth pointing out that there is a slight race condition in the above lock example between the time we test for the lockfile and the time we create it. A possible solution to this is to use IO redirection and <code>bash</code>’s <code>noclobber</code> mode, which won’t redirect to an existing file. We can use something similar to:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">(</span> <span style=\"color: #24909d\">set</span> -o noclobber<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"</span><span style=\"color: #40ffff\">$$</span><span style=\"color: #ed9d13\">\"</span> &gt; <span style=\"color: #ed9d13\">\"</span><span style=\"color: #40ffff\">$lockfile</span><span style=\"color: #ed9d13\">\"</span><span style=\"color: #d0d0d0\">)</span> 2&gt; /dev/null<span style=\"color: #d0d0d0\">;</span> \n<span style=\"color: #6ab825; font-weight: bold\">then</span>\n   <span style=\"color: #24909d\">trap</span> <span style=\"color: #ed9d13\">'rm -f \"$lockfile\"; exit $?'</span> INT TERM EXIT\n\n   critical-section\n\n   rm -f <span style=\"color: #ed9d13\">\"</span><span style=\"color: #40ffff\">$lockfile</span><span style=\"color: #ed9d13\">\"</span>\n   <span style=\"color: #24909d\">trap</span> - INT TERM EXIT\n<span style=\"color: #6ab825; font-weight: bold\">else</span>\n   <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"Failed to acquire lockfile: </span><span style=\"color: #40ffff\">$lockfile</span><span style=\"color: #ed9d13\">.\"</span> \n   <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"Held by </span><span style=\"color: #6ab825; font-weight: bold\">$(</span>cat <span style=\"color: #40ffff\">$lockfile</span><span style=\"color: #6ab825; font-weight: bold\">)</span><span style=\"color: #ed9d13\">\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">fi</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU5NjE2NTUsICJpZCI6ICIxNDkwNDcyOTQ4ODIyLTAwMSIsICJtZCI6ICJJdFx1MjAxOXMgd29ydGggcG9pbnRpbmcgb3V0IHRoYXQgdGhlcmUgaXMgYSBzbGlnaHQgcmFjZSBjb25kaXRpb24gaW4gdGhlIGFib3ZlIGxvY2sgZXhhbXBsZSBiZXR3ZWVuIHRoZSB0aW1lIHdlIHRlc3QgZm9yIHRoZSBsb2NrZmlsZSBhbmQgdGhlIHRpbWUgd2UgY3JlYXRlIGl0LiBBIHBvc3NpYmxlIHNvbHV0aW9uIHRvIHRoaXMgaXMgdG8gdXNlIElPIHJlZGlyZWN0aW9uIGFuZCBgYmFzaGBcdTIwMTlzIGBub2Nsb2JiZXJgIG1vZGUsIHdoaWNoIHdvblx1MjAxOXQgcmVkaXJlY3QgdG8gYW4gZXhpc3RpbmcgZmlsZS4gV2UgY2FuIHVzZSBzb21ldGhpbmcgc2ltaWxhciB0bzpcbiAgXG4gIFxuICAgIDo6OmJhc2hcbiAgICBpZiAoIHNldCAtbyBub2Nsb2JiZXI7IGVjaG8gJnF1b3Q7JCQmcXVvdDsgJmd0OyAmcXVvdDskbG9ja2ZpbGUmcXVvdDspIDImZ3Q7IC9kZXYvbnVsbDsgXG4gICAgdGhlblxuICAgICAgIHRyYXAgJmFwb3M7cm0gLWYgJnF1b3Q7JGxvY2tmaWxlJnF1b3Q7OyBleGl0ICQ/JmFwb3M7IElOVCBURVJNIEVYSVRcbiAgXG4gICAgICAgY3JpdGljYWwtc2VjdGlvblxuICBcbiAgICAgICBybSAtZiAmcXVvdDskbG9ja2ZpbGUmcXVvdDtcbiAgICAgICB0cmFwIC0gSU5UIFRFUk0gRVhJVFxuICAgIGVsc2VcbiAgICAgICBlY2hvICZxdW90O0ZhaWxlZCB0byBhY3F1aXJlIGxvY2tmaWxlOiAkbG9ja2ZpbGUuJnF1b3Q7IFxuICAgICAgIGVjaG8gJnF1b3Q7SGVsZCBieSAkKGNhdCAkbG9ja2ZpbGUpJnF1b3Q7XG4gICAgZmlcbiJ9---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l~pK`|d7:/", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "find <code>..</code> in shell history", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">grep <span style=\"color: #ed9d13\">\\\\</span>.<span style=\"color: #ed9d13\">\\\\</span>. ~/.zsh_history\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU0Mjk1NTEsICJpZCI6ICIxNDkwNDczMDkyMjczLTAwMSIsICJtZCI6ICIgICAgOjo6c2hcbiAgICBncmVwIFxcXFwuXFxcXC4gfi8uenNoX2hpc3RvcnlcbiJ9---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "O2G@PiA=YZ", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash for range", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">for</span> i in <span style=\"color: #d0d0d0\">{</span>1..1000<span style=\"color: #d0d0d0\">};</span> <span style=\"color: #6ab825; font-weight: bold\">do</span> <span style=\"color: #24909d\">echo</span> <span style=\"color: #40ffff\">$i</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">done</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTgzNDg4MTYsICJpZCI6ICIxNDkwNDc3MDMzMjM2LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZvciBpIGluIHsxLi4xMDAwfTsgZG8gZWNobyAkaTsgZG9uZVxuIn0=---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "G)B!tZjN-M", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<b>Zsh</b> synonym for <code>true</code>", 
                "", 
                "<code>:</code>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "y}hH5ZlPux", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "change to previous directory", 
                "", 
                "<code>cd -</code>", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "bT*3+$`RVC", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "replace first <code>&lt;old&gt;</code> with <code>&lt;new&gt;</code> in current directory path", 
                "", 
                "<p><code>cd &lt;old&gt; &lt;new&gt;</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4NjgsICJpZCI6ICIxNDkwNDc4OTU0MjMxLTAwMSIsICJtZCI6ICJgY2QgJmx0O29sZCZndDsgJmx0O25ldyZndDtgXG4ifQ==---->", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "f|*.q):-*9", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "directory stack", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">pushd dirname\n...\npopd\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4NDYsICJpZCI6ICIxNDkwNDc5MTc5OTg1LTAwMSIsICJtZCI6ICIgICAgcHVzaGQgZGlybmFtZVxuICAgIC4uLlxuICAgIHBvcGRcbiJ9---->", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "q(UhduSpl1", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "null byte in GNU <code>sed</code>", 
                "", 
                "<p><code>\\x00</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4NTIsICJpZCI6ICIxNDkzNTkzNzM4NTIyLTAwMSIsICJtZCI6ICJgXFx4MDBgXG4ifQ==---->", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "q~n&UC%}4w", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "null byte", 
                "", 
                "<code>\\0</code>", 
                "", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "r6vi$iO+>u", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\a", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\a", 
                "", 
                "alert (bell)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "b{X[$<$7=f", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\b", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\b", 
                "", 
                "backspace", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "yBaKZ1I$#1", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\c", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\c", 
                "", 
                "suppress further output", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "gTc?HdmM[3", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\e", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\e", 
                "", 
                "escape", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Q};n?~mhH,", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\f", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\f", 
                "", 
                "form feed", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "LjF{S!(Q;~", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\n", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\n", 
                "", 
                "new line", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "5^2{^=+eo", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\r", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\r", 
                "", 
                "carriage return", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "qN6Z<}k@nT", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\t", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\t", 
                "", 
                "horizontal tab", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l]CR58wCu:", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\v", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\v", 
                "", 
                "vertical tab", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "O|oSw=)Rz#", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\\\", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\\\", 
                "", 
                "backslash", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "we-8CTX>E=", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\0nnn", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\0<i>nnn</i>", 
                "", 
                "the eight-bit character whose value is the octal value <var>nnn</var>\n(zero to three octal digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "m-#Oh>b(*0", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\xHH", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\x<i>HH</i>", 
                "", 
                "the eight-bit character whose value is the hexadecimal value <var>HH</var>\n(one or two hex digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "h@pC2>#X8s", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Zsh startup files", 
                "", 
                "<p><code>$ZDOTDIR/.zshenv</code><br />\n<code>$ZDOTDIR/.zprofile</code><br />\n<code>$ZDOTDIR/.zshrc</code><br />\n<code>$ZDOTDIR/.zlogin</code><br />\n<code>$ZDOTDIR/.zlogout</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYxNzY2OTcsICJpZCI6ICIxNDkzNTk0NTczMzEyLTAwMSIsICJtZCI6ICJgJFpET1RESVIvLnpzaGVudmBcbmAkWkRPVERJUi8uenByb2ZpbGVgXG5gJFpET1RESVIvLnpzaHJjYFxuYCRaRE9URElSLy56bG9naW5gXG5gJFpET1RESVIvLnpsb2dvdXRgXG4ifQ==---->", 
                "", 
                "<p>If <code>ZDOTDIR</code> is not set, then the value of <code>HOME</code> is used.<br />\n<code>.zshenv</code> is sourced on all invocations of the shell, unless the <code>-f</code> option is set. It should contain commands to set the command search path, plus other important environment variables. <code>.zshenv</code> should not contain commands that produce output or assume the shell is attached to a tty.<br />\n<code>.zshrc</code> is sourced in interactive shells. It should contain commands to set up aliases, functions, options, key bindings, etc.<br />\n<code>.zlogin</code> is sourced in login shells. It should contain commands that should be executed only in login shells. <code>.zlogout</code> is sourced when login shells exit. <code>.zprofile</code> is similar to <code>.zlogin</code>, except that it is sourced before <code>.zshrc</code>. <code>.zprofile</code> is meant as an alternative to <code>.zlogin</code> for ksh fans; the two are not intended to be used together, although this could certainly be done if desired. <code>.zlogin</code> is not the place for alias definitions, options, environment variable settings, etc.; as a general rule, it should not change the shell environment at all. Rather, it should be used to set the terminal type and run a series of external commands (fortune, msgs, etc).</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTYxNzY3MDMsICJpZCI6ICIxNDkzNTk0NTczMzEyLTAwMiIsICJtZCI6ICJJZiBgWkRPVERJUmAgaXMgbm90IHNldCwgdGhlbiB0aGUgdmFsdWUgb2YgYEhPTUVgIGlzIHVzZWQuXG5gLnpzaGVudmAgaXMgc291cmNlZCBvbiBhbGwgaW52b2NhdGlvbnMgb2YgdGhlIHNoZWxsLCB1bmxlc3MgdGhlIGAtZmAgb3B0aW9uIGlzIHNldC4gSXQgc2hvdWxkIGNvbnRhaW4gY29tbWFuZHMgdG8gc2V0IHRoZSBjb21tYW5kIHNlYXJjaCBwYXRoLCBwbHVzIG90aGVyIGltcG9ydGFudCBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIGAuenNoZW52YCBzaG91bGQgbm90IGNvbnRhaW4gY29tbWFuZHMgdGhhdCBwcm9kdWNlIG91dHB1dCBvciBhc3N1bWUgdGhlIHNoZWxsIGlzIGF0dGFjaGVkIHRvIGEgdHR5LlxuYC56c2hyY2AgaXMgc291cmNlZCBpbiBpbnRlcmFjdGl2ZSBzaGVsbHMuIEl0IHNob3VsZCBjb250YWluIGNvbW1hbmRzIHRvIHNldCB1cCBhbGlhc2VzLCBmdW5jdGlvbnMsIG9wdGlvbnMsIGtleSBiaW5kaW5ncywgZXRjLlxuYC56bG9naW5gIGlzIHNvdXJjZWQgaW4gbG9naW4gc2hlbGxzLiBJdCBzaG91bGQgY29udGFpbiBjb21tYW5kcyB0aGF0IHNob3VsZCBiZSBleGVjdXRlZCBvbmx5IGluIGxvZ2luIHNoZWxscy4gYC56bG9nb3V0YCBpcyBzb3VyY2VkIHdoZW4gbG9naW4gc2hlbGxzIGV4aXQuIGAuenByb2ZpbGVgIGlzIHNpbWlsYXIgdG8gYC56bG9naW5gLCBleGNlcHQgdGhhdCBpdCBpcyBzb3VyY2VkIGJlZm9yZSBgLnpzaHJjYC4gYC56cHJvZmlsZWAgaXMgbWVhbnQgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gYC56bG9naW5gIGZvciBrc2ggZmFuczsgdGhlIHR3byBhcmUgbm90IGludGVuZGVkIHRvIGJlIHVzZWQgdG9nZXRoZXIsIGFsdGhvdWdoIHRoaXMgY291bGQgY2VydGFpbmx5IGJlIGRvbmUgaWYgZGVzaXJlZC4gYC56bG9naW5gIGlzIG5vdCB0aGUgcGxhY2UgZm9yIGFsaWFzIGRlZmluaXRpb25zLCBvcHRpb25zLCBlbnZpcm9ubWVudCB2YXJpYWJsZSBzZXR0aW5ncywgZXRjLjsgYXMgYSBnZW5lcmFsIHJ1bGUsIGl0IHNob3VsZCBub3QgY2hhbmdlIHRoZSBzaGVsbCBlbnZpcm9ubWVudCBhdCBhbGwuIFJhdGhlciwgaXQgc2hvdWxkIGJlIHVzZWQgdG8gc2V0IHRoZSB0ZXJtaW5hbCB0eXBlIGFuZCBydW4gYSBzZXJpZXMgb2YgZXh0ZXJuYWwgY29tbWFuZHMgKGZvcnR1bmUsIG1zZ3MsIGV0YykuXG4ifQ==---->", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "fnE@twd-fq", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "unset shell function", 
                "", 
                "<code>unset -f <i>my_function</i></code><br /><div><code>unfunction <i>my_function</i></code>&nbsp;(<b>Zsh</b>)</div>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "B.Xp)DM8&I", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>mv second_file.txt{.new,}</div>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">mv second_file.txt.new second_file.txt\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEwNTY4MTMsICJpZCI6ICIxNDk0MDQwMzUzNTA2LTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIG12IHNlY29uZF9maWxlLnR4dC5uZXcgc2Vjb25kX2ZpbGUudHh0XG4ifQ==---->", 
                "", 
                "", 
                "f", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">mv second_file.txt<span style=\"color: #d0d0d0\">{</span>.new,<span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEwNTY4MDMsICJpZCI6ICIxNDk0MDQwMzUzNTA2LTAwNiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIG12IHNlY29uZF9maWxlLnR4dHsubmV3LH1cbiJ9---->", 
                ""
            ], 
            "flags": 0, 
            "guid": "F@w*_t?yZ+", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin&nbsp;echo -n", 
                "echo", 
                "", 
                "-n", 
                "", 
                "", 
                "", 
                "<div>suppress trailing newline</div>", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "qV}2$PPZ1:", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin&nbsp;echo -e", 
                "echo", 
                "", 
                "-e", 
                "", 
                "", 
                "", 
                "enable interpretation of backslash-escaped characters", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "EwW@=JDZm.", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo -E", 
                "echo", 
                "", 
                "-E", 
                "", 
                "", 
                "", 
                "disable interpretation of backslash-escaped characters", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "FX.&tH$K!|", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash special parameter $?", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$?", 
                "", 
                "Expands to the exit status of the most recently executed foreground pipeline.", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "jG0StMrpt!", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": [
                "command"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$#", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$#", 
                "", 
                "Expands to the number of positional parameters in decimal.", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Dh9Y{8j=<Y", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$*", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$*", 
                "", 
                "<p>Expands to the positional parameters, starting from one. When the expansion is not within double quotes, each positional parameter expands to a separate word. In contexts where it is performed, those words are subject to further word splitting and pathname expansion. When the expansion occurs within double quotes, it expands to a single word with the value of each parameter separated by the first character of the IFS special variable. That is, this parameter is equivalent to <code>\"$1c$2c…\"</code>, where <code>c</code> is the first character of the value of the <code>IFS</code> variable. If <code>IFS</code> is unset, the parameters are separated by spaces. If <code>IFS</code> is null, the parameters are joined without intervening separators.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDk1NjksICJpZCI6ICIxNDk1MjQ5MjE5NTU3LTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwb3NpdGlvbmFsIHBhcmFtZXRlcnMsIHN0YXJ0aW5nIGZyb20gb25lLiBXaGVuIHRoZSBleHBhbnNpb24gaXMgbm90IHdpdGhpbiBkb3VibGUgcXVvdGVzLCBlYWNoIHBvc2l0aW9uYWwgcGFyYW1ldGVyIGV4cGFuZHMgdG8gYSBzZXBhcmF0ZSB3b3JkLiBJbiBjb250ZXh0cyB3aGVyZSBpdCBpcyBwZXJmb3JtZWQsIHRob3NlIHdvcmRzIGFyZSBzdWJqZWN0IHRvIGZ1cnRoZXIgd29yZCBzcGxpdHRpbmcgYW5kIHBhdGhuYW1lIGV4cGFuc2lvbi4gV2hlbiB0aGUgZXhwYW5zaW9uIG9jY3VycyB3aXRoaW4gZG91YmxlIHF1b3RlcywgaXQgZXhwYW5kcyB0byBhIHNpbmdsZSB3b3JkIHdpdGggdGhlIHZhbHVlIG9mIGVhY2ggcGFyYW1ldGVyIHNlcGFyYXRlZCBieSB0aGUgZmlyc3QgY2hhcmFjdGVyIG9mIHRoZSBJRlMgc3BlY2lhbCB2YXJpYWJsZS4gVGhhdCBpcywgYCZxdW90OyQqJnF1b3Q7YCBpcyBlcXVpdmFsZW50IHRvIGAmcXVvdDskMWMkMmNcdTIwMjYmcXVvdDtgLCB3aGVyZSBgY2AgaXMgdGhlIGZpcnN0IGNoYXJhY3RlciBvZiB0aGUgdmFsdWUgb2YgdGhlIGBJRlNgIHZhcmlhYmxlLiBJZiBgSUZTYCBpcyB1bnNldCwgdGhlIHBhcmFtZXRlcnMgYXJlIHNlcGFyYXRlZCBieSBzcGFjZXMuIElmIGBJRlNgIGlzIG51bGwsIHRoZSBwYXJhbWV0ZXJzIGFyZSBqb2luZWQgd2l0aG91dCBpbnRlcnZlbmluZyBzZXBhcmF0b3JzLlxuIn0=---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "m|WFe~DtmV", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$@", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$@", 
                "", 
                "<p>Expands to the positional parameters, starting from one. When the expansion occurs within double quotes, each parameter expands to a separate word. That is, <code>\"...\"</code> is equivalent to <code>\"$1\" \"$2\" …</code>. If the double-quoted expansion occurs within a word, the expansion of the first parameter is joined with the beginning part of the original word, and the expansion of the last parameter is joined with the last part of the original word. When there are no positional parameters, <code>\"...\"</code> and <code>...</code> expand to nothing (i.e., they are removed). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDkzNjksICJpZCI6ICIxNDk1MjQ5MzI0MjE3LTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwb3NpdGlvbmFsIHBhcmFtZXRlcnMsIHN0YXJ0aW5nIGZyb20gb25lLiBXaGVuIHRoZSBleHBhbnNpb24gb2NjdXJzIHdpdGhpbiBkb3VibGUgcXVvdGVzLCBlYWNoIHBhcmFtZXRlciBleHBhbmRzIHRvIGEgc2VwYXJhdGUgd29yZC4gVGhhdCBpcywgYCZxdW90OyRAJnF1b3Q7YCBpcyBlcXVpdmFsZW50IHRvIGAmcXVvdDskMSZxdW90OyAmcXVvdDskMiZxdW90OyBcdTIwMjZgLiBJZiB0aGUgZG91YmxlLXF1b3RlZCBleHBhbnNpb24gb2NjdXJzIHdpdGhpbiBhIHdvcmQsIHRoZSBleHBhbnNpb24gb2YgdGhlIGZpcnN0IHBhcmFtZXRlciBpcyBqb2luZWQgd2l0aCB0aGUgYmVnaW5uaW5nIHBhcnQgb2YgdGhlIG9yaWdpbmFsIHdvcmQsIGFuZCB0aGUgZXhwYW5zaW9uIG9mIHRoZSBsYXN0IHBhcmFtZXRlciBpcyBqb2luZWQgd2l0aCB0aGUgbGFzdCBwYXJ0IG9mIHRoZSBvcmlnaW5hbCB3b3JkLiBXaGVuIHRoZXJlIGFyZSBubyBwb3NpdGlvbmFsIHBhcmFtZXRlcnMsIGAmcXVvdDskQCZxdW90O2AgYW5kIGAkQGAgZXhwYW5kIHRvIG5vdGhpbmcgKGkuZS4sIHRoZXkgYXJlIHJlbW92ZWQpLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "b@:;nS<d#a", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash special parameter $-", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$-", 
                "", 
                "<p>Expands to the current option flags as specified upon invocation, by the <code>set</code> builtin command, or those set by the shell itself (such as the <code>-i</code> option). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDk3NjAsICJpZCI6ICIxNDk1MjQ5Mzg4NzA0LTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBjdXJyZW50IG9wdGlvbiBmbGFncyBhcyBzcGVjaWZpZWQgdXBvbiBpbnZvY2F0aW9uLCBieSB0aGUgYHNldGAgYnVpbHRpbiBjb21tYW5kLCBvciB0aG9zZSBzZXQgYnkgdGhlIHNoZWxsIGl0c2VsZiAoc3VjaCBhcyB0aGUgYC1pYCBvcHRpb24pLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "M&cX|oy&ya", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$$", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$$", 
                "", 
                "<p>Expands to the process ID of the shell. In a <code>()</code> subshell, it expands to the process ID of the invoking shell, not the subshell.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTU4NzI5NzYsICJpZCI6ICIxNDk1MjQ5Nzg3NjYxLTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwcm9jZXNzIElEIG9mIHRoZSBzaGVsbC4gSW4gYSBgKClgIHN1YnNoZWxsLCBpdCBleHBhbmRzIHRvIHRoZSBwcm9jZXNzIElEIG9mIHRoZSBpbnZva2luZyBzaGVsbCwgbm90IHRoZSBzdWJzaGVsbC5cbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Eh?/s0},d{", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$!", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$!", 
                "", 
                "<p>Expands to the process ID of the job most recently placed into the background, whether executed as an asynchronous command or using the <code>bg</code> builtin (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Job-Control-Builtins.html#Job-Control-Builtins\">Job Control Builtins</a>). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNTU5NjQsICJpZCI6ICIxNDk1MjQ5ODE4NjcwLTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwcm9jZXNzIElEIG9mIHRoZSBqb2IgbW9zdCByZWNlbnRseSBwbGFjZWQgaW50byB0aGUgYmFja2dyb3VuZCwgd2hldGhlciBleGVjdXRlZCBhcyBhbiBhc3luY2hyb25vdXMgY29tbWFuZCBvciB1c2luZyB0aGUgYGJnYCBidWlsdGluIChzZWUgW0pvYiBDb250cm9sIEJ1aWx0aW5zXShodHRwczovL3d3dy5nbnUub3JnL3NvZnR3YXJlL2Jhc2gvbWFudWFsL2h0bWxfbm9kZS9Kb2ItQ29udHJvbC1CdWlsdGlucy5odG1sI0pvYi1Db250cm9sLUJ1aWx0aW5zKSkuIFxuIn0=---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "j*{I)@?oSQ", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$0", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$0", 
                "", 
                "<ul>\n<li style=\"text-align: left; \">name of the <strong>shell or shell script</strong></li>\n<li style=\"text-align: left; \">name of <strong>command file</strong> Bash invoked with</li>\n<li style=\"text-align: left; \"><strong>first argument</strong> after the string to be executed if Bash started with <code>-c</code></li>\n<li style=\"text-align: left; \">filename used to invoke Bash as given by argument zero</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTc0NzExMzUsICJpZCI6ICIxNDk1MjQ5ODU4OTQxLTAwNiIsICJtZCI6ICIqIG5hbWUgb2YgdGhlICoqc2hlbGwgb3Igc2hlbGwgc2NyaXB0KipcbiogbmFtZSBvZiAqKmNvbW1hbmQgZmlsZSoqIEJhc2ggaW52b2tlZCB3aXRoXG4qICoqZmlyc3QgYXJndW1lbnQqKiBhZnRlciB0aGUgc3RyaW5nIHRvIGJlIGV4ZWN1dGVkIGlmIEJhc2ggc3RhcnRlZCB3aXRoIGAtY2BcbiogZmlsZW5hbWUgdXNlZCB0byBpbnZva2UgQmFzaCBhcyBnaXZlbiBieSBhcmd1bWVudCB6ZXJvXG4ifQ==---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "FlMDhtjc|a", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$_", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$_", 
                "", 
                "<ul>\n<li style=\"text-align: left; \"><strong>shell invocation absolute pathname</strong></li>\n<li style=\"text-align: left; \"><strong>executing script name</strong> as passed in the environment or argument list</li>\n<li style=\"text-align: left; \">last argument to the previous command, after expansion</li>\n<li style=\"text-align: left; \">full pathname used to invoke each command executed and placed in the environment exported to that command</li>\n<li style=\"text-align: left; \"><em>when checking mail:</em> the name of the mail file</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTczOTU4ODQsICJpZCI6ICIxNDk1MjQ5OTMxNTk4LTAwNiIsICJtZCI6ICIqICoqc2hlbGwgaW52b2NhdGlvbiBhYnNvbHV0ZSBwYXRobmFtZSoqXG4qICoqZXhlY3V0aW5nIHNjcmlwdCBuYW1lKiogYXMgcGFzc2VkIGluIHRoZSBlbnZpcm9ubWVudCBvciBhcmd1bWVudCBsaXN0XG4qIGxhc3QgYXJndW1lbnQgdG8gdGhlIHByZXZpb3VzIGNvbW1hbmQsIGFmdGVyIGV4cGFuc2lvblxuKiBmdWxsIHBhdGhuYW1lIHVzZWQgdG8gaW52b2tlIGVhY2ggY29tbWFuZCBleGVjdXRlZCBhbmQgcGxhY2VkIGluIHRoZSBlbnZpcm9ubWVudCBleHBvcnRlZCB0byB0aGF0IGNvbW1hbmRcbiogX3doZW4gY2hlY2tpbmcgbWFpbDpfIHRoZSBuYW1lIG9mIHRoZSBtYWlsIGZpbGVcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "C4TR0cQ_Hp", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": [
                "bash"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash positional parameter ${<i>N</i>}", 
                "bash", 
                "positional parameter", 
                "", 
                "", 
                "${N}", 
                "", 
                "<p>A <em>positional parameter</em> is a parameter denoted by one or more digits, other than the single digit <code>0</code>. Positional parameters are assigned from the shell’s arguments when it is invoked, and may be reassigned using the <code>set</code> builtin command. Positional parameter <code><i>N</i></code> may be referenced as <code>${<i>N</i>}</code>, or as <code>$<i>N</i></code> when <code><i>N</i></code> consists of a single digit. Positional parameters may not be assigned to with assignment statements. The <code>set</code> and <code>shift</code> builtins are used to set and unset them. The positional parameters are temporarily replaced when a shell function is executed. <br />\nWhen a positional parameter consisting of more than a single digit is expanded, it must be enclosed in braces. </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTAxODgsICJpZCI6ICIxNDk1MjUwMDUxNTAxLTAwNiIsICJtZCI6ICJBIF9wb3NpdGlvbmFsIHBhcmFtZXRlcl8gaXMgYSBwYXJhbWV0ZXIgZGVub3RlZCBieSBvbmUgb3IgbW9yZSBkaWdpdHMsIG90aGVyIHRoYW4gdGhlIHNpbmdsZSBkaWdpdCBgMGAuIFBvc2l0aW9uYWwgcGFyYW1ldGVycyBhcmUgYXNzaWduZWQgZnJvbSB0aGUgc2hlbGxcdTIwMTlzIGFyZ3VtZW50cyB3aGVuIGl0IGlzIGludm9rZWQsIGFuZCBtYXkgYmUgcmVhc3NpZ25lZCB1c2luZyB0aGUgYHNldGAgYnVpbHRpbiBjb21tYW5kLiBQb3NpdGlvbmFsIHBhcmFtZXRlciBgTmAgbWF5IGJlIHJlZmVyZW5jZWQgYXMgYCR7Tn1gLCBvciBhcyBgJE5gIHdoZW4gYE5gIGNvbnNpc3RzIG9mIGEgc2luZ2xlIGRpZ2l0LiBQb3NpdGlvbmFsIHBhcmFtZXRlcnMgbWF5IG5vdCBiZSBhc3NpZ25lZCB0byB3aXRoIGFzc2lnbm1lbnQgc3RhdGVtZW50cy4gVGhlIGBzZXRgIGFuZCBgc2hpZnRgIGJ1aWx0aW5zIGFyZSB1c2VkIHRvIHNldCBhbmQgdW5zZXQgdGhlbSAoc2VlIFtTaGVsbCBCdWlsdGluIENvbW1hbmRzXShTaGVsbC1CdWlsdGluLUNvbW1hbmRzLmh0bWwjU2hlbGwtQnVpbHRpbi1Db21tYW5kcykpLiBUaGUgcG9zaXRpb25hbCBwYXJhbWV0ZXJzIGFyZSB0ZW1wb3JhcmlseSByZXBsYWNlZCB3aGVuIGEgc2hlbGwgZnVuY3Rpb24gaXMgZXhlY3V0ZWQgKHNlZSBbU2hlbGwgRnVuY3Rpb25zXShTaGVsbC1GdW5jdGlvbnMuaHRtbCNTaGVsbC1GdW5jdGlvbnMpKS4gXG5XaGVuIGEgcG9zaXRpb25hbCBwYXJhbWV0ZXIgY29uc2lzdGluZyBvZiBtb3JlIHRoYW4gYSBzaW5nbGUgZGlnaXQgaXMgZXhwYW5kZWQsIGl0IG11c3QgYmUgZW5jbG9zZWQgaW4gYnJhY2VzLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "E4*M=EaJ^z", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "basic lockfile implementation", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">[</span> ! -e <span style=\"color: #40ffff\">$lockfile</span> <span style=\"color: #d0d0d0\">];</span> <span style=\"color: #6ab825; font-weight: bold\">then</span>\n<span style=\"background-color: #404040\">   <span style=\"color: #24909d\">trap</span> <span style=\"color: #ed9d13\">\"rm -f </span><span style=\"color: #40ffff\">$lockfile</span><span style=\"color: #ed9d13\">; exit\"</span> INT TERM EXIT\n</span>   touch <span style=\"color: #40ffff\">$lockfile</span>\n   critical-section\n   rm <span style=\"color: #40ffff\">$lockfile</span>\n<span style=\"background-color: #404040\">   <span style=\"color: #24909d\">trap</span> - INT TERM EXIT\n</span><span style=\"color: #6ab825; font-weight: bold\">else</span>\n   <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"critical-section is already running\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">fi</span>\n</pre></div>\n<p>It’s worth pointing out that there is a slight race condition in the above lock example between the time we test for the lockfile and the time we create it.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTQ2MTYsICJpZCI6ICIxNDk1MjU0NDAzOTE3LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaCBobF9saW5lcz0mcXVvdDsyIDYmcXVvdDtcbiAgICBpZiBbICEgLWUgJGxvY2tmaWxlIF07IHRoZW5cbiAgICAgICB0cmFwICZxdW90O3JtIC1mICRsb2NrZmlsZTsgZXhpdCZxdW90OyBJTlQgVEVSTSBFWElUXG4gICAgICAgdG91Y2ggJGxvY2tmaWxlXG4gICAgICAgY3JpdGljYWwtc2VjdGlvblxuICAgICAgIHJtICRsb2NrZmlsZVxuICAgICAgIHRyYXAgLSBJTlQgVEVSTSBFWElUXG4gICAgZWxzZVxuICAgICAgIGVjaG8gJnF1b3Q7Y3JpdGljYWwtc2VjdGlvbiBpcyBhbHJlYWR5IHJ1bm5pbmcmcXVvdDtcbiAgICBmaVxuICBcbkl0XHUyMDE5cyB3b3J0aCBwb2ludGluZyBvdXQgdGhhdCB0aGVyZSBpcyBhIHNsaWdodCByYWNlIGNvbmRpdGlvbiBpbiB0aGUgYWJvdmUgbG9jayBleGFtcGxlIGJldHdlZW4gdGhlIHRpbWUgd2UgdGVzdCBmb3IgdGhlIGxvY2tmaWxlIGFuZCB0aGUgdGltZSB3ZSBjcmVhdGUgaXQuXG4ifQ==---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "t`FmHx.|,l", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo \\uHHHH", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\u<var>HHHH</var>", 
                "", 
                "the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value\n<var>HHHH</var> (one to four hex digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Eh1u+)OP]z", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\U<var>HHHHHHHH</var>", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\U<var>HHHHHHHH</var>", 
                "", 
                "the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value\n<var>HHHHHHHH</var> (one to eight hex digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "pk]f&[m`r_", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "GNU pronunciation", 
                "", 
                "<span class=\"st\" data-hveid=\"74\" data-ved=\"0ahUKEwj6qqiIlqrUAhVhVWMKHWUnBqkQ4EUISjAG\">The name “<em>GNU</em>” is a recursive acronym for “<em>GNU's Not Unix</em>!”; it is pronounced as one syllable with a hard g, like “grew” but with the letter “n” instead of “r”. The combination of <em>GNU</em> and Linux is the <em>GNU</em>/Linux operating system, now used by millions and sometimes incorrectly called simply “Linux”.</span>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "MHv/>u#wb}", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Delete lines 5–10, 12 using <code>sed</code>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">sed -i.bak -e <span style=\"color: #ed9d13\">'5,10d;12d'</span> file\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTgzNTA1MzgsICJpZCI6ICIxNDk4MzUwNDgwNjg3LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNlZCAtaS5iYWsgLWUgJmFwb3M7NSwxMGQ7MTJkJmFwb3M7IGZpbGVcbiAgXG4ifQ==---->", 
                "", 
                "", 
                "reverse", 
                "", 
                "https://stackoverflow.com/questions/2112469/delete-specific-line-numbers-from-a-text-file-using-sed"
            ], 
            "flags": 0, 
            "guid": "gTTw-ZW(ex", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "sed"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Delete lines 5–10, 12 using <code>awk</code>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">awk <span style=\"color: #ed9d13\">'NR!~/^(5|10|25)$/'</span> file &gt; temp\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTgzNTA1OTQsICJpZCI6ICIxNDk4MzUwNTU3NzMwLTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGF3ayAmYXBvcztOUiF+L14oNXwxMHwyNSkkLyZhcG9zOyBmaWxlICZndDsgdGVtcFxuICBcbiJ9---->", 
                "", 
                "", 
                "reverse", 
                "", 
                "https://stackoverflow.com/questions/2112469/delete-specific-line-numbers-from-a-text-file-using-sed"
            ], 
            "flags": 0, 
            "guid": "FsfRairw^y", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "awk", 
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Quote by L. Peter Deutsch", 
                "", 
                "“‘Software engineering’ is something of an oxymoron. It’s very difficult to have real engineering before you have physics, and there isn’t anything even close to physics for software.”", 
                "", 
                "Deutsch is a software veteran of the Xerox Palo Alto Research Center in the ‘70s and ‘80s.", 
                "reverse", 
                "", 
                "“Dreaming in Code: Two Dozen Programmers, Three Years, 4,732 Bugs, and One Quest for Transcendent Software” by Scott Rosenberg"
            ], 
            "flags": 0, 
            "guid": "iT}HMvir-a", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">CREATE</span> <span style=\"color: #6ab825; font-weight: bold\">TABLE</span> <span style=\"color: #d0d0d0\">users</span> <span style=\"color: #d0d0d0\">(</span>\n    <span style=\"color: #d0d0d0\">id</span> <span style=\"color: #d0d0d0\">MEDIUMINT</span> <span style=\"color: #6ab825; font-weight: bold\">NOT</span> <span style=\"color: #6ab825; font-weight: bold\">NULL</span>\n        <span style=\"color: #d0d0d0\">AUTO_INCREMENT,</span>\n    <span style=\"color: #d0d0d0\">user_id</span> <span style=\"color: #24909d\">Varchar</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">30</span><span style=\"color: #d0d0d0\">),</span>\n    <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #24909d\">Number</span><span style=\"color: #d0d0d0\">,</span>\n    <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #24909d\">char</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">),</span>\n    <span style=\"color: #6ab825; font-weight: bold\">PRIMARY</span> <span style=\"color: #6ab825; font-weight: bold\">KEY</span> <span style=\"color: #d0d0d0\">(id)</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkwMTAsICJpZCI6ICIxNTAwNTI4MTA0NTQ0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgQ1JFQVRFIFRBQkxFIHVzZXJzIChcbiAgICAgICAgaWQgTUVESVVNSU5UIE5PVCBOVUxMXG4gICAgICAgICAgICBBVVRPX0lOQ1JFTUVOVCxcbiAgICAgICAgdXNlcl9pZCBWYXJjaGFyKDMwKSxcbiAgICAgICAgYWdlIE51bWJlcixcbiAgICAgICAgc3RhdHVzIGNoYXIoMSksXG4gICAgICAgIFBSSU1BUlkgS0VZIChpZClcbiAgICApXG4ifQ==---->", 
                "SQL", 
                "<p>Collections implicitly created on first <code>insert</code> operation. The primary key <code>_id</code> is automatically added if <code>_id</code> field is not specified.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.insert(</span> <span style=\"color: #d0d0d0\">{</span>\n    <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #ed9d13\">\"abc123\"</span><span style=\"color: #d0d0d0\">,</span>\n    <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #3677a9\">55</span><span style=\"color: #d0d0d0\">,</span>\n    <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span>\n <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>You can also explicitly create a collection:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.createCollection(</span><span style=\"color: #ed9d13\">\"users\"</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkxMTgsICJpZCI6ICIxNTAwNTI4MTA0NTQ0LTAwMiIsICJtZCI6ICJDb2xsZWN0aW9ucyBpbXBsaWNpdGx5IGNyZWF0ZWQgb24gZmlyc3QgYGluc2VydGAgb3BlcmF0aW9uLiBUaGUgcHJpbWFyeSBrZXkgYF9pZGAgaXMgYXV0b21hdGljYWxseSBhZGRlZCBpZiBgX2lkYCBmaWVsZCBpcyBub3Qgc3BlY2lmaWVkLlxuICBcbiAgICA6Ojpqc1xuICAgIGRiLnVzZXJzLmluc2VydCgge1xuICAgICAgICB1c2VyX2lkOiAmcXVvdDthYmMxMjMmcXVvdDssXG4gICAgICAgIGFnZTogNTUsXG4gICAgICAgIHN0YXR1czogJnF1b3Q7QSZxdW90O1xuICAgICB9IClcbiAgXG5Zb3UgY2FuIGFsc28gZXhwbGljaXRseSBjcmVhdGUgYSBjb2xsZWN0aW9uOlxuICBcbiAgICA6Ojpqc1xuICAgIGRiLmNyZWF0ZUNvbGxlY3Rpb24oJnF1b3Q7dXNlcnMmcXVvdDspXG4gIFxuIn0=---->", 
                "MongoDB", 
                "", 
                "", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "q+%(^_hlz@", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">ALTER</span> <span style=\"color: #6ab825; font-weight: bold\">TABLE</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">ADD</span> <span style=\"color: #d0d0d0\">join_date</span> <span style=\"color: #d0d0d0\">DATETIME</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkxOTksICJpZCI6ICIxNTAwNTI5MTQ5NTgwLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgQUxURVIgVEFCTEUgdXNlcnNcbiAgICBBREQgam9pbl9kYXRlIERBVEVUSU1FXG4ifQ==---->", 
                "SQL", 
                "Collections do not describe or enforce the structure of the\nconstituent documents.", 
                "MongoDB", 
                "", 
                "", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "eO50}orpF&", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">ALTER</span> <span style=\"color: #6ab825; font-weight: bold\">TABLE</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">DROP</span> <span style=\"color: #6ab825; font-weight: bold\">COLUMN</span> <span style=\"color: #d0d0d0\">join_date</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkyNDgsICJpZCI6ICIxNTAwNTI5MjIxODM1LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgQUxURVIgVEFCTEUgdXNlcnNcbiAgICBEUk9QIENPTFVNTiBqb2luX2RhdGVcbiJ9---->", 
                "SQL", 
                "Collections do not describe or enforce the structure of the\nconstituent documents.", 
                "MongoDB", 
                "", 
                "", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "nErUoukcP;", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">CREATE</span> <span style=\"color: #6ab825; font-weight: bold\">INDEX</span> <span style=\"color: #d0d0d0\">idx_user_id_asc</span>\n<span style=\"color: #6ab825; font-weight: bold\">ON</span> <span style=\"color: #d0d0d0\">users(user_id)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkyNzUsICJpZCI6ICIxNTAwNTI5MjU0Njc3LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgQ1JFQVRFIElOREVYIGlkeF91c2VyX2lkX2FzY1xuICAgIE9OIHVzZXJzKHVzZXJfaWQpXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.ensureIndex(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkyOTQsICJpZCI6ICIxNTAwNTI5MjU0Njc3LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBkYi51c2Vycy5lbnN1cmVJbmRleCggeyB1c2VyX2lkOiAxIH0gKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "JKHEEdnZ6l", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">CREATE</span> <span style=\"color: #6ab825; font-weight: bold\">INDEX</span> <span style=\"color: #d0d0d0\">idx_user_id_asc</span>\n<span style=\"color: #6ab825; font-weight: bold\">ON</span> <span style=\"color: #d0d0d0\">users(user_id,</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #6ab825; font-weight: bold\">DESC</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkzNTcsICJpZCI6ICIxNTAwNTI5MzE2NDQyLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgQ1JFQVRFIElOREVYIGlkeF91c2VyX2lkX2FzY1xuICAgIE9OIHVzZXJzKHVzZXJfaWQsIGFnZSBERVNDKVxuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.ensureIndex(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">-</span><span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkzMzMsICJpZCI6ICIxNTAwNTI5MzE2NDQyLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBkYi51c2Vycy5lbnN1cmVJbmRleCggeyB1c2VyX2lkOiAxLCBhZ2U6IC0xIH0gKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "c|6R)Up#N{", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">DROP</span> <span style=\"color: #6ab825; font-weight: bold\">TABLE</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkzNzUsICJpZCI6ICIxNTAwNTI5MzYzMDYyLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgRFJPUCBUQUJMRSB1c2Vyc1xuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.drop()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MjkzODYsICJpZCI6ICIxNTAwNTI5MzYzMDYyLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBkYi51c2Vycy5kcm9wKClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "yCm$GC:!=P", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">INSERT</span> <span style=\"color: #6ab825; font-weight: bold\">INTO</span> <span style=\"color: #d0d0d0\">users(user_id,</span>\n                  <span style=\"color: #d0d0d0\">age,</span>\n                  <span style=\"color: #d0d0d0\">status)</span>\n<span style=\"color: #6ab825; font-weight: bold\">VALUES</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">\"bcd001\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #3677a9\">45</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #ed9d13\">\"A\"</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk0OTksICJpZCI6ICIxNTAwNTI5NDM1MjA2LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgSU5TRVJUIElOVE8gdXNlcnModXNlcl9pZCxcbiAgICAgICAgICAgICAgICAgICAgICBhZ2UsXG4gICAgICAgICAgICAgICAgICAgICAgc3RhdHVzKVxuICAgIFZBTFVFUyAoJnF1b3Q7YmNkMDAxJnF1b3Q7LFxuICAgICAgICAgICAgNDUsXG4gICAgICAgICAgICAmcXVvdDtBJnF1b3Q7KVxuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.insert(</span> <span style=\"color: #d0d0d0\">{</span>\n       <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #ed9d13\">\"bcd001\"</span><span style=\"color: #d0d0d0\">,</span>\n       <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #3677a9\">45</span><span style=\"color: #d0d0d0\">,</span>\n       <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span>\n<span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk0OTUsICJpZCI6ICIxNTAwNTI5NDM1MjA2LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5pbnNlcnQoIHtcbiAgICAgICAgICAgdXNlcl9pZDogJnF1b3Q7YmNkMDAxJnF1b3Q7LFxuICAgICAgICAgICBhZ2U6IDQ1LFxuICAgICAgICAgICBzdGF0dXM6ICZxdW90O0EmcXVvdDtcbiAgICB9IClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "M=Lw$.UK;S", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk1MTcsICJpZCI6ICIxNTAwNTI5NTAzMTA4LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk1MjksICJpZCI6ICIxNTAwNTI5NTAzMTA4LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "QQ`-L{0>lE", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">id,</span> <span style=\"color: #d0d0d0\">user_id,</span> <span style=\"color: #d0d0d0\">status</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk1NDgsICJpZCI6ICIxNTAwNTI5NTM2NjM0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGlkLCB1c2VyX2lkLCBzdGF0dXNcbiAgICBGUk9NIHVzZXJzXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">},</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk1NjUsICJpZCI6ICIxNTAwNTI5NTM2NjM0LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IH0sXG4gICAgICAgIHsgdXNlcl9pZDogMSwgc3RhdHVzOiAxIH1cbiAgICApXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "qqbR7J^1va", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">user_id,</span> <span style=\"color: #d0d0d0\">status</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEwNTYyMjAsICJpZCI6ICIxNTAwNTI5NTc3MzA2LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIHVzZXJfaWQsIHN0YXR1c1xuICAgIEZST00gdXNlcnNcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">},</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk1NjUsICJpZCI6ICIxNTAwNTI5NTM2NjM0LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IH0sXG4gICAgICAgIHsgdXNlcl9pZDogMSwgc3RhdHVzOiAxIH1cbiAgICApXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "LH%Z2E8E@-", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">user_id,</span> <span style=\"color: #d0d0d0\">status</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA3NjA2NDAsICJpZCI6ICIxNTAwNTI5NTkwMjQyLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIHVzZXJfaWQsIHN0YXR1c1xuICAgIEZST00gdXNlcnNcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">},</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA3NjA2NDIsICJpZCI6ICIxNTAwNTI5NTkwMjQyLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IH0sXG4gICAgICAgIHsgdXNlcl9pZDogMSwgc3RhdHVzOiAxLCBfaWQ6IDAgfVxuICAgIClcbiJ9---->", 
                "MongoDB", 
                "(not sure what the <code>_id: 0</code> does)", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "u8?|$d+8{6", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked", 
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk2NjgsICJpZCI6ICIxNTAwNTI5NjUwNDQ2LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgc3RhdHVzID0gJnF1b3Q7QSZxdW90O1xuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk2NzcsICJpZCI6ICIxNTAwNTI5NjUwNDQ2LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "rAG@qlP1f~", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">user_id,</span> <span style=\"color: #d0d0d0\">status</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk2OTgsICJpZCI6ICIxNTAwNTI5Njc4ODA1LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIHVzZXJfaWQsIHN0YXR1c1xuICAgIEZST00gdXNlcnNcbiAgICBXSEVSRSBzdGF0dXMgPSAmcXVvdDtBJnF1b3Q7XG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">},</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk2ODgsICJpZCI6ICIxNTAwNTI5Njc4ODA1LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyB9LFxuICAgICAgICB7IHVzZXJfaWQ6IDEsIHN0YXR1czogMSwgX2lkOiAwIH1cbiAgICApXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "P`A$H0!<uA", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">!=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3MTQsICJpZCI6ICIxNTAwNTI5NzAyMTk5LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgc3RhdHVzICE9ICZxdW90O0EmcXVvdDtcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$ne:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3MjIsICJpZCI6ICIxNTAwNTI5NzAyMTk5LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IHN0YXR1czogeyAkbmU6ICZxdW90O0EmcXVvdDsgfSB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "DS*1mfqF82", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">AND</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">50</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3MzQsICJpZCI6ICIxNTAwNTI5NzI0MTk0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgc3RhdHVzID0gJnF1b3Q7QSZxdW90O1xuICAgIEFORCBhZ2UgPSA1MFxuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span><span style=\"color: #d0d0d0\">,</span>\n      <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #3677a9\">50</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3NDEsICJpZCI6ICIxNTAwNTI5NzI0MTk0LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyxcbiAgICAgICAgICBhZ2U6IDUwIH1cbiAgICApXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "cw6X+9})/J", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">OR</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #3677a9\">50</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3NTUsICJpZCI6ICIxNTAwNTI5NzQzNjQ0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgc3RhdHVzID0gJnF1b3Q7QSZxdW90O1xuICAgIE9SIGFnZSA9IDUwXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$or:</span> <span style=\"color: #d0d0d0\">[</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">,</span>\n             <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #3677a9\">50</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3NjcsICJpZCI6ICIxNTAwNTI5NzQzNjQ0LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7ICRvcjogWyB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyB9ICxcbiAgICAgICAgICAgICAgICAgeyBhZ2U6IDUwIH0gXSB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "rIjSfh6Jfl", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">25</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3ODksICJpZCI6ICIxNTAwNTI5NzcxMjg3LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgYWdlICZndDsgMjVcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n    <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">25</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk3ODAsICJpZCI6ICIxNTAwNTI5NzcxMjg3LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgICB7IGFnZTogeyAkZ3Q6IDI1IH0gfVxuICAgIClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "upWiUcSIUy", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">&lt;</span> <span style=\"color: #3677a9\">25</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4MDMsICJpZCI6ICIxNTAwNTI5NzkxNzMzLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgYWdlICZsdDsgMjVcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$lt:</span> <span style=\"color: #3677a9\">25</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4MTAsICJpZCI6ICIxNTAwNTI5NzkxNzMzLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgIHsgYWdlOiB7ICRsdDogMjUgfSB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "O~,BIf8N3;", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">25</span>\n<span style=\"color: #6ab825; font-weight: bold\">AND</span>   <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">&lt;=</span> <span style=\"color: #3677a9\">50</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4MjgsICJpZCI6ICIxNTAwNTI5ODEyODA4LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgYWdlICZndDsgMjVcbiAgICBBTkQgICBhZ2UgJmx0Oz0gNTBcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">25</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">$lte:</span> <span style=\"color: #3677a9\">50</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4MzcsICJpZCI6ICIxNTAwNTI5ODEyODA4LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgIHsgYWdlOiB7ICRndDogMjUsICRsdGU6IDUwIH0gfVxuICAgIClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "kXu0UX`;8F", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">user_id</span> <span style=\"color: #6ab825; font-weight: bold\">like</span> <span style=\"color: #ed9d13\">\"%bc%\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4NTcsICJpZCI6ICIxNTAwNTI5ODM4NjY2LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgdXNlcl9pZCBsaWtlICZxdW90OyViYyUmcXVvdDtcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #ed9d13\">/bc/</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4NDcsICJpZCI6ICIxNTAwNTI5ODM4NjY2LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgIHsgdXNlcl9pZDogL2JjLyB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "p:1k!}{9B)", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">user_id</span> <span style=\"color: #6ab825; font-weight: bold\">like</span> <span style=\"color: #ed9d13\">\"bc%\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4NzAsICJpZCI6ICIxNTAwNTI5ODU5MzA3LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgdXNlcl9pZCBsaWtlICZxdW90O2JjJSZxdW90O1xuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #ed9d13\">/^bc/</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4NzgsICJpZCI6ICIxNTAwNTI5ODU5MzA3LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKFxuICAgICAgIHsgdXNlcl9pZDogL15iYy8gfVxuICAgIClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "x<^mk*STp)", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">ORDER</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">user_id</span> <span style=\"color: #6ab825; font-weight: bold\">ASC</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk4OTEsICJpZCI6ICIxNTAwNTI5ODgwMzU3LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgc3RhdHVzID0gJnF1b3Q7QSZxdW90O1xuICAgIE9SREVSIEJZIHVzZXJfaWQgQVNDXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">).sort(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk5MDQsICJpZCI6ICIxNTAwNTI5ODgwMzU3LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKCB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyB9ICkuc29ydCggeyB1c2VyX2lkOiAxIH0gKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "m`^g/0YBzE", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">ORDER</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">user_id</span> <span style=\"color: #6ab825; font-weight: bold\">DESC</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk5MTYsICJpZCI6ICIxNTAwNTI5OTA2Mjk2LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgV0hFUkUgc3RhdHVzID0gJnF1b3Q7QSZxdW90O1xuICAgIE9SREVSIEJZIHVzZXJfaWQgREVTQ1xuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">).sort(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #d0d0d0\">-</span><span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk5MjYsICJpZCI6ICIxNTAwNTI5OTA2Mjk2LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKCB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyB9ICkuc29ydCggeyB1c2VyX2lkOiAtMSB9IClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "r^qCG1:>n&", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">COUNT</span><span style=\"color: #d0d0d0\">(*)</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk5NDEsICJpZCI6ICIxNTAwNTI5OTI5MDE4LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIENPVU5UKCopXG4gICAgRlJPTSB1c2Vyc1xuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.count()</span>\n</pre></div>\n<p>or</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find().count()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk5NzgsICJpZCI6ICIxNTAwNTI5OTI5MDE4LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5jb3VudCgpXG5vclxuICBcbiAgICA6Ojpqc1xuICAgIFxuICAgIFxuICAgIGRiLnVzZXJzLmZpbmQoKS5jb3VudCgpXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "LcGpU)HKgg", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">COUNT</span><span style=\"color: #d0d0d0\">(user_id)</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1Mjk5OTEsICJpZCI6ICIxNTAwNTI5OTgyNjgxLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIENPVU5UKHVzZXJfaWQpXG4gICAgRlJPTSB1c2Vyc1xuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.count(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$exists:</span> <span style=\"color: #6ab825; font-weight: bold\">true</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>or</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">user_id:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$exists:</span> <span style=\"color: #6ab825; font-weight: bold\">true</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">).count()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAwMDgsICJpZCI6ICIxNTAwNTI5OTgyNjgxLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5jb3VudCggeyB1c2VyX2lkOiB7ICRleGlzdHM6IHRydWUgfSB9IClcbiAgICBcbm9yXG4gIFxuICAgIDo6OmpzXG4gICAgXG4gICAgXG4gICAgZGIudXNlcnMuZmluZCggeyB1c2VyX2lkOiB7ICRleGlzdHM6IHRydWUgfSB9ICkuY291bnQoKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "s&J#jGQqXF", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">COUNT</span><span style=\"color: #d0d0d0\">(*)</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">30</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAwMjMsICJpZCI6ICIxNTAwNTMwMDExNDcyLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIENPVU5UKCopXG4gICAgRlJPTSB1c2Vyc1xuICAgIFdIRVJFIGFnZSAmZ3Q7IDMwXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.count(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">30</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>or</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">30</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">).count()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAwMzgsICJpZCI6ICIxNTAwNTMwMDExNDcyLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5jb3VudCggeyBhZ2U6IHsgJGd0OiAzMCB9IH0gKVxuICBcbm9yXG4gIFxuICAgIDo6OmpzXG4gICAgXG4gICAgXG4gICAgZGIudXNlcnMuZmluZCggeyBhZ2U6IHsgJGd0OiAzMCB9IH0gKS5jb3VudCgpXG4gICAgXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "j]C&u~1SE$", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">DISTINCT</span><span style=\"color: #d0d0d0\">(status)</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAwNDksICJpZCI6ICIxNTAwNTMwMDQwMzIwLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIERJU1RJTkNUKHN0YXR1cylcbiAgICBGUk9NIHVzZXJzXG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.distinct(</span> <span style=\"color: #ed9d13\">\"status\"</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAwNzQsICJpZCI6ICIxNTAwNTMwMDQwMzIwLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5kaXN0aW5jdCggJnF1b3Q7c3RhdHVzJnF1b3Q7IClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "rZ1d?GbVTg", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">LIMIT</span> <span style=\"color: #3677a9\">1</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAxMjksICJpZCI6ICIxNTAwNTMwMDc5MzYxLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgTElNSVQgMVxuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.findOne()</span>\n</pre></div>\n<p>or</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find().limit(</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAxMTcsICJpZCI6ICIxNTAwNTMwMDc5MzYxLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBkYi51c2Vycy5maW5kT25lKClcbiAgXG5vclxuICBcbiAgICA6Ojpqc1xuICAgIGRiLnVzZXJzLmZpbmQoKS5saW1pdCgxKVxuICBcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "EEx)bfHN*Z", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">LIMIT</span> <span style=\"color: #3677a9\">5</span>\n<span style=\"color: #6ab825; font-weight: bold\">OFFSET</span> <span style=\"color: #3677a9\">10</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">LIMIT</span> <span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDQ4MTkyMjcsICJpZCI6ICIxNTAwNTMwMTMxNTk5LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgU0VMRUNUICpcbiAgICBGUk9NIHVzZXJzXG4gICAgTElNSVQgNVxuICAgIE9GRlNFVCAxMFxuICBcbiAgICBTRUxFQ1QgKlxuICAgIEZST00gdXNlcnNcbiAgICBMSU1JVCAxMCwgNVxuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find().limit(</span><span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">).skip(</span><span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAxNTksICJpZCI6ICIxNTAwNTMwMTMxNTk5LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKCkubGltaXQoNSkuc2tpcCgxMClcbiAgICBcbiAgXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "z%}!d*6Wo:", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">EXPLAIN</span> <span style=\"color: #6ab825; font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">*</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAxNzYsICJpZCI6ICIxNTAwNTMwMTYwOTg3LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgRVhQTEFJTiBTRUxFQ1QgKlxuICAgIEZST00gdXNlcnNcbiAgICBXSEVSRSBzdGF0dXMgPSAmcXVvdDtBJnF1b3Q7XG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.find(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">).explain()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAxODgsICJpZCI6ICIxNTAwNTMwMTYwOTg3LTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5maW5kKCB7IHN0YXR1czogJnF1b3Q7QSZxdW90OyB9ICkuZXhwbGFpbigpXG4gICAgXG4ifQ==---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "c|YJ_sWy])", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">UPDATE</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">SET</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"C\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">25</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyMDIsICJpZCI6ICIxNTAwNTMwMTkwNTQzLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgVVBEQVRFIHVzZXJzXG4gICAgU0VUIHN0YXR1cyA9ICZxdW90O0MmcXVvdDtcbiAgICBXSEVSRSBhZ2UgJmd0OyAyNVxuIn0=---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.update(</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">25</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$set:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"C\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">multi:</span> <span style=\"color: #6ab825; font-weight: bold\">true</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyMTIsICJpZCI6ICIxNTAwNTMwMTkwNTQzLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy51cGRhdGUoXG4gICAgICAgeyBhZ2U6IHsgJGd0OiAyNSB9IH0sXG4gICAgICAgeyAkc2V0OiB7IHN0YXR1czogJnF1b3Q7QyZxdW90OyB9IH0sXG4gICAgICAgeyBtdWx0aTogdHJ1ZSB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "cIy1xG9]et", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">UPDATE</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">SET</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">age</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #3677a9\">3</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"A\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyMzMsICJpZCI6ICIxNTAwNTMwMjE0ODQzLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgVVBEQVRFIHVzZXJzXG4gICAgU0VUIGFnZSA9IGFnZSArIDNcbiAgICBXSEVSRSBzdGF0dXMgPSAmcXVvdDtBJnF1b3Q7XG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.update(</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"A\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">,</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$inc:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">age:</span> <span style=\"color: #3677a9\">3</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">multi:</span> <span style=\"color: #6ab825; font-weight: bold\">true</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyMjQsICJpZCI6ICIxNTAwNTMwMjE0ODQzLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy51cGRhdGUoXG4gICAgICAgeyBzdGF0dXM6ICZxdW90O0EmcXVvdDsgfSAsXG4gICAgICAgeyAkaW5jOiB7IGFnZTogMyB9IH0sXG4gICAgICAgeyBtdWx0aTogdHJ1ZSB9XG4gICAgKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "xiR)h9_0$R", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">DELETE</span> <span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"D\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyNTAsICJpZCI6ICIxNTAwNTMwMjQwMDUxLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgREVMRVRFIEZST00gdXNlcnNcbiAgICBXSEVSRSBzdGF0dXMgPSAmcXVvdDtEJnF1b3Q7XG4ifQ==---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.remove(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">\"D\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyNjEsICJpZCI6ICIxNTAwNTMwMjQwMDUxLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5yZW1vdmUoIHsgc3RhdHVzOiAmcXVvdDtEJnF1b3Q7IH0gKVxuIn0=---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "md%x.*n_%O", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">DELETE</span> <span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">users</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyNzcsICJpZCI6ICIxNTAwNTMwMjYyOTIzLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgREVMRVRFIEZST00gdXNlcnNcbiJ9---->", 
                "SQL", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.users.remove(</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzAyODgsICJpZCI6ICIxNTAwNTMwMjYyOTIzLTAwMiIsICJtZCI6ICIgICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi51c2Vycy5yZW1vdmUoIClcbiJ9---->", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "bPo[ZqP:R6", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>database</div>", 
                "SQL", 
                "<div>database</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "C=EsV3qS6&", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>table</div>", 
                "SQL", 
                "<div>collection</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "QDReKZlNKN", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>row</div>", 
                "SQL", 
                "<div>document or BSON document</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "E=8IdV/bP7", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>column</div>", 
                "SQL", 
                "<div>field</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "HgL=~((/+P", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "index", 
                "SQL", 
                "<div>index</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "s2k%;HZqp^", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "table joins", 
                "SQL", 
                "<div>embedded documents and linking</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "h(qj`ht!C6", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "primary key can be any unique column or column combination", 
                "SQL", 
                "<div>primary key is automatically set to the <code>_id</code> field</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "o!k;E7M]ok", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "aggregation (<code>group by</code>)", 
                "SQL", 
                "<div>aggregation framework</div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "po<NAp5zby", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>mysqld</code>/<code>oracle</code>", 
                "MySQL/Oracle", 
                "<div><code>mongod</code></div>", 
                "MongoDB", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "h)f)oEwUA%", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>mysql</code>/<code>sqlplus</code>", 
                "MySQL/Oracle binary", 
                "<div><code>mongo</code></div>", 
                "MongoDB binary", 
                "", 
                "reverse", 
                "", 
                "https://gist.github.com/aponxi/4380516"
            ], 
            "flags": 0, 
            "guid": "y_M?Yj$0H7", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>GROUP BY</code>", 
                "SQL", 
                "<div><code>$group</code></div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "z<xm2fE_~L", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>HAVING</code> and <code>WHERE</code>", 
                "SQL", 
                "<div><code>$match</code></div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "BK^}tj1>nd", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>SELECT</code>", 
                "SQL", 
                "<div><code>$project</code></div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "l|:o@hJ3DU", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>ORDER BY</code>", 
                "SQL", 
                "<div><code>$sort</code></div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "yqn{KN;~fR", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>LIMIT</code>", 
                "SQL", 
                "<div><code>$limit</code></div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "OjUN?$e+bL", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>COUNT()</code> and <code>SUM()</code>", 
                "SQL", 
                "<div><code>$sum</code></div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "Q0U`/@k@(h", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>join</code>", 
                "SQL", 
                "<div><code>$lookup</code> (<b>3.2+</b>)</div>", 
                "MongoDB aggregation operator", 
                "", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "b^Q4k-CO41", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">COUNT</span><span style=\"color: #d0d0d0\">(*)</span> <span style=\"color: #6ab825; font-weight: bold\">AS</span> <span style=\"color: #6ab825; font-weight: bold\">count</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzExMjAsICJpZCI6ICIxNTAwNTMwOTE2ODEzLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgU0VMRUNUIENPVU5UKCopIEFTIGNvdW50XG4gICAgRlJPTSBvcmRlcnNcbiJ9---->", 
                "SQL", 
                "<p>Count all records from <code>orders</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #6ab825; font-weight: bold\">null</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">count:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzExNzMsICJpZCI6ICIxNTAwNTMwOTE2ODEzLTAwMiIsICJtZCI6ICJDb3VudCBhbGwgcmVjb3JkcyBmcm9tIGBvcmRlcnNgXG4gIFxuICAgIDo6OmpzXG4gICAgZGIub3JkZXJzLmFnZ3JlZ2F0ZSggW1xuICAgICAgIHtcbiAgICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiBudWxsLFxuICAgICAgICAgICAgY291bnQ6IHsgJHN1bTogMSB9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "yxT035.:%;", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">AS</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzExOTQsICJpZCI6ICIxNTAwNTMxMTgxOTk5LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIFNVTShwcmljZSkgQVMgdG90YWxcbiAgICBGUk9NIG9yZGVyc1xuIn0=---->", 
                "SQL", 
                "<p>Sum the <code>price</code> field from <code>orders</code></p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #6ab825; font-weight: bold\">null</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEyMDgsICJpZCI6ICIxNTAwNTMxMTgxOTk5LTAwMiIsICJtZCI6ICJTdW0gdGhlIGBwcmljZWAgZmllbGQgZnJvbSBgb3JkZXJzYFxuICBcbiAgICA6Ojpqc1xuICAgIFxuICAgIFxuICAgIGRiLm9yZGVycy5hZ2dyZWdhdGUoIFtcbiAgICAgICB7XG4gICAgICAgICAkZ3JvdXA6IHtcbiAgICAgICAgICAgIF9pZDogbnVsbCxcbiAgICAgICAgICAgIHRvdGFsOiB7ICRzdW06ICZxdW90OyRwcmljZSZxdW90OyB9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "q7clppKeJ|", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">AS</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEyMjQsICJpZCI6ICIxNTAwNTMxMjExNzg4LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIFNVTShwcmljZSkgQVMgdG90YWxcbiAgICBGUk9NIG9yZGVyc1xuICAgIEdST1VQIEJZIGN1c3RfaWRcbiJ9---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code>, sum the <code>price</code> field.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEyNDUsICJpZCI6ICIxNTAwNTMxMjExNzg4LTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgLCBzdW0gdGhlIGBwcmljZWAgZmllbGQuXG4gIFxuICAgIDo6OmpzXG4gICAgXG4gICAgXG4gICAgZGIub3JkZXJzLmFnZ3JlZ2F0ZSggW1xuICAgICAgIHtcbiAgICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiAmcXVvdDskY3VzdF9pZCZxdW90OyxcbiAgICAgICAgICAgIHRvdGFsOiB7ICRzdW06ICZxdW90OyRwcmljZSZxdW90OyB9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "hX`5hOJ>>e", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">AS</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id</span>\n<span style=\"color: #6ab825; font-weight: bold\">ORDER</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">total</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEyNzYsICJpZCI6ICIxNTAwNTMxMjQ4NDg0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIFNVTShwcmljZSkgQVMgdG90YWxcbiAgICBGUk9NIG9yZGVyc1xuICAgIEdST1VQIEJZIGN1c3RfaWRcbiAgICBPUkRFUiBCWSB0b3RhbFxuIn0=---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code>, sum the <code>price</code> field, results sorted by sum.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sort:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEyNzMsICJpZCI6ICIxNTAwNTMxMjQ4NDg0LTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgLCBzdW0gdGhlIGBwcmljZWAgZmllbGQsIHJlc3VsdHMgc29ydGVkIGJ5IHN1bS5cbiAgXG4gICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi5vcmRlcnMuYWdncmVnYXRlKCBbXG4gICAgICAge1xuICAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6ICZxdW90OyRjdXN0X2lkJnF1b3Q7LFxuICAgICAgICAgICAgdG90YWw6IHsgJHN1bTogJnF1b3Q7JHByaWNlJnF1b3Q7IH1cbiAgICAgICAgIH1cbiAgICAgICB9LFxuICAgICAgIHsgJHNvcnQ6IHsgdG90YWw6IDEgfSB9XG4gICAgXSApXG4ifQ==---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "lxS(~|qJ2b", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #d0d0d0\">ord_date,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">AS</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n         <span style=\"color: #d0d0d0\">ord_date</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEyOTQsICJpZCI6ICIxNTAwNTMxMjc4ODc0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIG9yZF9kYXRlLFxuICAgICAgICAgICBTVU0ocHJpY2UpIEFTIHRvdGFsXG4gICAgRlJPTSBvcmRlcnNcbiAgICBHUk9VUCBCWSBjdXN0X2lkLFxuICAgICAgICAgICAgIG9yZF9kYXRlXG4ifQ==---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code>, <code>ord_date</code> grouping, sum the <code>price</code> field. Excludes the time portion of the date.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #d0d0d0\">{</span>\n           <span style=\"color: #d0d0d0\">cust_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n           <span style=\"color: #d0d0d0\">ord_date:</span> <span style=\"color: #d0d0d0\">{</span>\n               <span style=\"color: #d0d0d0\">month:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$month:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span> <span style=\"color: #d0d0d0\">},</span>\n               <span style=\"color: #d0d0d0\">day:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$dayOfMonth:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span> <span style=\"color: #d0d0d0\">},</span>\n               <span style=\"color: #d0d0d0\">year:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$year:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span><span style=\"color: #d0d0d0\">}</span>\n           <span style=\"color: #d0d0d0\">}</span>\n        <span style=\"color: #d0d0d0\">},</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEzMTIsICJpZCI6ICIxNTAwNTMxMjc4ODc0LTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgLCBgb3JkX2RhdGVgIGdyb3VwaW5nLCBzdW0gdGhlIGBwcmljZWAgZmllbGQuIEV4Y2x1ZGVzIHRoZSB0aW1lIHBvcnRpb24gb2YgdGhlIGRhdGUuXG4gIFxuICAgIDo6OmpzXG4gICAgXG4gICAgXG4gICAgZGIub3JkZXJzLmFnZ3JlZ2F0ZSggW1xuICAgICAgIHtcbiAgICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiB7XG4gICAgICAgICAgICAgICBjdXN0X2lkOiAmcXVvdDskY3VzdF9pZCZxdW90OyxcbiAgICAgICAgICAgICAgIG9yZF9kYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgbW9udGg6IHsgJG1vbnRoOiAmcXVvdDskb3JkX2RhdGUmcXVvdDsgfSxcbiAgICAgICAgICAgICAgICAgICBkYXk6IHsgJGRheU9mTW9udGg6ICZxdW90OyRvcmRfZGF0ZSZxdW90OyB9LFxuICAgICAgICAgICAgICAgICAgIHllYXI6IHsgJHllYXI6ICZxdW90OyRvcmRfZGF0ZSZxdW90O31cbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB0b3RhbDogeyAkc3VtOiAmcXVvdDskcHJpY2UmcXVvdDsgfVxuICAgICAgICAgfVxuICAgICAgIH1cbiAgICBdIClcbiJ9---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "pA+z8=+rVC", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">count</span><span style=\"color: #d0d0d0\">(*)</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id</span>\n<span style=\"color: #6ab825; font-weight: bold\">HAVING</span> <span style=\"color: #6ab825; font-weight: bold\">count</span><span style=\"color: #d0d0d0\">(*)</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">1</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEzMzIsICJpZCI6ICIxNTAwNTMxMzE1OTU0LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIGNvdW50KCopXG4gICAgRlJPTSBvcmRlcnNcbiAgICBHUk9VUCBCWSBjdXN0X2lkXG4gICAgSEFWSU5HIGNvdW50KCopICZndDsgMVxuIn0=---->", 
                "SQL", 
                "<p>For <code>cust_id</code> with multiple records, return the <code>cust_id</code> and the corresponding record count.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">count:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$match:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">count:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEzNDksICJpZCI6ICIxNTAwNTMxMzE1OTU0LTAwMiIsICJtZCI6ICJGb3IgYGN1c3RfaWRgIHdpdGggbXVsdGlwbGUgcmVjb3JkcywgcmV0dXJuIHRoZSBgY3VzdF9pZGAgYW5kIHRoZSBjb3JyZXNwb25kaW5nIHJlY29yZCBjb3VudC5cbiAgXG4gICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi5vcmRlcnMuYWdncmVnYXRlKCBbXG4gICAgICAge1xuICAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6ICZxdW90OyRjdXN0X2lkJnF1b3Q7LFxuICAgICAgICAgICAgY291bnQ6IHsgJHN1bTogMSB9XG4gICAgICAgICB9XG4gICAgICAgfSxcbiAgICAgICB7ICRtYXRjaDogeyBjb3VudDogeyAkZ3Q6IDEgfSB9IH1cbiAgICBdIClcbiJ9---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "skP+C&;xY.", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #d0d0d0\">ord_date,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">AS</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n         <span style=\"color: #d0d0d0\">ord_date</span>\n<span style=\"color: #6ab825; font-weight: bold\">HAVING</span> <span style=\"color: #d0d0d0\">total</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">250</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEzNjMsICJpZCI6ICIxNTAwNTMxMzUwODg1LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIG9yZF9kYXRlLFxuICAgICAgICAgICBTVU0ocHJpY2UpIEFTIHRvdGFsXG4gICAgRlJPTSBvcmRlcnNcbiAgICBHUk9VUCBCWSBjdXN0X2lkLFxuICAgICAgICAgICAgIG9yZF9kYXRlXG4gICAgSEFWSU5HIHRvdGFsICZndDsgMjUwXG4ifQ==---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code>, <code>ord_date</code> grouping, sum the <code>price</code> field and return only where the sum is greater than 250. Excludes the time portion of the date.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #d0d0d0\">{</span>\n           <span style=\"color: #d0d0d0\">cust_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n           <span style=\"color: #d0d0d0\">ord_date:</span> <span style=\"color: #d0d0d0\">{</span>\n               <span style=\"color: #d0d0d0\">month:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$month:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span> <span style=\"color: #d0d0d0\">},</span>\n               <span style=\"color: #d0d0d0\">day:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$dayOfMonth:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span> <span style=\"color: #d0d0d0\">},</span>\n               <span style=\"color: #d0d0d0\">year:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$year:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span><span style=\"color: #d0d0d0\">}</span>\n           <span style=\"color: #d0d0d0\">}</span>\n        <span style=\"color: #d0d0d0\">},</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$match:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">250</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEzODAsICJpZCI6ICIxNTAwNTMxMzUwODg1LTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgLCBgb3JkX2RhdGVgIGdyb3VwaW5nLCBzdW0gdGhlIGBwcmljZWAgZmllbGQgYW5kIHJldHVybiBvbmx5IHdoZXJlIHRoZSBzdW0gaXMgZ3JlYXRlciB0aGFuIDI1MC4gRXhjbHVkZXMgdGhlIHRpbWUgcG9ydGlvbiBvZiB0aGUgZGF0ZS5cbiAgXG4gICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi5vcmRlcnMuYWdncmVnYXRlKCBbXG4gICAgICAge1xuICAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6IHtcbiAgICAgICAgICAgICAgIGN1c3RfaWQ6ICZxdW90OyRjdXN0X2lkJnF1b3Q7LFxuICAgICAgICAgICAgICAgb3JkX2RhdGU6IHtcbiAgICAgICAgICAgICAgICAgICBtb250aDogeyAkbW9udGg6ICZxdW90OyRvcmRfZGF0ZSZxdW90OyB9LFxuICAgICAgICAgICAgICAgICAgIGRheTogeyAkZGF5T2ZNb250aDogJnF1b3Q7JG9yZF9kYXRlJnF1b3Q7IH0sXG4gICAgICAgICAgICAgICAgICAgeWVhcjogeyAkeWVhcjogJnF1b3Q7JG9yZF9kYXRlJnF1b3Q7fVxuICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHRvdGFsOiB7ICRzdW06ICZxdW90OyRwcmljZSZxdW90OyB9XG4gICAgICAgICB9XG4gICAgICAgfSxcbiAgICAgICB7ICRtYXRjaDogeyB0b3RhbDogeyAkZ3Q6IDI1MCB9IH0gfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "BG&zti#>o.", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">as</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'A'</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEzOTEsICJpZCI6ICIxNTAwNTMxMzgyNDAzLTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIFNVTShwcmljZSkgYXMgdG90YWxcbiAgICBGUk9NIG9yZGVyc1xuICAgIFdIRVJFIHN0YXR1cyA9ICZhcG9zO0EmYXBvcztcbiAgICBHUk9VUCBCWSBjdXN0X2lkXG4ifQ==---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code> with status <code>A</code>, sum the <code>price</code> field.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$match:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">'A'</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzE0MDcsICJpZCI6ICIxNTAwNTMxMzgyNDAzLTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgIHdpdGggc3RhdHVzIGBBYCwgc3VtIHRoZSBgcHJpY2VgIGZpZWxkLlxuICBcbiAgICA6Ojpqc1xuICAgIFxuICAgIFxuICAgIGRiLm9yZGVycy5hZ2dyZWdhdGUoIFtcbiAgICAgICB7ICRtYXRjaDogeyBzdGF0dXM6ICZhcG9zO0EmYXBvczsgfSB9LFxuICAgICAgIHtcbiAgICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiAmcXVvdDskY3VzdF9pZCZxdW90OyxcbiAgICAgICAgICAgIHRvdGFsOiB7ICRzdW06ICZxdW90OyRwcmljZSZxdW90OyB9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "rF/fPC!3W~", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(price)</span> <span style=\"color: #6ab825; font-weight: bold\">as</span> <span style=\"color: #d0d0d0\">total</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">status</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'A'</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id</span>\n<span style=\"color: #6ab825; font-weight: bold\">HAVING</span> <span style=\"color: #d0d0d0\">total</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">250</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzE0MjcsICJpZCI6ICIxNTAwNTMxNDA5NTc4LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIFNVTShwcmljZSkgYXMgdG90YWxcbiAgICBGUk9NIG9yZGVyc1xuICAgIFdIRVJFIHN0YXR1cyA9ICZhcG9zO0EmYXBvcztcbiAgICBHUk9VUCBCWSBjdXN0X2lkXG4gICAgSEFWSU5HIHRvdGFsICZndDsgMjUwXG4ifQ==---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code> with status <code>A</code>, sum the <code>price</code> field and return only where the sum is greater than 250.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$match:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">'A'</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$price\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$match:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">total:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$gt:</span> <span style=\"color: #3677a9\">250</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDExMTY1ODgsICJpZCI6ICIxNTAwNTMxNDA5NTc4LTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgIHdpdGggc3RhdHVzIGBBYCwgc3VtIHRoZSBgcHJpY2VgIGZpZWxkIGFuZCByZXR1cm4gb25seSB3aGVyZSB0aGUgc3VtIGlzIGdyZWF0ZXIgdGhhbiAyNTAuXG4gIFxuICAgIDo6OmpzXG4gICAgXG4gICAgXG4gICAgZGIub3JkZXJzLmFnZ3JlZ2F0ZSggW1xuICAgICAgIHsgJG1hdGNoOiB7IHN0YXR1czogJmFwb3M7QSZhcG9zOyB9IH0sXG4gICAgICAge1xuICAgICAgICAgJGdyb3VwOiB7XG4gICAgICAgICAgICBfaWQ6ICZxdW90OyRjdXN0X2lkJnF1b3Q7LFxuICAgICAgICAgICAgdG90YWw6IHsgJHN1bTogJnF1b3Q7JHByaWNlJnF1b3Q7IH1cbiAgICAgICAgIH1cbiAgICAgICB9LFxuICAgICAgIHsgJG1hdGNoOiB7IHRvdGFsOiB7ICRndDogMjUwIH0gfSB9XG4gICAgXSApXG4ifQ==---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "N5uhjpZZz", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n       <span style=\"color: #6ab825; font-weight: bold\">SUM</span><span style=\"color: #d0d0d0\">(li.qty)</span> <span style=\"color: #6ab825; font-weight: bold\">as</span> <span style=\"color: #d0d0d0\">qty</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span> <span style=\"color: #d0d0d0\">o,</span>\n     <span style=\"color: #d0d0d0\">order_lineitem</span> <span style=\"color: #d0d0d0\">li</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">li.order_id</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">o.id</span>\n<span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzE0NTMsICJpZCI6ICIxNTAwNTMxNDQxNDM3LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgIFNVTShsaS5xdHkpIGFzIHF0eVxuICAgIEZST00gb3JkZXJzIG8sXG4gICAgICAgICBvcmRlcl9saW5laXRlbSBsaVxuICAgIFdIRVJFIGxpLm9yZGVyX2lkID0gby5pZFxuICAgIEdST1VQIEJZIGN1c3RfaWRcbiJ9---->", 
                "SQL", 
                "<p>For each unique <code>cust_id</code>, sum the corresponding line item <code>qty</code> fields associated with the orders.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$unwind:</span> <span style=\"color: #ed9d13\">\"$items\"</span> <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">qty:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #ed9d13\">\"$items.qty\"</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzE0NjgsICJpZCI6ICIxNTAwNTMxNDQxNDM3LTAwMiIsICJtZCI6ICJGb3IgZWFjaCB1bmlxdWUgYGN1c3RfaWRgLCBzdW0gdGhlIGNvcnJlc3BvbmRpbmcgbGluZSBpdGVtIGBxdHlgIGZpZWxkcyBhc3NvY2lhdGVkIHdpdGggdGhlIG9yZGVycy5cbiAgXG4gICAgOjo6anNcbiAgICBcbiAgICBcbiAgICBkYi5vcmRlcnMuYWdncmVnYXRlKCBbXG4gICAgICAgeyAkdW53aW5kOiAmcXVvdDskaXRlbXMmcXVvdDsgfSxcbiAgICAgICB7XG4gICAgICAgICAkZ3JvdXA6IHtcbiAgICAgICAgICAgIF9pZDogJnF1b3Q7JGN1c3RfaWQmcXVvdDssXG4gICAgICAgICAgICBxdHk6IHsgJHN1bTogJnF1b3Q7JGl0ZW1zLnF0eSZxdW90OyB9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<p>The SQL examples assume <em>two</em> tables, <code>orders</code> and <code>order_lineitem</code> that join by the <code>order_lineitem.order_id</code> and the <code>orders.id</code> columns. The MongoDB examples assume <em>one</em> collection <code>orders</code> that contain documents of the following prototype:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">{</span>\n  <span style=\"color: #d0d0d0\">cust_id:</span> <span style=\"color: #ed9d13\">\"abc123\"</span><span style=\"color: #d0d0d0\">,</span>\n  <span style=\"color: #d0d0d0\">ord_date:</span> <span style=\"color: #d0d0d0\">ISODate(</span><span style=\"color: #ed9d13\">\"2012-11-02T17:04:11.102Z\"</span><span style=\"color: #d0d0d0\">),</span>\n  <span style=\"color: #d0d0d0\">status:</span> <span style=\"color: #ed9d13\">'A'</span><span style=\"color: #d0d0d0\">,</span>\n  <span style=\"color: #d0d0d0\">price:</span> <span style=\"color: #3677a9\">50</span><span style=\"color: #d0d0d0\">,</span>\n  <span style=\"color: #d0d0d0\">items:</span> <span style=\"color: #d0d0d0\">[</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">sku:</span> <span style=\"color: #ed9d13\">\"xxx\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">qty:</span> <span style=\"color: #3677a9\">25</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">price:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">},</span>\n           <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">sku:</span> <span style=\"color: #ed9d13\">\"yyy\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">qty:</span> <span style=\"color: #3677a9\">25</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">price:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzEwNjYsICJpZCI6ICIxNTAwNTMwOTE2ODEzLTAwNCIsICJtZCI6ICJUaGUgU1FMIGV4YW1wbGVzIGFzc3VtZSBfdHdvXyB0YWJsZXMsIGBvcmRlcnNgIGFuZCBgb3JkZXJfbGluZWl0ZW1gIHRoYXQgam9pbiBieSB0aGUgYG9yZGVyX2xpbmVpdGVtLm9yZGVyX2lkYCBhbmQgdGhlIGBvcmRlcnMuaWRgIGNvbHVtbnMuIFRoZSBNb25nb0RCIGV4YW1wbGVzIGFzc3VtZSBfb25lXyBjb2xsZWN0aW9uIGBvcmRlcnNgIHRoYXQgY29udGFpbiBkb2N1bWVudHMgb2YgdGhlIGZvbGxvd2luZyBwcm90b3R5cGU6XG4gIFxuICAgIDo6OmpzXG4gICAge1xuICAgICAgY3VzdF9pZDogJnF1b3Q7YWJjMTIzJnF1b3Q7LFxuICAgICAgb3JkX2RhdGU6IElTT0RhdGUoJnF1b3Q7MjAxMi0xMS0wMlQxNzowNDoxMS4xMDJaJnF1b3Q7KSxcbiAgICAgIHN0YXR1czogJmFwb3M7QSZhcG9zOyxcbiAgICAgIHByaWNlOiA1MCxcbiAgICAgIGl0ZW1zOiBbIHsgc2t1OiAmcXVvdDt4eHgmcXVvdDssIHF0eTogMjUsIHByaWNlOiAxIH0sXG4gICAgICAgICAgICAgICB7IHNrdTogJnF1b3Q7eXl5JnF1b3Q7LCBxdHk6IDI1LCBwcmljZTogMSB9IF1cbiAgICB9XG4ifQ==---->", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "g?UR4CG4%$", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #6ab825; font-weight: bold\">COUNT</span><span style=\"color: #d0d0d0\">(*)</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #6ab825; font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n             <span style=\"color: #d0d0d0\">ord_date</span>\n      <span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">orders</span>\n      <span style=\"color: #6ab825; font-weight: bold\">GROUP</span> <span style=\"color: #6ab825; font-weight: bold\">BY</span> <span style=\"color: #d0d0d0\">cust_id,</span>\n               <span style=\"color: #d0d0d0\">ord_date)</span>\n      <span style=\"color: #6ab825; font-weight: bold\">as</span> <span style=\"color: #d0d0d0\">DerivedTable</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzE0ODMsICJpZCI6ICIxNTAwNTMxNDcwMzg5LTAwMCIsICJtZCI6ICIgICAgOjo6c3FsXG4gICAgXG4gICAgXG4gICAgU0VMRUNUIENPVU5UKCopXG4gICAgRlJPTSAoU0VMRUNUIGN1c3RfaWQsXG4gICAgICAgICAgICAgICAgIG9yZF9kYXRlXG4gICAgICAgICAgRlJPTSBvcmRlcnNcbiAgICAgICAgICBHUk9VUCBCWSBjdXN0X2lkLFxuICAgICAgICAgICAgICAgICAgIG9yZF9kYXRlKVxuICAgICAgICAgIGFzIERlcml2ZWRUYWJsZVxuIn0=---->", 
                "SQL", 
                "<p>Count the number of distinct <code>cust_id</code>, <code>ord_date</code> groupings. Excludes the time portion of the date.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.orders.aggregate(</span> <span style=\"color: #d0d0d0\">[</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #d0d0d0\">{</span>\n           <span style=\"color: #d0d0d0\">cust_id:</span> <span style=\"color: #ed9d13\">\"$cust_id\"</span><span style=\"color: #d0d0d0\">,</span>\n           <span style=\"color: #d0d0d0\">ord_date:</span> <span style=\"color: #d0d0d0\">{</span>\n               <span style=\"color: #d0d0d0\">month:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$month:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span> <span style=\"color: #d0d0d0\">},</span>\n               <span style=\"color: #d0d0d0\">day:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$dayOfMonth:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span> <span style=\"color: #d0d0d0\">},</span>\n               <span style=\"color: #d0d0d0\">year:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$year:</span> <span style=\"color: #ed9d13\">\"$ord_date\"</span><span style=\"color: #d0d0d0\">}</span>\n           <span style=\"color: #d0d0d0\">}</span>\n        <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">},</span>\n   <span style=\"color: #d0d0d0\">{</span>\n     <span style=\"color: #d0d0d0\">$group:</span> <span style=\"color: #d0d0d0\">{</span>\n        <span style=\"color: #d0d0d0\">_id:</span> <span style=\"color: #6ab825; font-weight: bold\">null</span><span style=\"color: #d0d0d0\">,</span>\n        <span style=\"color: #d0d0d0\">count:</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$sum:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span>\n     <span style=\"color: #d0d0d0\">}</span>\n   <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA1MzE1MDEsICJpZCI6ICIxNTAwNTMxNDcwMzg5LTAwMiIsICJtZCI6ICJDb3VudCB0aGUgbnVtYmVyIG9mIGRpc3RpbmN0IGBjdXN0X2lkYCwgYG9yZF9kYXRlYCBncm91cGluZ3MuIEV4Y2x1ZGVzIHRoZSB0aW1lIHBvcnRpb24gb2YgdGhlIGRhdGUuXG4gIFxuICAgIDo6OmpzXG4gICAgXG4gICAgXG4gICAgZGIub3JkZXJzLmFnZ3JlZ2F0ZSggW1xuICAgICAgIHtcbiAgICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiB7XG4gICAgICAgICAgICAgICBjdXN0X2lkOiAmcXVvdDskY3VzdF9pZCZxdW90OyxcbiAgICAgICAgICAgICAgIG9yZF9kYXRlOiB7XG4gICAgICAgICAgICAgICAgICAgbW9udGg6IHsgJG1vbnRoOiAmcXVvdDskb3JkX2RhdGUmcXVvdDsgfSxcbiAgICAgICAgICAgICAgICAgICBkYXk6IHsgJGRheU9mTW9udGg6ICZxdW90OyRvcmRfZGF0ZSZxdW90OyB9LFxuICAgICAgICAgICAgICAgICAgIHllYXI6IHsgJHllYXI6ICZxdW90OyRvcmRfZGF0ZSZxdW90O31cbiAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgIH1cbiAgICAgICB9LFxuICAgICAgIHtcbiAgICAgICAgICRncm91cDoge1xuICAgICAgICAgICAgX2lkOiBudWxsLFxuICAgICAgICAgICAgY291bnQ6IHsgJHN1bTogMSB9XG4gICAgICAgICB9XG4gICAgICAgfVxuICAgIF0gKVxuIn0=---->", 
                "MongoDB", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/reference/sql-aggregation-comparison/"
            ], 
            "flags": 0, 
            "guid": "nmGI,VUQJz", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo", 
                "sql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><code>mongo</code></div>", 
                "alias", 
                "<div><code>mongo --host localhost --port 27017</code></div>", 
                "equivalent command", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "Lh4T7dnPqs", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>.mongorc.js</code> file", 
                "MongoDB concept", 
                "When starting, <code class=\"xref mongodb mongodb-program docutils literal\"><span class=\"pre\">mongo</span></code> checks the user’s <span class=\"target\" id=\"index-0\"></span><code class=\"xref std std-envvar docutils literal\"><span class=\"pre\">HOME</span></code>\ndirectory for a JavaScript file named <span class=\"std std-ref\"><code>.mongorc.js</code></span>. If found, <code class=\"xref mongodb mongodb-program docutils literal\"><span class=\"pre\">mongo</span></code> interprets the\ncontent of <code class=\"file docutils literal\"><span class=\"pre\">.mongorc.js</span></code> before displaying the prompt for the\nfirst time. If you use the shell to evaluate a JavaScript file or\nexpression, either by using the <code class=\"xref std std-option docutils literal\"><span class=\"pre\">--eval</span></code>\noption on the command line or by specifying <span class=\"std std-ref\">a <code>.js</code> file to\nmongo</span>, <code class=\"xref mongodb mongodb-program docutils literal\"><span class=\"pre\">mongo</span></code> will read the\n<code class=\"docutils literal\"><span class=\"pre\">.mongorc.js</span></code> file <em>after</em> the JavaScript has finished processing.\nYou can prevent <code class=\"docutils literal\"><span class=\"pre\">.mongorc.js</span></code> from being loaded by using the\n<code class=\"xref std std-option docutils literal\"><span class=\"pre\">--norc</span></code> option.", 
                "description", 
                "<div><br /></div>", 
                "reverse", 
                "", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "If&l/F{/r2", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "MySQL <code>WHERE</code> vs <code>HAVING</code>", 
                "", 
                "<p><code>WHERE</code> is used to select data in the original tables being processed. <code>HAVING</code> is used to filter data in the result set that was produced by the query. This means it can reference aggregate values and aliases in the <code>SELECT</code> clause.</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">t1.val</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #d0d0d0\">t2.val</span> <span style=\"color: #d0d0d0\">diff</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">t1</span> <span style=\"color: #6ab825; font-weight: bold\">JOIN</span> <span style=\"color: #d0d0d0\">t2</span> <span style=\"color: #6ab825; font-weight: bold\">ON</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #6ab825; font-weight: bold\">some</span> <span style=\"color: #d0d0d0\">expression)</span>\n<span style=\"color: #6ab825; font-weight: bold\">HAVING</span> <span style=\"color: #d0d0d0\">diff</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">10</span>\n</pre></div>\n<p>This wouldn't work using <code>WHERE</code> because <code>diff</code> is an alias, not one of the original table columns. You could write instead:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">SELECT</span> <span style=\"color: #d0d0d0\">t1.val</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #d0d0d0\">t2.val</span> <span style=\"color: #d0d0d0\">diff</span>\n<span style=\"color: #6ab825; font-weight: bold\">FROM</span> <span style=\"color: #d0d0d0\">t1</span> <span style=\"color: #6ab825; font-weight: bold\">JOIN</span> <span style=\"color: #d0d0d0\">t2</span> <span style=\"color: #6ab825; font-weight: bold\">ON</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #6ab825; font-weight: bold\">some</span> <span style=\"color: #d0d0d0\">expression)</span>\n<span style=\"color: #6ab825; font-weight: bold\">WHERE</span> <span style=\"color: #d0d0d0\">t1.val</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #d0d0d0\">t2.val</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">10</span>\n</pre></div>\n<p>but then it may have to do all the subtractions twice: once for selecting, and again to produce the result set.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA2MDI4MTQsICJpZCI6ICIxNTAwNjAyNjUyODE4LTAwMiIsICJtZCI6ICJgV0hFUkVgIGlzIHVzZWQgdG8gc2VsZWN0IGRhdGEgaW4gdGhlIG9yaWdpbmFsIHRhYmxlcyBiZWluZyBwcm9jZXNzZWQuIGBIQVZJTkdgIGlzIHVzZWQgdG8gZmlsdGVyIGRhdGEgaW4gdGhlIHJlc3VsdCBzZXQgdGhhdCB3YXMgcHJvZHVjZWQgYnkgdGhlIHF1ZXJ5LiBUaGlzIG1lYW5zIGl0IGNhbiByZWZlcmVuY2UgYWdncmVnYXRlIHZhbHVlcyBhbmQgYWxpYXNlcyBpbiB0aGUgYFNFTEVDVGAgY2xhdXNlLlxuICBcbiAgICA6OjpzcWxcbiAgICBTRUxFQ1QgdDEudmFsIC0gdDIudmFsIGRpZmZcbiAgICBGUk9NIHQxIEpPSU4gdDIgT04gKHNvbWUgZXhwcmVzc2lvbilcbiAgICBIQVZJTkcgZGlmZiAmZ3Q7IDEwXG4gIFxuVGhpcyB3b3VsZG4mYXBvczt0IHdvcmsgdXNpbmcgYFdIRVJFYCBiZWNhdXNlIGBkaWZmYCBpcyBhbiBhbGlhcywgbm90IG9uZSBvZiB0aGUgb3JpZ2luYWwgdGFibGUgY29sdW1ucy4gWW91IGNvdWxkIHdyaXRlIGluc3RlYWQ6XG4gIFxuICAgIDo6OnNxbFxuICAgIFNFTEVDVCB0MS52YWwgLSB0Mi52YWwgZGlmZlxuICAgIEZST00gdDEgSk9JTiB0MiBPTiAoc29tZSBleHByZXNzaW9uKVxuICAgIFdIRVJFIHQxLnZhbCAtIHQyLnZhbCAmZ3Q7IDEwXG4gIFxuYnV0IHRoZW4gaXQgbWF5IGhhdmUgdG8gZG8gYWxsIHRoZSBzdWJ0cmFjdGlvbnMgdHdpY2U6IG9uY2UgZm9yIHNlbGVjdGluZywgYW5kIGFnYWluIHRvIHByb2R1Y2UgdGhlIHJlc3VsdCBzZXQuXG4ifQ==---->", 
                "", 
                "", 
                "", 
                "", 
                "https://stackoverflow.com/a/16156003/172602"
            ], 
            "flags": 0, 
            "guid": "v;^(Px>#a", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mysql"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "modify pull request locally", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">git fetch origin pull/<span style=\"color: #40ffff\">$ID</span>/head:<span style=\"color: #40ffff\">$BRANCHNAME</span> \ngit checkout <span style=\"color: #40ffff\">$BRANCHNAME</span>\n<span style=\"color: #999999; font-style: italic\"># do stuff</span>\ngit push origin <span style=\"color: #40ffff\">$BRANCHNAME</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA5Mjc2MTcsICJpZCI6ICIxNTAwOTI3NDIzNTQxLTAwMiIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGdpdCBmZXRjaCBvcmlnaW4gcHVsbC8kSUQvaGVhZDokQlJBTkNITkFNRSBcbiAgICBnaXQgY2hlY2tvdXQgJEJSQU5DSE5BTUVcbiAgICAjIGRvIHN0dWZmXG4gICAgZ2l0IHB1c2ggb3JpZ2luICRCUkFOQ0hOQU1FXG4ifQ==---->", 
                "", 
                "<p>An inactive pull request is one whose owner has either stopped \nresponding, or, more likely, has deleted their fork. If a fork was \ndeleted, the pull request can still be merged. However, if you want to \nmake changes to a pull request and the author is not responding, you'll \nneed to perform some additional steps to update the pull request.</p>\n<p>Once a pull request is opened, GitHub stores all of the changes \nonline for you. In other words, commits in a pull request are available \nin a repository even before the PR is merged. That means you can fetch \nan open pull request and recreate it as your own.</p>\n<p>Anyone can work with a previously opened pull request to continue \nworking on it, test it out, or even open a new pull request with \nadditional changes. However, only collaborators with push access can \nmerge pull requests.</p><p>$ git fetch origin +pu:pu maint:tmp</p><p>\n<div class=\"paragraph\">\n<p>This updates (or creates, as necessary) branches <code>pu</code> and <code>tmp</code> in\nthe local repository by fetching from the branches (respectively)\n<code>pu</code> and <code>maint</code> from the remote repository.</p>\n</div>\n<div class=\"paragraph\">\n<p>The <code>pu</code> branch will be updated even if it is does not fast-forward,\nbecause it is prefixed with a plus sign; <code>tmp</code> will not be.</p></div></p>", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "pn/o1P^UM`", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "git"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "css white-space", 
                "CSS property", 
                "specifies how white space inside an element is handled", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">p</span> <span style=\"color: #d0d0d0\">{</span>  \n    <span style=\"color: #6ab825; font-weight: bold\">white-space</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #6ab825; font-weight: bold\">nowrap</span><span style=\"color: #d0d0d0\">;</span>  \n<span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDA5Mjg0MzUsICJpZCI6ICIxNTAwOTI3ODY0ODYwLTAwNCIsICJtZCI6ICIgICAgOjo6Y3NzXG4gICAgcCB7ICBcbiAgICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsgIFxuICAgIH1cbiJ9---->", 
                "reverse", 
                "<code>white-space</code>", 
                "https://www.w3schools.com/cssref/pr_text_white-space.asp"
            ], 
            "flags": 0, 
            "guid": "fOyjj,H2*P", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "css"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "css white-space normal", 
                "CSS <code>white-space</code>&nbsp;value", 
                "whitespace <b>collapse</b>; wraps if needed", 
                "", 
                "<font color=\"#a52a2a\">default</font>", 
                "reverse", 
                "<code>normal</code>", 
                "https://www.w3schools.com/cssref/pr_text_white-space.asp"
            ], 
            "flags": 0, 
            "guid": "kl{xz{tjTd", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "css"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "css white-space nowrap", 
                "CSS <code>white-space</code>&nbsp;value", 
                "whitespace <b>collapse</b>; wraps only on <code>&lt;br&gt;</code>", 
                "", 
                "<font color=\"#a52a2a\"><br /></font>", 
                "reverse", 
                "<code>nowrap</code>", 
                "https://www.w3schools.com/cssref/pr_text_white-space.asp"
            ], 
            "flags": 0, 
            "guid": "uu/n|gmMz_", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "css"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "css white-space pre", 
                "CSS <code>white-space</code>&nbsp;value", 
                "whitespace <b>preserved</b>; wraps on linebreaks", 
                "", 
                "<font color=\"#a52a2a\"><br /></font>", 
                "reverse", 
                "<code>pre</code>", 
                "https://www.w3schools.com/cssref/pr_text_white-space.asp"
            ], 
            "flags": 0, 
            "guid": "KaEfd%l7}|", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "css"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "css white-space pre-line", 
                "CSS <code>white-space</code>&nbsp;value", 
                "whitespace <b>collapse</b>; wraps if needed and on linebreaks", 
                "", 
                "<font color=\"#a52a2a\"><br /></font>", 
                "reverse", 
                "<code>pre-line</code>", 
                "https://www.w3schools.com/cssref/pr_text_white-space.asp"
            ], 
            "flags": 0, 
            "guid": "Dw?K4yfCYZ", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "css"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "css white-space pre-wrap", 
                "CSS <code>white-space</code>&nbsp;value", 
                "whitespace <b>preserved</b>; wraps if needed and on linebreaks", 
                "", 
                "<font color=\"#a52a2a\"><br /></font>", 
                "reverse", 
                "<code>pre-wrap</code>", 
                "https://www.w3schools.com/cssref/pr_text_white-space.asp"
            ], 
            "flags": 0, 
            "guid": "hlg8&#v_D`", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "css"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<code>$unwind</code>", 
                "Mongo operator", 
                "<p>Deconstructs an array field from the input documents to output a document for <em>each</em> element. Each output document is the input document with the value of the array field replaced by the element.</p>\n<p>Consider an <code>inventory</code> with the following document:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">{</span> <span style=\"color: #ed9d13\">\"_id\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"item\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"ABC1\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">sizes:</span> <span style=\"color: #d0d0d0\">[</span> <span style=\"color: #ed9d13\">\"S\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"M\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"L\"</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">}</span>\n</pre></div>\n<p>The following aggregation uses the <code>$unwind</code> stage to output a document for each element in the <code>sizes</code> array:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.inventory.aggregate(</span> <span style=\"color: #d0d0d0\">[</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">$unwind</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"$sizes\"</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>The operation returns the following results:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">{</span> <span style=\"color: #ed9d13\">\"_id\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"item\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"ABC1\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"sizes\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"S\"</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">{</span> <span style=\"color: #ed9d13\">\"_id\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"item\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"ABC1\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"sizes\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"M\"</span> <span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">{</span> <span style=\"color: #ed9d13\">\"_id\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"item\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"ABC1\"</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">\"sizes\"</span> <span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">\"L\"</span> <span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDEzMDA1NTQsICJpZCI6ICIxNTAxMzAwMzk4NjMyLTAwMiIsICJtZCI6ICJEZWNvbnN0cnVjdHMgYW4gYXJyYXkgZmllbGQgZnJvbSB0aGUgaW5wdXQgZG9jdW1lbnRzIHRvIG91dHB1dCBhIGRvY3VtZW50IGZvciBfZWFjaF8gZWxlbWVudC4gRWFjaCBvdXRwdXQgZG9jdW1lbnQgaXMgdGhlIGlucHV0IGRvY3VtZW50IHdpdGggdGhlIHZhbHVlIG9mIHRoZSBhcnJheSBmaWVsZCByZXBsYWNlZCBieSB0aGUgZWxlbWVudC5cbiAgXG5Db25zaWRlciBhbiBgaW52ZW50b3J5YCB3aXRoIHRoZSBmb2xsb3dpbmcgZG9jdW1lbnQ6XG4gIFxuICAgIDo6OmpzXG4gICAgeyAmcXVvdDtfaWQmcXVvdDsgOiAxLCAmcXVvdDtpdGVtJnF1b3Q7IDogJnF1b3Q7QUJDMSZxdW90Oywgc2l6ZXM6IFsgJnF1b3Q7UyZxdW90OywgJnF1b3Q7TSZxdW90OywgJnF1b3Q7TCZxdW90O10gfVxuICBcblRoZSBmb2xsb3dpbmcgYWdncmVnYXRpb24gdXNlcyB0aGUgYCR1bndpbmRgIHN0YWdlIHRvIG91dHB1dCBhIGRvY3VtZW50IGZvciBlYWNoIGVsZW1lbnQgaW4gdGhlIGBzaXplc2AgYXJyYXk6XG4gIFxuICAgIDo6OmpzXG4gICAgZGIuaW52ZW50b3J5LmFnZ3JlZ2F0ZSggWyB7ICR1bndpbmQgOiAmcXVvdDskc2l6ZXMmcXVvdDsgfSBdIClcbiAgXG5UaGUgb3BlcmF0aW9uIHJldHVybnMgdGhlIGZvbGxvd2luZyByZXN1bHRzOlxuICBcbiAgICA6Ojpqc1xuICAgIHsgJnF1b3Q7X2lkJnF1b3Q7IDogMSwgJnF1b3Q7aXRlbSZxdW90OyA6ICZxdW90O0FCQzEmcXVvdDssICZxdW90O3NpemVzJnF1b3Q7IDogJnF1b3Q7UyZxdW90OyB9XG4gICAgeyAmcXVvdDtfaWQmcXVvdDsgOiAxLCAmcXVvdDtpdGVtJnF1b3Q7IDogJnF1b3Q7QUJDMSZxdW90OywgJnF1b3Q7c2l6ZXMmcXVvdDsgOiAmcXVvdDtNJnF1b3Q7IH1cbiAgICB7ICZxdW90O19pZCZxdW90OyA6IDEsICZxdW90O2l0ZW0mcXVvdDsgOiAmcXVvdDtBQkMxJnF1b3Q7LCAmcXVvdDtzaXplcyZxdW90OyA6ICZxdW90O0wmcXVvdDsgfVxuICBcbiJ9---->", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "hv_Dxo/38N", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "regular", 
                "Unix file type", 
                "<div>show up in <code>ls -l</code> without a specific character in the mode field</div>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #40ffff\">$ </span>ls -l /etc/passwd\n-rw-r--r-- ... /etc/passwd\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE1NDc1ODQsICJpZCI6ICIxNTAxNTQ3MzkxMTAxLTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgICQgbHMgLWwgL2V0Yy9wYXNzd2RcbiAgICAtcnctci0tci0tIC4uLiAvZXRjL3Bhc3N3ZFxuIn0=---->", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "J0`QYA_Or0", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "directory", 
                "Unix file type", 
                "<div>marked with a <code>d</code> as the first letter in the mode field in the output of <code>ls -dl</code> or <code>stat</code></div>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #40ffff\">$ </span>ls -dl /\ndrwxr-xr-x <span style=\"color: #3677a9\">26</span> root root <span style=\"color: #3677a9\">4096</span> Sep <span style=\"color: #3677a9\">22</span> 09:29 /\n\n<span style=\"color: #40ffff\">$ </span>stat /\n  File: <span style=\"color: #ed9d13\">\"/\"</span>\n  Size: <span style=\"color: #3677a9\">4096</span>            Blocks: <span style=\"color: #3677a9\">8</span>          IO Block: <span style=\"color: #3677a9\">4096</span>   **directory**\nDevice: 802h/2050d      Inode: <span style=\"color: #3677a9\">128</span>         Links: 26\nAccess: <span style=\"color: #d0d0d0\">(</span>0755/**d**rwxr-xr-x<span style=\"color: #d0d0d0\">)</span>  Uid: <span style=\"color: #d0d0d0\">(</span>    0/    root<span style=\"color: #d0d0d0\">)</span>   Gid: <span style=\"color: #d0d0d0\">(</span>    0/    root<span style=\"color: #d0d0d0\">)</span>\n...\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE1NDc2NjMsICJpZCI6ICIxNTAxNTQ3NTkxMzQ5LTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICBcbiAgXG4gICAgJCBscyAtZGwgL1xuICAgIGRyd3hyLXhyLXggMjYgcm9vdCByb290IDQwOTYgU2VwIDIyIDA5OjI5IC9cbiAgXG4gICAgJCBzdGF0IC9cbiAgICAgIEZpbGU6ICZxdW90Oy8mcXVvdDtcbiAgICAgIFNpemU6IDQwOTYgICAgICAgICAgICBCbG9ja3M6IDggICAgICAgICAgSU8gQmxvY2s6IDQwOTYgICAqKmRpcmVjdG9yeSoqXG4gICAgRGV2aWNlOiA4MDJoLzIwNTBkICAgICAgSW5vZGU6IDEyOCAgICAgICAgIExpbmtzOiAyNlxuICAgIEFjY2VzczogKDA3NTUvKipkKipyd3hyLXhyLXgpICBVaWQ6ICggICAgMC8gICAgcm9vdCkgICBHaWQ6ICggICAgMC8gICAgcm9vdClcbiAgICAuLi5cbiJ9---->", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "s+l&DVx7%D", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "symbolic link", 
                "Unix file type", 
                "This special file is stored as a textual representation of the referenced file's path (which means the destination may be a relative path, or may not exist at all).&nbsp;It is marked with an&nbsp;<code><b>l</b></code>&nbsp;(lower case&nbsp;<code>L</code>) as the first letter of the mode string.", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">lrwxrwxrwx ... termcap -&gt; /usr/share/misc/termcap\nlrwxrwxrwx ... S03xinetd -&gt; ../init.d/xinetd\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE1NDc3NDcsICJpZCI6ICIxNTAxNTQ3NjczNTYwLTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIFxuICAgIFxuICAgIGxyd3hyd3hyd3ggLi4uIHRlcm1jYXAgLSZndDsgL3Vzci9zaGFyZS9taXNjL3Rlcm1jYXBcbiAgICBscnd4cnd4cnd4IC4uLiBTMDN4aW5ldGQgLSZndDsgLi4vaW5pdC5kL3hpbmV0ZFxuIn0=---->", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "vcDT6A_dj8", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "named pipe", 
                "Unix file type", 
                "Special files that can exist anywhere in the file system, are made with the command&nbsp;<code>mkfifo</code>&nbsp;and are marked with a&nbsp;<code>p</code>&nbsp;as the first letter of the mode string.", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">prw-rw---- ... mypipe\n</pre></div>\n<p>There are however circumstances where the communicating processes must use <em>named</em> pipes. One such circumstance is that the processes have to be executed under different user names and permissions.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE1NDc5MjYsICJpZCI6ICIxNTAxNTQ3NzYzMjI5LTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHBydy1ydy0tLS0gLi4uIG15cGlwZVxuICBcblRoZXJlIGFyZSBob3dldmVyIGNpcmN1bXN0YW5jZXMgd2hlcmUgdGhlIGNvbW11bmljYXRpbmcgcHJvY2Vzc2VzIG11c3QgdXNlIF9uYW1lZF8gcGlwZXMuIE9uZSBzdWNoIGNpcmN1bXN0YW5jZSBpcyB0aGF0IHRoZSBwcm9jZXNzZXMgaGF2ZSB0byBiZSBleGVjdXRlZCB1bmRlciBkaWZmZXJlbnQgdXNlciBuYW1lcyBhbmQgcGVybWlzc2lvbnMuXG4ifQ==---->", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "k>#kelvcdR", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "socket", 
                "Unix file type", 
                "These allow communication between two processes. In addition to sending data, processes can send&nbsp;file descriptors&nbsp;across these using the&nbsp;<code>sendmsg()</code>&nbsp;and&nbsp;<code>recvmsg()</code>&nbsp;system.&nbsp;Unlike named pipes, these are fully duplex-capable and are&nbsp;marked with an&nbsp;<code>s</code>&nbsp;as the first letter of the mode string.", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">srwxrwxrwx /tmp/.X11-unix/X0\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE1NDgwNDQsICJpZCI6ICIxNTAxNTQ3OTI4OTEwLTAwNCIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIFxuICAgIFxuICAgIHNyd3hyd3hyd3ggL3RtcC8uWDExLXVuaXgvWDBcbiJ9---->", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "zTGX@(,J]$", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "device", 
                "Unix file type", 
                "Used to apply access rights and to direct operations on the files to the appropriate device drivers.", 
                "", 
                "In Unix, almost all things are handled as files and have a location in the file system—even hardware devices like hard drives. The great exception for devices and the files that represent them are network&nbsp; devices that do not turn up in the file system but are handled separately.", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "vTke>OH5HL", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "character device", 
                "Unix file type", 
                "provide only a serial stream of input or output", 
                "", 
                "marked with a <code><b>c</b></code>", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "QS@SN[,?Ns", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "block device", 
                "Unix file type", 
                "randomly accessible", 
                "", 
                "marked with a <code><b>b</b></code>", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "CL^BKtoT.r", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "door", 
                "Unix file type", 
                "Special file for inter-process communication between a client and server, currently implemented only in&nbsp;Solaris.", 
                "", 
                "marked with a <b>d</b>", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Unix_file_types"
            ], 
            "flags": 0, 
            "guid": "r45{|{>zg", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: db", 
                "<code>mongo</code> Shell command", 
                "display the database you are using", 
                "", 
                "", 
                "reverse", 
                "<code>db</code>", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "bd&KJ=PLRf", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo:&nbsp;use &lt;database&gt;<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code> Shell command", 
                "switch databases", 
                "", 
                "", 
                "reverse", 
                "<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>\n<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><!--StartFragment--><code>use &lt;…&gt;</code><!--EndFragment--></p>", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "Bk3tNQ)hJV", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo:&nbsp;show dbs<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code> Shell command", 
                "list available databases", 
                "", 
                "", 
                "reverse", 
                "<code>show dbs</code>", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "GW8x$Ci4,`", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Can you switch to nonexisting <code>mongo</code> database?<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<br />", 
                "Yes. When you first store data in the database, such as by creating a collection, MongoDB creates the database.", 
                "", 
                "", 
                "", 
                "", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "rZiL>]6dP`", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: create db and collection<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;concept", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">use</span> <span style=\"color: #6ab825; font-weight: bold\">myNewDatabase</span>\n<span style=\"color: #6ab825; font-weight: bold\">db</span><span style=\"color: #447fcf; text-decoration: underline\">.myCollection.insertOne</span><span style=\"color: #d0d0d0\">(</span> <span style=\"color: #d0d0d0\">{</span> <span style=\"color: #d0d0d0\">x:</span> <span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">}</span> <span style=\"color: #d0d0d0\">);</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE3MzYzMTYsICJpZCI6ICIxNTAxNzM2MjA0NzEwLTAwMiIsICJtZCI6ICIgICAgdXNlIG15TmV3RGF0YWJhc2VcbiAgICBkYi5teUNvbGxlY3Rpb24uaW5zZXJ0T25lKCB7IHg6IDEgfSApO1xuIn0=---->", 
                "<code>mongo</code>&nbsp;Shell commands", 
                "", 
                "reverse", 
                "create both the database\n<code class=\"docutils literal\"><span class=\"pre\">myNewDatabase</span></code> and the <span class=\"xref std std-term\">collection</span> <code class=\"docutils literal\"><span class=\"pre\">myCollection</span></code>", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "EuJ.%>Gz6l", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: getCollection()&nbsp;<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;concept", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db[</span><span style=\"color: #ed9d13\">\"3test\"</span><span style=\"color: #d0d0d0\">].find()</span>\n<span style=\"color: #d0d0d0\">db.getCollection(</span><span style=\"color: #ed9d13\">\"3test\"</span><span style=\"color: #d0d0d0\">).find()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE3MzY1NzksICJpZCI6ICIxNTAxNzM2NDQ2ODU5LTAwMiIsICJtZCI6ICIgICAgOjo6amF2YXNjcmlwdFxuICAgIGRiWyZxdW90OzN0ZXN0JnF1b3Q7XS5maW5kKClcbiAgICBkYi5nZXRDb2xsZWN0aW9uKCZxdW90OzN0ZXN0JnF1b3Q7KS5maW5kKClcbiJ9---->", 
                "<code>mongo</code>&nbsp;Shell commands", 
                "", 
                "reverse", 
                "alternate syntax to refer to <code>mongo</code> collection for when name contains&nbsp;a space, hyphen, or starts with a number", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "t%4n0?McX-", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: pretty()<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;Shell function", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">db.myCollection.find().pretty()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE3NDA5NjAsICJpZCI6ICIxNTAxNzQwNzEyOTU0LTAwMiIsICJtZCI6ICIgICAgOjo6amF2YXNjcmlwdFxuICAgIGRiLm15Q29sbGVjdGlvbi5maW5kKCkucHJldHR5KClcbiJ9---->", 
                "<br />", 
                "", 
                "reverse", 
                "format <code>mongo</code> printed result", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "#+uHufB>v", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: print()<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;Shell method", 
                "<div>print without formatting</div>", 
                "", 
                "", 
                "reverse", 
                "<code>print()</code>", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "nmS`r#)V-o", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: printjson()<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;Shell method", 
                "<div>print with <span class=\"xref std std-term\">JSON</span> formatting</div>", 
                "", 
                "", 
                "reverse", 
                "<code>print(<i>tojson(</i>&lt;obj&gt;<i>)</i>)</code> or&nbsp;<code>printjson()</code>", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "A;^g.8W-FA", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: exit line continuation mode<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;Shell concept", 
                "<div>enter two blank\nlines</div>", 
                "", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">(x</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #3677a9\">0</span>\n<span style=\"color: #d0d0d0\">...</span>\n<span style=\"color: #d0d0d0\">...</span>\n<span style=\"color: #d0d0d0\">&gt;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE1MDE3NDEyNDUsICJpZCI6ICIxNTAxNzQxMTIwODEzLTAwNCIsICJtZCI6ICIgICAgOjo6amF2YXNjcmlwdFxuICAgICZndDsgaWYgKHggJmd0OyAwXG4gICAgLi4uXG4gICAgLi4uXG4gICAgJmd0O1xuIn0=---->", 
                "reverse", 
                "how to exit&nbsp;<code>mongo</code> line continuation mode", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "QV=?J<7w,$", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "mongo: exit shell<style type=\"text/css\">\np, li { white-space: pre-wrap; }\n</style>", 
                "<code>mongo</code>&nbsp;Shell concept", 
                "<div>type <code class=\"docutils literal\"><span class=\"pre\">quit()</span></code> or use the <code class=\"docutils literal\"><span class=\"pre\">&lt;Ctrl-C&gt;</span></code> shortcut</div>", 
                "", 
                "<div><br /></div>", 
                "reverse", 
                "how to exit the <code>mongo</code> shell", 
                "https://docs.mongodb.com/manual/mongo/"
            ], 
            "flags": 0, 
            "guid": "Hnmc[gd}QD", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "mongo"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "split window", 
                "iTerm2 function", 
                "<kbd>⌘D</kbd> splits horizontally and <kbd>⇧⌘D</kbd> vertically", 
                "shortcut keys", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "LS%vvl]_0;", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>1</kbd>", 
                "number", 
                "<kbd>!</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "fspK<W@0}s", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>2</kbd>", 
                "number", 
                "<kbd>@</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "BZ@mbEN/rH", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>3</kbd>", 
                "number", 
                "<kbd>#</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "d1_{us5qzG", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>4</kbd>", 
                "number", 
                "<kbd>$</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "dQsGb:|%}P", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>5</kbd>", 
                "number", 
                "<kbd>%</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "-jeBxDFX?", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>6</kbd>", 
                "number", 
                "<kbd>^</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "n2pJ8<I88a", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>7</kbd>", 
                "number", 
                "<kbd>&amp;</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "F,HPP#!!e*", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>8</kbd>", 
                "number", 
                "<kbd>*</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "n`ilaa<6+4", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>9</kbd>", 
                "number", 
                "<kbd>(</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "sC1zIQWgUu", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<kbd>0</kbd>", 
                "number", 
                "<kbd>)</kbd>", 
                "symbol", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "BZ3`jX.bk_", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "basics"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "ANSI", 
                "acronym", 
                "<div>American National Standards Institute</div>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "j`D$t,KqE,", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "ISO", 
                "acronym", 
                "<div>International Organization for Standardization</div>", 
                "", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "C/j<#<4[TD", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "ISO keyboard layout", 
                "", 
                "<div><img src=\"ISO_layout_basic.svg\" /></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "k|72.,VA?x", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "ANSI keyboard layout", 
                "", 
                "<div><img src=\"ANSI_layout_basic.svg\" /></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "AwuTv49s+>", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Remington No. 1 (1874)", 
                "keyboard layout influencer", 
                "introduced QWERTY&nbsp;(though 1 and 0 were added later)", 
                "", 
                "", 
                "", 
                "Sholes and Glidden typewriter", 
                "https://en.wikipedia.org/wiki/Keyboard_layout#History"
            ], 
            "flags": 0, 
            "guid": "piY0jZMQkH", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Remington No. 2 (1878)", 
                "keyboard layout influencer", 
                "introduced the shift key", 
                "", 
                "shifted keys date in some cases to the No. 2 (1878), in other cases to the Selectric (1961)", 
                "", 
                "", 
                "https://en.wikipedia.org/wiki/Keyboard_layout#History"
            ], 
            "flags": 0, 
            "guid": "z^~Reu@[($", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "IBM Selectric (1961)", 
                "keyboard layout influencer", 
                "influential electric typewriter computer keyboards imitated", 
                "", 
                "", 
                "", 
                "", 
                "https://en.wikipedia.org/wiki/Keyboard_layout#History"
            ], 
            "flags": 0, 
            "guid": "zj3,gsJx*c", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "IBM PC (1981), namely the Model M (1985)", 
                "keyboard layout influencer", 
                " basis for many modern keyboard layouts", 
                "", 
                "modifier key placement largely dates to the Model M (1985); function key\n placement typically dates to the Model M, but varies significantly, \nparticularly on laptops", 
                "", 
                "", 
                "https://en.wikipedia.org/wiki/Keyboard_layout#History"
            ], 
            "flags": 0, 
            "guid": "H(v?j};F/B", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bit-paired vs.&nbsp;typewriter-paired&nbsp;keyboards", 
                "", 
                " The former is a keyboard where the layout of shifted keys corresponds to columns in the ASCII (1963) table, archetypally the Teletype Model 33 (1963) keyboard. This was later contrasted with the latter where the layout of shifted keys corresponds to electric typewriter layouts, notably the IBM Selectric (1961).&nbsp;This change was made because smaller characters hit the paper with less force, and consolidating smaller characters such as <kbd><code>'\"</code></kbd> into a pair on a single key avoided needing to adjust the force based on shift state", 
                "", 
                "<div class=\"mw-mmv-image\"><p>The difference is most visible in the digits\n row (top row): compared with mechanical typewriters, bit-paired \nkeyboards remove the <code>_</code> character from <code>6</code> and shift the remaining <code>&amp;*()</code>\n from <code>7890</code> to <code>6789</code>, while typewriter-paired keyboards replace 3 \ncharacters: <kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); -webkit-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">⇧ Shift</kbd>+<kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); -webkit-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">2</kbd> from <kbd><code>\"</code></kbd> to <kbd><code>@</code></kbd> <kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); -webkit-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">⇧ Shift</kbd>+<kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); -webkit-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">6</kbd> from <kbd>_</kbd> to <kbd>^</kbd> and <kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); -webkit-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">⇧ Shift</kbd>+<kbd class=\"keyboard-key nowrap\" style=\"border: 1px solid #aaa; -moz-border-radius: 0.2em; -webkit-border-radius: 0.2em; border-radius: 0.2em; -moz-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); -webkit-box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); box-shadow: 0.1em 0.1em 0.2em rgba(0,0,0,0.1); background-color: #f9f9f9; background-image: -moz-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -o-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: -webkit-linear-gradient(top, #eee, #f9f9f9, #eee); background-image: linear-gradient(to bottom, #eee, #f9f9f9, #eee); padding: 0.1em 0.3em; font-family: inherit; font-size: 0.85em;\">8</kbd> from <kbd><code>'</code></kbd> to <kbd><code>*</code></kbd>.\n An important subtlety is that ASCII was based on mechanical \ntypewriters, but electric typewriters became popular during the same \nperiod that ASCII was adopted, and made their own changes to layout.&nbsp;Thus differences between bit-paired and (electric) typewriter-paired \nkeyboards are due to the differences of both of these from earlier \nmechanical typewriters.</p>\n<p>Bit-paired keyboards were common in the United States in the 1960s \nand 1970s, due to ease of manufacture, but died out in the late 1970s \nwith office automation,\n due to the number of users already accustomed to (electric) typewriter \nlayouts. Bit-paired keyboard layouts survive today only in the standard Japanese keyboard layout, which has all shifted values of digits in the bit-paired layout.</p></div><div class=\"mw-mmv-image\"><br /></div><div class=\"mw-mmv-image\"><img src=\"1280px-US-ASCII_code_chart.png\" /><img src=\"TTY33ASR.jpg\" /></div>", 
                "reverse", 
                "", 
                "https://en.wikipedia.org/wiki/Bit-paired_keyboard"
            ], 
            "flags": 0, 
            "guid": "d@LFWL25um", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "octothorpe", 
                "", 
                "Comes from the Latin abbreviation lb, short for <i>libra pondo</i>, or ‘pound weight’. It was first used around the 14th century and was written with a short stroke above the letters so that the <code>l</code> would not be mistaken for a <code>1</code>. This gradually morphed into&nbsp;&nbsp;<code></code><code>#</code>&nbsp;– the bottom line implying the bottom of the <code>l</code> and <code>b</code> and the top line referring to the stroke above. The symbol was integrated into technology in the late ‘60s by Bell Labs, inventors of the touch-tone phone, who used it in phone systems to separate between strings of numbers. Legend has it that the director of Bell Labs came up with the name ‘octothorpe’ by combining the figure’s eight points with the surname of his favourite athlete, Olympian Jim Thorpe.<div><br /></div><div>The hash then appeared in the early days of the internet, featuring as early as 1988, in networks where users communicated through channels, the subject of which was indicated by the hash sign (<code>#Tokyo</code> was a channel of people talking about Tokyo). By the new millennium, however, hashtags were not widely used online except by the techno-elite. In 2007, an employee at Twitter suggested prefixing the names of groups or ‘channels’ with a <code>#</code>. This suggestion was initially rejected as alienating and over-techie, but was eventually adopted, and the meteoric rise of the hashtag was set in motion.</div>", 
                "", 
                "", 
                "reverse", 
                "number sign, hash", 
                "https://www.wired.com/2015/10/the-secret-history-of-the-hashtag-slash-and-interrobang/"
            ], 
            "flags": 0, 
            "guid": "yh)V>0|%uv", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "pilcrow", 
                "", 
                "indicates the start and finish of a paragraph", 
                "", 
                "<p>Despite its virtual invisibility, it has a lengthy history, reaching \nback to Ancient Greece, where the concept of a ‘paragraph’ pre-dated any\n other punctuation mark. The symbol itself is mostly likely derived from\n the Latin capitula (chapter), which was abbreviated to a large ‘C’. To \navoid confusion, the ‘C’ acquired a heavier curve, and a vertical bar \nthrough it, eventually evolving into the more elaborate sign we know \ntoday. The name ‘pilcrow’ is thought to have come from various \ncorruptions of the word ‘paragraph’, or, more entertainingly, from the \nphrase ‘pulled crow’, due to its resemblance to a plucked bird.</p>\n<p>The pilcrow was once used with great abandon, elaborately drawn in \nbright red ink by specialized rubricators. A manuscript would be left \nwith wide blank spaces in which the rubricators would later draw the \npilcrows. Eventually, paragraphs were started on new lines, with an \nindentation left for the pilcrow. When a rubricator ran out of time, the\n indentation was left blank, and eventually this became standard \npractice – the new line and the indentation taking the place of the \nfiddly pilcrow. Today, the pilcrow’s primary uses are in proofreading as\n an indication that a paragraph should be inserted, in legal texts, when\n citing a specific paragraph, and in academic writing, when citing from \nan HTML page.</p>", 
                "reverse", 
                "", 
                "https://www.wired.com/2015/10/the-secret-history-of-the-hashtag-slash-and-interrobang/"
            ], 
            "flags": 0, 
            "guid": "Cg5T3B}Jh~", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "interrobang", 
                "", 
                "combination of an exclamation mark and a question mark", 
                "", 
                "Advertising executive, Martin Speckter, introduced it in 1962, pitching it as a ‘typographically eloquent way in which to end a statement that expresses excited disbelief, asks a question in an excited manner, or proposes a rhetorical question’. Speckter called his mark ‘interrobang’ from the Latin for query and the proofreader’s term for exclamation, although the term ‘quexclamation mark’ is still used by some.<div><br /></div><div>The interrobang was enthusiastically embraced for a brief period until the late ’60s. An interrobang key was even introduced to some ranges of typewriters. However, the fad soon lost momentum, and the age old <code>?!</code> combination was reinstated. Today it is still possible to find the interrobang in some fonts, such as Palatino, and it is recognized in informal English as a non-standard punctuation mark. It many ways one could say that the interrobang has now been superseded by the emoticon, which makes similar use of glyph combinations in order to add emphasis and feeling to the sentence that precedes it.</div>", 
                "reverse", 
                "interrobang,&nbsp;quexclamation mark", 
                "https://www.wired.com/2015/10/the-secret-history-of-the-hashtag-slash-and-interrobang/"
            ], 
            "flags": 0, 
            "guid": "H>7fs1d~pY", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "manicule", 
                "", 
                "pointing hand glyph<div><img src=\"Screen-Shot-2015-10-20-at-12g-482x240.jpg\" /></div>", 
                "", 
                "Derived from the Latin maniculum, or ‘little hand’, the manicule was used abundantly throughout the Renaissance and up until the 18th century. This pointing hand glyph drew readers’ attention to important or interesting text, acting as an authorial guide through a document. The first known use of the manicule was in the Domesday Book of 1086, but it was only in the 14th century that it really took off. Humanist scholars embraced it enthusiastically, scrawling it in the margins of everything from law books to literature.<div><br /></div><div>Although its basic form has remained intact through the centuries, there were countless interpretations of the mark, ranging from semi-abstract squiggly strokes to elaborate, stylised hands with ornate cuffs and flowing sleeves, in which a note about the note was sometimes written. With the advent of printing, the manicule gradually fell out of favour, giving way to the more pragmatic numbered footnote. Today, the manicule is only rarely used. Now soberly decked in the cuff of a businessman, the manicule occasionally makes an appearance in signage and advertisements, in order to lend a vintage flavour, and also features on the return-to-sender stamps of the US Postal Service. One could argue that the little hand that acts as a cursor on some computers is a form of manicule, interfacing between the reader and the material on screen.</div>", 
                "reverse", 
                "", 
                "https://www.wired.com/2015/10/the-secret-history-of-the-hashtag-slash-and-interrobang/"
            ], 
            "flags": 0, 
            "guid": "O;vZ&c=7=5", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "What is the difference between <code>/etc/init/</code> and <code>/etc/init.d/</code>? What meaning does the <code>.d</code> suffix convey to a directory?", 
                "", 
                "<p><code>/etc/init.d</code> contains scripts used by the System V init \ntools (SysVinit). This is the traditional service management package for\n Linux, containing the <code>init</code> program (the first process that\n is run when the kernel has finished initializing¹) as well as some \ninfrastructure to start and stop services and configure them. \nSpecifically, files in <code>/etc/init.d</code> are shell scripts that respond to <code>start</code>, <code>stop</code>, <code>restart</code>, and (when supported) <code>reload</code>\n commands to manage a particular service. These scripts can be invoked \ndirectly or (most commonly) via some other trigger (typically the \npresence of a symbolic link in <code>/etc/rc?.d/</code>).</p>\n<p><code>/etc/init</code> contains configuration files used by Upstart. Upstart is a young service management package championed by Ubuntu. Files in <code>/etc/init</code> are configuration files telling Upstart how and when to <code>start</code>, <code>stop</code>, <code>reload</code> the configuration, or query the <code>status</code>\n of a service. As of lucid, Ubuntu is transitioning from SysVinit to \nUpstart, which explains why many services come with SysVinit scripts \neven though Upstart configuration files are preferred. In fact, the \nSysVinit scripts are processed by a compatibility layer in Upstart.</p>\n<p><code>.d</code> in directory names typically indicates a directory \ncontaining many configuration files or scripts for a particular \nsituation (e.g. <code>/etc/apt/sources.list.d</code> contains files that are concatenated to make a virtual <code>sources.list</code>; <code>/etc/network/if-up.d</code> contains scripts that are executed when a network <strong>i</strong>nter<strong>f</strong>ace\n is activated). This structure is usually used when each entry in the \ndirectory is provided by a different source, so that each package can \ndeposit its own plug-in without having to parse a single configuration \nfile to reference itself. In this case, it just happens that “init” is a\n logical name for the directory, SysVinit came first and used <code>init.d</code>, and Upstart used plain <code>init</code> for a directory with a similar purpose (it would have been more “mainstream”, and perhaps less arrogant, if they'd used <code>/etc/upstart.d</code> instead).</p>", 
                "", 
                "", 
                "", 
                "", 
                "https://askubuntu.com/a/5042/354276"
            ], 
            "flags": 0, 
            "guid": "+T.iN4;Af", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked", 
                "unix"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>MTTF</div>", 
                "", 
                "mean time to failure", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "MukLOBrPd[", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>MTTR</div>", 
                "", 
                "mean time to repair<div><br /></div><div><div>thinking through and recording the best practices ahead of time in a “playbook” produces roughly a 3x improvement in MTTR as compared to the strategy of “winging it.”</div></div>", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "MSR]FSMnfH", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>three kinds of valid monitoring output</div></div>", 
                "SRE concept", 
                "<ul style=\"margin-left: 20px; \"><li><b>Alerts: </b>Signify that a human needs to take action immediately in response to something that is either happening or about to happen, in order to improve the situation.</li><li><b>Tickets:</b> Signify that a human needs to take action, but not immediately. The system cannot automatically handle the situation, but if a human takes action in a few days, no damage will result.</li><li><b>Logging:</b> No one needs to look at this information, but it is recorded for diagnostic or forensic purposes. The expectation is that no one reads logs unless something else prompts them to do so.</li></ul>", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "ka:n,N=wHg", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>straightforward way of representing risk tolerance</div></div>", 
                "SRE concept", 
                "<div><b>acceptable level of unplanned downtime</b>&nbsp;— captured by the desired level of service availability, usually expressed in terms of the number of “nines” we would like to provide: 99.9%, 99.99%, or 99.999% availability. Each additional nine corresponds to an order of magnitude improvement toward 100% availability.</div>", 
                "", 
                "For service risk, it is not immediately clear how to reduce all of the potential factors into a single metric. Service failures can have many potential effects, including user dissatisfaction, harm, or loss of trust; direct or indirect revenue loss; brand or reputational impact; and undesirable press coverage. Clearly, some of these factors are very hard to measure. To make this problem tractable and consistent across many types of systems we run, we focus on unplanned downtime.", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "HHzaXxKpxi", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>Google way of representing risk tolerance</div></div>", 
                "SRE concept", 
                "<div><div>Instead of using metrics around uptime, Google defines availability in terms of the&nbsp;<b>request success rate</b>.</div><div><br /></div><div>A time-based metric for availability is usually not meaningful because we are looking across globally distributed services. Our approach to fault isolation makes it very likely that we are serving at least a subset of traffic for a given service somewhere in the world at any given time (i.e., we are at least partially “up” at all times).</div></div>", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "cU&o$y2a4c", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>error rate of ISPs</div></div>", 
                "SRE concept", 
                "<div><div><div>While there are significant differences between ISPs and protocols (e.g., TCP versus UDP, IPv4 versus IPv6), we’ve measured the typical background error rate for ISPs as falling <b>between 0.01% and 1%</b>.</div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "lT;s`c7&ZH", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>typical tensions</div></div>", 
                "SRE concept", 
                "<div><div><div><div><ul style=\"margin-left: 20px; \"><li><b>Software fault tolerance</b><br />How hardened do we make the software to unexpected events? Too little, and we have a brittle, unusable product. Too much, and we have a product no one wants to use (but that runs very stably).&nbsp;</li><li><b>Testing</b><br />Again, not enough testing and you have embarrassing outages, privacy data leaks, or a number of other press-worthy events. Too much testing, and you might lose your market.</li><li><b>Push frequency</b><br />Every push is risky. How much should we work on reducing that risk, versus doing other work?</li><li><b>Canary duration and size</b><br />It’s a best practice to test a new release on some small subset of a typical workload, a practice often called canarying. How long do we wait, and how big is the canary?</li></ul></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "sK-z+([=Sr", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>SLI, SLO, SLA</div></div>", 
                "SRE concept", 
                "<div><b>service level</b> <b>indicators</b>, <b>objectives</b>, and <b>agreements</b></div>", 
                "", 
                "", 
                "", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "gpe6u6D8E8", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>service level indicator</div></div>", 
                "SRE concept", 
                "<div>a carefully defined quantitative measure of some aspect of the level of service that is provided</div><div><ul style=\"margin-left: 20px; \"><li><b>request latency</b> — how long it takes to return a response to a request</li><li><b>error rate</b>, often expressed as a fraction of all requests received</li><li><b>system throughput</b>, typically measured in requests per second</li><li><b>availability</b>, or the fraction of the time that a service is usable. It is often defined in terms of the fraction of well-formed requests that succeed, sometimes called <i>yield</i>.</li><li><b>durability</b> — the likelihood that data will be retained over a long period of time</li></ul></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "{%ZGxVwk&", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>service level objective</div></div>", 
                "SRE concept", 
                "<div>a target value or range of values for a service level that is measured by an SLI. A natural structure is thus SLI ≤ target, or lower bound ≤ SLI ≤ upper bound</div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "A1GaJFyOJd", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>The Four Golden Signals</div></div>", 
                "SRE concept", 
                "<div><div><ul style=\"margin-left: 20px; \"><li><b>Latency</b></li><li><b>Traffic</b></li><li><b>Errors</b></li><li><b>Saturation</b></li></ul></div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "hb5I<dPj)?", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div><div>Golden Signal:&nbsp;<b>Latency</b></div></div>", 
                "SRE concept", 
                "<div><div><b>time to service a request.</b> It’s important to distinguish between successful and failed requests and to track errors as opposed to filtering them out.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "eiFoE,1c!C", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Golden Signal: <b>Traffic</b>", 
                "SRE concept", 
                "<div><div>measure of <b>how much demand is being placed on your system</b>, measured in a high-level system-specific metric. For a web service, this measurement is usually HTTP requests per second, perhaps broken out by the nature of the requests (e.g., static versus dynamic content). For an audio streaming system, this measurement might focus on network I/ O rate or concurrent sessions. For a key-value storage system, this measurement might be transactions and retrievals per second.<br /></div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "?;XIg5C:G", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Golden Signal:&nbsp;<b>Errors</b>", 
                "SRE concept", 
                "<div><div><b>rate of requests that fail</b>, either explicitly (e.g., HTTP 500s), implicitly (for example, an HTTP 200 success response, but coupled with the wrong content), or by policy (for example, “If you committed to one-second response times, any request over one second is an error”). Where protocol response codes are insufficient to express all failure conditions, secondary (internal) protocols may be necessary to track partial failure modes. Monitoring these cases can be drastically different: catching HTTP 500s at your load balancer can do a decent job of catching all completely failed requests, while only end-to-end system tests can detect that you’re serving the wrong content.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "zUt}8BuGqC", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Golden Signal:&nbsp;<b></b><b>Saturation</b>", 
                "SRE concept", 
                "<div><div><b>How “full” your service is. </b>A measure of your system fraction, emphasizing the resources that are most constrained (e.g., in a memory-constrained system, show memory; in an I/O-constrained system, show I/ O). Note that many systems degrade in performance before they achieve 100% utilization, so having a utilization target is essential. In complex systems, this measurement&nbsp;can be supplemented with higher-level load measurement: can your service properly handle double the traffic, handle only 10% more traffic, or handle even less traffic than it currently receives? For very simple services that have no parameters that alter the complexity of the request (e.g., “Give me a nonce” or “I need a globally unique monotonic integer”) that rarely change configuration, a static value from a load test might be adequate. As discussed in the previous paragraph, however, most services need to use indirect signals like CPU utilization or network bandwidth that have a known upper bound.&nbsp;<i>Latency increases are often a leading indicator of this measurement. Measuring your 99th percentile response time over some small window (e.g., one minute) can give a very early signal.</i>&nbsp;Finally, this measurement is also concerned with predictions, such as “It looks like your database will fill its hard drive in 4 hours.”</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "ka}wbwa$M0", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "monitoring", 
                "SRE concept", 
                "<div><div>Collecting, processing, aggregating, and displaying real-time quantitative data about a system, such as query counts and types, error counts and types, processing times, and server lifetimes.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "QgV]br{6-M", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "white-box monitoring", 
                "SRE concept", 
                "<div><div>Monitoring based on metrics exposed by the internals of the system, including logs, interfaces like the Java Virtual Machine Profiling Interface, or an HTTP handler that emits internal statistics.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "f8BK%ru=%H", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "black-box monitoring", 
                "SRE concept", 
                "<div><div>Testing externally visible behavior as a user would see it.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "RboUBWaL;7", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "dashboard", 
                "SRE concept", 
                "<div><div>An application (usually web-based) that provides a summary view of a service’s core metrics. May have filters, selectors, and so on, but is prebuilt to expose the metrics most important to its users. Might also display team information such as ticket queue length, a list of high-priority bugs, the current on-call engineer for a given area of responsibility, or recent pushes.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "Gq@>049jVq", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "alert", 
                "SRE concept", 
                "<div><div>A notification intended to be read by a human and that is pushed to a system such as a bug or ticket queue, an email alias, or a pager.</div></div>", 
                "", 
                "Respectively, these alerts are classified as tickets, email alerts, and pages.", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "RbTi48o?a`", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "root cause", 
                "SRE concept", 
                "<div><div>A defect in a software or human system that, if repaired, instills confidence that this event won’t happen again in the same way. A given incident might have multiple of these: for example, a combination of insufficient process automation, software that crashed on bogus input, and insufficient testing of the script used to generate the configuration. Each of these factors might stand alone, and each should be repaired.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "AOj$@*Chlr", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "node and machine", 
                "SRE concept", 
                "<div><div>Used interchangeably to indicate a single instance of a running kernel in either a physical server, virtual machine, or container. Each might have multiple services worth monitoring. The services may either be:</div><div><ul style=\"margin-left: 20px; \"><li>Related to each other: for example, a caching server and a web server</li><li>Unrelated services sharing hardware: for example, a code repository and a master for a configuration system like Puppet or Chef</li></ul></div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "u<?A31,9#l", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "push", 
                "SRE concept", 
                "<div><div>Any change to a service’s running software or its configuration.</div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "lB(vpe~8?R", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Why monitor?", 
                "SRE concept", 
                "<div><div><div><ul style=\"margin-left: 20px; \"><li><b>Analyzing long-term trends</b><br />How big is my database and how fast is it growing? How quickly is my daily-active user count growing?&nbsp;</li><li><b>Comparing over time or experiment groups</b><br />Are queries faster with Acme Bucket of Bytes 2.72 versus Ajax DB 3.14? How much better is my memcache hit rate with an extra node? Is my site slower than it was last week?</li><li><b>Alerting</b><br />Something is broken, and somebody needs to fix it right now! Or, something might break soon, so somebody should look soon.&nbsp;</li><li><b>Building dashboards</b><br />Dashboards should answer basic questions about your service, and normally include some form of the four golden signals (discussed in “The Four Golden Signals”).</li><li><b>Conducting ad hoc retrospective analysis (i.e., debugging)</b><br />Our latency just shot up; what else happened around the same time?</li></ul></div></div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "<div>Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;</div>"
            ], 
            "flags": 0, 
            "guid": "EP-L~74#.J", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "idempotent", 
                "SRE concept", 
                "<span>denoting an element of a set that is unchanged in value when multiplied or otherwise operated on by itself</span><div><span></span><p>From a RESTful service standpoint, for an operation (or service call)\n to be idempotent, clients can make that same call repeatedly while \nproducing the same result. In other words, making multiple identical \nrequests has the same effect as making a single request. Note that while\n idempotent operations produce the same result on the server (no side \neffects), the response itself may not be the same (e.g. a resource's \nstate may change between requests).</p>\n<p>The PUT and DELETE methods are defined to be idempotent. \nHowever, there is a caveat on DELETE. The problem with DELETE, which if \nsuccessful would normally return a 200 (OK) or 204 (No Content), will \noften return a 404 (Not Found) on subsequent calls, unless the service \nis configured to \"mark\" resources for deletion without actually deleting\n them. However, when the service actually deletes the resource, the next\n call will not find the resource to delete it and return a 404. However,\n the state on the server is the same after each DELETE call, but the \nresponse is different.</p>\n<p>GET, HEAD, OPTIONS and TRACE methods are defined as safe, \nmeaning they are only intended for retrieving data.  This makes them \nidempotent as well since multiple, identical requests will behave the \nsame.</p></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "http://www.restapitutorial.com/lessons/idempotency.html"
            ], 
            "flags": 0, 
            "guid": "?,(y`yi<2", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>evolving from “Python unit tests finding misconfigurations” to “Python code fixing misconfigurations”</div>", 
                "SRE concept", 
                "<div><img src=\"Screen Shot 2017-09-17 at 10.54.01.png\" /></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "c7<rR4=?%B", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>perverse incentives of teams not responsible for own automation code</div>", 
                "SRE concept", 
                "<div><div><ul style=\"margin-left: 20px; \"><li>A team whose primary task is to speed up the current turnup has no incentive to reduce the technical debt of the service-owning team running the service in production later.</li><li>A team not running automation has no incentive to build systems that are easy to automate.</li><li>A product manager whose schedule is not affected by low-quality automation will always prioritize new features over simplicity and automation.</li></ul></div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "bCn!?Dv=A<", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google’s “Admin Servers”</div>", 
                "SRE concept", 
                "Much of distributed automation relied at that time on SSH. This is clumsy from a security perspective, because people must have root on many machines to run most commands. A growing awareness of advanced, persistent security threats drove us to reduce the privileges SREs enjoyed to the absolute minimum they needed to do their jobs. We had to replace our use of sshd with an authenticated, ACL-driven, RPC-based Local Admin Daemon, also known as Admin Servers, which had permissions to perform those local changes. As a result, no one could install or modify a server without an audit trail. Changes to the Local Admin Daemon and the Package Repo were gated on code reviews, making it very difficult for someone to exceed their authority; giving someone the access to install packages would not let them view colocated logs. The Admin Server logged the RPC requestor, any parameters, and the results of all RPCs to enhance debugging and security audits.<div><br /></div><div><div>In the next iteration, Admin Servers became part of service teams’ workflows, both as related to the machine-specific Admin Servers (for installing packages and rebooting) and cluster-level Admin Servers (for actions like draining or turning up a service). SREs moved from writing shell scripts in their home directories to building peer-reviewed RPC servers with fine-grained ACLs.</div><div><br /></div><div>Later on, after the realization that turnup processes had to be owned by the teams that owned the services fully sank in, we saw this as a way to approach cluster turnup as a Service-Oriented Architecture (SOA) problem: service owners would be responsible for creating an Admin Server to handle cluster turnup/ turndown RPCs, sent by the system that knew when clusters were ready. In turn, each team would provide the contract (API) that the turnup automation needed, while still being free to change the underlying implementation. As a cluster reached “network-ready,” automation sent an RPC to each Admin Server that played a part in turning up the cluster.</div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "pl1%Y;c2G,", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google branching</div>", 
                "SRE concept", 
                "<div>All code is checked into the main branch of the source code tree (mainline). However, most major projects don’t release directly from the mainline. Instead, we branch from the mainline at a specific revision and never merge changes from the branch back into the mainline. Bug fixes are submitted to the mainline and then cherry picked into the branch for inclusion in the release. This practice avoids inadvertently picking up unrelated changes submitted to the mainline since the original build occurred. Using this branch and cherry pick method, we know the exact contents of each release.</div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "vHLVGW2n!%", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google building</div>", 
                "SRE concept", 
                "<div><div>Blaze is Google’s build tool of choice. It supports building binaries from a range of languages, including our standard languages of C + +, Java, Python, Go, and JavaScript. Engineers use Blaze to define build targets (e.g., the output of a build, such as a JAR file), and to specify the dependencies for each target. When performing a build, Blaze automatically builds the dependency targets. Build targets for binaries and unit tests are defined in Rapid’s project configuration files. Project-specific flags, such as a unique build identifier, are passed by Rapid to Blaze. All binaries support a flag that displays the build date, the revision number, and the build identifier, which allow us to easily associate a binary to a record of how it was built.</div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "D$#z:W*q6g", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google testing</div>", 
                "SRE concept", 
                "<div><div><div>A continuous test system runs unit tests against the code in the mainline each time a change is submitted, allowing us to detect build and test failures quickly. Release engineering recommends that the continuous build test targets correspond to the same test targets that gate the project release. We also recommend creating releases at the revision number (version) of the last continuous test build that successfully completed all tests. These measures decrease the chance that subsequent changes made to the mainline will cause failures during the build performed at release time. During the release process, we re-run the unit tests using the release branch and create an audit trail showing that all the tests passed. This step is important because if a release involves cherry picks, the release branch may contain a version of the code that doesn’t exist anywhere on the mainline. We want to guarantee that the tests pass in the context of what’s actually being released. To complement the continuous test system, we use an independent testing environment that runs system-level tests on packaged build artifacts. These tests can be launched manually or from Rapid.</div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "M`s??xq&Q1", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google packaging</div>", 
                "SRE concept", 
                "<div><div><div><div>Software is distributed to our production machines via the Midas Package Manager (MPM). MPM assembles packages based on Blaze rules that list the build artifacts to include, along with their owners and permissions. Packages are named (e.g., search/ shakespeare/ frontend), versioned with a unique hash, and signed to ensure authenticity. MPM supports applying labels to a particular version of a package. Rapid applies a label containing the build ID, which guarantees that a package can be uniquely referenced using the name of the package and this label. Labels can be applied to an MPM package to indicate a package’s location in the release process (e.g., <code>dev</code>, <code>canary</code>, or <code>production</code>). If you apply an existing label to a new package, the label is automatically moved from the old package to the new package. For example: if a package is labeled as <code>canary</code>, someone subsequently installing the canary version of that package will automatically receive the newest version of the package with the label <code>canary</code>.</div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "G.>g(W8s%H", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google Rapid</div>", 
                "SRE concept", 
                "<div><div><div><div><div>Rapid is configured with files called blueprints. Blueprints are written in an internal configuration language and are used to define build and test targets, rules for deployment, and administrative information (like project owners). Role-based access control lists determine who can perform specific actions on a Rapid project.</div><div><br /></div><div><img src=\"Screen Shot 2017-09-17 at 12.25.29.png\" /></div><div>Each Rapid project has workflows that define the actions to perform during the release process. Workflow actions can be performed serially or in parallel, and a workflow can launch other workflows. Rapid dispatches work requests to tasks running as a Borg job on our production servers. Because Rapid uses our production infrastructure, it can handle thousands of release requests simultaneously.</div><div>A typical release process proceeds as follows:</div><div><ol type=\"1\" start=\"1\"><li>Rapid uses the requested integration revision number (often obtained automatically from our continuous test system) to create a release branch.</li><li>Rapid uses Blaze to compile all the binaries and execute the unit tests, often performing these two steps in parallel. Compilation and testing occur in environments dedicated to those specific tasks, as opposed to taking place in the Borg job where the Rapid workflow is executing. This separation allows us to parallelize work easily.</li><li>Build artifacts are then available for system testing and canary deployments. A typical canary deployment involves starting a few jobs in our production environment after the completion of system tests.&nbsp;</li><li>The results of each step of the process are logged. A report of all changes since the last release is created.</li></ol>Rapid allows us to manage our release branches and cherry picks; individual cherry pick requests can be approved or rejected for inclusion in a release.</div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "K=6Kwa,Mlg", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Google deployment</div>", 
                "SRE concept", 
                "<div><div><div><div><div><div>Rapid is often used to drive simple deployments directly. It updates the Borg jobs to use newly built MPM packages based on deployment definitions in the blueprint files and specialized task executors.</div><div><br /></div><div>For more complicated deployments, we use Sisyphus, which is a general-purpose rollout automation framework developed by SRE. A rollout is a logical unit of work that is composed of one or more individual tasks. Sisyphus provides a set of Python classes that can be extended to support any deployment process. It has a dashboard that allows for finer control on how the rollout is performed and provides a way to monitor the rollout’s progress.</div><div><br /></div><div>In a typical integration, Rapid creates a rollout in a long-running Sisyphus job. Rapid knows the build label associated with the MPM package it created, and can specify that build label when creating the rollout in Sisyphus. Sisyphus uses the build label to specify which version of the MPM packages should be deployed.</div><div><br /></div><div>With Sisyphus, the rollout process can be as simple or complicated as necessary. For example, it can update all the associated jobs immediately or it can roll out a new binary to successive clusters over a period of several hours.</div><div><br /></div><div>Our goal is to fit the deployment process to the risk profile of a given service. In development or pre-production environments, we may build hourly and push releases automatically when all tests pass. For large user-facing services, we may push by starting in one cluster and expand exponentially until all clusters are updated. For sensitive pieces of infrastructure, we may extend the rollout over several days, interleaving them across instances in different geographic regions.</div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "hi_2{]$P]|", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Include configuration files and binaries in the same MPM package.</div>", 
                "config management scheme (SRE concept)", 
                "<div><div><div><div><div><div><div>For projects with few configuration files or projects where the files (or a subset of files) change with each release cycle, the configuration files can be included in the MPM package with the binaries. While this strategy limits flexibility by binding the binary and configuration files tightly, it simplifies deployment, because it only requires installing one package.</div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "L>b=?fqS38", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Package configuration files into MPM “configuration packages.”</div>", 
                "config management scheme (SRE concept)", 
                "<div><div><div><div><div><div><div><div>We can apply the hermetic principle to configuration management. Binary configurations tend to be tightly bound to particular versions of binaries, so we leverage the build and packaging systems to snapshot and release configuration files alongside their binaries. Similar to our treatment of binaries, we can use the build ID to reconstruct the configuration at a specific point in time.</div><div><br /></div><div>For example, a change that implements a new feature can be released with a flag setting that configures that feature. By generating two MPM packages, one for the binary and one for the configuration, we retain the ability to change each package independently. That is, if the feature was released with a flag setting of <code>first_folio</code> but we realize it should instead be <code>bad_quarto</code>, we can cherry pick that change onto the release branch, rebuild the configuration package, and deploy it. This approach has the advantage of not requiring a new binary build.</div><div><br /></div><div>We can leverage MPM’s labeling feature to indicate which versions of MPM packages should be installed together. A label of <code>much_ado</code> can be applied to the MPM packages described in the previous paragraph, which allows us to fetch both packages using this label. When a new version of the project is built, the <code>much_ado</code> label will be applied to the new packages. Because these tags are unique within the namespace for an MPM package, only the latest package with that tag will be used.</div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "OY,DHRET,@", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Read configuration files from an external store.</div>", 
                "config management scheme (SRE concept)", 
                "<div><div><div><div><div><div><div><div>Some projects have configuration files that need to change frequently or dynamically (i.e., while the binary is running). These files can be stored in Chubby, Bigtable, or our source-based filesystem.</div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "Gh@QYm*|RB", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>Use the mainline for configuration.</div>", 
                "config management scheme (SRE concept)", 
                "<div><div><div><div><div><div><div><div><div>This was the first method used to configure services in Borg (and the systems that pre-dated Borg). Using this scheme, developers and SREs modify configuration files at the head of the main branch. The changes are reviewed and then applied to the running system. As a result, binary releases and configuration changes are decoupled. While conceptually and procedurally simple, this technique often leads to skew between the checked-in version of the configuration files and the running version of the configuration file because jobs must be updated in order to pick up the changes.</div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "vgXj.@?p0A", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>monitoring tools</div>", 
                "SRE concept", 
                "<div><div><div><div><div><div><div><div><div><div>In recent years, monitoring has undergone a Cambrian Explosion: <b>Riemann</b>, <b>Heka</b>, <b>Bosun</b>, and <b>Prometheus</b> have emerged as open source tools that are very similar to Borgmon’s time-series– based alerting. In particular, Prometheus shares many similarities with Borgmon, especially when you compare the two rule languages. The principles of variable collection and rule evaluation remain the same across all these tools and provide an environment with which you can experiment, and hopefully launch into production, the ideas inspired by this chapter.</div></div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "bz~zm&OPQ4", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Google’s black box monitoring", 
                "SRE concept", 
                "<div><div><div><div><div><div><div><div><div><div><div>However, white-box monitoring does not provide a full picture of the system being monitored; relying solely upon white-box monitoring means that you aren’t aware of what the users see. You only see the queries that arrive at the target; the queries that never make it due to a DNS error are invisible, while queries lost due to a server crash never make a sound. You can only alert on the failures that you expected.</div><div><br /></div><div>Teams at Google solve this coverage issue with Prober, which runs a protocol check against a target and reports success or failure. The prober can send alerts directly to Alertmanager, or its own varz can be collected by a Borgmon. Prober can validate the response payload of the protocol (e.g., the HTML contents of an HTTP response) and validate that the contents are expected, and even extract and export values as time-series. Teams often use Prober to export histograms of response times by operation type and payload size so that they can slice and dice the user-visible performance.</div><div><br /></div><div>Prober is a hybrid of the check-and-test model with some richer variable extraction to create time-series. Prober can be pointed at either the frontend domain or behind the load balancer. By using both targets, we can detect localized failures and suppress alerts. For example, we might monitor both the load balanced www.google.com and the web servers in each datacenter behind the load balancer. This setup allows us to either know that traffic is still served when a datacenter fails, or to quickly isolate an edge in the traffic flow graph where a failure has occurred.</div></div></div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "b>T+<xV$&0", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Google’s on call compensation", 
                "SRE concept", 
                "<div><div><div><div><div><div><div><div><div><div><div><div>Adequate compensation needs to be considered for out-of-hours support. Different organizations handle on-call compensation in different ways; Google offers time-off-in-lieu or straight cash compensation, capped at some proportion of overall salary. The compensation cap represents, in practice, a limit on the amount of on-call work that will be taken on by any individual. This compensation structure ensures incentivization to be involved in on-call duties as required by the team, but also promotes a balanced on-call work distribution and limits potential drawbacks of excessive on-call work, such as burnout or inadequate time for project work.</div></div></div></div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "AX-Nz]R![[", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "most important on call resources", 
                "SRE concept", 
                "<div><div><div><div><div><div><div><div><div><div><div><div><div>It’s important that on-call SREs understand that they can rely on several resources that make the experience of being on-call less daunting than it may seem. The most important on-call resources are:&nbsp;</div><div><ul style=\"margin-left: 20px; \"><li>Clear escalation paths</li><li>Well-defined incident-management procedures</li><li>A blameless postmortem culture</li></ul></div></div></div></div></div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "c!+Lpio&cM", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "triage", 
                "SRE concept", 
                "<div><div><div><div><div><div><div><div><div><div><div><div><div><div>Your first response in a major outage may be to start troubleshooting and try to find a root cause as quickly as possible. Ignore that instinct!</div><div><br /></div><div>Instead, your course of action should be to make the system work as well as it can under the circumstances. This may entail emergency options, such as diverting traffic from a broken cluster to others that are still working, dropping traffic wholesale to prevent a cascading failure, or disabling subsystems to lighten the load. Stopping the bleeding should be your first priority; you aren’t helping your users if the system dies while you’re root-causing. Of course, an emphasis on rapid triage doesn’t preclude taking steps to preserve evidence of what’s going wrong, such as logs, to help with subsequent root-cause analysis.</div></div></div></div></div></div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "jq4(}^|LZ$", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "common postmortem triggers", 
                "SRE concept", 
                "<div><div><div><div><div><div><div><div><div><div><div><div><div><div><div><ul style=\"margin-left: 20px; \"><li>User-visible downtime or degradation beyond a certain threshold</li><li>Data loss of any kind</li><li>On-call engineer intervention (release rollback, rerouting of traffic, etc.)</li><li>A resolution time above some threshold</li><li>A monitoring failure (which usually implies manual incident discovery)</li></ul></div></div></div></div></div></div></div></div></div></div></div></div></div></div></div>", 
                "", 
                "", 
                "reverse", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "P_tJT^Jg1H", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "if the current test coverage is low or nonexistent", 
                "SRE concept", 
                "<div>Start with testing that delivers the most impact with the least effort. You can start your approach by asking the following questions:</div><div><ul style=\"margin-left: 20px; \"><li>Can you prioritize the codebase in any way? To borrow a technique from feature development and project management, if every task is high priority, none of the tasks are high priority. Can you stack-rank the components of the system you’re testing by any measure of importance?</li><li>Are there particular functions or classes that are absolutely mission-critical or business-critical? For example, code that involves billing is a commonly business-critical. Billing code is also frequently cleanly separable from other parts of the system.&nbsp;</li><li>Which APIs are other teams integrating against? Even the kind of breakage that never makes it past release testing to a user can be extremely harmful if it confuses another developer team, causing them to write wrong (or even just suboptimal) clients for your API.</li></ul></div>", 
                "", 
                "", 
                "", 
                "", 
                "Site Reliability Engineering: How Google Runs Production Systems. O'Reilly Media. Kindle Edition.&nbsp;"
            ], 
            "flags": 0, 
            "guid": "zFT:T^a}K>", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "SRE"
            ]
        }
    ]
}