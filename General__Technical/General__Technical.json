{
    "__type__": "Deck", 
    "children": [
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "542759f8-35b7-11e7-970f-2c56dc924912", 
            "deck_config_uuid": "604d2e8f-3a8b-11e7-b94d-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "mid": "1475043240989", 
            "name": "Shell", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --version", 
                        "grep", 
                        "", 
                        "-V", 
                        "--version", 
                        "", 
                        "<p>Output the version number of <code>grep</code> and exit.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MDksICJpZCI6ICIxNDk0Mzk1MDAwMTc1LTAwNiIsICJtZCI6ICJPdXRwdXQgdGhlIHZlcnNpb24gbnVtYmVyIG9mIGBncmVwYCBhbmQgZXhpdC5cbiJ9---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QF?BR7Efb,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --extended-regexp", 
                        "grep", 
                        "variant", 
                        "-E", 
                        "--extended-regexp", 
                        "egrep", 
                        "Interpret <u>PATTERN</u> as an extended regular expression (ERE).", 
                        "<div>grep [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div>grep [<u>OPTIONS</u>] [-e <u>PATTERN</u> | -f <u>FILE</u>] [<u>FILE</u>...]</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IRaYMm?y@$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --fixed-strings", 
                        "grep", 
                        "variant", 
                        "-F", 
                        "--fixed-strings", 
                        "fgrep", 
                        "<div>Interpret <u>PATTERN</u> as a list of fixed strings (instead of regular expressions), separated by newlines, any of which is to be matched.</div>", 
                        "<div>grep [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div>grep [<u>OPTIONS</u>] [-e <u>PATTERN</u> | -f <u>FILE</u>] [<u>FILE</u>...]</div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P%EhyHaT7_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --basic-regexp", 
                        "grep", 
                        "", 
                        "-G <u>PATTERN</u>", 
                        "--basic-regexp <u>PATTERN</u>", 
                        "", 
                        "Interpret <u>PATTERN</u> as a basic regular expression (BRE). This is the default.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r4|gThY);y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --perl-regexp", 
                        "grep", 
                        "", 
                        "-P", 
                        "--perl-regexp", 
                        "", 
                        "<div>Interpret the pattern as a Perl-compatible regular expression (PCRE). This is highly experimental and <code>grep</code> may warn of unimplemented features.</div>", 
                        "<div><div>grep [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div>grep [<u>OPTIONS</u>] [-e <u>PATTERN</u> | -f <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LMs%v&XES[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --regexp", 
                        "grep", 
                        "", 
                        "-e <u>PATTERN</u>", 
                        "--regexp=<u>PATTERN</u>", 
                        "", 
                        "<div>Use <u>PATTERN</u> as the pattern. If this option is used multiple times or is combined with the <code>-f</code> (<code>--file</code>) option, search for all patterns given. This option can be used to protect a pattern beginning with \"-\".</div>", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jWk`lEtB,U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --file", 
                        "grep", 
                        "", 
                        "-f <u>FILE</u>", 
                        "--file=<u>FILE</u>", 
                        "", 
                        "<div>Obtain patterns from <u>FILE</u>, one per line. If this option is used multiple times or is combined with the <code>-e</code> (<code>--regexp</code>) option, search for all patterns given. The empty file contains zero patterns, and therefore matches nothing.</div>", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jukb8P{[{S", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --ignore-case", 
                        "grep", 
                        "", 
                        "-i", 
                        "--ignore-case", 
                        "", 
                        "Ignore case distinctions in both the <u>PATTERN</u> and the input files.", 
                        "<div><div><code><div>grep -i \"the\" demo_file</div></code></div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K/Uhau-FAk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --invert-match", 
                        "grep", 
                        "", 
                        "-v", 
                        "--invert-match", 
                        "", 
                        "Invert the sense of matching, to select non-matching lines.", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n[;rTi!3s|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --word-regexp", 
                        "grep", 
                        "", 
                        "-w", 
                        "--word-regexp", 
                        "", 
                        "<div><div><div>Select only those lines containing matches that form whole words. The test is that the matching substring must either be at the beginning of the line, or preceded by a non-word constituent character. Similarly, it must be either at the end of the line or followed by a non-word constituent character. Word-constituent characters are letters, digits, and the underscore. This option has no effect if <code>-x</code> is also specified.</div></div></div>", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o>gqziovh)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --line-regexp", 
                        "grep", 
                        "", 
                        "-x", 
                        "--line-regexp", 
                        "", 
                        "Select only those matches that exactly match the whole line. For a regular expression pattern, this is like parenthesizing the pattern and then surrounding it with <code>^</code> and <code>$</code>.", 
                        "<div><div><code>grep</code> [<u>OPTIONS</u>] <u>PATTERN</u> [<u>FILE</u>...]</div><div><code>grep</code> [<u>OPTIONS</u>] [<code>-e</code> <u>PATTERN</u> | <code>-f</code> <u>FILE</u>] [<u>FILE</u>...]</div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ao3z.w.==l", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep -y", 
                        "grep", 
                        "", 
                        "-y", 
                        "", 
                        "", 
                        "Obsolete synonym for <code>-i</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G}.*eikNu}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --count", 
                        "grep", 
                        "", 
                        "-c", 
                        "--count", 
                        "", 
                        "<div>Suppress normal output; instead print a count of matching lines for each input file. With the <code>-v</code>, <code>--invert-match</code> option (see below), count non-matching lines.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Od>e~]sdAp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --color", 
                        "grep", 
                        "long option", 
                        "", 
                        "--color[=<u>WHEN</u>]", 
                        "grep &#8209;&#8209;colour[=<u>WHEN</u>]", 
                        "<div>Surround the matched (non-empty) strings, matching lines, context lines, file names, line numbers, byte offsets, and separators (for fields and groups of context lines) with escape sequences to display them in color on the terminal. The colors are defined by the environment variable <code>GREP_COLORS</code>. The deprecated environment variable <code>GREP_COLOR</code> is still supported, but its setting does not have priority. <u>WHEN</u> is <code>never</code>, <code>always</code>, or <code>auto</code>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v4z+:J=zz-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --files-without-match", 
                        "grep", 
                        "", 
                        "-L", 
                        "--files-without-match", 
                        "", 
                        "<div>Suppress normal output; instead print the name of each input file from which no output would normally have been printed. The scanning will stop on the first match.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F3yu77}Axt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --files-with-matches", 
                        "grep", 
                        "", 
                        "-l", 
                        "--files-with-matches", 
                        "", 
                        "<div>Suppress normal output; instead print the name of each input file from which output would normally have been printed. The scanning will stop on the first match.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q1Ink/<oZU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --max-count", 
                        "grep", 
                        "", 
                        "-m <u>NUM</u>", 
                        "--max-count=<u>NUM</u>", 
                        "", 
                        "<div>Stop reading a file after <u>NUM</u> matching lines. If the input is standard input from a regular file, and <u>NUM</u> matching lines are output, <code>grep</code> ensures that the standard input is positioned to just after the last matching line before exiting, regardless of the presence of trailing context lines. This enables a calling process to resume a search. When <code>grep</code> stops after <u>NUM</u> matching lines, it outputs any trailing context lines. When the <code>-c</code> or <code>--count</code> option is also used,<code> grep</code> does not output a count greater than <u>NUM</u>. When the <code>-v</code> or <code>--invert-match</code> option is also used, <code>grep</code> stops after outputting <u>NUM </u>non-matching lines.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "weq1`#%1I]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --only-matching", 
                        "grep", 
                        "", 
                        "-o", 
                        "--only-matching", 
                        "", 
                        "Print only the matched (non-empty) parts of a matching line, with each such part on a separate output line.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t=(R1aD;Nd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --quiet", 
                        "grep", 
                        "long option", 
                        "-q", 
                        "--quiet", 
                        "grep --silent", 
                        "<div>Quiet; do not write anything to standard output. Exit immediately with zero status if any match is found, even if an error was detected. Also see the <code>-s</code> or <code>--no-messages</code> option.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q6tq|<jwvu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --no-messages", 
                        "grep", 
                        "", 
                        "-s", 
                        "--no-messages", 
                        "", 
                        "<div>Suppress error messages about nonexistent or unreadable files.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i&Q&#<@pi]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --byte-offset", 
                        "grep", 
                        "", 
                        "-b", 
                        "--byte-offset", 
                        "", 
                        "Print the 0-based byte offset within the input file before each line of output. If <code>-o</code> (<code>--only-matching</code>) is specified, print the offset of the matching part itself.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c@#p>u~9u0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --with-filename", 
                        "grep", 
                        "", 
                        "-H", 
                        "--with-filename", 
                        "", 
                        "Print the file name for each match. This is the default when there is more than one file to search.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q]Ee-@>6(v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --no-filename", 
                        "grep", 
                        "", 
                        "-h", 
                        "--no-filename", 
                        "", 
                        "Suppress the prefixing of file names on output. This is the default when there is only one file (or only standard input) to search.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DFo/eu+>?p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --label", 
                        "grep", 
                        "", 
                        "", 
                        "--label=<u>LABEL</u>", 
                        "", 
                        "Display input actually coming from standard input as input coming from file <u>LABEL</u>. This is especially useful when implementing tools like <code>zgrep</code>. See also the <code>-H</code> option.", 
                        "<div><div><div>gzip -cd foo.gz | grep --label=foo -H something</div></div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y&9GMam/gJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --line-number", 
                        "grep", 
                        "", 
                        "-n", 
                        "--line-number", 
                        "", 
                        "<div>Prefix each line of output with the 1-based line number within its input file. (<code>-n</code> is specified by POSIX.) </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ymMKC<,jqL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --initial-tab", 
                        "grep", 
                        "", 
                        "-T", 
                        "--initial-tab", 
                        "", 
                        "<div>Make sure that the first character of actual line content lies on a tab stop, so that the alignment of tabs looks normal. This is useful with options that prefix their output to the actual content: <code>-H</code>, <code>-n</code>, and<code> -b</code>. In order to improve the probability that lines from a single file will all start at the same column, this also causes the line number and byte offset (if present) to be printed in a minimum size field width. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vy]ccsp&fq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --unix-byte-offsets", 
                        "grep", 
                        "", 
                        "-u", 
                        "--unix-byte-offsets", 
                        "", 
                        "<div>Report Unix-style byte offsets. This switch causes <code>grep</code> to report byte offsets as if the file were a Unix-style text file, i.e., with CR characters stripped off. This will produce results identical to running <code>grep</code> on a Unix machine. This option has no effect unless <code>-b</code> option is also used; it has no effect on platforms other than MS-DOS and MS -Windows. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GS|v6vMSL.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --null", 
                        "grep", 
                        "", 
                        "-Z", 
                        "--null", 
                        "", 
                        "Output a zero byte (the ASCII <code>NUL</code> character) instead of the character that normally follows a file name. For example, <code>grep -lZ</code> outputs a zero byte after each file name instead of the usual newline. This option makes the output unambiguous, even in the presence of file names containing unusual characters like newlines. This option can be used with commands like <code>find -print0, perl -0, sort -z</code>, and <code>xargs -0</code> to process arbitrary file names, even those that contain newline characters.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L2nI>h^zck", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --after-context", 
                        "grep", 
                        "", 
                        "-A <u>NUM</u>", 
                        "--after-context=<u>NUM</u>", 
                        "", 
                        "<div>Print <u>NUM</u> lines of trailing context after matching lines. Places a line containing a group separator (--) between contiguous groups of matches. With the <code>-o</code> or <code>--only-matching</code> option, this has no effect and a warning is given. </div>", 
                        "<div><div><div><code>grep -A 3 -i \"example\" demo_text</code></div></div></div>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ng@ooyj+tv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --before-context", 
                        "grep", 
                        "", 
                        "-B <u>NUM</u>", 
                        "--before-context=<u>NUM</u>", 
                        "", 
                        "<div>Print <u>NUM</u> lines of leading context before matching lines. Places a line containing a group separator (--) between contiguous groups of matches. With the <code>-o</code> or <code>--only-matching</code> option, this has no effect and a warning is given.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ycG)_A4nJ5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --context", 
                        "grep", 
                        "", 
                        "[-C |-]<u>NUM</u>", 
                        "--context=<u>NUM</u>", 
                        "", 
                        "<div>Print <u>NUM</u> lines of output context. Places a line containing a group separator (<code>--</code>) between contiguous groups of matches. With the <code>-o</code> or <code>--only-matching</code> option, this has no effect and a warning is given.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fOO~>(H,4b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --recursive", 
                        "grep", 
                        "", 
                        "-(R|r)", 
                        "--recursive", 
                        "", 
                        "<div>Read all files under each directory, recursively; this is equivalent to the <code>-d recurse</code> option.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EE^gC-P@Wj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --include", 
                        "grep", 
                        "", 
                        "", 
                        "--include=<u>GLOB</u>", 
                        "", 
                        "<div>Search only files whose base name matches <u>GLOB</u> (using wildcard matching as described under <code>&#8209;&#8209;exclude</code>). </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nsoj0z@JT<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --<b>exclude</b>", 
                        "grep", 
                        "", 
                        "", 
                        "--<b>exclude</b>=<u>GLOB</u>", 
                        "", 
                        "Skip files whose base name matches <u>GLOB</u> (using wildcard matching). A file-name glob can use <b>*</b>, <b>?</b>, and <b>[...]</b> as wildcards, and <b>\\</b> to quote a wildcard or backslash character literally.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I+~`9v<xyV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --<b>exclude-from</b>", 
                        "grep", 
                        "", 
                        "", 
                        "--<b>exclude-from=<u>FILE</u></b>", 
                        "", 
                        "Skip files whose base name matches any of the file-name globs read from <u>FILE</u> (using wildcard matching as described under <b>--exclude</b>).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hl|.]gn7yl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --<b>exclude-dir</b>", 
                        "grep", 
                        "", 
                        "", 
                        "--<b>exclude-dir=<u>DIR</u></b>", 
                        "", 
                        "Exclude directories matching the pattern <u>DIR</u> from recursive searches.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f6s5Wh.Zg@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep -I", 
                        "grep", 
                        "", 
                        "-I", 
                        "", 
                        "", 
                        "<div>Process a binary file as if it did not contain matching data; this is equivalent to the <code>--binary-files=without-match</code> option. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I1ZF{3{~r`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --text", 
                        "grep", 
                        "", 
                        "-a", 
                        "--text", 
                        "", 
                        "Process a binary file as if it were text; this is equivalent to the <code>--binary-files=text</code> option.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rJ.3d*3Jy(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --line-buffered", 
                        "grep", 
                        "", 
                        "", 
                        "--line-buffered", 
                        "", 
                        "<div>Use line buffering on output. This can cause a performance penalty. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nn4P&%8XWr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --binary", 
                        "grep", 
                        "", 
                        "-U", 
                        "--binary", 
                        "", 
                        "<div>Treat the <code>file</code>(s) as binary. By default, under MS-DOS and MS -Windows, <code>grep</code> guesses the file type by looking at the contents of the first 32KB read from the file. If <code>grep</code> decides the file is a text file, it strips the CR characters from the original file contents (to make regular expressions with <code>^</code> and <code>$</code> work correctly). Specifying <code>-U</code> overrules this guesswork, causing all files to be read and passed to the matching mechanism verbatim; if the file is a text file with CR/LF pairs at the end of each line, this will cause some regular expressions to fail. This option has no effect on platforms other than MS-DOS and MS -Windows. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jd0CJ&9k`x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "grep --null-data", 
                        "grep", 
                        "", 
                        "-z", 
                        "--null-data", 
                        "", 
                        "<div>Treat the input as a set of lines, each terminated by a zero byte (the ASCII NUL character) instead of a newline. Like the <code>-Z</code> or <code>--null</code> option, this option can be used with commands like <code>sort -z</code> to process arbitrary file names. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jQ=)eCIY+o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --version", 
                        "rsync", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "<div>Print the <code>rsync</code> version number and exit.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G00aqKIeET", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --verbose", 
                        "rsync", 
                        "", 
                        "-v", 
                        "--verbose", 
                        "", 
                        "<div> This option increases the amount of information you are given during the transfer. By default, rsync works silently. A single <code>-v</code> will give you information about what files are being transferred and a brief summary at the end. Two <code>-v</code> options will give you information on what files are being skipped and slightly more information at the end. More than two <code>-v</code> options should only be used if you are debugging rsync. </div><div>Note that the names of the transferred files that are output are done using</div><div> a default <code>--out-format</code> of <code>lq%n%Lrq</code>, which tells you just the name of the file and, if the item is a link, where it points. At the single <code>-v</code> level of verbosity, this does not mention when a file gets its attributes changed. If you ask for an itemized list of changed attributes (either <code>--itemize-changes</code> or adding <code>lq%irq</code> to the <code>--out-format</code> setting), the output (on the client) increases to mention all items that are changed in any way. See the <code>--out-format</code> option for more details. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ve5`N<qgim", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--no-OPTION</b>", 
                        "rsync", 
                        "", 
                        "", 
                        "<b>--no-OPTION</b>", 
                        "", 
                        "<div>You may turn off one or more implied options by prefixing the option name with lqno-rq. Not all options may be prefixed with a lqno-rq: only options that are implied by other options (e.g. <b>--no-D</b>, <b>--no-perms</b>) or have different defaults in various circumstances (e.g. <b>--no-whole-file, --no-blocking-io, --no-dirs</b>). You may specify either the short or the long option name after the lqno-rq prefix (e.g. <b>--no-R</b> is the same as <b>--no-relative</b>). </div><div><br /></div><div>For example: if you want to use <b>-a</b> (<b>--archive</b>) but don't want <b>-o</b> (<b>--owner</b>), instead of converting <b>-a</b> into <b>-rlptgD</b>, you could specify <b>-a --no-o</b> (or <b>-a --no-owner</b>).</div><div><br /></div><div>The order of the options is important: if you specify <b>--no-r -a</b>, the <b>-r</b> option would end up being turned on, the opposite of <b>-a --no-r</b>. Note also that the side-effects of the <b>--files-from</b> option are NOT positional, as it affects the default state of several options and slightly changes the meaning of<b> -a</b> (see the <b>--files-from</b> option for more details).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oo)zCW%YRj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--size-only</b>", 
                        "rsync", 
                        "", 
                        "", 
                        "<b>--size-only</b>", 
                        "", 
                        "<div>This modifies rsync's lqquick checkrq algorithm for finding files that need to be transferred, changing it from the default of transferring files with either a changed size or a changed last-modified time to just looking for files that have changed in size. This is useful when starting to use rsync after using another mirroring system which may not preserve timestamps exactly. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tjD,Qpt4Zr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--modify-window</b>", 
                        "rsync", 
                        "", 
                        "", 
                        "<b>--modify-window</b>", 
                        "", 
                        "<div>When comparing two timestamps, rsync treats the timestamps as being equal if they differ by no more than the modify-window value. This is normally 0 (for an exact match), but you may find it useful to set this to a larger value in some situations. In particular, when transferring to or from an MS Windows FAT filesystem (which represents times with a 2-second resolution), <b>--modify-window=1</b> is useful (allowing times to differ by up to 1 second).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C,{_ER!MpE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--recursive</b>", 
                        "rsync", 
                        "", 
                        "<b>-r</b>", 
                        "<b>--recursive</b>", 
                        "", 
                        "<div>This tells rsync to copy directories recursively. See also <b>--dirs</b> (<b>-d</b>). </div><div><br /></div><div>Beginning with rsync 3.0.0, the recursive algorithm used is now an incremental scan that uses much less memory than before and begins the transfer after the scanning of the first few directories have been completed. This incremental scan only affects our recursion algorithm, and does not change a non-recursive transfer. It is also only possible when both ends of the transfer are at least version 3.0.0.</div><div><br /></div><div>Some options require <b>rsync</b> to know the full file list, so these options disable the incremental recursion mode. These include: <b>--delete-before, --delete-after, --prune-empty-dirs</b>, and <b>--delay-updates</b>. Because of this, the default delete mode when you specify <b>--delete</b> is now <b>--delete-during</b> when both ends of the connection are at least 3.0.0 (use <b>--del</b> or <b>--delete-during</b> to request this improved deletion mode explicitly). See also the <b>--delete-delay</b> option that is a better choice than using <b>--delete-after</b>.</div><div> </div><div>Incremental recursion can be disabled using the <b>--no-inc-recursive</b> option or its shorter <b>--no-i-r</b> alias. </div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H}i>Efw#;k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync <b>--relative</b>", 
                        "rsync", 
                        "", 
                        "<b>-R</b>", 
                        "<b>--relative</b>", 
                        "", 
                        "<p>Use relative paths. This means that the full path names specified on the command line are sent to the server rather than just the last parts of the filenames. This is particularly useful when you want to send several different directories at the same time. For example, if you used this command:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -av /foo/bar/baz.c remote:/tmp/\n</pre></div>\n<p>this would create a file named <code>baz.c</code> in <code>/tmp/</code> on the remote machine. If instead you used</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avR /foo/bar/baz.c remote:/tmp/\n</pre></div>\n<p>then a file named <code>/tmp/foo/bar/baz.c</code> would be created on the remote machine, preserving its full path. These extra path elements are called \"implied directories\" (i.e. the \"foo\" and the \"foo/bar\" directories in the above example).</p>\n<p>Beginning with <strong>rsync</strong> 3.0.0, <strong>rsync</strong> always sends these implied directories as real directories in the file list, even if a path element is really a symlink on the sending side. This prevents some really unexpected behaviors when copying the full path of a file that you didn't realize had a symlink in its path. If you want to duplicate a server-side symlink, include both the symlink via its path, and referent directory via its real path. If you're dealing with an older <strong>rsync</strong> on the sending side, you may need to use the <strong><code>--no-implied-dirs</code></strong> option.</p>\n<p>It is also possible to limit the amount of path information that is sent as implied directories for each path you specify. With a modern <strong>rsync</strong> on the sending side (beginning with 2.6.7), you can insert a dot and a slash into the source path, like this:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avR /foo/./bar/baz.c remote:/tmp/\n</pre></div>\n<p>That would create <strong> /tmp/bar/baz.c</strong> on the remote machine. (Note that the dot must be followed by a slash, so \"/foo/.\" would not be abbreviated.) For older <strong>rsync</strong> versions, you would need to use a chdir to limit the source path. For example, when pushing files:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">cd</span> /foo<span style=\"color: #d0d0d0\">;</span> rsync -avR bar/baz.c remote:/tmp/<span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>(Note that the parens put the two commands into a sub-shell, so that the <code>cd</code> command doesn't remain in effect for future commands.) If you're pulling files from an older rsync, use this idiom (but only for a non-daemon transfer):</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">rsync -avR --rsync-path<span style=\"color: #d0d0d0\">=</span><span style=\"color: #ed9d13\">\"cd /foo; rsync\"</span> <span style=\"color: #ed9d13\">\\</span>\nremote:bar/baz.c /tmp/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNTgxODgsICJpZCI6ICIxNDk0Mzk1MDAwMjI3LTAwNiIsICJtZCI6ICJVc2UgcmVsYXRpdmUgcGF0aHMuIFRoaXMgbWVhbnMgdGhhdCB0aGUgZnVsbCBwYXRoIG5hbWVzIHNwZWNpZmllZCBvbiB0aGUgY29tbWFuZCBsaW5lIGFyZSBzZW50IHRvIHRoZSBzZXJ2ZXIgcmF0aGVyIHRoYW4ganVzdCB0aGUgbGFzdCBwYXJ0cyBvZiB0aGUgZmlsZW5hbWVzLiBUaGlzIGlzIHBhcnRpY3VsYXJseSB1c2VmdWwgd2hlbiB5b3Ugd2FudCB0byBzZW5kIHNldmVyYWwgZGlmZmVyZW50IGRpcmVjdG9yaWVzIGF0IHRoZSBzYW1lIHRpbWUuIEZvciBleGFtcGxlLCBpZiB5b3UgdXNlZCB0aGlzIGNvbW1hbmQ6XG4gIFxuICAgIDo6OnNoXG4gICAgcnN5bmMgLWF2IC9mb28vYmFyL2Jhei5jIHJlbW90ZTovdG1wL1xuICBcbnRoaXMgd291bGQgY3JlYXRlIGEgZmlsZSBuYW1lZCBgYmF6LmNgIGluIGAvdG1wL2Agb24gdGhlIHJlbW90ZSBtYWNoaW5lLiBJZiBpbnN0ZWFkIHlvdSB1c2VkXG4gIFxuICAgIDo6OnNoXG4gICAgcnN5bmMgLWF2UiAvZm9vL2Jhci9iYXouYyByZW1vdGU6L3RtcC9cbiAgXG50aGVuIGEgZmlsZSBuYW1lZCBgL3RtcC9mb28vYmFyL2Jhei5jYCB3b3VsZCBiZSBjcmVhdGVkIG9uIHRoZSByZW1vdGUgbWFjaGluZSwgcHJlc2VydmluZyBpdHMgZnVsbCBwYXRoLiBUaGVzZSBleHRyYSBwYXRoIGVsZW1lbnRzIGFyZSBjYWxsZWQgJnF1b3Q7aW1wbGllZCBkaXJlY3RvcmllcyZxdW90OyAoaS5lLiB0aGUgJnF1b3Q7Zm9vJnF1b3Q7IGFuZCB0aGUgJnF1b3Q7Zm9vL2JhciZxdW90OyBkaXJlY3RvcmllcyBpbiB0aGUgYWJvdmUgZXhhbXBsZSkuXG4gIFxuQmVnaW5uaW5nIHdpdGggKipyc3luYyoqIDMuMC4wLCAqKnJzeW5jKiogYWx3YXlzIHNlbmRzIHRoZXNlIGltcGxpZWQgZGlyZWN0b3JpZXMgYXMgcmVhbCBkaXJlY3RvcmllcyBpbiB0aGUgZmlsZSBsaXN0LCBldmVuIGlmIGEgcGF0aCBlbGVtZW50IGlzIHJlYWxseSBhIHN5bWxpbmsgb24gdGhlIHNlbmRpbmcgc2lkZS4gVGhpcyBwcmV2ZW50cyBzb21lIHJlYWxseSB1bmV4cGVjdGVkIGJlaGF2aW9ycyB3aGVuIGNvcHlpbmcgdGhlIGZ1bGwgcGF0aCBvZiBhIGZpbGUgdGhhdCB5b3UgZGlkbiZhcG9zO3QgcmVhbGl6ZSBoYWQgYSBzeW1saW5rIGluIGl0cyBwYXRoLiBJZiB5b3Ugd2FudCB0byBkdXBsaWNhdGUgYSBzZXJ2ZXItc2lkZSBzeW1saW5rLCBpbmNsdWRlIGJvdGggdGhlIHN5bWxpbmsgdmlhIGl0cyBwYXRoLCBhbmQgcmVmZXJlbnQgZGlyZWN0b3J5IHZpYSBpdHMgcmVhbCBwYXRoLiBJZiB5b3UmYXBvcztyZSBkZWFsaW5nIHdpdGggYW4gb2xkZXIgKipyc3luYyoqIG9uIHRoZSBzZW5kaW5nIHNpZGUsIHlvdSBtYXkgbmVlZCB0byB1c2UgdGhlICoqYC0tbm8taW1wbGllZC1kaXJzYCoqIG9wdGlvbi5cbiAgXG5JdCBpcyBhbHNvIHBvc3NpYmxlIHRvIGxpbWl0IHRoZSBhbW91bnQgb2YgcGF0aCBpbmZvcm1hdGlvbiB0aGF0IGlzIHNlbnQgYXMgaW1wbGllZCBkaXJlY3RvcmllcyBmb3IgZWFjaCBwYXRoIHlvdSBzcGVjaWZ5LiBXaXRoIGEgbW9kZXJuICoqcnN5bmMqKiBvbiB0aGUgc2VuZGluZyBzaWRlIChiZWdpbm5pbmcgd2l0aCAyLjYuNyksIHlvdSBjYW4gaW5zZXJ0IGEgZG90IGFuZCBhIHNsYXNoIGludG8gdGhlIHNvdXJjZSBwYXRoLCBsaWtlIHRoaXM6XG4gIFxuICAgIDo6OnNoXG4gICAgcnN5bmMgLWF2UiAvZm9vLy4vYmFyL2Jhei5jIHJlbW90ZTovdG1wL1xuICBcblRoYXQgd291bGQgY3JlYXRlICoqIC90bXAvYmFyL2Jhei5jKiogb24gdGhlIHJlbW90ZSBtYWNoaW5lLiAoTm90ZSB0aGF0IHRoZSBkb3QgbXVzdCBiZSBmb2xsb3dlZCBieSBhIHNsYXNoLCBzbyAmcXVvdDsvZm9vLy4mcXVvdDsgd291bGQgbm90IGJlIGFiYnJldmlhdGVkLikgRm9yIG9sZGVyICoqcnN5bmMqKiB2ZXJzaW9ucywgeW91IHdvdWxkIG5lZWQgdG8gdXNlIGEgY2hkaXIgdG8gbGltaXQgdGhlIHNvdXJjZSBwYXRoLiBGb3IgZXhhbXBsZSwgd2hlbiBwdXNoaW5nIGZpbGVzOlxuICBcbiAgICA6OjpzaFxuICAgIChjZCAvZm9vOyByc3luYyAtYXZSIGJhci9iYXouYyByZW1vdGU6L3RtcC8pXG4gIFxuICBcbihOb3RlIHRoYXQgdGhlIHBhcmVucyBwdXQgdGhlIHR3byBjb21tYW5kcyBpbnRvIGEgc3ViLXNoZWxsLCBzbyB0aGF0IHRoZSBgY2RgIGNvbW1hbmQgZG9lc24mYXBvczt0IHJlbWFpbiBpbiBlZmZlY3QgZm9yIGZ1dHVyZSBjb21tYW5kcy4pIElmIHlvdSZhcG9zO3JlIHB1bGxpbmcgZmlsZXMgZnJvbSBhbiBvbGRlciByc3luYywgdXNlIHRoaXMgaWRpb20gKGJ1dCBvbmx5IGZvciBhIG5vbi1kYWVtb24gdHJhbnNmZXIpOlxuICBcbiAgICA6OjpzaFxuICAgIHJzeW5jIC1hdlIgLS1yc3luYy1wYXRoPSZxdW90O2NkIC9mb287IHJzeW5jJnF1b3Q7IFxcXG4gICAgcmVtb3RlOmJhci9iYXouYyAvdG1wL1xuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zCZ0XP~}v/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --info", 
                        "rsync", 
                        "", 
                        "", 
                        "--info=FLAGS", 
                        "", 
                        "fine-grained informational verbosity", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lrO>RK9|s&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --debug", 
                        "rsync", 
                        "", 
                        "", 
                        "--debug=FLAGS", 
                        "", 
                        "fine-grained debug verbosity", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hj1ZK@ja5F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --msgs2stderr", 
                        "rsync", 
                        "", 
                        "", 
                        "--msgs2stderr", 
                        "", 
                        "special output handling for debugging", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QHr3fB+*^v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --quiet", 
                        "rsync", 
                        "", 
                        "-q", 
                        "--quiet", 
                        "", 
                        "<div>This option decreases the amount of information you are given during the transfer, notably suppressing information messages from the remote server. This option is useful when invoking rsync from cron.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B,NbV=EqZt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --no-motd", 
                        "rsync", 
                        "", 
                        "", 
                        "--no-motd", 
                        "", 
                        "<div>This option affects the information that is output by the client at the start of a daemon transfer. This suppresses the message-of-the-day (MOTD) text, but it also affects the list of modules that the daemon sends in response to the lqrsync host::rq request (due to a limitation in the rsync protocol), so omit this option if you want to request the list of modules from the daemon.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "furD>|f?E(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --checksum", 
                        "rsync", 
                        "", 
                        "-c", 
                        "--checksum", 
                        "", 
                        "<div>This changes the way rsync checks if the files have been changed and are in need of a transfer. Without this option, rsync uses a lqquick checkrq that (by default) checks if each file's size and time of last modification match between the sender and receiver. This option changes this to compare a 128-bit checksum for each file that has a matching size. Generating the checksums means that both sides will expend a lot of disk I/O reading all the data in the files in the transfer (and this is prior to any reading that will be done to transfer changed files), so this can slow things down significantly. </div><div>The sending side generates its checksums while it is doing the file-system</div><div> scan that builds the list of the available files. The receiver generates its checksums when it is scanning for changed files, and will checksum any file that has the same size as the corresponding sender's file: files with either a changed size or a changed checksum are selected for transfer. </div><div>Note that rsync always verifies that each transferred file was</div><div> correctly reconstructed on the receiving side by checking a whole-file checksum that is generated as the file is transferred, but that automatic after-the-transfer verification has nothing to do with this option's before-the-transfer lqDoes this file need to be updated?rq check. </div><div>For protocol 30 and beyond (first supported in 3.0.0), the checksum used is</div><div> MD5. For older protocols, the checksum used is MD4.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BL_A9we3^.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --archive", 
                        "rsync", 
                        "expanded form", 
                        "-a", 
                        "--archive", 
                        "rsync <code>-rlptgoD</code>", 
                        "<div>This is equivalent to <code>-rlptgoD</code>. It is a quick way of saying you want recursion and want to preserve almost everything (with <code>-H</code> being a notable omission). The only exception to the above equivalence is when <code>--files-from</code> is specified, in which case <code>-r</code> is not implied.</div><div><br /></div><div>Note that <code>-a</code> does not preserve hardlinks, because finding multiply-linked files is expensive. You must separately specify <code>-H</code>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OHAH}mCJaB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --no-implied-dirs", 
                        "rsync", 
                        "", 
                        "", 
                        "--no-implied-dirs", 
                        "", 
                        "don't send implied dirs with <code>--relative</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d?)b{vXK-%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --backup", 
                        "rsync", 
                        "", 
                        "-b", 
                        "--backup", 
                        "", 
                        "make backups (see <code>--suffix</code> & <code>--backup-dir</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c62Uy}atO}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --backup-dir", 
                        "rsync", 
                        "", 
                        "", 
                        "--backup-dir=DIR", 
                        "", 
                        "make backups into hierarchy based in <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u(~AZnUvE*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --suffix", 
                        "rsync", 
                        "", 
                        "", 
                        "--suffix=SUFFIX", 
                        "", 
                        "backup suffix (default ~ w/o <code>--backup-dir</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ji)8&}K=q9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --update", 
                        "rsync", 
                        "", 
                        "-u", 
                        "--update", 
                        "", 
                        "skip files that are newer on the receiver", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iMPj4~]`/n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --inplace", 
                        "rsync", 
                        "", 
                        "", 
                        "--inplace", 
                        "", 
                        "update destination files in-place", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x4n}[=kj`z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --append", 
                        "rsync", 
                        "", 
                        "", 
                        "--append", 
                        "", 
                        "append data onto shorter files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OrhH3qPQZa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --append-verify", 
                        "rsync", 
                        "", 
                        "", 
                        "--append-verify", 
                        "", 
                        "<code>--append</code> w/old data in file checksum", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D:Gh<(;D3f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --dirs", 
                        "rsync", 
                        "", 
                        "-d", 
                        "--dirs", 
                        "", 
                        "transfer directories without recursing", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w3x:-Qr-jh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --links", 
                        "rsync", 
                        "", 
                        "-l", 
                        "--links", 
                        "", 
                        "copy symlinks as symlinks", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q$me]NgaeZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-links", 
                        "rsync", 
                        "", 
                        "-L", 
                        "--copy-links", 
                        "", 
                        "transform symlink into referent file/dir", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l:-RY5EcFk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-unsafe-links", 
                        "rsync", 
                        "", 
                        "", 
                        "--copy-unsafe-links", 
                        "", 
                        "only \"unsafe\" symlinks are transformed", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cXP</]N=OX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --safe-links", 
                        "rsync", 
                        "", 
                        "", 
                        "--safe-links", 
                        "", 
                        "ignore symlinks that point outside the tree", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hXBcigQe|+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --munge-links", 
                        "rsync", 
                        "", 
                        "", 
                        "--munge-links", 
                        "", 
                        "munge symlinks to make them safer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b2e!fEaJ@)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-dirlinks", 
                        "rsync", 
                        "", 
                        "-k", 
                        "--copy-dirlinks", 
                        "", 
                        "transform symlink to dir into referent dir", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "!L?F#`pmh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --keep-dirlinks", 
                        "rsync", 
                        "", 
                        "-K", 
                        "--keep-dirlinks", 
                        "", 
                        "treat symlinked dir on receiver as dir", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "we@+q!KvlD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --hard-links", 
                        "rsync", 
                        "", 
                        "-H", 
                        "--hard-links", 
                        "", 
                        "preserve hard links", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e[vmbo*Pz;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --perms", 
                        "rsync", 
                        "", 
                        "-p", 
                        "--perms", 
                        "", 
                        "preserve permissions", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Kb;d#`n<hU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --fileflags", 
                        "rsync", 
                        "", 
                        "", 
                        "--fileflags", 
                        "", 
                        "preserve file-flags (aka chflags)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x!j^kIy!|s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --executability", 
                        "rsync", 
                        "", 
                        "-E", 
                        "--executability", 
                        "", 
                        "preserve executability", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uwAGve*:]C", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --chmod", 
                        "rsync", 
                        "", 
                        "", 
                        "--chmod=CHMOD", 
                        "", 
                        "affect file and/or directory permissions", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mx*GX]eR$o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --acls", 
                        "rsync", 
                        "", 
                        "-A", 
                        "--acls", 
                        "", 
                        "preserve ACLs (implies <code>-p</code>)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D&96W8Pb&w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --xattrs", 
                        "rsync", 
                        "", 
                        "-X", 
                        "--xattrs", 
                        "", 
                        "preserve extended attributes", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b`2S<&zw-j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --hfs-compression", 
                        "rsync", 
                        "", 
                        "", 
                        "--hfs-compression", 
                        "", 
                        "preserve <u>HFS</u> compression if supported", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f[paM^N-{w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --protect-decmpfs", 
                        "rsync", 
                        "", 
                        "", 
                        "--protect-decmpfs", 
                        "", 
                        "preserve <u>HFS</u> compression as xattrs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OvoT-!r+iD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --owner", 
                        "rsync", 
                        "", 
                        "-o", 
                        "--owner", 
                        "", 
                        "preserve owner (super-user only)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i)UvW>##c$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --group", 
                        "rsync", 
                        "", 
                        "-g", 
                        "--group", 
                        "", 
                        "preserve group", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iIbeFK50q+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --devices", 
                        "rsync", 
                        "", 
                        "", 
                        "--devices", 
                        "", 
                        "preserve device files (super-user only)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tFJ7wa`DU[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --specials", 
                        "rsync", 
                        "", 
                        "", 
                        "--specials", 
                        "", 
                        "preserve special files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oR`o9ra#9?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -D", 
                        "rsync", 
                        "", 
                        "-D", 
                        "", 
                        "", 
                        "same as <code>--devices</code> <code>--specials</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hMSn}nDU0K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --times", 
                        "rsync", 
                        "", 
                        "-t", 
                        "--times", 
                        "", 
                        "preserve modification times", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "whGJG(4,f$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --crtimes", 
                        "rsync", 
                        "", 
                        "-N", 
                        "--crtimes", 
                        "", 
                        "preserve create times (newness)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qgF2q^&er<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --omit-dir-times", 
                        "rsync", 
                        "", 
                        "-O", 
                        "--omit-dir-times", 
                        "", 
                        "omit directories from <code>--times</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CuD8S>1T{{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --omit-link-times", 
                        "rsync", 
                        "", 
                        "-J", 
                        "--omit-link-times", 
                        "", 
                        "omit symlinks from <code>--times</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H&N-v;p}})", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --super", 
                        "rsync", 
                        "", 
                        "", 
                        "--super", 
                        "", 
                        "receiver attempts super-user activities", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b)4zI/v0gS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --fake-super", 
                        "rsync", 
                        "", 
                        "", 
                        "--fake-super", 
                        "", 
                        "store/recover privileged attrs using xattrs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g@6|Ix3$/f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --sparse", 
                        "rsync", 
                        "", 
                        "-S", 
                        "--sparse", 
                        "", 
                        "handle sparse files efficiently", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ga?+5Lw/sp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --preallocate", 
                        "rsync", 
                        "", 
                        "", 
                        "--preallocate", 
                        "", 
                        "allocate dest files before writing", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f/C)v`*7Wn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --dry-run", 
                        "rsync", 
                        "", 
                        "-n", 
                        "--dry-run", 
                        "", 
                        "perform a trial run with no changes made", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hGfx--S.AQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --whole-file", 
                        "rsync", 
                        "", 
                        "-W", 
                        "--whole-file", 
                        "", 
                        "copy files whole (w/o delta-xfer algorithm)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r)ah{hh]nD", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --one-file-system", 
                        "rsync", 
                        "", 
                        "-x", 
                        "--one-file-system", 
                        "", 
                        "don't cross filesystem boundaries", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QQhO!!SG6f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --block-size", 
                        "rsync", 
                        "", 
                        "-B", 
                        "--block-size=SIZE", 
                        "", 
                        "force a fixed checksum block-size", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BJ5iD!9*Vz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --rsh", 
                        "rsync", 
                        "", 
                        "-e", 
                        "--rsh=COMMAND", 
                        "", 
                        "specify the remote shell to use", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wC*y,N^zOE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --rsync-path", 
                        "rsync", 
                        "", 
                        "", 
                        "--rsync-path=PROGRAM", 
                        "", 
                        "specify the rsync to run on remote machine", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h`w&_7)j^w", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --existing", 
                        "rsync", 
                        "", 
                        "", 
                        "--existing", 
                        "", 
                        "skip creating new files on receiver", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vO9+x&fX,K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-existing", 
                        "rsync", 
                        "", 
                        "", 
                        "--ignore-existing", 
                        "", 
                        "skip updating files that exist on receiver", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P3+=PwNLH|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --remove-source-files", 
                        "rsync", 
                        "", 
                        "", 
                        "--remove-source-files", 
                        "", 
                        "sender removes synchronized files (non-dir)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iNR{%S[``P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --del", 
                        "rsync", 
                        "", 
                        "", 
                        "--del", 
                        "", 
                        "an alias for <code>--delete-during</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tpN9vATQPF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete", 
                        "", 
                        "delete extraneous files from dest dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BOBAL5+JDO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-before", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-before", 
                        "", 
                        "receiver deletes before xfer, not during", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F6>?-x59ck", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-during", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-during", 
                        "", 
                        "receiver deletes during the transfer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ks=;#GG%b~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-delay", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-delay", 
                        "", 
                        "find deletions during, delete after", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pBGpU`hXuO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-after", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-after", 
                        "", 
                        "receiver deletes after transfer, not during", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pjo&34g!RT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-excluded", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-excluded", 
                        "", 
                        "also delete excluded files from dest dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kumNFzha1)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-missing-args", 
                        "rsync", 
                        "", 
                        "", 
                        "--ignore-missing-args", 
                        "", 
                        "ignore missing source args without error", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iaelt3ZBLs", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delete-missing-args", 
                        "rsync", 
                        "", 
                        "", 
                        "--delete-missing-args", 
                        "", 
                        "delete missing source args from destination", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Nmv8LyG1UE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-errors", 
                        "rsync", 
                        "", 
                        "", 
                        "--ignore-errors", 
                        "", 
                        "delete even if there are I/O errors", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k:`yVJE(p0", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-delete", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-delete", 
                        "", 
                        "force deletion of dirs even if not empty", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H)FfBGGNLH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-change", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-change", 
                        "", 
                        "affect user/system immutable files/dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E@ZE#m%?TF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-uchange", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-uchange", 
                        "", 
                        "affect user-immutable files/dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qIa0ZNGoKC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --force-schange", 
                        "rsync", 
                        "", 
                        "", 
                        "--force-schange", 
                        "", 
                        "affect system-immutable files/dirs", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mdK<CLASp<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --max-delete", 
                        "rsync", 
                        "", 
                        "", 
                        "--max-delete=NUM", 
                        "", 
                        "don't delete more than <u>NUM</u> files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v8DqT/#.JS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --max-size", 
                        "rsync", 
                        "", 
                        "", 
                        "--max-size=SIZE", 
                        "", 
                        "don't transfer any file larger than <u>SIZE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kHL(ExIORC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --min-size", 
                        "rsync", 
                        "", 
                        "", 
                        "--min-size=SIZE", 
                        "", 
                        "don't transfer any file smaller than <u>SIZE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B_G=pApHF8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --partial", 
                        "rsync", 
                        "", 
                        "", 
                        "--partial", 
                        "", 
                        "keep partially transferred files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "low[+RTRpz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --partial-dir", 
                        "rsync", 
                        "", 
                        "", 
                        "--partial-dir=DIR", 
                        "", 
                        "put a partially transferred file into <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lj4kY_o@*$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --delay-updates", 
                        "rsync", 
                        "", 
                        "", 
                        "--delay-updates", 
                        "", 
                        "put all updated files into place at end", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x,Iv=8DpNg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --prune-empty-dirs", 
                        "rsync", 
                        "", 
                        "-m", 
                        "--prune-empty-dirs", 
                        "", 
                        "prune empty directory chains from file-list", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n%d5p6y&G*", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --numeric-ids", 
                        "rsync", 
                        "", 
                        "", 
                        "--numeric-ids", 
                        "", 
                        "don't map uid/gid values by user/group name", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nShB:Mn3|D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --usermap", 
                        "rsync", 
                        "", 
                        "", 
                        "--usermap=STRING", 
                        "", 
                        "custom username mapping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qD$0X2*BeM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --groupmap", 
                        "rsync", 
                        "", 
                        "", 
                        "--groupmap=STRING", 
                        "", 
                        "custom groupname mapping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o}G}v>2mLg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --chown", 
                        "rsync", 
                        "", 
                        "", 
                        "--chown=USER:GROUP", 
                        "", 
                        "simple username/groupname mapping", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sv+?jg(#E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --timeout", 
                        "rsync", 
                        "", 
                        "", 
                        "--timeout=SECONDS", 
                        "", 
                        "set I/O timeout in seconds", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C-5#6m&8!x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --contimeout", 
                        "rsync", 
                        "", 
                        "", 
                        "--contimeout=SECONDS", 
                        "", 
                        "set daemon connection timeout in seconds", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hzI!!oTCk-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ignore-times", 
                        "rsync", 
                        "", 
                        "-I", 
                        "--ignore-times", 
                        "", 
                        "Normally rsync will skip any files that are already the same size and have the same modification timestamp. This option turns off this “quick check” behavior, causing all files to be updated.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "poc%J6U6a]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --temp-dir", 
                        "rsync", 
                        "", 
                        "-T", 
                        "--temp-dir=DIR", 
                        "", 
                        "create temporary files in directory <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p^(0H[),A^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --fuzzy", 
                        "rsync", 
                        "", 
                        "-y", 
                        "--fuzzy", 
                        "", 
                        "find similar file for basis if no dest file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n2(#EVcQTR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --compare-dest", 
                        "rsync", 
                        "", 
                        "", 
                        "--compare-dest=DIR", 
                        "", 
                        "also compare received files relative to <u>DIR</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wpa{IIx](g", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --copy-dest", 
                        "rsync", 
                        "", 
                        "", 
                        "--copy-dest=DIR", 
                        "", 
                        "... and include copies of unchanged files", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pK|Q*>j?8{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --link-dest", 
                        "rsync", 
                        "", 
                        "", 
                        "--link-dest=DIR", 
                        "", 
                        "hardlink to files in <u>DIR</u> when unchanged", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u{_VGkx47O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --compress", 
                        "rsync", 
                        "", 
                        "-z", 
                        "--compress", 
                        "", 
                        "compress file data during the transfer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HK*AcL<#U>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --compress-level", 
                        "rsync", 
                        "", 
                        "", 
                        "--compress-level=NUM", 
                        "", 
                        "explicitly set compression level", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O&IOKG[+AK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --skip-compress", 
                        "rsync", 
                        "", 
                        "", 
                        "--skip-compress=LIST", 
                        "", 
                        "skip compressing files with suffix in <u>LIST</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tS84xsYuhU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --cvs-exclude", 
                        "rsync", 
                        "", 
                        "-C", 
                        "--cvs-exclude", 
                        "", 
                        "auto-ignore files in the same way <u>CVS</u> does", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G7B?X:I[I]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --filter", 
                        "rsync", 
                        "", 
                        "-f", 
                        "--filter=RULE", 
                        "", 
                        "add a file-filtering <u>RULE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jt<?m[8Jx8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -F", 
                        "rsync", 
                        "", 
                        "-F", 
                        "", 
                        "", 
                        "same as <code>--filter='dir-merge /.rsync-filter'</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bJ;_)hXP~O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --exclude", 
                        "rsync", 
                        "", 
                        "", 
                        "--exclude=PATTERN", 
                        "", 
                        "exclude files matching <u>PATTERN</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gg-0ZSf3X=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --exclude-from", 
                        "rsync", 
                        "", 
                        "", 
                        "--exclude-from=FILE", 
                        "", 
                        "read exclude patterns from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hO3kln/6bv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --include", 
                        "rsync", 
                        "", 
                        "", 
                        "--include=PATTERN", 
                        "", 
                        "don't exclude files matching <u>PATTERN</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cwwr#3ET>/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --include-from", 
                        "rsync", 
                        "", 
                        "", 
                        "--include-from=FILE", 
                        "", 
                        "read include patterns from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LIX|pY?2sM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --files-from", 
                        "rsync", 
                        "", 
                        "", 
                        "--files-from=FILE", 
                        "", 
                        "read list of source-file names from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "me9@i1<3Pv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --from0", 
                        "rsync", 
                        "", 
                        "-0", 
                        "--from0", 
                        "", 
                        "all *from/filter files are delimited by 0s", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x_Kl>7uA7I", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --protect-args", 
                        "rsync", 
                        "", 
                        "-s", 
                        "--protect-args", 
                        "", 
                        "no space-splitting; wildcard chars only", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K6%+P:jH.", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --address", 
                        "rsync", 
                        "", 
                        "", 
                        "--address=ADDRESS", 
                        "", 
                        "bind address for outgoing socket to daemon", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G/|)Htl}xF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --port", 
                        "rsync", 
                        "", 
                        "", 
                        "--port=PORT", 
                        "", 
                        "specify double-colon alternate port number", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O4.[pIZQPw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --sockopts", 
                        "rsync", 
                        "", 
                        "", 
                        "--sockopts=OPTIONS", 
                        "", 
                        "specify custom <u>TCP</u> options", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JGy/^(n+^3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --blocking-io", 
                        "rsync", 
                        "", 
                        "", 
                        "--blocking-io", 
                        "", 
                        "use blocking I/O for the remote shell", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gH1SB2k7d{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --outbuf", 
                        "rsync", 
                        "", 
                        "", 
                        "--outbuf=N|L|B", 
                        "", 
                        "set out buffering to None, Line, or Block", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nFN;iZ`)]G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --stats", 
                        "rsync", 
                        "", 
                        "", 
                        "--stats", 
                        "", 
                        "give some file-transfer stats", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fn:X;g|r&?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --8-bit-output", 
                        "rsync", 
                        "", 
                        "-8", 
                        "--8-bit-output", 
                        "", 
                        "leave high-bit chars unescaped in output", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ic5.&3T!]?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --human-readable", 
                        "rsync", 
                        "", 
                        "-h", 
                        "--human-readable", 
                        "", 
                        "output numbers in a human-readable format", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xaDnJi.-)V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --progress", 
                        "rsync", 
                        "", 
                        "", 
                        "--progress", 
                        "", 
                        "show progress during transfer", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Jpmw`1PJL3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -P", 
                        "rsync", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "same as <code>--partial</code> <code>--progress</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tZgb=dj5He", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --itemize-changes", 
                        "rsync", 
                        "", 
                        "-i", 
                        "--itemize-changes", 
                        "", 
                        "output a change-summary for all updates", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NRFm/>esl:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --remote-option", 
                        "rsync", 
                        "", 
                        "-M", 
                        "--remote-option=OPTION", 
                        "", 
                        "send <u>OPTION</u> to the remote side only", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p(d:n7uNe[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --out-format", 
                        "rsync", 
                        "", 
                        "", 
                        "--out-format=FORMAT", 
                        "", 
                        "output updates using the specified <u>FORMAT</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mQ.}Uo:s7@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --log-", 
                        "rsync", 
                        "", 
                        "", 
                        "--log-file=FILE", 
                        "", 
                        "log what we're doing to the specified <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lj]Ul-GDu:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --log-file-format", 
                        "rsync", 
                        "", 
                        "", 
                        "--log-file-format=FMT", 
                        "", 
                        "log updates using the specified <u>FMT</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EqfW6YIRt>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --password-file", 
                        "rsync", 
                        "", 
                        "", 
                        "--password-file=FILE", 
                        "", 
                        "read daemon-access password from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LaYxL@/[TB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --list-only", 
                        "rsync", 
                        "", 
                        "", 
                        "--list-only", 
                        "", 
                        "list the files instead of copying them", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Drf:<0V-b[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --bwlimit", 
                        "rsync", 
                        "", 
                        "", 
                        "--bwlimit=RATE", 
                        "", 
                        "limit socket I/O bandwidth", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xcvxoTD<v}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --write-batch", 
                        "rsync", 
                        "", 
                        "", 
                        "--write-batch=FILE", 
                        "", 
                        "write a batched update to <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PJHIB<0<`E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --only-write-batch", 
                        "rsync", 
                        "", 
                        "", 
                        "--only-write-batch=FILE", 
                        "", 
                        "like <code>--write-batch</code> but w/o updating dest", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "iG];b|EmMt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --read-batch", 
                        "rsync", 
                        "", 
                        "", 
                        "--read-batch=FILE", 
                        "", 
                        "read a batched update from <u>FILE</u>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PRK$uZI2Nn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --protocol", 
                        "rsync", 
                        "", 
                        "", 
                        "--protocol=NUM", 
                        "", 
                        "force an older protocol version to be used", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k[^)SE*7Ym", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --iconv", 
                        "rsync", 
                        "", 
                        "", 
                        "--iconv=CONVERT_SPEC", 
                        "", 
                        "request charset conversion of filenames", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rS1a::{+n:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --checksum-seed", 
                        "rsync", 
                        "", 
                        "", 
                        "--checksum-seed=NUM", 
                        "", 
                        "set block/file checksum seed (advanced)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K}3zGibTZg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ipv4", 
                        "rsync", 
                        "", 
                        "-4", 
                        "--ipv4", 
                        "", 
                        "prefer IPv4", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kzJMWdcIWq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync --ipv6", 
                        "rsync", 
                        "", 
                        "-6", 
                        "--ipv6", 
                        "", 
                        "prefer IPv6", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wQ>CzUQAMg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "rsync -F -F", 
                        "rsync", 
                        "", 
                        "-F -F", 
                        "", 
                        "", 
                        "same as <code>--filter='dir-merge /.rsync-filter' --filter='- .rsync-filter'</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fil]pt?{L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar @<u>archive</u>", 
                        "tar", 
                        "", 
                        "@<u>archive</u>", 
                        "", 
                        "", 
                        "(<code>c</code> and <code>r</code> mode only) The specified archive is opened and the entries in it will be appended to the current archive. As a simple example, <code>tar -c -f <u>-</u> <u>newfile</u> @<u>original.tar</u></code> writes a new archive to standard output containing a file <u>newfile</u> and all of the entries from <u>original.tar</u>. In contrast, <code>tar -c -f <u>-</u> <u>newfile</u> <u>original.tar</u></code> creates a new archive with only two entries. Similarly, <code>tar -czf <u>-</u> <b>--format</code> pax @<u>-</u></b> reads an archive from standard input (whose format will be determined automatically) and converts it into a gzip-compressed pax-format archive on stdout. In this way, <code>tar</code> can be used to convert archives from one format to another.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "3SJO`1d./", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -b", 
                        "tar", 
                        "", 
                        "-b <u>blocksize</u>", 
                        "", 
                        "", 
                        "Specify the block size, in 512-byte records, for tape drive I/O. As a rule, this argument is only needed when reading from or writing to tape drives, and usually not even then as the default block size of 20 records (10240 bytes) is very common.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qa`9mb:X}J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -C", 
                        "tar", 
                        "", 
                        "-C <u>directory</u>", 
                        "", 
                        "", 
                        "In <code>c</code> and <code>r</code> mode, this changes the directory before adding the following files. In <code>x</code> mode, change directories after opening the archive but before extracting entries from the archive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yKuq]e8t<v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --check-links", 
                        "tar", 
                        "", 
                        "", 
                        "--check-links", 
                        "", 
                        "(<code>c</code> and <code>r</code> modes only) Issue a warning message unless all links to each file are archived.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hutOdeif(S", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --chroot", 
                        "tar", 
                        "", 
                        "", 
                        "--chroot", 
                        "", 
                        "(<code>x</code> mode only) <code>chroot</code>() to the current directory after processing any <code>-C</code> options and before extracting any files.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lxoanW<{34", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --exclude", 
                        "tar", 
                        "", 
                        "", 
                        "--exclude <u>pattern</u>", 
                        "", 
                        "Do not process files or directories that match the specified pattern. Note that exclusions take precedence over patterns or filenames specified on the command line.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jXtu(WHUk?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --format", 
                        "tar", 
                        "", 
                        "", 
                        "--format <u>format</u>", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> mode only) Use the specified format for the created archive. Supported formats include <code>cpio</code>, <code>pax</code>, <code>shar</code>, and <code>ustar</code>. Other formats may also be supported; see <code>libarchive-formats</code>(5) for more information about currently supported formats. In <code>r</code> and <code>u</code> modes, when extending an existing archive, the format specified here must be compatible with the format of the existing archive on disk.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r)&xA&S`@p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -f", 
                        "tar", 
                        "", 
                        "-f <u>file</u>", 
                        "", 
                        "", 
                        "Read the archive from or write the archive to the specified file. The filename can be <code>-</code> for standard input or standard output.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kp-<`9q;s=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -H", 
                        "tar", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "(<code>c</code> and <code>r</code> mode only) Symbolic links named on the command line will be followed; the <code>tar</code>get of the link will be archived, not the link itself.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PBy+]Yom9y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -h", 
                        "tar", 
                        "", 
                        "-h", 
                        "", 
                        "", 
                        "(<code>c</code> and <code>r</code> mode only) Synonym for <code>-L.</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n^Pq;_+aF#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -I", 
                        "tar", 
                        "", 
                        "-I", 
                        "", 
                        "", 
                        "Synonym for <code>-T.</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CQ(AZH%Sk<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --include", 
                        "tar", 
                        "", 
                        "", 
                        "--include <u>pattern</u>", 
                        "", 
                        "Process only files or directories that match the specified pattern. Note that exclusions specified with <code>--exclude</code> take precedence over inclusions. If no inclusions are explicitly specified, all entries are processed by default. The <code>--include</code> option is especially useful when filtering archives. For example, the command <code>tar -c -f <u>new.tar</u> --include='*foo*' @<u>old.tgz</u></code> creates a new archive <u>new.tar</u> containing only the entries from <u>old.tgz</u> containing the string `foo'.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H_6jH<g$6b", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -j", 
                        "tar", 
                        "", 
                        "-j", 
                        "", 
                        "", 
                        "(<code>c</code> mode only) Compress the resulting archive with <code>bzip2</code>(1). In extract or list modes, this option is ignored. Note that, unlike other <code>tar</code> implementations, this implementation recognizes bzip2 compression automatically when reading archives.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lEyn55<%5X", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -k", 
                        "tar", 
                        "", 
                        "-k", 
                        "", 
                        "", 
                        "(<code>x</code> mode only) Do not overwrite existing files. In particular, if a file appears more than once in an archive, later copies will not overwrite earlier copies.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uz7/$@C$4F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --keep-newer-files", 
                        "tar", 
                        "", 
                        "", 
                        "--keep-newer-files", 
                        "", 
                        "(<code>x</code> mode only) Do not overwrite existing files that are newer than the versions appearing in the archive being extracted.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qE{Vx]1t|$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -L", 
                        "tar", 
                        "", 
                        "-L", 
                        "", 
                        "", 
                        "(<code>c</code> and <code>r</code> mode only) All symbolic links will be followed. Normally, symbolic links are archived as such. With this option, the <code>tar</code>get of the link will be archived instead.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wH]$WgxV!G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -l", 
                        "tar", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "This is a synonym for the <code>--check-links</code> option.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jXHsIz[Ex1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -m", 
                        "tar", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "(<code>x</code> mode only) Do not extract modification time. By default, the modification time is set to the time stored in the archive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d]8^-pU[cr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -n", 
                        "tar", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes only) Do not recursively archive the contents of directories.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E8q%SCnoN#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer", 
                        "tar", 
                        "", 
                        "", 
                        "--newer <u>date</u>", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes only) Only include files and directories newer than the specified date. This compares ctime entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N`MnH5ty{Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer-mtime", 
                        "tar", 
                        "", 
                        "", 
                        "--newer-mtime <u>date</u>", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes only) Like <code>--newer</code>, except it compares mtime entries instead of ctime entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kng^a]v?FG", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer-than", 
                        "tar", 
                        "", 
                        "", 
                        "--newer-than <u>file</u>", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes only) Only include files and directories newer than the specified file. This compares ctime entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rYJ4qiephg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --newer-mtime-than", 
                        "tar", 
                        "", 
                        "", 
                        "--newer-mtime-than <u>file</u>", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes only) Like <code>--newer-than</code>, except it compares mtime entries instead of ctime entries.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ips./R@zqS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --nodump", 
                        "tar", 
                        "", 
                        "", 
                        "--nodump", 
                        "", 
                        "(<code>c</code> and <code>r</code> modes only) Honor the nodump file flag by skipping this file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CY45c2ip^v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --null", 
                        "tar", 
                        "", 
                        "", 
                        "--null", 
                        "", 
                        "(use with <code>-I</code>, <code>-T</code>, or <code>-X</code>) Filenames or patterns are separated by null characters, not by newlines. This is often used to read filenames output by the <code>-print0</code> option to <code>find</code>(1).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ct*PMq(o8(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --numeric-owner", 
                        "tar", 
                        "", 
                        "", 
                        "--numeric-owner", 
                        "", 
                        "(<code>x</code> mode only) Ignore symbolic user and group names when restoring archives to disk, only numeric uid and gid values will be obeyed.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BoFg4O~8yU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -O", 
                        "tar", 
                        "", 
                        "-O", 
                        "", 
                        "", 
                        "(<code>x</code>, <code>t</code> modes only) In extract (<code>-x</code>) mode, files will be written to standard out rather than being extracted to disk. In list (<code>-t</code>) mode, the file listing will be written to stderr rather than the usual stdout.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h{VBY)]Yof", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -o", 
                        "tar", 
                        "", 
                        "-o", 
                        "", 
                        "", 
                        "(<code>x</code> mode) Use the user and group of the user running the program rather than those specified in the archive. Note that this has no significance unless <code>-p</code> is specified, and the program is being run by the root user. In this case, the file modes and flags from the archive will be restored, but ACLs or owner information in the archive will be discarded.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OQe;q*.KFL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --one-file-system", 
                        "tar", 
                        "", 
                        "", 
                        "--one-file-system", 
                        "", 
                        "(<code>c</code>, <code>r</code>, and <code>u</code> modes) Do not cross mount points.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b{aNIrtuY~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --options", 
                        "tar", 
                        "", 
                        "", 
                        "--options options", 
                        "", 
                        "<div>Select optional behaviors for particular modules. The argument is a text string containing comma-separated keywords and values. These are passed to the modules that handle particular formats to control how those formats will behave. Each option has one of the following forms:</div><div><ul><li><code>key=value</code><br />The key will be set to the specified value in every module that supports it. Modules that do not support this key will ignore it.</li><li><code>key</code><br />The key will be enabled in every module that supports it. This is equivalent to <code>key=1</code>.</li><li><code>!key</code><br />The key will be disabled in every module that supports it.</li><li><code>module:key=value</code>, <code>module:key</code>, <code>module:!key</code><br />As above, but the corresponding key and value will be provided only to modules whose name matches module.</li></ul></div><div>The currently supported modules and keys are:</div><div><ul><li><code>iso9660:joliet</code><br />Support Joliet extensions. This is enabled by default, use <code>!joliet</code> or <code>iso9660:!joliet</code> to disable.</li><li><code>iso9660:rockridge</code><br />Support Rock Ridge extensions. This is enabled by default, use <code>!rockridge</code> or <code>iso9660:!rockridge</code> to disable.</li><li><code>gzip:compression-level</code><br />A decimal integer from 0 to 9 specifying the <code>gzip</code> compression level.</li><li><code>xz:compression-level</code><br />A decimal integer from 0 to 9 specifying the <code>xz</code> compression level.</li><li><code>mtree:keyword</code><br />The <code>mtree</code> writer module allows you to specify which mtree keywords will be included in the output. Supported keywords include: <code>cksum</code>, <code>device</code>, <code>flags</code>, <code>gid</code>, <code>gname</code>, <code>indent</code>, <code>link</code>, <code>md5</code>, <code>mode</code>, <code>nlink</code>, <code>rmd160</code>, <code>sha1</code>, <code>sha256</code>, <code>sha384</code>, <code>sha512</code>, <code>size</code>, <code>time</code>, <code>uid</code>, <code>uname</code>. The default is equivalent to: <code>device</code>, <code>flags</code>, <code>gid</code>, <code>gname</code>, <code>link</code>, <code>mode</code>, <code>nlink</code>, <code>size</code>, <code>time</code>, <code>type</code>, <code>uid</code>, <code>uname</code>.</li><li><code>mtree:all</code><br />Enables all of the above keywords. You can also use <code>mtree:!all</code> to disable all keywords.</li><li><code>mtree:use-set</code><br />Enable generation of <code>/set</code> lines in the output.</li><li><code>mtree:indent</code><br />Produce human-readable output by indenting options and splitting lines to fit into 80 columns.</li><li><code>zip:compression=type</code><br />Use type as compression method. Supported values are store (uncompressed) and deflate (<code>gzip</code> algorithm).</li></ul></div><div>If a provided option is not supported by any module, that is a fatal error.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b751a-9RE$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -P", 
                        "tar", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "Preserve pathnames. By default, absolute pathnames (those that begin with a <code>/</code> character) have the leading slash removed both when creating archives and extracting from them. Also, <code>tar</code> will refuse to extract archive entries whose pathnames contain .. or whose <code>tar</code>get directory would be altered by a symlink. This option suppresses these behaviors.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A45E0&4LyT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -p", 
                        "tar", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "(<code>x</code> mode only) Preserve file permissions. Attempt to restore the full permissions, including owner, file modes, file flags and ACLs, if available, for each item extracted from the archive. By default, newly-created files are owned by the user running <code>tar</code>, the file mode is restored for newly-created regular files, and all other types of entries receive default permissions. If <code>tar</code> is being run by root, the default is to restore the owner unless the <code>-o</code> option is also specified.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wz@`>uZEm3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --fast-read", 
                        "tar", 
                        "", 
                        "-q", 
                        "--fast-read", 
                        "", 
                        "(<code>x</code> and <code>t</code> mode only) Extract or list only the first archive entry that matches each pattern or filename operand. Exit as soon as each specified pattern or filename has been matched. By default, the archive is always read to the very end, since there can be multiple entries with the same name and, by convention, later entries overwrite earlier entries. This option is provided as a performance optimization.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JX(N2y~wmd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -S", 
                        "tar", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "(<code>x</code> mode only) Extract files as sparse files. For every block on disk, check first if it contains only NULL bytes and seek over it otherwise. This works similiar to the <code>conv=sparse</code> option of <code>dd</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N.?i_pTTuc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --strip-components", 
                        "tar", 
                        "", 
                        "", 
                        "--strip-components <u>count</u>", 
                        "", 
                        "(<code>x</code> mode only) Remove the specified number of leading path elements. Pathnames with fewer elements will be silently skipped. Note that the pathname is edited after checking inclusion/exclusion patterns but before security checks.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xR65[C7DVB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -s", 
                        "tar", 
                        "", 
                        "-s <u>pattern</u>", 
                        "", 
                        "", 
                        "Modify file or archive member names according to pattern. The pattern has the format <code>/old/new/[gps]</code> where old is a basic regular expression, new is the replacement string of the matched part, and the optional trailing letters modify how the replacement is handled. If old is not matched, the pattern is skipped. Within new, ~ is substituted with the match, 1 to 9 with the content of the corresponding captured group. The optional trailing g specifies that matching should continue after the matched part and stopped on the first unmatched pattern. The optional trailing s specifies that the pattern applies to the value of symbolic links. The optional trailing p specifies that after a successful substitution the original path name and the new path name should be printed to standard error.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x|o-PRPeP|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -T", 
                        "tar", 
                        "", 
                        "-T <u>filename</u>", 
                        "", 
                        "", 
                        "In <code>x</code> or <code>t</code> mode, <code>tar</code> will read the list of names to be extracted from filename. In <code>c</code> mode, <code>tar</code> will read names to be archived from filename. The special name <code>-C</code> on a line by itself will cause the current directory to be changed to the directory specified on the following line. Names are terminated by newlines unless <code>--null</code> is specified. Note that <code>--null</code> also disables the special handling of lines containing <code>-C.</code>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x@t?MWTLoi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -U", 
                        "tar", 
                        "", 
                        "-U", 
                        "", 
                        "", 
                        "(<code>x</code> mode only) Unlink files before creating them. Without this option, <code>tar</code> overwrites existing files, which preserves existing hardlinks. With this option, existing hardlinks will be broken, as will any symlink that would affect the location of an extracted file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A)wmt#9)3h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --use-compress-program", 
                        "tar", 
                        "", 
                        "", 
                        "--use-compress-program <u>program</u>", 
                        "", 
                        "Pipe the input (in <code>x</code> or <code>t</code> mode) or the output (in <code>c</code> mode) through program instead of using the builtin compression support.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jg?[Q+yQxC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -v", 
                        "tar", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "Produce verbose output. In create and extract modes, <code>tar</code> will list each file name as it is read from or written to the archive. In list mode, <code>tar</code> will produce output similar to that of <code>ls</code>(1). Additional <code>-v</code> options will provide additional detail.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M:0=u~U?Rr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar --version", 
                        "tar", 
                        "", 
                        "", 
                        "--version", 
                        "", 
                        "Print version of <code>tar</code> and <code>libarchive</code>, and exit.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dOP={+NI4P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -w", 
                        "tar", 
                        "", 
                        "-w", 
                        "", 
                        "", 
                        "Ask for confirmation for every action.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M[iXohCgkN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -X", 
                        "tar", 
                        "", 
                        "-X <u>filename</u>", 
                        "", 
                        "", 
                        "Read a list of exclusion patterns from the specified file. See <code>--exclude</code> for more information about the handling of exclusions.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xcJnbTOUY!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -y", 
                        "tar", 
                        "", 
                        "-y", 
                        "", 
                        "", 
                        "(<code>c</code> mode only) Compress the resulting archive with <code>bzip2</code>(1). In extract or list modes, this option is ignored. Note that, unlike other <code>tar</code> implementations, this implementation recognizes <code>bzip2</code> compression automatically when reading archives.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t2$[G>ByyV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -z", 
                        "tar", 
                        "", 
                        "-z", 
                        "", 
                        "", 
                        "(<code>c</code> mode only) Compress the resulting archive with <code>gzip</code>(1). In extract or list modes, this option is ignored. Note that, unlike other <code>tar</code> implementations, this implementation recognizes <code>gzip</code> compression automatically when reading archives.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x4lAx<)^yc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "tar -Z", 
                        "tar", 
                        "", 
                        "-Z", 
                        "", 
                        "", 
                        "(<code>c</code> mode only) Compress the resulting archive with <code>compress</code>(1). In extract or list modes, this option is ignored. Note that, unlike other <code>tar</code> implementations, this implementation recognizes <code>compress</code> compression automatically when reading archives.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ef18P<[.{#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -H", 
                        "find", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "Cause the file information and file type (see <code>stat</code>(2)) returned for each symbolic link specified on the command line to be those of the file referenced by the link, not the link itself.  If the referenced file does not exist, the file information and type will be for the link itself.  File information of all symbolic links not on the command line is that of the link itself.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ygmdxq(T5F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -L", 
                        "find", 
                        "", 
                        "-L", 
                        "", 
                        "", 
                        "<div>Cause the file information and file type (see <code>stat</code>(2)) returned for each symbolic link to be those of the file referenced by the link, not the link itself.  If the referenced file does not exist, the file information and type will be for the link itself.</div><div>This option is equivalent to the deprecated <code>-follow</code> primary.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OU55%)h]/U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -P", 
                        "find", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "Cause the file information and file type (see <code>stat</code>(2)) returned for each symbolic link to be those of the link itself.  This is the default.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FbtAmOVN9t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -X", 
                        "find", 
                        "", 
                        "-X", 
                        "", 
                        "", 
                        "<div>Permit find to be safely used in conjunction with xargs(1).  If a file name contains any of the delimiting characters used by xargs(1), a diagnostic message is displayed on standard error, and the file is skipped.  The delimiting characters include single <code>'</code> and double <code>\"</code> quotes, backslash <code>\\</code>, space, tab and newline characters.</div><div>However, you may wish to consider the <code>-print0</code> primary in conjunction with <code>xargs -0</code> as an effective alternative.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e}zBW?,a{c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -d", 
                        "find", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "<div>Cause find to perform a depth-first traversal, i.e., directories are visited in post-order and all entries in a directory will be acted on before the directory itself.  By default, find visits directories in pre-order, i.e., before their contents.  Note, the default is not a breadth-first traversal.</div><div>This option is equivalent to the <code>-depth</code> primary of IEEE Std 1003.1-2001 (<code>POSIX.1</code>).  The <code>-d</code> option can be useful when find is used with <code>cpio</code>(1) to process files that are contained in directories with unusual permissions.  It ensures that you have write permission while you are placing files in a directory, then sets the directory's permissions as the last thing.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AFtEy-Nj{K", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -f", 
                        "find", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "Specify a file hierarchy for find to traverse.  File hierarchies may also be specified as the operands immediately following the options.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s9KJ@k3,QP", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -x", 
                        "find", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "<div>Prevent find from descending into directories that have a device number different than that of the file from which the descent began.</div><div>This option is equivalent to the deprecated <code>-xdev</code> primary.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bB[yZJt_<r", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-case", 
                        "diff", 
                        "", 
                        "-i", 
                        "--ignore-case", 
                        "", 
                        "Ignore case differences in file contents.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lp9O?8%B?U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-file-name-case", 
                        "diff", 
                        "", 
                        "", 
                        "--ignore-file-name-case", 
                        "", 
                        "Ignore case when comparing file names.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GeV#.{,ZqB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --no-ignore-file-name-case", 
                        "diff", 
                        "", 
                        "", 
                        "--no-ignore-file-name-case", 
                        "", 
                        "Consider case when comparing file names.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pm1,XQSO?=", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-tab-expansion", 
                        "diff", 
                        "", 
                        "-E", 
                        "--ignore-tab-expansion", 
                        "", 
                        "Ignore changes due to tab expansion.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EH;=~X}:[6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-space-change", 
                        "diff", 
                        "", 
                        "-b", 
                        "--ignore-space-change", 
                        "", 
                        "Ignore changes in the amount of white space.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K[96^4#Mb4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-all-space", 
                        "diff", 
                        "", 
                        "-w", 
                        "--ignore-all-space", 
                        "", 
                        "Ignore all white space.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w2#DWgBT7)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-blank-lines", 
                        "diff", 
                        "", 
                        "-B", 
                        "--ignore-blank-lines", 
                        "", 
                        "Ignore changes whose lines are all blank.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m3R|ctlxGo", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ignore-matching-lines", 
                        "diff", 
                        "", 
                        "-I <u>RE</u>", 
                        "--ignore-matching-lines=<u>RE</u>", 
                        "", 
                        "Ignore changes whose lines all match <u>RE</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D}Z)GEFLIB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --strip-trailing-cr", 
                        "diff", 
                        "", 
                        "", 
                        "--strip-trailing-cr", 
                        "", 
                        "Strip trailing carriage return on input.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fn0.NXmA:t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --text", 
                        "diff", 
                        "", 
                        "-a", 
                        "--text", 
                        "", 
                        "Treat all files as text.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b9M_k&V|ky", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --context", 
                        "diff", 
                        "short option", 
                        "-c&nbsp;<u>NUM</u>", 
                        "--context[=<u>NUM</u>]", 
                        "-C <u>NUM</u>", 
                        "Output <u>NUM</u> (default 3) lines of copied context.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LqM=v%}p$i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --unified", 
                        "diff", 
                        "short option", 
                        "-u&nbsp;<u>NUM</u>", 
                        "--unified[=<u>NUM</u>]", 
                        "-U <u>NUM</u>", 
                        "Output <u>NUM</u> (default 3) lines of unified context.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ON-wH<^E[n", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --label", 
                        "diff", 
                        "", 
                        "", 
                        "--label <u>LABEL</u>", 
                        "", 
                        "Use <u>LABEL</u> instead of file name.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e@Hsje>7s7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --show-c-function", 
                        "diff", 
                        "", 
                        "-p", 
                        "--show-c-function", 
                        "", 
                        "Show which C function each change is in.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qI}dK*pzq#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --show-function-line", 
                        "diff", 
                        "", 
                        "-F <u>RE</u>", 
                        "--show-function-line=<u>RE</u>", 
                        "", 
                        "Show the most recent line matching <u>RE</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g7h*Q1aZ#!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --brief", 
                        "diff", 
                        "", 
                        "-q", 
                        "--brief", 
                        "", 
                        "Output only whether files differ.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B+y=UiIhN:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ed", 
                        "diff", 
                        "", 
                        "-e", 
                        "--ed", 
                        "", 
                        "Output an <code>ed</code> script.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B!s>Ub`^$+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --normal", 
                        "diff", 
                        "", 
                        "", 
                        "--normal", 
                        "", 
                        "Output a normal diff.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OmJo[n<|)k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --rcs", 
                        "diff", 
                        "", 
                        "-n", 
                        "--rcs", 
                        "", 
                        "Output an RCS format diff.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vnA~9U@-QN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --side-by-side", 
                        "diff", 
                        "", 
                        "-y", 
                        "--side-by-side", 
                        "", 
                        "Output in two columns.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fu=dR&]s;U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --width", 
                        "diff", 
                        "", 
                        "-W <u>NUM</u>", 
                        "--width=<u>NUM</u>", 
                        "", 
                        "Output at most <u>NUM</u> (default 130) print columns.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yB~Vp=z(OK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --left-column", 
                        "diff", 
                        "", 
                        "", 
                        "--left-column", 
                        "", 
                        "Output only the left column of common lines.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nT3MqX>?#6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --suppress-common-lines", 
                        "diff", 
                        "", 
                        "", 
                        "--suppress-common-lines", 
                        "", 
                        "Do not output common lines.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xOwWFoHTi9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --ifdef", 
                        "diff", 
                        "", 
                        "-D <u>NAME</u>", 
                        "--ifdef=<u>NAME</u>", 
                        "", 
                        "Output merged file to show <code>#ifdef <u>NAME</u></code> diffs.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x{&e]Cpiu!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --<u>GTYPE</u>-group-format", 
                        "diff", 
                        "", 
                        "", 
                        "--<u>GTYPE</u>-group-format=<u>GFMT</u>", 
                        "", 
                        "<div>Similar, but format <u>GTYPE</u> input groups with <u>GFMT</u>.</div><div><u>LTYPE</u> is <code>old</code>, <code>new</code>, or <code>unchanged</code>. <u>GTYPE</u> is <u>LTYPE</u> or <code>changed</code>.</div><div><u>GFMT</u> may contain:</div><ul><li><code>%<</code>: lines from <u>FILE1</u></li><li><code>%></code>: lines from <u>FILE2</u></li><li><code>%=</code>: lines common to <u>FILE1</u> and <u>FILE2</u></li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}<u>LETTER</u></code>: <code>printf</code>-style spec for <u>LETTER</u></li></ul><div>LETTERs are as follows for new group, lower case for old group:</div><ul><li><code>F</code>: first line number</li><li><code>L</code>: last line number</li><li><code>N</code>: number of lines = <code>L-F+1</code></li><li><code>E</code>: <code>F-1</code></li><li><code>M</code>: <code>L+1</code></li></ul><div>LFMT may contain:</div><ul><li><code>%L</code>: contents of line</li><li><code>%l</code>: contents of line, excluding any trailing newline</li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}n</code>: <code>printf</code>-style spec for input line number</li></ul><div>Either <u>GFMT</u> or <u>LFMT</u> may contain:</div><ul><li><code>%%</code>: %</li><li><code>%c'C'</code>: the single character C</li><li><code>%c'\\OOO'</code>: the character with octal code OOO</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E=]^l&V3I9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --line-format", 
                        "diff", 
                        "", 
                        "", 
                        "--line-format=<u>LFMT</u>", 
                        "", 
                        "<div>Similar, but format all input lines with <u>LFMT</u>.</div><div><u>LTYPE</u> is <code>old</code>, <code>new</code>, or <code>unchanged</code>. <u>GTYPE</u> is <u>LTYPE</u> or <code>changed</code>.</div><div><u>GFMT</u> may contain:</div><ul><li><code>%<</code>: lines from <u>FILE1</u></li><li><code>%></code>: lines from <u>FILE2</u></li><li><code>%=</code>: lines common to <u>FILE1</u> and <u>FILE2</u></li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}<u>LETTER</u></code>: <code>printf</code>-style spec for <u>LETTER</u></li></ul><div>LETTERs are as follows for new group, lower case for old group:</div><ul><li><code>F</code>: first line number</li><li><code>L</code>: last line number</li><li><code>N</code>: number of lines = <code>L-F+1</code></li><li><code>E</code>: <code>F-1</code></li><li><code>M</code>: <code>L+1</code></li></ul><div>LFMT may contain:</div><ul><li><code>%L</code>: contents of line</li><li><code>%l</code>: contents of line, excluding any trailing newline</li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}n</code>: <code>printf</code>-style spec for input line number</li></ul><div>Either <u>GFMT</u> or <u>LFMT</u> may contain:</div><ul><li><code>%%</code>: %</li><li><code>%c'C'</code>: the single character C</li><li><code>%c'\\OOO'</code>: the character with octal code OOO</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b5}+oxWK^z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --<u>LTYPE</u>-line-format", 
                        "diff", 
                        "", 
                        "", 
                        "--<u>LTYPE</u>-line-format=<u>LFMT</u>", 
                        "", 
                        "<div>Similar, but format <u>LTYPE</u> input lines with <u>LFMT</u>.</div><div><u>LTYPE</u> is <code>old</code>, <code>new</code>, or <code>unchanged</code>. <u>GTYPE</u> is <u>LTYPE</u> or <code>changed</code>.</div><div><u>GFMT</u> may contain:</div><ul><li><code>%<</code>: lines from <u>FILE1</u></li><li><code>%></code>: lines from <u>FILE2</u></li><li><code>%=</code>: lines common to <u>FILE1</u> and <u>FILE2</u></li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}<u>LETTER</u></code>: <code>printf</code>-style spec for <u>LETTER</u></li></ul><div>LETTERs are as follows for new group, lower case for old group:</div><ul><li><code>F</code>: first line number</li><li><code>L</code>: last line number</li><li><code>N</code>: number of lines = <code>L-F+1</code></li><li><code>E</code>: <code>F-1</code></li><li><code>M</code>: <code>L+1</code></li></ul><div>LFMT may contain:</div><ul><li><code>%L</code>: contents of line</li><li><code>%l</code>: contents of line, excluding any trailing newline</li><li><code>%[-][<u>WIDTH</u>][.[<u>PREC</u>]]{doxX}n</code>: <code>printf</code>-style spec for input line number</li></ul><div>Either <u>GFMT</u> or <u>LFMT</u> may contain:</div><ul><li><code>%%</code>: %</li><li><code>%c'C'</code>: the single character C</li><li><code>%c'\\OOO'</code>: the character with octal code OOO</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OIIrAv$y++", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --paginate", 
                        "diff", 
                        "", 
                        "-l", 
                        "--paginate", 
                        "", 
                        "Pass the output through <code>pr</code> to paginate it.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p4/<llUYwT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --expand-tabs", 
                        "diff", 
                        "", 
                        "-t", 
                        "--expand-tabs", 
                        "", 
                        "Expand tabs to spaces in output.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u:JBc6LMLR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --initial-tab", 
                        "diff", 
                        "", 
                        "-T", 
                        "--initial-tab", 
                        "", 
                        "Make tabs line up by prepending a tab.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lqxnI+w60Z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --recursive", 
                        "diff", 
                        "", 
                        "-r", 
                        "--recursive", 
                        "", 
                        "Recursively compare any subdirectories found.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y<-T#0d9mW", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --new-file", 
                        "diff", 
                        "", 
                        "-N", 
                        "--new-file", 
                        "", 
                        "Treat absent files as empty.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H7x<Y7i/iH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --unidirectional-new-file", 
                        "diff", 
                        "", 
                        "", 
                        "--unidirectional-new-file", 
                        "", 
                        "Treat absent first files as empty.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w8MLL7A.$$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --report-identical-files", 
                        "diff", 
                        "", 
                        "-s", 
                        "--report-identical-files", 
                        "", 
                        "Report when two files are the same.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PSklO)`bBc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --exclude", 
                        "diff", 
                        "", 
                        "-x <u>PAT</u>", 
                        "--exclude=<u>PAT</u>", 
                        "", 
                        "Exclude files that match <u>PAT</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "h03nR+f[=s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --exclude-from", 
                        "diff", 
                        "", 
                        "-X <u>FILE</u>", 
                        "--exclude-from=<u>FILE</u>", 
                        "", 
                        "Exclude files that match any pattern in <u>FILE</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "on7ztVC^C]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --starting-file", 
                        "diff", 
                        "", 
                        "-S <u>FILE</u>", 
                        "--starting-file=<u>FILE</u>", 
                        "", 
                        "Start with <u>FILE</u> when comparing directories.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pT(F5;Lp*/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --from-file", 
                        "diff", 
                        "", 
                        "", 
                        "--from-file=<u>FILE1</u>", 
                        "", 
                        "Compare <u>FILE1</u> to all operands.  <u>FILE1</u> can be a directory.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rA9qyY<U+@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --to-file", 
                        "diff", 
                        "", 
                        "", 
                        "--to-file=<u>FILE2</u>", 
                        "", 
                        "Compare all operands to <u>FILE2</u>.  <u>FILE2</u> can be a directory.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J_dhOf4]YV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --horizon-lines", 
                        "diff", 
                        "", 
                        "", 
                        "--horizon-lines=<u>NUM</u>", 
                        "", 
                        "Keep <u>NUM</u> lines of the common prefix and suffix.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Fh|[%vhY~]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --minimal", 
                        "diff", 
                        "", 
                        "-d", 
                        "--minimal", 
                        "", 
                        "Try hard to find a smaller set of changes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "he/c-X*bq)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --speed-large-files", 
                        "diff", 
                        "", 
                        "", 
                        "--speed-large-files", 
                        "", 
                        "Assume large files and many scattered small changes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v,p~*[`t1<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --version", 
                        "diff", 
                        "", 
                        "-v", 
                        "--version", 
                        "", 
                        "Output version info.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xQ^5n}&pqA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "diff --help", 
                        "diff", 
                        "", 
                        "", 
                        "--help", 
                        "", 
                        "Output this help.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "di>h`D92EG", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -E", 
                        "find", 
                        "", 
                        "-E", 
                        "", 
                        "", 
                        "Interpret regular expressions followed by <code>-regex</code> and <code>-iregex</code> primaries as extended (modern) regular expressions rather than basic regular expressions (BRE's).  The <code>re_format</code>(7) manual page fully describes both formats.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t%>7z6E_>}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find -s", 
                        "find", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "Cause find to traverse the file hierarchies in lexicographical order, i.e., alphabetical order within each directory.  Note: <code>find -s</code> and <code>find | sort</code> may give different results.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yuKE#[la`m", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -Bmin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-Bmin <u>n</u>", 
                        "True if the difference between the time of a file's inode creation and the time <code>find</code> was started, rounded up to the next full minute, is <code>n</code> minutes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L|][0Lamtv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -Bnewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-Bnewer <u>file</u>", 
                        "Same as <code>-newerBm</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zNhR*+r$G<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -Btime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-Btime <u>n</u>[<u>smhdw</u>]", 
                        "<div>If no units are specified, this primary evaluates to true if the difference between the time of a file's inode creation and the time find was started, rounded up to the next full 24-hour period, is <code>n</code> 24-hour periods.</div><div>If units are specified, this primary evaluates to true if the difference between the time of a file's inode creation and the time find was started is exactly <code>n</code> units.  Please refer to the <code>-e</code> primary description for information on supported time units.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zDB_hzNvj4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -acl", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-acl", 
                        "May be used in conjunction with other primaries to locate files with extended ACLs.  See <code>acl</code>(3) for more information.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OtwYdaPm-A", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -amin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-amin <u>n</u>", 
                        "True if the difference between the file last access time and the time <code>find</code> was started, rounded up to the next full minute, is <code>n</code> minutes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r|vx[iRI7j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -anewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-anewer <u>file</u>", 
                        "Same as <code>-neweram</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u+r[?#T}lH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-atime <u>n</u>[<u>smhdw</u>]", 
                        "<div>If no units are specified, this primary evaluates to true if the difference between the file last access time and the time find was started, rounded up to the next full 24-hour period, is <code>n</code> 24-hour periods.</div><div>If units are specified, this primary evaluates to true if the difference between the file last access time and the time find was started is exactly <code>n</code> units.  Possible time units are as follows:</div><ul><li><code>s</code>: second</li><li><code>m</code>: minute (60 seconds)</li><li><code>h</code>: hour (60 minutes)</li><li><code>d</code>: day (24 hours)</li><li><code>w</code>: week (7 days)</li></ul><div>Any number of units may be combined in one <code>-atime</code> argument, for example, <code>-atime -1h30m</code>.  Units are probably only useful when used in conjunction with the <code>+</code> or <code>-</code> modifier.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B;tT(}U4va", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -cmin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-cmin <u>n</u>", 
                        "True if the difference between the time of last change of file status information and the time find was started, rounded up to the next full minute, is <code>n</code> minutes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QJR71]qT#D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -cnewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-cnewer <u>file</u>", 
                        "Same as <code>-newercm</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N?7~AkAeNw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ctime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ctime <u>n</u>[<u>smhdw</u>]", 
                        "<div>If no units are specified, this primary evaluates to true if the difference between the time of last change of file status information and the time find was started, rounded up to the next full 24-hour period, is <code>n</code> 24-hour periods.</div><div>If units are specified, this primary evaluates to true if the difference between the time of last change of file status information and the time find was started is exactly <code>n</code> units.  Please refer to the <code>-e</code> primary description for information on supported time units.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C.3A6,KaS", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -d", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-d", 
                        "Same as depth.  GNU <code>find</code> implements this as a primary in mistaken emulation of FreeBSD <code>find</code>(1).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D8F6AoWPVX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -delete", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-delete", 
                        "Delete found files and/or directories.  Always returns true.  This executes from the current working directory as find recurses down the tree.  It will not attempt to delete a filename with a <code>/</code> character in its pathname relative to <code>.</code> for security reasons.  Depth-first traversal processing is implied by this option.  Following symlinks is incompatible with this option.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w`FHyy]zV&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -depth", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-depth", 
                        "Always true; same as the <code>-d</code> option.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xvB5<Wj6Ko", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -empty", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-empty", 
                        "True if the current file or directory is empty.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EQE}Q$9$sY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -exec", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-exec <u>utility</u> [argument ...] ;", 
                        "True if the program named <u>utility</u> returns a zero value as its exit status.  Optional arguments may be passed to the utility.  The expression must be terminated by a semicolon (<code>;</code>).  If you invoke find from a shell you may need to quote the semicolon if the shell would otherwise treat it as a control operator.  If the string <code>{}</code> appears anywhere in the utility name or the arguments it is replaced by the pathname of the current file.  <u>Utility</u> will be executed from the directory from which find was executed.  Utility and arguments are not subject to the further expansion of shell patterns and constructs.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>McT6W[Dq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -execdir", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-execdir <u>utility</u> [<u>argument</u> ...] ;", 
                        "The <code>-r</code> primary is identical to the <code>-c</code> primary with the exception that <u>utility</u> will be executed from the directory that holds the current file.  The filename substituted for the string <code>{}</code> is not qualified.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jyi?XXdnh#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -flags", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-flags [-|+]<u>flags</u>,<u>notflags</u>", 
                        "<div>The flags are specified using symbolic names (see <code>chflags</code>(1)).  Those with the \"no\" prefix (except \"nodump\") are said to be <u>notflags</u>.  Flags in flags are checked to be set, and flags in <u>notflags</u> are checked to be not set.  Note that this is different from <code>-perm</code>, which only allows the user to specify mode bits that are set.</div><div>If flags are preceded by a dash (<code>-</code>), this primary evaluates to true if at least all of the bits in flags and none of the bits in <u>notflags</u> are set in the file's flags bits.  If flags are preceded by a plus (<code>+</code>), this primary evaluates to true if any of the bits in flags is set in the file's flags bits, or any of the bits in <u>notflags</u> is not set in the file's flags bits.  Otherwise, this primary evaluates to true if the bits in flags exactly match the file's flags bits, and none of the flags bits match those of <u>notflags</u>.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D8Og7NZ:km", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -fstype", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-fstype <u>type</u>", 
                        "True if the file is contained in a file system of type <u>type</u>.  The <code>lsvfs</code>(1) command can be used to find out the types of file systems that are available on the system.  In addition, there are two pseudo-types, <code>local</code> and <code>rdonly</code>.  The former matches any file system physically mounted on the system where the find is being executed and the latter matches any file system which is mounted read-only.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b_Vx%e];p?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -gid", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-gid <u>gname</u>", 
                        "The same thing as <code>-group</code> <u>gname</u> for compatibility with GNU <code>find</code>.  GNU <code>find</code> imposes a restriction that <u>gname</u> is numeric, while <code>find</code>(1) does not.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F(N_P-@w/u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -group", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-group <u>gname</u>", 
                        "True if the file belongs to the group <u>gname</u>.  If <u>gname</u> is numeric and there is no such group name, then <u>gname</u> is treated as a group ID.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I-IG0#_.<G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ignore_readdir_race", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ignore_readdir_race", 
                        "This option is for GNU <code>find</code> compatibility and is ignored.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L`Ji5^~Ti", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ilname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ilname <u>pattern</u>", 
                        "Like <code>-lname</code>, but the match is case insensitive.  This is a GNU <code>find</code> extension.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BrBHggVst6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -iname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-iname <u>pattern</u>", 
                        "Like <code>-name</code>, but the match is case insensitive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IFzjAudh!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -inum", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-inum <u>n</u>", 
                        "True if the file has inode number <u>n</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Bk)#us/OZa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ipath", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ipath <u>pattern</u>", 
                        "Like <code>-path</code>, but the match is case insensitive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cpt@%A/k5G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -iregex", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-iregex <u>pattern</u>", 
                        "Like <code>-regex</code>, but the match is case insensitive.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j;KVHzUbr]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -iwholename", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-iwholename <u>pattern</u>", 
                        "The same thing as <code>-ipath</code>, for GNU <code>find</code> compatibility.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tH`&kwT#Nz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -links", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-links <u>n</u>", 
                        "True if the file has <u>n</u> links.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lz^FeJh.3y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -lname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-lname <u>pattern</u>", 
                        "Like <code>-name</code>, but the contents of the symbolic link are matched instead of the file name.  Note that this only matches broken symbolic links if symbolic links are being followed.  This is a GNU <code>find</code> extension.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ku$J@+I<_G", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ls", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ls", 
                        "This primary always evaluates to true.  The following information for the current file is written to standard output: its inode number, size in 512-byte blocks, file permissions, number of hard links, owner, group, size in bytes, last modification time, and pathname.  If the file is a block or character special file, the device number will be displayed instead of the size in bytes.  If the file is a symbolic link, the pathname of the linked-to file will be displayed preceded by <code>-></code>.  The format is identical to that produced by <code>ls -dgils</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DW,&%^y4ep", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -maxdepth", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-maxdepth <u>n</u>", 
                        "<p>Always true; descend at most <em>n</em> directory levels below the command line arguments. If any <code>-h</code> primary is specified, it applies to the entire expression even if it would not normally be evaluated. Setting this primary to value&nbsp;<code>0</code> limits the whole search to the command line arguments.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MTksICJpZCI6ICIxNDk0NDA0NDcwMzU0LTAwNiIsICJtZCI6ICJBbHdheXMgdHJ1ZTsgZGVzY2VuZCBhdCBtb3N0IF9uXyBkaXJlY3RvcnkgbGV2ZWxzIGJlbG93IHRoZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzLiBJZiBhbnkgYC1oYCBwcmltYXJ5IGlzIHNwZWNpZmllZCwgaXQgYXBwbGllcyB0byB0aGUgZW50aXJlIGV4cHJlc3Npb24gZXZlbiBpZiBpdCB3b3VsZCBub3Qgbm9ybWFsbHkgYmUgZXZhbHVhdGVkLiBgLW1heGRlcHRoIDBgIGxpbWl0cyB0aGUgd2hvbGUgc2VhcmNoIHRvIHRoZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hnl&P&xl{D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mindepth", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mindepth <u>n</u>", 
                        "<p>Always true; do not apply any tests or actions at levels less than <em>n</em>. If any <code>-h</code> primary is specified, it applies to the entire expression even if it would not normally be evaluated. <code>-mindepth 1</code> processes all but the command line arguments.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MjUsICJpZCI6ICIxNDk0NDA0NDcwMzU1LTAwNiIsICJtZCI6ICJBbHdheXMgdHJ1ZTsgZG8gbm90IGFwcGx5IGFueSB0ZXN0cyBvciBhY3Rpb25zIGF0IGxldmVscyBsZXNzIHRoYW4gX25fLiBJZiBhbnkgYC1oYCBwcmltYXJ5IGlzIHNwZWNpZmllZCwgaXQgYXBwbGllcyB0byB0aGUgZW50aXJlIGV4cHJlc3Npb24gZXZlbiBpZiBpdCB3b3VsZCBub3Qgbm9ybWFsbHkgYmUgZXZhbHVhdGVkLiBgLW1pbmRlcHRoIDFgIHByb2Nlc3NlcyBhbGwgYnV0IHRoZSBjb21tYW5kIGxpbmUgYXJndW1lbnRzLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q!Anqu7mbO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mmin", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mmin <u>n</u>", 
                        "<p>True if the difference between the file last modification time and the time find was started, rounded up to the next full minute, is <code>n</code> minutes.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MzAsICJpZCI6ICIxNDk0NDA0NDcwMzU2LTAwNiIsICJtZCI6ICJUcnVlIGlmIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGZpbGUgbGFzdCBtb2RpZmljYXRpb24gdGltZSBhbmQgdGhlIHRpbWUgZmluZCB3YXMgc3RhcnRlZCwgcm91bmRlZCB1cCB0byB0aGUgbmV4dCBmdWxsIG1pbnV0ZSwgaXMgYG5gIG1pbnV0ZXMuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o.9Dbjs@dO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mnewer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mnewer <u>file</u>", 
                        "<p>Same as <code>-newer</code>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MzQsICJpZCI6ICIxNDk0NDA0NDcwMzU3LTAwNiIsICJtZCI6ICJTYW1lIGFzIGAtbmV3ZXJgLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L-mckxzo5q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mount", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mount", 
                        "<p>The same thing as <code>-xdev</code>, for GNU <code>find</code> compatibility.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5MzcsICJpZCI6ICIxNDk0NDA0NDcwMzU4LTAwNiIsICJtZCI6ICJUaGUgc2FtZSB0aGluZyBhcyBgLXhkZXZgLCBmb3IgR05VIGBmaW5kYCBjb21wYXRpYmlsaXR5LlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C-Tj%v=oLn", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -mtime", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-mtime <u>n</u>[<u>smhdw</u>]", 
                        "<p>If no units are specified, this primary evaluates to true if the difference between the file last modification time and the time find was started, rounded up to the next full 24-hour period, is <em>n</em> 24-hour periods.<br /> If units are specified, this primary evaluates to true if the difference between the file last modification time and the time find was started is exactly <em>n</em> units. Please refer to the <code>-e</code> primary description for information on supported time units.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NDEsICJpZCI6ICIxNDk0NDA0NDcwMzU5LTAwNiIsICJtZCI6ICJJZiBubyB1bml0cyBhcmUgc3BlY2lmaWVkLCB0aGlzIHByaW1hcnkgZXZhbHVhdGVzIHRvIHRydWUgaWYgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZmlsZSBsYXN0IG1vZGlmaWNhdGlvbiB0aW1lIGFuZCB0aGUgdGltZSBmaW5kIHdhcyBzdGFydGVkLCByb3VuZGVkIHVwIHRvIHRoZSBuZXh0IGZ1bGwgMjQtaG91ciBwZXJpb2QsIGlzIF9uXyAyNC1ob3VyIHBlcmlvZHMuXG5JZiB1bml0cyBhcmUgc3BlY2lmaWVkLCB0aGlzIHByaW1hcnkgZXZhbHVhdGVzIHRvIHRydWUgaWYgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgZmlsZSBsYXN0IG1vZGlmaWNhdGlvbiB0aW1lIGFuZCB0aGUgdGltZSBmaW5kIHdhcyBzdGFydGVkIGlzIGV4YWN0bHkgX25fIHVuaXRzLiBQbGVhc2UgcmVmZXIgdG8gdGhlIGAtZWAgcHJpbWFyeSBkZXNjcmlwdGlvbiBmb3IgaW5mb3JtYXRpb24gb24gc3VwcG9ydGVkIHRpbWUgdW5pdHMuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tFzgL9Sk~`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -name", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-name <u>pattern</u>", 
                        "<p>True if the last component of the pathname being examined matches <em>pattern</em>. Special shell pattern matching characters (<code>[</code>, <code>]</code>, <code>*</code>, and <code>?</code>) may be used as part of <em>pattern</em>. These characters may be matched explicitly by escaping them with a backslash (<code>\\</code>).</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NDYsICJpZCI6ICIxNDk0NDA0NDcwMzYwLTAwNiIsICJtZCI6ICJUcnVlIGlmIHRoZSBsYXN0IGNvbXBvbmVudCBvZiB0aGUgcGF0aG5hbWUgYmVpbmcgZXhhbWluZWQgbWF0Y2hlcyBfcGF0dGVybl8uIFNwZWNpYWwgc2hlbGwgcGF0dGVybiBtYXRjaGluZyBjaGFyYWN0ZXJzIChgW2AsIGBdYCwgYCpgLCBhbmQgYD9gKSBtYXkgYmUgdXNlZCBhcyBwYXJ0IG9mIF9wYXR0ZXJuXy4gVGhlc2UgY2hhcmFjdGVycyBtYXkgYmUgbWF0Y2hlZCBleHBsaWNpdGx5IGJ5IGVzY2FwaW5nIHRoZW0gd2l0aCBhIGJhY2tzbGFzaCAoYFxcYCkuXG4ifQ==---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E[kv<:CZ`y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newer", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newer <u>file</u>", 
                        "True if the current file has a more recent last modification time than <u>file</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lc*n`EGPeU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -newerXY", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-newerXY <u>file</u>", 
                        "<p>True if the current file has a more recent last access time (<code>X=a</code>), inode creation time (<code>X=B</code>), change time (<code>X=c</code>), or modification time (<code>X=m</code>) than the last access time (<code>Y=a</code>), inode creation time (<code>Y=B</code>), change time (<code>Y=c</code>), or modification time (Y=m) of <em>file</em>. In addition, if <code>Y=t</code>, then <em>file</em> is instead interpreted as a direct date specification of the form understood by <code>cvs</code>(1). Note that <code>-newermm</code> is equivalent to <code>-newer</code>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NTMsICJpZCI6ICIxNDk0NDA0NDcwMzYyLTAwNiIsICJtZCI6ICJUcnVlIGlmIHRoZSBjdXJyZW50IGZpbGUgaGFzIGEgbW9yZSByZWNlbnQgbGFzdCBhY2Nlc3MgdGltZSAoYFg9YWApLCBpbm9kZSBjcmVhdGlvbiB0aW1lIChgWD1CYCksIGNoYW5nZSB0aW1lIChgWD1jYCksIG9yIG1vZGlmaWNhdGlvbiB0aW1lIChgWD1tYCkgdGhhbiB0aGUgbGFzdCBhY2Nlc3MgdGltZSAoYFk9YWApLCBpbm9kZSBjcmVhdGlvbiB0aW1lIChgWT1CYCksIGNoYW5nZSB0aW1lIChgWT1jYCksIG9yIG1vZGlmaWNhdGlvbiB0aW1lIChZPW0pIG9mIF9maWxlXy4gSW4gYWRkaXRpb24sIGlmIGBZPXRgLCB0aGVuIF9maWxlXyBpcyBpbnN0ZWFkIGludGVycHJldGVkIGFzIGEgZGlyZWN0IGRhdGUgc3BlY2lmaWNhdGlvbiBvZiB0aGUgZm9ybSB1bmRlcnN0b29kIGJ5IGBjdnNgKDEpLiBOb3RlIHRoYXQgYC1uZXdlcm1tYCBpcyBlcXVpdmFsZW50IHRvIGAtbmV3ZXJgLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P-D4{[CqPL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -nogroup", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-nogroup", 
                        "True if the file belongs to an unknown group.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GJ~.TEOdd1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -noignore_readdir_race", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-noignore_readdir_race", 
                        "<p>This option is for GNU <code>find</code> compatibility and is ignored.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc5NTksICJpZCI6ICIxNDk0NDA0NDcwMzY0LTAwNiIsICJtZCI6ICJUaGlzIG9wdGlvbiBpcyBmb3IgR05VIGBmaW5kYCBjb21wYXRpYmlsaXR5IGFuZCBpcyBpZ25vcmVkLlxuIn0=---->", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v]?~+z2>fc", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -noleaf", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-noleaf", 
                        "This option is for GNU <code>find</code> compatibility.  In GNU <code>find</code> it disables an optimization not relevant to <code>find</code>(1), so it is ignored.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vXFMYwm%pA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -nouser", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-nouser", 
                        "True if the file belongs to an unknown user.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c-t.5tX%yg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -ok", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-ok <u>utility</u> [<u>argument</u> ...] ;", 
                        "The <code>-k</code> primary is identical to the <code>-c</code> primary with the exception that find requests user affirmation for the execution of the utility by printing a message to the terminal and reading a response.  If the response is not affirmative (<code>y</code> in the <code>POSIX</code> locale), the command is not executed and the value of the <code>-ok</code> expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q0^TTYM:f<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -okdir", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-okdir <u>utility</u> [<u>argument</u> ...] ;", 
                        "The <code>-r</code> primary is identical to the <code>-r</code> primary with the same exception as described for the <code>-k</code> primary.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oMl/dv9l7R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -path", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-path <u>pattern</u>", 
                        "True if the pathname being examined matches pattern.  Special shell pattern matching characters (<code>[</code>, <code>]</code>, <code>*</code>, and <code>?</code>) may be used as part of pattern.  These characters may be matched explicitly by escaping them with a backslash (<code>\\</code>).  Slashes (<code>/</code>) are treated as normal characters and do not have to be matched explicitly.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zu9/GA]PhV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -perm", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-perm [-|+]<u>mode</u>", 
                        "The mode may be either symbolic (see <code>chmod</code>(1)) or an octal number.  If the mode is symbolic, a starting value of zero is assumed and the mode sets or clears permissions without regard to the process' file mode creation mask.  If the mode is octal, only bits <code>07777</code> (<code>S_ISUID</code> | <code>S_ISGID</code> | <code>S_ISTXT</code> | <code>S_IRWXU</code> | <code>S_IRWXG</code> | <code>S_IRWXO</code>) of the file's mode bits participate in the comparison.  If the mode is preceded by a dash (<code>-</code>), this primary evaluates to true if at least all of the bits in the mode are set in the file's mode bits.  If the mode is preceded by a plus (<code>+</code>), this primary evaluates to true if any of the bits in the mode are set in the file's mode bits.  Otherwise, this primary evaluates to true if the bits in the mode exactly match the file's mode bits.  Note, the first character of a symbolic mode may not be a dash (<code>-</code>).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qGDeQE=zDF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -print", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-print", 
                        "This primary always evaluates to true.  It prints the pathname of the current file to standard output.  If none of <code>-exec</code>, <code>-ls</code>, <code>-print</code>, <code>-print0</code>, or <code>-ok</code> is specified, the given expression shall be effectively replaced by ( given expression ) <code>-print</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Cu_^ifENwb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -print0", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-print0", 
                        "This primary always evaluates to true.  It prints the pathname of the current file to standard output, followed by an ASCII <code>NUL</code> character (character code <code>0</code>).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oW*y*P7Li!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -prune", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-prune", 
                        "This primary always evaluates to true.  It causes find to not descend into the current file.  Note, the <code>-e</code> primary has no effect if the <code>-d</code> option was specified.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L$6<~K9_H~", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -regex", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-regex <u>pattern</u>", 
                        "True if the whole path of the file matches <u>pattern</u> using regular expression.  To match a file named <code>./foo/xyzzy</code>, you can use the regular expression <code>.*/[xyz]*</code> or <code>.*/foo/.*</code>, but not <code>xyzzy</code> or <code>/foo/</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ek#1bZH#*u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -samefile", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-samefile <u>name</u>", 
                        "True if the file is a hard link to <u>name</u>.  If the command option <code>-L</code> is specified, it is also true if the file is a symbolic link and points to name.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D*1[`>@,^,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-size <u>n</u>[<u>ckMGTP</u>]", 
                        "<div>True if the file's size, rounded up, in 512-byte blocks is <u>n</u>.  If <u>n</u> is followed by a <u>c</u>, then the primary is true if the file's size is <u>n</u> bytes (characters).  Similarly if <u>n</u> is followed by a scale indicator then the file's size is compared to <u>n</u> scaled as:</div><ul><li><code>k</code>: kilobytes (1024 bytes)</li><li><code>M</code>: megabytes (1024 kilobytes)</li><li><code>G</code>: gigabytes (1024 megabytes)</li><li><code>T</code>: terabytes (1024 gigabytes)</li><li><code>P</code>: petabytes (1024 terabytes)</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o3c1;$(&3J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-type <u>t</u>", 
                        "<div>True if the file is of the specified type.  Possible file types are as follows:</div><ul><li><code>b</code>: block special</li><li><code>c</code>: character special</li><li><code>d</code>: directory</li><li><code>f</code>: regular file</li><li><code>l</code>: symbolic link</li><li><code>p</code>: FIFO</li><li><code>s</code>: socket</li></ul>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u9Z06|MAl6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -uid", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-uid <u>uname</u>", 
                        "The same thing as <code>-user</code> <u>uname</u> for compatibility with GNU <code>find</code>.  GNU <code>find</code> imposes a restriction that <u>uname</u> is numeric, while <code>find</code>(1) does not.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DBK^z/cs7z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -user", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-user <u>uname</u>", 
                        "True if the file belongs to the user <u>uname</u>.  If <u>uname</u> is numeric and there is no such user name, then <u>uname</u> is treated as a user ID.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ns2ieN9A95", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -wholename", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-wholename <u>pattern</u>", 
                        "The same thing as <code>-path</code>, for GNU <code>find</code> compatibility.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "H]/>N`rN4?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -xattr", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-xattr", 
                        "True if the file has any extended attributes.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s<!@InK3NB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -xattrname", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-xattrname <u>name</u>", 
                        "True if the file has an extended attribute with the specified <u>name</u>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CMe#}AW:$c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator ( )", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "( <u>expression</u> )", 
                        "This evaluates to true if the parenthesized expression evaluates to true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b*4~SYOpE5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator !", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "! <u>expression</u>", 
                        "This is the unary NOT operator.  It evaluates to true if the expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LP<-0V3N`v", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -not", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "-not <u>expression</u>", 
                        "This is the unary NOT operator.  It evaluates to true if the expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uz7Mk7M:5H", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -false", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "-false", 
                        "Always false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t84pUyp-N(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -true", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "-true", 
                        "Always true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Qpf{qlAY;?", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -and", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expression</u> -and <u>expression</u>", 
                        "The <code>-and</code> operator is the logical AND operator.  As it is implied by the juxtaposition of two expressions it does not have to be specified.  The expression evaluates to true if both expressions are true.  The second expression is not evaluated if the first expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eVnR+n0@&y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator <u>EXPR</u> <u>EXPR</u>", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expression</u> <u>expression</u>", 
                        "The <code>-and</code> operator is the logical AND operator. The expression evaluates to true if either the first or the second expression is true.  The second expression is not evaluated if the first expression is true.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dq?/)|]FHq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find operator -or", 
                        "find", 
                        "operator", 
                        "", 
                        "", 
                        "<u>expression</u> -or <u>expression</u>", 
                        "The <code>-or</code> operator is the logical OR operator.  As it is implied by the juxtaposition of two expressions it does not have to be specified.  The expression evaluates to true if both expressions are true.  The second expression is not evaluated if the first expression is false.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CF%YD#mB#P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type b", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "b", 
                        "block special", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cWf-]O%B6U", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type c", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "c", 
                        "character special", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O:[-vq<&^|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type d", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "d", 
                        "directory", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rGo>cowy^:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type f", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "f", 
                        "regular file", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MZaNKki%+O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type l", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "l", 
                        "symbolic link", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KA&F+2PlJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type p", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "p", 
                        "FIFO", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "LpJNpk/4zH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -type s", 
                        "find", 
                        "primary -type", 
                        "", 
                        "", 
                        "s", 
                        "socket", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l0GP+4t-=J", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size k", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "k", 
                        "kilobytes (1024 bytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F5-Rz+30pX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size M", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "M", 
                        "megabytes (1024 kilobytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "isVAy_&BCt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size G", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "G", 
                        "gigabytes (1024 megabytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "{o}>$3OYl", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size T", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "T", 
                        "terabytes (1024 gigabytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oIugc{x%~j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -size P", 
                        "find", 
                        "primary -size", 
                        "", 
                        "", 
                        "P", 
                        "petabytes (1024 terabytes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cf&@3z2ACN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime s", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "s", 
                        "second", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x{?@W+6mY#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime m", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "m", 
                        "minute (60 seconds)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e7.dN1VX|Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime h", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "h", 
                        "hour (60 minutes)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cI3Fni5+W`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime d", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "d", 
                        "day (24 hours)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n;!u>DCF0/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -atime w", 
                        "find", 
                        "primary -atime", 
                        "", 
                        "", 
                        "w", 
                        "week (7 days)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A~uZ^9o9+I", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -depth<u>n</u>", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-depth <u>n</u>", 
                        "True if the depth of the file relative to the starting point of the traversal is <code>n</code>.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K%M_ITG_[!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -exec {}", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-exec <u>utility</u> [<u>argument</u> ...] {} +", 
                        "Same as <code>-exec</code>, except that <code>{}</code> is replaced with as many pathnames as possible for each invocation of <u>utility</u>.  This behaviour is similar to that of <code>xargs</code>(1).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n~ln.8y<nT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "find primary -execdir {}", 
                        "find", 
                        "primary", 
                        "", 
                        "", 
                        "-execdir <u>utility</u> [<u>argument</u> ...] {} +", 
                        "Same as <code>-execdir</code>, except that <code>{}</code> is replaced with as many pathnames as possible for each invocation of <u>utility</u>.  This behaviour is similar to that of <code>xargs</code>(1).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eA1ZMWtiwr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate", 
                        "locate", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<div>Searches a database for all pathnames which match the specified pattern. &nbsp;The database is recomputed periodically (usually weekly or daily), and contains the pathnames of all files which are publicly accessible.</div><div><br /></div><div>Shell globbing and quoting characters (\"*\", \"?\", \"\\\", \"[\" and \"]\") may be used in pattern, although they will have to be escaped from the shell. Preceding any character with a backslash (\"\\\") eliminates any special meaning which it may have. &nbsp;The matching differs in that no characters must be matched explicitly, including slashes (\"/'').</div><div><br /></div><div>As a special case, a pattern containing no globbing characters (\"foo\") is matched as though it were *foo*.</div><div><br /></div><div>Historically, locate only stored characters between 32 and 127. &nbsp;The current implementation store any character except newline (<code>\\n') and NUL (</code>\\0'). &nbsp;The 8-bit character support does not waste extra space for plain ASCII file names. &nbsp;Characters less than 32 or greater than 127 are stored in 2 bytes.</div>", 
                        "<code>locate</code> [<code>-0Scims</code>] [<code>-l</code> <u>limit</u>] [<code>-d</code> <u>database</u>] <u>pattern</u> ...", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "jhQ0Su*;Aa", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -0", 
                        "locate", 
                        "", 
                        "-0", 
                        "", 
                        "", 
                        "Print pathnames separated by an ASCII NUL character (character code 0) instead of default NL (newline, character code 10).", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kVC{8)4Bbi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -S", 
                        "locate", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "Print some statistics about the database and exit.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dGg3B}SkQr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -c", 
                        "locate", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "Suppress normal output; instead print a count of matching file names.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e6OEu6EanA", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -d", 
                        "locate", 
                        "", 
                        "-d <u>database</u>", 
                        "", 
                        "", 
                        "<div>Search in database instead of the default file name database. &nbsp;Multiple <code>-d</code> options are allowed. &nbsp;Each additional <code>-d</code> option adds</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;the specified database to the list of databases to be searched.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;The option database may be a colon-separated list of databases. &nbsp;A single colon is a reference to the default database.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d $HOME/lib/mydb: foo</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;will first search string \"foo\" in <code>$HOME/lib/mydb</code> and then in <code>/var/db/locate.database</code>.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;$ locate -d $HOME/lib/mydb::/cdrom/locate.database foo</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;will first search string \"foo\" in <code>$HOME/lib/mydb</code> and then in <code>/var/db/locate.database</code> and then in <code>/cdrom/locate.database</code>.</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d db1 -d db2 -d db3 pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;is the same as</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d db1:db2:db3 pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;or</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ locate -d db1:db2 -d db3 pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;If <code>-</code> is given as the database name, standard input will be read instead. &nbsp;For example, you can compress your database and use:</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<code>$ zcat database.gz | locate -d - pattern</code></div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;This might be useful on machines with a fast CPU and little RAM and slow I/O. &nbsp;Note: you can only use one pattern for stdin.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HH4bhoQ@xe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -i", 
                        "locate", 
                        "", 
                        "-i", 
                        "", 
                        "", 
                        "<div>Ignore case distinctions in both the pattern and the database.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EF*BtH8Fe&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -l", 
                        "locate", 
                        "", 
                        "-l <u>number</u>", 
                        "", 
                        "", 
                        "<div>Limit output to <u>number</u> of file names and exit.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s@(8tE]g+h", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -m", 
                        "locate", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "<div>Use <code>mmap</code>(2) instead of the <code>stdio</code>(3) library. &nbsp;This is the default behavior and is faster in most cases.</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AZLWd-;AU1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "locate -s", 
                        "locate", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "<div>Use the <code>stdio</code>(3) library instead of <code>mmap</code>(2).</div>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o3l;kd,fmN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "apropos", 
                        "apropos", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "searches  a  set  of database files containing short descriptions of system commands for keywords and displays the result on the        standard output", 
                        "apropos&nbsp;<u>keyword</u>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "lmVRq<27=O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "whatis", 
                        "whatis", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "Searches  a  set  of  database files containing short descriptions of system commands for keywords and displays the result on the        standard output.  Only complete word matches are displayed.", 
                        "<code>whatis</code>&nbsp;<u>keyword</u><div><u><br /></u></div><div>The database is created using the command <code>/usr/libexec/makewhatis</code></div>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "k):&nHI1Y4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "man [section]", 
                        "man", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Following 8 sections are available in the man page.</p> <ol> <li>General commands</li> <li>System calls</li> <li>C library functions</li> <li>Special files (usually devices, those found in /dev) and drivers</li> <li>File formats and conventions</li> <li>Games and screensavers</li> <li>Miscellaneous</li> <li>System administration commands and daemons</li></ol>", 
                        "<b><div>$ whatis crontab</div><div>crontab (1) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- maintain crontab files for individual users (V3)</div><div>crontab (5) &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;- tables for driving cron</div><div><br /></div><div>$ man 5 crontab</div></b>", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "D/&uFU>9M{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "What is wrong with --option=~/file", 
                        "~ only substituted by shell if leading filename, so needs = replaced by space", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x#J@s]Ye#9", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Make the current commit the only (initial) commit in a Git repository?", 
                        "<div>The only solution that works for me (and keeps submodules working) is</div><div><br /></div><div><b>git checkout --orphan newBranch</b></div><div><b>git add -A &nbsp;# Add all files and commit them</b></div><div><b>git commit</b></div><div><b>git branch -D master &nbsp;# Deletes the master branch</b></div><div><b>git branch -m master &nbsp;# Rename the current branch to master</b></div><div><b>git push -f origin master &nbsp;# Force push master branch to github</b></div><div><b>git gc --aggressive --prune=all &nbsp; &nbsp; # remove the old files</b></div>", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qofM=IFI?1", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "cron meaning", 
                        "There is no definitive explanation but most accepted answers is reportdly from Ken Thompson (author of unix cron): cron comes from chron, the Greek prefix for ‘time’.", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f_/3PNYTeb", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab short for", 
                        "cron table", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EHJ/577DF0", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab restrictions", 
                        "<ul>\n<li style=\"text-align: left; \">if <code>/usr/lib/cron/cron.allow</code> exists<ul>\n<li style=\"text-align: left; \"><code>$USER</code> must appear in it</li>\n</ul>\n</li>\n<li style=\"text-align: left; \">else if <code>/usr/lib/cron/cron.deny</code> exists<ul>\n<li style=\"text-align: left; \"><code>$USER</code> must not appear in it</li>\n</ul>\n</li>\n<li style=\"text-align: left; \">else<ul>\n<li style=\"text-align: left; \">only <code>root</code> can use crontab</li>\n</ul>\n</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM0MjYsICJpZCI6ICIxNDk0OTg3MDM2NzY2LTAwMSIsICJtZCI6ICIqIGlmIGAvdXNyL2xpYi9jcm9uL2Nyb24uYWxsb3dgIGV4aXN0c1xuICAgICogYCRVU0VSYCBtdXN0IGFwcGVhciBpbiBpdFxuKiBlbHNlIGlmIGAvdXNyL2xpYi9jcm9uL2Nyb24uZGVueWAgZXhpc3RzXG4gICAgKiBgJFVTRVJgIG11c3Qgbm90IGFwcGVhciBpbiBpdFxuKiBlbHNlXG4gICAgKiBvbmx5IGByb290YCBjYW4gdXNlIGNyb250YWJcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cUkL&{<ow2", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -n", 
                        "declare", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "<p>Give each <var>name</var> the <var>nameref</var> attribute, making it a name reference to another variable. That other variable is defined by the value of <var>name</var>. All references, assignments, and attribute modifications to <var>name</var>, except for those using or changing the <samp>-n</samp> attribute itself, are performed on the variable referenced by <var>name</var>’s value. The nameref attribute cannot be applied to array variables. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ad~W|cc`AR", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin alias", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "alias", 
                        "<p>Without arguments or with the <code>-p</code> option, <code>alias</code> prints the list of aliases on the standard output in a form that allows them to be reused as input. If arguments are supplied, an alias is defined for each <code>name</code> whose <code>value</code> is given.  If no <code>value</code> is given, the name and value of the alias is printed.</p> <p>Aliases are described in <a href=\"Aliases.html#Aliases\">Aliases</a>.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTA2NDUsICJpZCI6ICIxNDk1MjUwNDIyNDY5LTAwNiIsICJtZCI6ICJXaXRob3V0IGFyZ3VtZW50cyBvciB3aXRoIHRoZSBgLXBgIG9wdGlvbiwgYGFsaWFzYCBwcmludHMgdGhlIGxpc3Qgb2YgYWxpYXNlcyBvbiB0aGUgc3RhbmRhcmQgb3V0cHV0IGluIGEgZm9ybSB0aGF0IGFsbG93cyB0aGVtIHRvIGJlIHJldXNlZCBhcyBpbnB1dC4gSWYgYXJndW1lbnRzIGFyZSBzdXBwbGllZCwgYW4gYWxpYXMgaXMgZGVmaW5lZCBmb3IgZWFjaCBgbmFtZWAgd2hvc2UgYHZhbHVlYCBpcyBnaXZlbi4gIElmIG5vIGB2YWx1ZWAgaXMgZ2l2ZW4sIHRoZSBuYW1lIGFuZCB2YWx1ZSBvZiB0aGUgYWxpYXMgaXMgcHJpbnRlZC5cbiAgXG5BbGlhc2VzIGFyZSBkZXNjcmliZWQgaW4gJmx0O2EgaHJlZj0mcXVvdDtBbGlhc2VzLmh0bWwjQWxpYXNlcyZxdW90OyZndDtBbGlhc2VzJmx0Oy9hJmd0Oy5cbiJ9---->", 
                        "alias [-p] [&lt;var&gt;name&lt;/var&gt;[=&lt;var&gt;value&lt;/var&gt;] &amp;hellip;]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BgnPg5!Ho-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "bind", 
                        "<p>Display current Readline (see <a href=\"Command-Line-Editing.html#Command-Line-Editing\">Command Line Editing</a>) key and function bindings, bind a key sequence to a Readline function or macro, or set a Readline variable. Each non-option argument is a command as it would appear in a Readline initialization file (see <a href=\"Readline-Init-File.html#Readline-Init-File\">Readline Init File</a>), but each binding or command must be passed as a separate argument;  e.g., ‘<samp>\"\\C-x\\C-r\":re-read-init-file</samp>’. </p> <p>The return status is zero unless an invalid option is supplied or an error occurs. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MlW:MQw9x-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;builtin", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "builtin", 
                        "<p>Run a shell builtin, passing it <var>args</var>, and return its exit status. This is useful when defining a shell function with the same name as a shell builtin, retaining the functionality of the builtin within the function. The return status is non-zero if <var>shell-builtin</var> is not a shell builtin command. </p>", 
                        "builtin [<var>shell-builtin</var> [<var>args</var>]]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u$+?iVaEIu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;caller", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "caller", 
                        "<p>Returns the context of any active subroutine call (a shell function or a script executed with the <code>.</code> or <code>source</code> builtins). </p> <p>Without <var>expr</var>, <code>caller</code> displays the line number and source filename of the current subroutine call. If a non-negative integer is supplied as <var>expr</var>, <code>caller</code> displays the line number, subroutine name, and source file corresponding to that position in the current execution call stack.  This extra information may be used, for example, to print a stack trace.  The current frame is frame 0. </p> <p>The return value is 0 unless the shell is not executing a subroutine call or <var>expr</var> does not correspond to a valid position in the call stack. </p>", 
                        "caller [<var>expr</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f5B5:V7:5L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;command", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "caller", 
                        "<p>Runs <var>command</var> with <var>arguments</var> ignoring any shell function named <var>command</var>. Only shell builtin commands or commands found by searching the <code>PATH</code> are executed. If there is a shell function named <code>ls</code>, running ‘<samp>command ls</samp>’ within the function will execute the external command <code>ls</code> instead of calling the function recursively. The <samp>-p</samp> option means to use a default value for <code>PATH</code> that is guaranteed to find all of the standard utilities. The return status in this case is 127 if <var>command</var> cannot be found or an error occurred, and the exit status of <var>command</var> otherwise. </p> <p>If either the <samp>-V</samp> or <samp>-v</samp> option is supplied, a description of <var>command</var> is printed.  The <samp>-v</samp> option causes a single word indicating the command or file name used to invoke <var>command</var> to be displayed; the <samp>-V</samp> option produces a more verbose description.  In this case, the return status is zero if <var>command</var> is found, and non-zero if not. </p>", 
                        "command [-pVv] <var>command</var> [<var>arguments</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kIAz{lk*vt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;declare", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "declare", 
                        "<p>Declare variables and give them attributes.  If no <var>name</var>s are given, then display the values of variables instead.  </p> <p>The <samp>-p</samp> option will display the attributes and values of each <var>name</var>. When <samp>-p</samp> is used with <var>name</var> arguments, additional options, other than <samp>-f</samp> and <samp>-F</samp>, are ignored. </p> <p>When <samp>-p</samp> is supplied without <var>name</var> arguments, <code>declare</code> will display the attributes and values of all variables having the attributes specified by the additional options. If no other options are supplied with <samp>-p</samp>, <code>declare</code> will display the attributes and values of all shell variables.  The <samp>-f</samp> option will restrict the display to shell functions. </p> <p>The <samp>-F</samp> option inhibits the display of function definitions; only the function name and attributes are printed. If the <code>extdebug</code> shell option is enabled using <code>shopt</code> (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html#The-Shopt-Builtin\">The Shopt Builtin</a>), the source file name and line number where each <var>name</var> is defined are displayed as well. <samp>-F</samp> implies <samp>-f</samp>. </p> <p>The <samp>-g</samp> option forces variables to be created or modified at the global scope, even when <code>declare</code> is executed in a shell function. It is ignored in all other cases. </p> <p>The following options can be used to restrict output to variables with the specified attributes or to give variables attributes: </p> <dl compact=\"compact\"> <dt><code>-a</code></dt> <dd><p>Each <var>name</var> is an indexed array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p> </dd> <dt><code>-A</code></dt> <dd><p>Each <var>name</var> is an associative array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p> </dd> <dt><code>-f</code></dt> <dd><p>Use function names only. </p> </dd> <dt><code>-i</code></dt> <dd><p>The variable is to be treated as an integer; arithmetic evaluation (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic\">Shell Arithmetic</a>) is performed when the variable is assigned a value. </p> </dd> <dt><code>-l</code></dt> <dd><p>When the variable is assigned a value, all upper-case characters are converted to lower-case. The upper-case attribute is disabled. </p> </dd> <dt><code>-n</code></dt> <dd><p>Give each <var>name</var> the <var>nameref</var> attribute, making it a name reference to another variable. That other variable is defined by the value of <var>name</var>. All references, assignments, and attribute modifications to <var>name</var>, except for those using or changing the <samp>-n</samp> attribute itself, are performed on the variable referenced by <var>name</var>’s value. The nameref attribute cannot be applied to array variables. </p> </dd> <dt><code>-r</code></dt> <dd><p>Make <var>name</var>s readonly.  These names cannot then be assigned values by subsequent assignment statements or unset. </p> </dd> <dt><code>-t</code></dt> <dd><p>Give each <var>name</var> the <code>trace</code> attribute. Traced functions inherit the <code>DEBUG</code> and <code>RETURN</code> traps from the calling shell. The trace attribute has no special meaning for variables. </p> </dd> <dt><code>-u</code></dt> <dd><p>When the variable is assigned a value, all lower-case characters are converted to upper-case. The lower-case attribute is disabled. </p> </dd> <dt><code>-x</code></dt> <dd><p>Mark each <var>name</var> for export to subsequent commands via the environment. </p></dd> </dl> <p>Using ‘<samp>+</samp>’ instead of ‘<samp>-</samp>’ turns off the attribute instead, with the exceptions that ‘<samp>+a</samp>’ may not be used to destroy an array variable and ‘<samp>+r</samp>’ will not remove the readonly attribute. When used in a function, <code>declare</code> makes each <var>name</var> local, as with the <code>local</code> command, unless the <samp>-g</samp> option is used. If a variable name is followed by =<var>value</var>, the value of the variable is set to <var>value</var>. </p> <p>When using <samp>-a</samp> or <samp>-A</samp> and the compound assignment syntax to  create array variables, additional attributes do not take effect until subsequent assignments. </p> <p>The return status is zero unless an invalid option is encountered, an attempt is made to define a function using ‘<samp>-f foo=bar</samp>’, an attempt is made to assign a value to a readonly variable, an attempt is made to assign a value to an array variable without using the compound assignment syntax (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>), one of the <var>names</var> is not a valid shell variable name, an attempt is made to turn off readonly status for a readonly variable, an attempt is made to turn off array status for an array variable, or an attempt is made to display a non-existent function with <samp>-f</samp>. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "blcwGb0=Sd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;echo", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "echo", 
                        "<p>Output the <var>arg</var>s, separated by spaces, terminated with a newline. The return status is 0 unless a write error occurs. If <samp>-n</samp> is specified, the trailing newline is suppressed. If the <samp>-e</samp> option is given, interpretation of the following backslash-escaped characters is enabled. The <samp>-E</samp> option disables the interpretation of these escape characters, even on systems where they are interpreted by default. The <code>xpg_echo</code> shell option may be used to dynamically determine whether or not <code>echo</code> expands these escape characters by default. <code>echo</code> does not interpret <samp>--</samp> to mean the end of options. </p> <p><code>echo</code> interprets the following escape sequences: </p><dl compact=\"compact\"> <dt><code>\\a</code></dt> <dd><p>alert (bell) </p></dd> <dt><code>\\b</code></dt> <dd><p>backspace </p></dd> <dt><code>\\c</code></dt> <dd><p>suppress further output </p></dd> <dt><code>\\e</code></dt> <dt><code>\\E</code></dt> <dd><p>escape </p></dd> <dt><code>\\f</code></dt> <dd><p>form feed </p></dd> <dt><code>\\n</code></dt> <dd><p>new line </p></dd> <dt><code>\\r</code></dt> <dd><p>carriage return </p></dd> <dt><code>\\t</code></dt> <dd><p>horizontal tab </p></dd> <dt><code>\\v</code></dt> <dd><p>vertical tab </p></dd> <dt><code>\\\\</code></dt> <dd><p>backslash </p></dd> <dt><code>\\0<var>nnn</var></code></dt> <dd><p>the eight-bit character whose value is the octal value <var>nnn</var> (zero to three octal digits) </p></dd> <dt><code>\\x<var>HH</var></code></dt> <dd><p>the eight-bit character whose value is the hexadecimal value <var>HH</var> (one or two hex digits) </p></dd> <dt><code>\\u<var>HHHH</var></code></dt> <dd><p>the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value <var>HHHH</var> (one to four hex digits) </p></dd> <dt><code>\\U<var>HHHHHHHH</var></code></dt> <dd><p>the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value <var>HHHHHHHH</var> (one to eight hex digits) </p></dd> </dl>", 
                        "echo [-neE] [<var>arg</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "xg(k=R,ED4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;enable", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "enable", 
                        "<p>Enable and disable builtin shell commands. Disabling a builtin allows a disk command which has the same name as a shell builtin to be executed without specifying a full pathname, even though the shell normally searches for builtins before disk commands. If <samp>-n</samp> is used, the <var>name</var>s become disabled.  Otherwise <var>name</var>s are enabled.  For example, to use the <code>test</code> binary found via <code>$PATH</code> instead of the shell builtin version, type ‘<samp>enable -n test</samp>’. </p> <p>If the <samp>-p</samp> option is supplied, or no <var>name</var> arguments appear, a list of shell builtins is printed.  With no other arguments, the list consists of all enabled shell builtins. The <samp>-a</samp> option means to list each builtin with an indication of whether or not it is enabled.  </p> <p>The <samp>-f</samp> option means to load the new builtin command <var>name</var> from shared object <var>filename</var>, on systems that support dynamic loading. The <samp>-d</samp> option will delete a builtin loaded with <samp>-f</samp>. </p> <p>If there are no options, a list of the shell builtins is displayed. The <samp>-s</samp> option restricts <code>enable</code> to the <small>POSIX</small> special builtins.  If <samp>-s</samp> is used with <samp>-f</samp>, the new builtin becomes a special builtin (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Special-Builtins.html#Special-Builtins\">Special Builtins</a>). </p> <p>The return status is zero unless a <var>name</var> is not a shell builtin or there is an error loading a new builtin from a shared object. </p>", 
                        "enable [-a] [-dnps] [-f <var>filename</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y+s-pRZ9o&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;help", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "help", 
                        "<p>Display helpful information about builtin commands. If <var>pattern</var> is specified, <code>help</code> gives detailed help on all commands matching <var>pattern</var>, otherwise a list of the builtins is printed. </p> <p>Options, if supplied, have the following meanings: </p> <dl compact=\"compact\"> <dt><code>-d</code></dt> <dd><p>Display a short description of each <var>pattern</var> </p></dd> <dt><code>-m</code></dt> <dd><p>Display the description of each <var>pattern</var> in a manpage-like format </p></dd> <dt><code>-s</code></dt> <dd><p>Display only a short usage synopsis for each <var>pattern</var> </p></dd> </dl> <p>The return status is zero unless no command matches <var>pattern</var>. </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yN^?qwRs<M", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;let", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "let", 
                        "<p>The <code>let</code> builtin allows arithmetic to be performed on shell variables.  Each <var>expression</var> is evaluated according to the rules given below in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic\">Shell Arithmetic</a>.  If the last <var>expression</var> evaluates to 0, <code>let</code> returns 1; otherwise 0 is returned. </p>", 
                        "let <var>expression</var> [<var>expression</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EY<Gn-Ym54", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;local", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "local", 
                        "<p>For each argument, a local variable named <var>name</var> is created, and assigned <var>value</var>. The <var>option</var> can be any of the options accepted by <code>declare</code>. <code>local</code> can only be used within a function; it makes the variable <var>name</var> have a visible scope restricted to that function and its children. If <var>name</var> is ‘<samp>-</samp>’, the set of shell options is made local to the function in which <code>local</code> is invoked: shell options changed using the <code>set</code> builtin inside the function are restored to their original values when the function returns. The return status is zero unless <code>local</code> is used outside a function, an invalid <var>name</var> is supplied, or <var>name</var> is a readonly variable. </p>", 
                        "local [<var>option</var>] <var>name</var>[=<var>value</var>] …", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r<uB?)-FXq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;mapfile", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "mapfile", 
                        "<p>Read lines from the standard input into the indexed array variable <var>array</var>, or from file descriptor <var>fd</var> if the <samp>-u</samp> option is supplied. The variable <code>MAPFILE</code> is the default <var>array</var>. Options, if supplied, have the following meanings: </p> <dl compact=\"compact\"> <dt><code>-d</code></dt> <dd><p>The first character of <var>delim</var> is used to terminate each input line, rather than newline. </p></dd> <dt><code>-n</code></dt> <dd><p>Copy at most <var>count</var> lines.  If <var>count</var> is 0, all lines are copied. </p></dd> <dt><code>-O</code></dt> <dd><p>Begin assigning to <var>array</var> at index <var>origin</var>. The default index is 0. </p></dd> <dt><code>-s</code></dt> <dd><p>Discard the first <var>count</var> lines read. </p></dd> <dt><code>-t</code></dt> <dd><p>Remove a trailing <var>delim</var> (default newline) from each line read. </p></dd> <dt><code>-u</code></dt> <dd><p>Read lines from file descriptor <var>fd</var> instead of the standard input. </p></dd> <dt><code>-C</code></dt> <dd><p>Evaluate <var>callback</var> each time <var>quantum</var>P lines are read. The <samp>-c</samp> option specifies <var>quantum</var>. </p></dd> <dt><code>-c</code></dt> <dd><p>Specify the number of lines read between each call to <var>callback</var>. </p></dd> </dl> <p>If <samp>-C</samp> is specified without <samp>-c</samp>, the default quantum is 5000. When <var>callback</var>  is evaluated, it is supplied the index of the next array element to be assigned and the line to be assigned to that element as additional arguments. <var>callback</var> is evaluated after the line is read but before the array element is assigned. </p> <p>If not supplied with an explicit origin, <code>mapfile</code> will clear <var>array</var> before assigning to it. </p> <p><code>mapfile</code> returns successfully unless an invalid option or option argument is supplied, <var>array</var> is invalid or unassignable, or <var>array</var> is not an indexed array. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FL1P~u(yC&", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;logout", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "logout", 
                        "Exit a login shell, returning a status of <var>n</var> to the shell’s parent.", 
                        "mapfile [-d delim] [-n count] [-O origin] [-s count] [-t] [-u fd] [-C callback] [-c quantum] [array]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t{?Rd@3rY]", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;printf", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "printf", 
                        "<p>Write the formatted <var>arguments</var> to the standard output under the control of the <var>format</var>. The <samp>-v</samp> option causes the output to be assigned to the variable <var>var</var> rather than being printed to the standard output. </p> <p>The <var>format</var> is a character string which contains three types of objects: plain characters, which are simply copied to standard output, character escape sequences, which are converted and copied to the standard output, and format specifications, each of which causes printing of the next successive <var>argument</var>. In addition to the standard <code>printf(1)</code> formats, <code>printf</code> interprets the following extensions: </p> <dl compact=\"compact\"> <dt><code>%b</code></dt> <dd><p>Causes <code>printf</code> to expand backslash escape sequences in the corresponding <var>argument</var> in the same way as <code>echo -e</code> (see <a href=\"#Bash-Builtins\">Bash Builtins</a>). </p></dd> <dt><code>%q</code></dt> <dd><p>Causes <code>printf</code> to output the corresponding <var>argument</var> in a format that can be reused as shell input. </p></dd> <dt><code>%(<var>datefmt</var>)T</code></dt> <dd><p>Causes <code>printf</code> to output the date-time string resulting from using <var>datefmt</var> as a format string for <code>strftime</code>(3). The corresponding <var>argument</var> is an integer representing the number of seconds since the epoch. Two special argument values may be used: -1 represents the current time, and -2 represents the time the shell was invoked. If no argument is specified, conversion behaves as if -1 had been given. This is an exception to the usual <code>printf</code> behavior. </p></dd> </dl> <p>Arguments to non-string format specifiers are treated as C language constants, except that a leading plus or minus sign is allowed, and if the leading character is a single or double quote, the value is the ASCII value of the following character. </p> <p>The <var>format</var> is reused as necessary to consume all of the <var>arguments</var>. If the <var>format</var> requires more <var>arguments</var> than are supplied, the extra format specifications behave as if a zero value or null string, as appropriate, had been supplied.  The return value is zero on success, non-zero on failure. </p>", 
                        "printf [-v <var>var</var>] <var>format</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dCBn@]AT!@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;read", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "read", 
                        "<p>One line is read from the standard input, or from the file descriptor <var>fd</var> supplied as an argument to the <samp>-u</samp> option, split into words as described above in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Word-Splitting.html#Word-Splitting\">Word Splitting</a>, and the first word is assigned to the first <var>name</var>, the second word to the second <var>name</var>, and so on. If there are more words than names, the remaining words and their intervening delimiters are assigned to the last <var>name</var>. If there are fewer words read from the input stream than names, the remaining names are assigned empty values. The characters in the value of the <code>IFS</code> variable are used to split the line into words using the same rules the shell uses for expansion (described above in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Word-Splitting.html#Word-Splitting\">Word Splitting</a>). The backslash character ‘<samp>\\</samp>’ may be used to remove any special meaning for the next character read and for line continuation. If no names are supplied, the line read is assigned to the variable <code>REPLY</code>. The exit status is zero, unless end-of-file is encountered, <code>read</code> times out (in which case the status is greater than 128), a variable assignment error (such as assigning to a readonly variable) occurs, or an invalid file descriptor is supplied as the argument to <samp>-u</samp>. </p> <p>Options, if supplied, have the following meanings: </p> <dl compact=\"compact\"> <dt><code>-a <var>aname</var></code></dt> <dd><p>The words are assigned to sequential indices of the array variable <var>aname</var>, starting at 0. All elements are removed from <var>aname</var> before the assignment. Other <var>name</var> arguments are ignored. </p> </dd> <dt><code>-d <var>delim</var></code></dt> <dd><p>The first character of <var>delim</var> is used to terminate the input line, rather than newline. </p> </dd> <dt><code>-e</code></dt> <dd><p>Readline (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Command-Line-Editing.html#Command-Line-Editing\">Command Line Editing</a>) is used to obtain the line. Readline uses the current (or default, if line editing was not previously active) editing settings. </p> </dd> <dt><code>-i <var>text</var></code></dt> <dd><p>If Readline is being used to read the line, <var>text</var> is placed into the editing buffer before editing begins. </p> </dd> <dt><code>-n <var>nchars</var></code></dt> <dd><p><code>read</code> returns after reading <var>nchars</var> characters rather than waiting for a complete line of input, but honors a delimiter if fewer than <var>nchars</var> characters are read before the delimiter. </p> </dd> <dt><code>-N <var>nchars</var></code></dt> <dd><p><code>read</code> returns after reading exactly <var>nchars</var> characters rather than waiting for a complete line of input, unless EOF is encountered or <code>read</code> times out. Delimiter characters encountered in the input are not treated specially and do not cause <code>read</code> to return until <var>nchars</var> characters are read. The result is not split on the characters in <code>IFS</code>; the intent is that the variable is assigned exactly the characters read (with the exception of backslash; see the <samp>-r</samp> option below). </p> </dd> <dt><code>-p <var>prompt</var></code></dt> <dd><p>Display <var>prompt</var>, without a trailing newline, before attempting to read any input. The prompt is displayed only if input is coming from a terminal. </p> </dd> <dt><code>-r</code></dt> <dd><p>If this option is given, backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not be used as a line continuation. </p> </dd> <dt><code>-s</code></dt> <dd><p>Silent mode.  If input is coming from a terminal, characters are not echoed. </p> </dd> <dt><code>-t <var>timeout</var></code></dt> <dd><p>Cause <code>read</code> to time out and return failure if a complete line of input (or a specified number of characters) is not read within <var>timeout</var> seconds. <var>timeout</var>  may be a decimal number with a fractional portion following the decimal point. This option is only effective if <code>read</code> is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If <code>read</code> times out, <code>read</code> saves any partial input read into the specified variable <var>name</var>. If <var>timeout</var> is 0, <code>read</code> returns immediately, without trying to read and data.  The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded. </p> </dd> <dt><code>-u <var>fd</var></code></dt> <dd><p>Read input from file descriptor <var>fd</var>. </p></dd> </dl>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lf1nU|I!9L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;readarray", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "readarray", 
                        "<p>Read lines from the standard input into the indexed array variable <var>array</var>, or from file descriptor <var>fd</var> if the <samp>-u</samp> option is supplied. </p> <p>A synonym for <code>mapfile</code>. </p>", 
                        "readarray [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>}5T1Xh(,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;source", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "source", 
                        "<p>A synonym for <code>.</code> (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Bourne-Shell-Builtins.html#Bourne-Shell-Builtins\">Bourne Shell Builtins</a>). </p>", 
                        "source <var>filename</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lt8-qN!?a3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;type", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "type", 
                        "<p>For each <var>name</var>, indicate how it would be interpreted if used as a command name. </p> <p>If the <samp>-t</samp> option is used, <code>type</code> prints a single word which is one of ‘<samp>alias</samp>’, ‘<samp>function</samp>’, ‘<samp>builtin</samp>’, ‘<samp>file</samp>’ or ‘<samp>keyword</samp>’, if <var>name</var> is an alias, shell function, shell builtin, disk file, or shell reserved word, respectively. If the <var>name</var> is not found, then nothing is printed, and <code>type</code> returns a failure status. </p> <p>If the <samp>-p</samp> option is used, <code>type</code> either returns the name of the disk file that would be executed, or nothing if <samp>-t</samp> would not return ‘<samp>file</samp>’. </p> <p>The <samp>-P</samp> option forces a path search for each <var>name</var>, even if <samp>-t</samp> would not return ‘<samp>file</samp>’. </p> <p>If a command is hashed, <samp>-p</samp> and <samp>-P</samp> print the hashed value, which is not necessarily the file that appears first in <code>$PATH</code>. </p> <p>If the <samp>-a</samp> option is used, <code>type</code> returns all of the places that contain an executable named <var>file</var>. This includes aliases and functions, if and only if the <samp>-p</samp> option is not also used. </p> <p>If the <samp>-f</samp> option is used, <code>type</code> does not attempt to find shell functions, as with the <code>command</code> builtin. </p> <p>The return status is zero if all of the <var>names</var> are found, non-zero if any are not found. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ipE)#Zqws#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;typeset", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "typeset", 
                        "<p>The <code>typeset</code> command is supplied for compatibility with the Korn shell. It is a synonym for the <code>declare</code> builtin command. </p>", 
                        "typeset [-afFgrxilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ir6CcxR/|N", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;ulimit", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "ulimit", 
                        "<p><code>ulimit</code> provides control over the resources available to processes started by the shell, on systems that allow such control.  If an option is given, it is interpreted as follows: </p> <dl compact=\"compact\"> <dt><code>-S</code></dt> <dd><p>Change and report the soft limit associated with a resource. </p> </dd> <dt><code>-H</code></dt> <dd><p>Change and report the hard limit associated with a resource. </p> </dd> <dt><code>-a</code></dt> <dd><p>All current limits are reported. </p> </dd> <dt><code>-b</code></dt> <dd><p>The maximum socket buffer size. </p> </dd> <dt><code>-c</code></dt> <dd><p>The maximum size of core files created. </p> </dd> <dt><code>-d</code></dt> <dd><p>The maximum size of a process’s data segment. </p> </dd> <dt><code>-e</code></dt> <dd><p>The maximum scheduling priority (\"nice\"). </p> </dd> <dt><code>-f</code></dt> <dd><p>The maximum size of files written by the shell and its children. </p> </dd> <dt><code>-i</code></dt> <dd><p>The maximum number of pending signals. </p> </dd> <dt><code>-k</code></dt> <dd><p>The maximum number of kqueues that may be allocated. </p> </dd> <dt><code>-l</code></dt> <dd><p>The maximum size that may be locked into memory. </p> </dd> <dt><code>-m</code></dt> <dd><p>The maximum resident set size (many systems do not honor this limit). </p> </dd> <dt><code>-n</code></dt> <dd><p>The maximum number of open file descriptors (most systems do not allow this value to be set). </p> </dd> <dt><code>-p</code></dt> <dd><p>The pipe buffer size. </p> </dd> <dt><code>-q</code></dt> <dd><p>The maximum number of bytes in POSIX message queues. </p> </dd> <dt><code>-r</code></dt> <dd><p>The maximum real-time scheduling priority. </p> </dd> <dt><code>-s</code></dt> <dd><p>The maximum stack size. </p> </dd> <dt><code>-t</code></dt> <dd><p>The maximum amount of cpu time in seconds. </p> </dd> <dt><code>-u</code></dt> <dd><p>The maximum number of processes available to a single user. </p> </dd> <dt><code>-v</code></dt> <dd><p>The maximum amount of virtual memory available to the shell, and, on some systems, to its children. </p> </dd> <dt><code>-x</code></dt> <dd><p>The maximum number of file locks. </p> </dd> <dt><code>-P</code></dt> <dd><p>The maximum number of pseudoterminals. </p> </dd> <dt><code>-T</code></dt> <dd><p>The maximum number of threads. </p></dd> </dl> <p>If <var>limit</var> is given, and the <samp>-a</samp> option is not used, <var>limit</var> is the new value of the specified resource. The special <var>limit</var> values <code>hard</code>, <code>soft</code>, and <code>unlimited</code> stand for the current hard limit, the current soft limit, and no limit, respectively. A hard limit cannot be increased by a non-root user once it is set; a soft limit may be increased up to the value of the hard limit. Otherwise, the current value of the soft limit for the specified resource is printed, unless the <samp>-H</samp> option is supplied. When setting new limits, if neither <samp>-H</samp> nor <samp>-S</samp> is supplied, both the hard and soft limits are set. If no option is given, then <samp>-f</samp> is assumed.  Values are in 1024-byte increments, except for <samp>-t</samp>, which is in seconds; <samp>-p</samp>, which is in units of 512-byte blocks; <samp>-P</samp>, <samp>-T</samp>, <samp>-b</samp>, <samp>-k</samp>, <samp>-n</samp> and <samp>-u</samp>, which are unscaled values; and, when in <small>POSIX</small> Mode (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Bash-POSIX-Mode.html#Bash-POSIX-Mode\">Bash POSIX Mode</a>), <samp>-c</samp> and <samp>-f</samp>, which are in 512-byte increments. </p> <p>The return status is zero unless an invalid option or argument is supplied, or an error occurs while setting a new limit. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q0=yiGZHWg", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin&nbsp;unalias", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "unalias", 
                        "<p>Remove each <var>name</var> from the list of aliases.  If <samp>-a</samp> is supplied, all aliases are removed. Aliases are described in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Aliases.html#Aliases\">Aliases</a>. </p>", 
                        "unalias [-a] [<var>name</var> … ]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "W@gSI$q0E", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -m", 
                        "bind", 
                        "", 
                        "-m <var>keymap</var>", 
                        "", 
                        "", 
                        "<p>Use <var>keymap</var> as the keymap to be affected by the subsequent bindings.  Acceptable <var>keymap</var> names are <code>emacs</code>, <code>emacs-standard</code>, <code>emacs-meta</code>, <code>emacs-ctlx</code>, <code>vi</code>, <code>vi-move</code>, <code>vi-command</code>, and <code>vi-insert</code>. <code>vi</code> is equivalent to <code>vi-command</code> (<code>vi-move</code> is also a synonym); <code>emacs</code> is equivalent to <code>emacs-standard</code>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gGaWOaqk1<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -l", 
                        "bind", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "<p>List the names of all Readline functions. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PKDn$d>CNr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -p", 
                        "bind", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "<p>List current Readline function names and bindings. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bL^Ra>X%B_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -P", 
                        "bind", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "<p>List current Readline function names and bindings. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F^)_,g_Zih", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -v", 
                        "bind", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "<p>List current Readline variable names and values. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l!yY-@IG91", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -V", 
                        "bind", 
                        "", 
                        "-V", 
                        "", 
                        "", 
                        "<p>List current Readline variable names and values. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "I)A@e,iWSm", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -s", 
                        "bind", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "<p>Display Readline key sequences bound to macros and the strings they output. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A!U9*cy!=7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -S", 
                        "bind", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "<p>Display Readline key sequences bound to macros and the strings they output. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FAZtA|_aUe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -f", 
                        "bind", 
                        "", 
                        "-f <var>filename</var>", 
                        "", 
                        "", 
                        "<p>Read key bindings from <var>filename</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "c>-X.7.EJ!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -q", 
                        "bind", 
                        "", 
                        "-q <var>function</var>", 
                        "", 
                        "", 
                        "<p>Query about which keys invoke the named <var>function</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FBF3b{ycub", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -u", 
                        "bind", 
                        "", 
                        "-u <var>function</var>", 
                        "", 
                        "", 
                        "<p>Unbind all keys bound to the named <var>function</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FF1c!d+3hP", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -r", 
                        "bind", 
                        "", 
                        "-r <var>keyseq</var>", 
                        "", 
                        "", 
                        "<p>Remove any current binding for <var>keyseq</var>. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "onFrkVw[e(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -x", 
                        "bind", 
                        "", 
                        "-x <var>keyseq:shell-command</var>", 
                        "", 
                        "", 
                        "<p>List all key sequences bound to shell commands and the associated commands in a format that can be reused as input. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t>_]V!tP7A", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin bind -X", 
                        "bind", 
                        "", 
                        "-X", 
                        "", 
                        "", 
                        "<p>List all key sequences bound to shell commands and the associated commands in a format that can be reused as input. </p>", 
                        "bind [-m <var>keymap</var>] [-lpsvPSVX] bind [-m <var>keymap</var>] [-q <var>function</var>] [-u <var>function</var>] [-r <var>keyseq</var>] bind [-m <var>keymap</var>] -f <var>filename</var> bind [-m <var>keymap</var>] -x <var>keyseq:shell-command</var> bind [-m <var>keymap</var>] <var>keyseq:function-name</var> bind [-m <var>keymap</var>] <var>keyseq:readline-command</var>", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v>>:S,J*8f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -p", 
                        "declare", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "<p>The <samp>-p</samp> option will display the attributes and values of each <var>name</var>. When <samp>-p</samp> is used with <var>name</var> arguments, additional options, other than <samp>-f</samp> and <samp>-F</samp>, are ignored. </p> <p>When <samp>-p</samp> is supplied without <var>name</var> arguments, <code>declare</code> will display the attributes and values of all variables having the attributes specified by the additional options. If no other options are supplied with <samp>-p</samp>, <code>declare</code> will display the attributes and values of all shell variables.  The <samp>-f</samp> option will restrict the display to shell functions. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e[gF:_x>XM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -F", 
                        "declare", 
                        "", 
                        "-F", 
                        "", 
                        "", 
                        "<p>The <samp>-F</samp> option inhibits the display of function definitions; only the function name and attributes are printed. If the <code>extdebug</code> shell option is enabled using <code>shopt</code> (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/The-Shopt-Builtin.html#The-Shopt-Builtin\">The Shopt Builtin</a>), the source file name and line number where each <var>name</var> is defined are displayed as well. <samp>-F</samp> implies <samp>-f</samp>. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d.=erZ+TQ/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -g", 
                        "declare", 
                        "", 
                        "-g", 
                        "", 
                        "", 
                        "<p>The <samp>-g</samp> option forces variables to be created or modified at the global scope, even when <code>declare</code> is executed in a shell function. It is ignored in all other cases. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QuzH]1;hxe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -a", 
                        "declare", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "<p>Each <var>name</var> is an indexed array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kl(2Yl2%mB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -A", 
                        "declare", 
                        "", 
                        "-A", 
                        "", 
                        "", 
                        "<p>Each <var>name</var> is an associative array variable (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Arrays.html#Arrays\">Arrays</a>). </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q)QdCU[Bgj", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -f", 
                        "declare", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "<p>Use function names only. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mm%]47Tl#Y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -i", 
                        "declare", 
                        "", 
                        "-i", 
                        "", 
                        "", 
                        "<p>The variable is to be treated as an integer; arithmetic evaluation (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Shell-Arithmetic.html#Shell-Arithmetic\">Shell Arithmetic</a>) is performed when the variable is assigned a value. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CL9t])xi#{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -l", 
                        "declare", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "<p>When the variable is assigned a value, all upper-case characters are converted to lower-case. The upper-case attribute is disabled. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l,v{H(RgQJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -r", 
                        "declare", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "<p>Make <var>name</var>s readonly.  These names cannot then be assigned values by subsequent assignment statements or unset. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tqd?a8[Sr^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -t", 
                        "declare", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "<p>Give each <var>name</var> the <code>trace</code> attribute. Traced functions inherit the <code>DEBUG</code> and <code>RETURN</code> traps from the calling shell. The trace attribute has no special meaning for variables. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "nvDXQ20PyY", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -u", 
                        "declare", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "<p>When the variable is assigned a value, all lower-case characters are converted to upper-case. The lower-case attribute is disabled. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q31+bHAYo,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin declare -x", 
                        "declare", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "<p>Mark each <var>name</var> for export to subsequent commands via the environment. </p>", 
                        "declare [-aAfFgilnrtux] [-p] [<var>name</var>[=<var>value</var>] …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f?[7p.qw6>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "help", 
                        "<p>Display helpful information about builtin commands. If <var>pattern</var> is specified, <code>help</code> gives detailed help on all commands matching <var>pattern</var>, otherwise a list of the builtins is printed. </p> <p>The return status is zero unless no command matches <var>pattern</var>. </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q]M1^0C.+8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help -d", 
                        "help", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "<p>Display a short description of each <var>pattern</var> </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F]t5|3r0&j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help -m", 
                        "help", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "<p>Display the description of each <var>pattern</var> in a manpage-like format </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K4,2dLt!1R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin help -s", 
                        "help", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "<p>Display only a short usage synopsis for each <var>pattern</var> </p>", 
                        "help [-dms] [<var>pattern</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "EKC3Nuv6oq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -d", 
                        "mapfile", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "<p>The first character of <var>delim</var> is used to terminate each input line, rather than newline. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vCI4B;:YUF", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -n", 
                        "mapfile", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "<p>Copy at most <var>count</var> lines.  If <var>count</var> is 0, all lines are copied. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ie;M@TJs;t", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -O", 
                        "mapfile", 
                        "", 
                        "-O", 
                        "", 
                        "", 
                        "<p>Begin assigning to <var>array</var> at index <var>origin</var>. The default index is 0. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J)od]XF%:Z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -s", 
                        "mapfile", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "<p>Discard the first <var>count</var> lines read. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "eZ4qFf:^TJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -t", 
                        "mapfile", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "<p>Remove a trailing <var>delim</var> (default newline) from each line read. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x!o0n_b@>c", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -u", 
                        "mapfile", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "<p>Read lines from file descriptor <var>fd</var> instead of the standard input. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hS/?%p>YU<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -C", 
                        "mapfile", 
                        "", 
                        "-C", 
                        "", 
                        "", 
                        "<p>Evaluate <var>callback</var> each time <var>quantum</var>P lines are read. The <samp>-c</samp> option specifies <var>quantum</var>. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vCNra.(){z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin mapfile -c", 
                        "mapfile", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "<p>Specify the number of lines read between each call to <var>callback</var>. </p>", 
                        "mapfile [-d <var>delim</var>] [-n <var>count</var>] [-O <var>origin</var>] [-s <var>count</var>] [-t] [-u <var>fd</var>]     [-C <var>callback</var>] [-c <var>quantum</var>] [<var>array</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sB@gW>[M][", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin printf %b", 
                        "printf", 
                        "", 
                        "%q", 
                        "", 
                        "", 
                        "<p>Causes <code>printf</code> to output the corresponding <var>argument</var> in a format that can be reused as shell input. </p>", 
                        "printf [-v <var>var</var>] <var>format</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ab(3Q=QTU<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin printf %(datefmt)T", 
                        "printf", 
                        "", 
                        "%(<var>datefmt</var>)T", 
                        "", 
                        "", 
                        "<p>Causes <code>printf</code> to output the date-time string resulting from using <var>datefmt</var> as a format string for <code>strftime</code>(3). The corresponding <var>argument</var> is an integer representing the number of seconds since the epoch. Two special argument values may be used: <code>-1</code> represents the current time, and <code>-2</code> represents the time the shell was invoked. If no argument is specified, conversion behaves as if <code>-1</code> had been given. This is an exception to the usual <code>printf</code> behavior. </p>", 
                        "printf [-v <var>var</var>] <var>format</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ge3B;=R]tO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "read", 
                        "<p>One line is read from the standard input, or from the file descriptor <var>fd</var> supplied as an argument to the <samp>-u</samp> option, split into words as described above in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Word-Splitting.html#Word-Splitting\">Word Splitting</a>, and the first word is assigned to the first <var>name</var>, the second word to the second <var>name</var>, and so on. If there are more words than names, the remaining words and their intervening delimiters are assigned to the last <var>name</var>. If there are fewer words read from the input stream than names, the remaining names are assigned empty values. The characters in the value of the <code>IFS</code> variable are used to split the line into words using the same rules the shell uses for expansion (described above in <a href=\"https://www.gnu.org/software/bash/manual/html_node/Word-Splitting.html#Word-Splitting\">Word Splitting</a>). The backslash character ‘<samp>\\</samp>’ may be used to remove any special meaning for the next character read and for line continuation. If no names are supplied, the line read is assigned to the variable <code>REPLY</code>. The exit status is zero, unless end-of-file is encountered, <code>read</code> times out (in which case the status is greater than 128), a variable assignment error (such as assigning to a readonly variable) occurs, or an invalid file descriptor is supplied as the argument to <samp>-u</samp>. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "etL-tbE)d}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -a", 
                        "read", 
                        "", 
                        "-a <var>aname</var>", 
                        "", 
                        "", 
                        "<p>The words are assigned to sequential indices of the array variable <var>aname</var>, starting at 0. All elements are removed from <var>aname</var> before the assignment. Other <var>name</var> arguments are ignored. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fYAZD3*TDO", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -d", 
                        "read", 
                        "", 
                        "-d <var>delim</var>", 
                        "", 
                        "", 
                        "<p>The first character of <var>delim</var> is used to terminate the input line, rather than newline. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x5N3q=E2Gm", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -e", 
                        "read", 
                        "", 
                        "-e", 
                        "", 
                        "", 
                        "<p>Readline (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Command-Line-Editing.html#Command-Line-Editing\">Command Line Editing</a>) is used to obtain the line. Readline uses the current (or default, if line editing was not previously active) editing settings. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t2JkZ$(RQ7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -i", 
                        "read", 
                        "", 
                        "-i <var>text</var>", 
                        "", 
                        "", 
                        "<p>If Readline is being used to read the line, <var>text</var> is placed into the editing buffer before editing begins. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l-:x&:uGw$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -n", 
                        "read", 
                        "", 
                        "-n <var>nchars</var>", 
                        "", 
                        "", 
                        "<p><code>read</code> returns after reading <var>nchars</var> characters rather than waiting for a complete line of input, but honors a delimiter if fewer than <var>nchars</var> characters are read before the delimiter. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q50O}E:SXM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -N", 
                        "read", 
                        "", 
                        "-N <var>nchars</var>", 
                        "", 
                        "", 
                        "<p><code>read</code> returns after reading exactly <var>nchars</var> characters rather than waiting for a complete line of input, unless EOF is encountered or <code>read</code> times out. Delimiter characters encountered in the input are not treated specially and do not cause <code>read</code> to return until <var>nchars</var> characters are read. The result is not split on the characters in <code>IFS</code>; the intent is that the variable is assigned exactly the characters read (with the exception of backslash; see the <samp>-r</samp> option below). </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M#KskkiPz`", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -p", 
                        "read", 
                        "", 
                        "-p <var>prompt</var>", 
                        "", 
                        "", 
                        "<p>Display <var>prompt</var>, without a trailing newline, before attempting to read any input. The prompt is displayed only if input is coming from a terminal. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>(cch@3Ln", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -r", 
                        "read", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "<p>If this option is given, backslash does not act as an escape character. The backslash is considered to be part of the line. In particular, a backslash-newline pair may not be used as a line continuation. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wLsPII)ZQe", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -s", 
                        "read", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "<p>Silent mode.  If input is coming from a terminal, characters are not echoed. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B?]pFaM[R!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -t", 
                        "read", 
                        "", 
                        "-t <var>timeout</var>", 
                        "", 
                        "", 
                        "<p>Cause <code>read</code> to time out and return failure if a complete line of input (or a specified number of characters) is not read within <var>timeout</var> seconds. <var>timeout</var>  may be a decimal number with a fractional portion following the decimal point. This option is only effective if <code>read</code> is reading input from a terminal, pipe, or other special file; it has no effect when reading from regular files. If <code>read</code> times out, <code>read</code> saves any partial input read into the specified variable <var>name</var>. If <var>timeout</var> is 0, <code>read</code> returns immediately, without trying to read and data.  The exit status is 0 if input is available on the specified file descriptor, non-zero otherwise. The exit status is greater than 128 if the timeout is exceeded. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dB]]yj<NZd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin read -u", 
                        "read", 
                        "", 
                        "-u <var>fd</var>", 
                        "", 
                        "", 
                        "<p>Read input from file descriptor <var>fd</var>. </p>", 
                        "read [-ers] [-a <var>aname</var>] [-d <var>delim</var>] [-i <var>text</var>] [-n <var>nchars</var>]     [-N <var>nchars</var>] [-p <var>prompt</var>] [-t <var>timeout</var>] [-u <var>fd</var>] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lm>Gxm2~bi", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type", 
                        "bash", 
                        "builtin", 
                        "", 
                        "", 
                        "type", 
                        "<p>For each <var>name</var>, indicate how it would be interpreted if used as a command name. </p><p>The return status is zero if all of the <var>names</var> are found, non-zero if any are not found. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p?4QTE;XZU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -t", 
                        "type", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "<p>If the <samp>-t</samp> option is used, <code>type</code> prints a single word which is one of ‘<samp>alias</samp>’, ‘<samp>function</samp>’, ‘<samp>builtin</samp>’, ‘<samp>file</samp>’ or ‘<samp>keyword</samp>’, if <var>name</var> is an alias, shell function, shell builtin, disk file, or shell reserved word, respectively. If the <var>name</var> is not found, then nothing is printed, and <code>type</code> returns a failure status. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C^^,~e:TRd", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -p", 
                        "type", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "<p>If the <samp>-p</samp> option is used, <code>type</code> either returns the name of the disk file that would be executed, or nothing if <samp>-t</samp> would not return ‘<samp>file</samp>’.</p> <p>If a command is hashed, <samp>-p</samp> and <samp>-P</samp> print the hashed value, which is not necessarily the file that appears first in <code>$PATH</code>. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "hxSQZ^^!*f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -P", 
                        "type", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "<p>The <samp>-P</samp> option forces a path search for each <var>name</var>, even if <samp>-t</samp> would not return ‘<samp>file</samp>’. </p> <p>If a command is hashed, <samp>-p</samp> and <samp>-P</samp> print the hashed value, which is not necessarily the file that appears first in <code>$PATH</code>. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sZ6_mTS9ut", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -a", 
                        "type", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "<p>If the <samp>-a</samp> option is used, <code>type</code> returns all of the places that contain an executable named <var>file</var>. This includes aliases and functions, if and only if the <samp>-p</samp> option is not also used. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L;2eSvxYxp", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin type -f", 
                        "type", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "<p>If the <samp>-f</samp> option is used, <code>type</code> does not attempt to find shell functions, as with the <code>command</code> builtin. </p> <p>The return status is zero if all of the <var>names</var> are found, non-zero if any are not found. </p>", 
                        "type [-afptP] [<var>name</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GG(=p^yo/x", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -S", 
                        "ulimit", 
                        "", 
                        "-S", 
                        "", 
                        "", 
                        "<p>Change and report the soft limit associated with a resource. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "vsLQQ&#0?u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -H", 
                        "ulimit", 
                        "", 
                        "-H", 
                        "", 
                        "", 
                        "<p>Change and report the hard limit associated with a resource. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i#{kHD|dG!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -a", 
                        "ulimit", 
                        "", 
                        "-a", 
                        "", 
                        "", 
                        "<p>All current limits are reported. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pdkQzs^n!W", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -b", 
                        "ulimit", 
                        "", 
                        "-b", 
                        "", 
                        "", 
                        "<p>The maximum socket buffer size. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "HAT2-O1+<|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -c", 
                        "ulimit", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "<p>The maximum size of core files created. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u:zlBlkhh%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -d", 
                        "ulimit", 
                        "", 
                        "-d", 
                        "", 
                        "", 
                        "<p>The maximum size of a process’s data segment. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yNv=sdt<#k", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -e", 
                        "ulimit", 
                        "", 
                        "-e", 
                        "", 
                        "", 
                        "<p>The maximum scheduling priority (\"nice\"). </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n#]G#eox_s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -f", 
                        "ulimit", 
                        "", 
                        "-f", 
                        "", 
                        "", 
                        "<p>The maximum size of files written by the shell and its children. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lrnl^P)scv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -i", 
                        "ulimit", 
                        "", 
                        "-i", 
                        "", 
                        "", 
                        "<p>The maximum number of pending signals. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J7$MF{Bb!y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -k", 
                        "ulimit", 
                        "", 
                        "-k", 
                        "", 
                        "", 
                        "<p>The maximum number of kqueues that may be allocated. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b42s2j#o2R", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -l", 
                        "ulimit", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "<p>The maximum size that may be locked into memory. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uj0U;_0i~s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -m", 
                        "ulimit", 
                        "", 
                        "-m", 
                        "", 
                        "", 
                        "<p>The maximum resident set size (many systems do not honor this limit). </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Gl:Dgx={EH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -n", 
                        "ulimit", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "<p>The maximum number of open file descriptors (most systems do not allow this value to be set). </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kt?pL7KXsT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -p", 
                        "ulimit", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "<p>The pipe buffer size. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "k}i2(qVgg6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -q", 
                        "ulimit", 
                        "", 
                        "-q", 
                        "", 
                        "", 
                        "<p>The maximum number of bytes in POSIX message queues. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v=2?F!iYHv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -r", 
                        "ulimit", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "<p>The maximum real-time scheduling priority. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AqA>UAnJ4o", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -s", 
                        "ulimit", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "<p>The maximum stack size. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fbOOi<%7vK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -t", 
                        "ulimit", 
                        "", 
                        "-t", 
                        "", 
                        "", 
                        "<p>The maximum amount of cpu time in seconds. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cs=L9>[-35", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -u", 
                        "ulimit", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "<p>The maximum number of processes available to a single user. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t[sc-d&&JJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -v", 
                        "ulimit", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "<p>The maximum amount of virtual memory available to the shell, and, on some systems, to its children. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "VNu5wTv0q", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -x", 
                        "ulimit", 
                        "", 
                        "-x", 
                        "", 
                        "", 
                        "<p>The maximum number of file locks. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fL9d{?Dv9O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -P", 
                        "ulimit", 
                        "", 
                        "-P", 
                        "", 
                        "", 
                        "<p>The maximum number of pseudoterminals. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GzM%w)P(pU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin ulimit -T", 
                        "ulimit", 
                        "", 
                        "-T", 
                        "", 
                        "", 
                        "<p>The maximum number of threads. </p>", 
                        "ulimit [-HSabcdefiklmnpqrstuvxPT] [<var>limit</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cY**,EJ5=2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Bourne Shell builtin&nbsp;test", 
                        "test", 
                        "variant", 
                        "", 
                        "", 
                        "[", 
                        "<p>Evaluate a conditional expression <var>expr</var> and return a status of 0 (true) or 1 (false). Each operator and operand must be a separate argument. Expressions are composed of the primaries described below in <a href=\"Bash-Conditional-Expressions.html#Bash-Conditional-Expressions\">Bash Conditional Expressions</a>.&nbsp;This builtin does not accept any options, nor does it accept and ignore an argument of <samp><code>--</code></samp> as signifying the end of options. </p> <p>When the <code>[</code> form is used, the last argument to the command must be a <code>]</code>. </p> <p>Expressions may be combined using the following operators, listed in decreasing order of precedence. The evaluation depends on the number of arguments; see below. Operator precedence is used when there are five or more arguments. </p> <dl compact=\"compact\"> <dt><code>! <var>expr</var></code></dt> <dd><p>True if <var>expr</var> is false. </p> </dd> <dt><code>( <var>expr</var> )</code></dt> <dd><p>Returns the value of <var>expr</var>. This may be used to override the normal precedence of operators. </p> </dd> <dt><code><var>expr1</var> -a <var>expr2</var></code></dt> <dd><p>True if both <var><code>expr1</code></var> and <var><code>expr2</code></var> are true. </p> </dd> <dt><code><var>expr1</var> -o <var>expr2</var></code></dt> <dd><p>True if either <var><code>expr1</code></var> or <var><code>expr2</code></var> is true. </p></dd> </dl> <p>The <code>test</code> and <code>[</code> builtins evaluate conditional expressions using a set of rules based on the number of arguments. </p> <dl compact=\"compact\"> <dt>0 arguments</dt> <dd><p>The expression is false. </p> </dd> <dt>1 argument</dt> <dd><p>The expression is true if and only if the argument is not null. </p> </dd> <dt>2 arguments</dt> <dd><p>If the first argument is <samp><code>!</code></samp>, the expression is true if and only if the second argument is null. If the first argument is one of the unary conditional operators (see <a href=\"Bash-Conditional-Expressions.html#Bash-Conditional-Expressions\">Bash Conditional Expressions</a>), the expression is true if the unary test is true. If the first argument is not a valid unary operator, the expression is false. </p> </dd> <dt>3 arguments</dt> <dd><p>The following conditions are applied in the order listed. If the second argument is one of the binary conditional operators (see <a href=\"Bash-Conditional-Expressions.html#Bash-Conditional-Expressions\">Bash Conditional Expressions</a>), the result of the expression is the result of the binary test using the first and third arguments as operands. The <samp><code>-a</code></samp>&nbsp;and <samp><code>-o</code></samp>&nbsp;operators are considered binary operators when there are three arguments. If the first argument is <samp><code>!</code></samp>, the value is the negation of the two-argument test using the second and third arguments. If the first argument is exactly <samp><code>(</code></samp>&nbsp;and the third argument is exactly <samp><code>)</code></samp>, the result is the one-argument test of the second argument. Otherwise, the expression is false. </p> </dd> <dt>4 arguments</dt> <dd><p>If the first argument is <samp><code>!</code></samp>, the result is the negation of the three-argument expression composed of the remaining arguments. Otherwise, the expression is parsed and evaluated according to precedence using the rules listed above. </p> </dd> <dt>5 or more arguments</dt> <dd><p>The expression is parsed and evaluated according to precedence using the rules listed above. </p></dd> </dl> <p>When used with <code>test</code> or <samp><code>[</code></samp>, the <samp><code>&lt;</code></samp>&nbsp;and <samp><code>&gt;</code></samp>&nbsp;operators sort lexicographically using ASCII ordering. </p>", 
                        "", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "wKSjjJ`/H8", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin :", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        ":", 
                        "<p>Do nothing beyond expanding <var>arguments</var> and performing redirections. The return status is zero.</p>", 
                        ": [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ryWq,]ijZN", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin .", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        ".", 
                        "<p>Read and execute commands from the <var>filename</var> argument in the current shell context.  If <var>filename</var> does not contain a slash, the <code>PATH</code> variable is used to find <var>filename</var>. When Bash is not in <small>POSIX</small> mode, the current directory is searched if <var>filename</var> is not found in <code>$PATH</code>. If any <var>arguments</var> are supplied, they become the positional parameters when <var>filename</var> is executed.  Otherwise the positional parameters are unchanged. If the <samp>-T</samp> option is enabled, <code>source</code> inherits any trap on <code>DEBUG</code>; if it is not, any <code>DEBUG</code> trap string is saved and restored around the call to <code>source</code>, and <code>source</code> unsets the <code>DEBUG</code> trap while it executes. If <samp>-T</samp> is not set, and the sourced file changes the <code>DEBUG</code> trap, the new value is retained when <code>source</code> completes. The return status is the exit status of the last command executed, or zero if no commands are executed.  If <var>filename</var> is not found, or cannot be read, the return status is non-zero. This builtin is equivalent to <code>source</code>.</p>", 
                        ".<var>filename</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IOg#5!]5@5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin break", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "break", 
                        "<p>Exit from a <code>for</code>, <code>while</code>, <code>until</code>, or <code>select</code> loop. If <var>n</var> is supplied, the <var>n</var>th enclosing loop is exited.&nbsp;<var>n</var> must be greater than or equal to 1. The return status is zero unless <var>n</var> is not greater than or equal to 1.</p>", 
                        "break [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gQ}E=NKh)B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin cd", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "cd", 
                        "<p>Change the current working directory to <var>directory</var>. If <var>directory</var> is not supplied, the value of the <code>HOME</code> shell variable is used. Any additional arguments following <var>directory</var> are ignored. If the shell variable <code>CDPATH</code> exists, it is used as a search path: each directory name in <code>CDPATH</code> is searched for <var>directory</var>, with alternative directory names in <code>CDPATH</code> separated by a colon (&lsquo;<samp>:</samp>&rsquo;). If <var>directory</var> begins with a slash, <code>CDPATH</code> is not used.</p><p>The <samp>-P</samp> option means to not follow symbolic links: symbolic links are resolved while <code>cd</code> is traversing <var>directory</var> and before processing an instance of &lsquo;<samp>..</samp>&rsquo; in <var>directory</var>.</p><p>By default, or when the <samp>-L</samp> option is supplied, symbolic links in <var>directory</var> are resolved after <code>cd</code> processes an instance of &lsquo;<samp>..</samp>&rsquo; in <var>directory</var>.</p><p>If &lsquo;<samp>..</samp>&rsquo; appears in <var>directory</var>, it is processed by removing the immediately preceding pathname component, back to a slash or the beginning of <var>directory</var>.</p><p>If the <samp>-e</samp> option is supplied with <samp>-P</samp> and the current working directory cannot be successfully determined after a successful directory change, <code>cd</code> will return an unsuccessful status.</p><p>On systems that support it, the <samp>-@</samp> option presents the extended attributes associated with a file as a directory.               </p><p>If <var>directory</var> is &lsquo;<samp>-</samp>&rsquo;, it is converted to <code>$OLDPWD</code> before the directory change is attempted.</p><p>If a non-empty directory name from <code>CDPATH</code> is used, or if &lsquo;<samp>-</samp>&rsquo; is the first argument, and the directory change is successful, the absolute pathname of the new working directory is written to the standard output.</p><p>The return status is zero if the directory is successfully changed, non-zero otherwise.</p>", 
                        "cd [-L|[-P [-e]] [-@] [<var>directory</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ojgD{]B+9j", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin continue", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "continue", 
                        "<p>Resume the next iteration of an enclosing <code>for</code>, <code>while</code>, <code>until</code>, or <code>select</code> loop. If <var>n</var> is supplied, the execution of the <var>n</var>th enclosing loop is resumed.<var>n</var> must be greater than or equal to 1. The return status is zero unless <var>n</var> is not greater than or equal to 1.</p>", 
                        "continue [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dv+7T*>U/-", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin eval", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "eval", 
                        "<p>The arguments are concatenated together into a single command, which is then read and executed, and its exit status returned as the exit status of <code>eval</code>. If there are no arguments or only empty arguments, the return status is zero.</p>", 
                        "eval [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M;3xo1PYi^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin exec", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "exec", 
                        "<p>If <var>command</var> is supplied, it replaces the shell without creating a new process. If the <samp>-l</samp> option is supplied, the shell places a dash at the beginning of the zeroth argument passed to <var>command</var>. This is what the <code>login</code> program does. The <samp>-c</samp> option causes <var>command</var> to be executed with an empty environment. If <samp>-a</samp> is supplied, the shell passes <var>name</var> as the zeroth argument to <var>command</var>. If <var>command</var> cannot be executed for some reason, a non-interactive shell exits, unless the <code>execfail</code> shell option is enabled.  In that case, it returns failure. An interactive shell returns failure if the file cannot be executed. If no <var>command</var> is specified, redirections may be used to affect the current shell environment.  If there are no redirection errors, the return status is zero; otherwise the return status is non-zero.</p>", 
                        "exec [-cl] [-a <var>name</var>] [<var>command</var> [<var>arguments</var>]]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O_w$DcO3UE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin exit", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "exit", 
                        "<p>Exit the shell, returning a status of <var>n</var> to the shell&rsquo;s parent. If <var>n</var> is omitted, the exit status is that of the last command executed. Any trap on <code>EXIT</code> is executed before the shell terminates.</p>", 
                        "exit [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mwKOZ65m{7", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin export", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "export", 
                        "<p>Mark each <var>name</var> to be passed to child processes in the environment.  If the <samp>-f</samp> option is supplied, the <var>name</var>s refer to shell functions; otherwise the names refer to shell variables. The <samp>-n</samp> option means to no longer mark each <var>name</var> for export. If no <var>names</var> are supplied, or if the <samp>-p</samp> option is given, a list of names of all exported variables is displayed. The <samp>-p</samp> option displays output in a form that may be reused as input. If a variable name is followed by =<var>value</var>, the value of the variable is set to <var>value</var>.</p><p>The return status is zero unless an invalid option is supplied, one of the names is not a valid shell variable name, or <samp>-f</samp> is supplied with a name that is not a shell function.</p>", 
                        "export [-fn] [-p] [<var>name</var>[=<var>value</var>]]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tYb&5||-,#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin getopts", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "getopts", 
                        "<p><code>getopts</code> is used by shell scripts to parse positional parameters.<var>optstring</var> contains the option characters to be recognized; if a character is followed by a colon, the option is expected to have an argument, which should be separated from it by whitespace. The colon (&lsquo;<samp>:</samp>&rsquo;) and question mark (&lsquo;<samp>?</samp>&rsquo;) may not be used as option characters. Each time it is invoked, <code>getopts</code> places the next option in the shell variable <var>name</var>, initializing <var>name</var> if it does not exist, and the index of the next argument to be processed into the variable <code>OPTIND</code>.<code>OPTIND</code> is initialized to 1 each time the shell or a shell script is invoked. When an option requires an argument, <code>getopts</code> places that argument into the variable <code>OPTARG</code>. The shell does not reset <code>OPTIND</code> automatically; it must be manually reset between multiple calls to <code>getopts</code> within the same shell invocation if a new set of parameters is to be used.</p><p>When the end of options is encountered, <code>getopts</code> exits with a return value greater than zero.<code>OPTIND</code> is set to the index of the first non-option argument, and <var>name</var> is set to &lsquo;<samp>?</samp>&rsquo;.</p><p><code>getopts</code> normally parses the positional parameters, but if more arguments are given in <var>args</var>, <code>getopts</code> parses those instead.</p><p><code>getopts</code> can report errors in two ways.  If the first character of <var>optstring</var> is a colon, <var>silent</var> error reporting is used.  In normal operation, diagnostic messages are printed when invalid options or missing option arguments are encountered. If the variable <code>OPTERR</code> is set to 0, no error messages will be displayed, even if the first character of <code>optstring</code> is not a colon.</p><p>If an invalid option is seen, <code>getopts</code> places &lsquo;<samp>?</samp>&rsquo; into <var>name</var> and, if not silent, prints an error message and unsets <code>OPTARG</code>. If <code>getopts</code> is silent, the option character found is placed in <code>OPTARG</code> and no diagnostic message is printed.</p><p>If a required argument is not found, and <code>getopts</code> is not silent, a question mark (&lsquo;<samp>?</samp>&rsquo;) is placed in <var>name</var>, <code>OPTARG</code> is unset, and a diagnostic message is printed. If <code>getopts</code> is silent, then a colon (&lsquo;<samp>:</samp>&rsquo;) is placed in <var>name</var> and <code>OPTARG</code> is set to the option character found.</p>", 
                        "getopts <var>optstring</var><var>name</var> [<var>args</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ca-i1Jq@$6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin hash", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "hash", 
                        "<p>Each time this&nbsp;is invoked, it remembers the full pathnames of the commands specified as <var>name</var> arguments, so they need not be searched for on subsequent invocations. The commands are found by searching through the directories listed in <code>$PATH</code>. Any previously-remembered pathname is discarded. The <samp>-p</samp> option inhibits the path search, and <var>filename</var> is used as the location of <var>name</var>. The <samp>-r</samp> option causes the shell to forget all remembered locations. The <samp>-d</samp> option causes the shell to forget the remembered location of each <var>name</var>. If the <samp>-t</samp> option is supplied, the full pathname to which each <var>name</var> corresponds is printed.  If multiple <var>name</var> arguments are supplied with <samp>-t</samp> the <var>name</var> is printed before the hashed full pathname. The <samp>-l</samp> option causes output to be displayed in a format that may be reused as input. If no arguments are given, or if only <samp>-l</samp> is supplied, information about remembered commands is printed. The return status is zero unless a <var>name</var> is not found or an invalid option is supplied.</p>", 
                        "hash [-r] [-p <var>filename</var>] [-dt] [<var>name</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "sra6D^|Q?e", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin pwd", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "pwd", 
                        "<p>Print the absolute pathname of the current working directory. If the <samp>-P</samp> option is supplied, the pathname printed will not contain symbolic links. If the <samp>-L</samp> option is supplied, the pathname printed may contain symbolic links. The return status is zero unless an error is encountered while determining the name of the current directory or an invalid option is supplied.</p>", 
                        "pwd [-LP]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u~X>|/y]D<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin readonly", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "readonly", 
                        "<p>Mark each <var>name</var> as readonly. The values of these names may not be changed by subsequent assignment. If the <samp>-f</samp> option is supplied, each <var>name</var> refers to a shell function. The <samp>-a</samp> option means each <var>name</var> refers to an indexed array variable; the <samp>-A</samp> option means each <var>name</var> refers to an associative array variable. If both options are supplied, <samp>-A</samp> takes precedence. If no <var>name</var> arguments are given, or if the <samp>-p</samp> option is supplied, a list of all readonly names is printed. The other options may be used to restrict the output to a subset of the set of readonly names. The <samp>-p</samp> option causes output to be displayed in a format that may be reused as input. If a variable name is followed by =<var>value</var>, the value of the variable is set to <var>value</var>. The return status is zero unless an invalid option is supplied, one of the <var>name</var> arguments is not a valid shell variable or function name, or the <samp>-f</samp> option is supplied with a name that is not a shell function.</p>", 
                        "readonly [-aAf] [-p] [<var>name</var>[=<var>value</var>]] &hellip;", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "glMD~T:3Bb", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin return", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "return", 
                        "<p>Cause a shell function to stop executing and return the value <var>n</var> to its caller. If <var>n</var> is not supplied, the return value is the exit status of the last command executed in the function. If <code>return</code> is executed by a trap handler, the last command used to determine the status is the last command executed before the trap handler. if <code>return</code> is executed during a <code>DEBUG</code> trap, the last command used to determine the status is the last command executed by the trap handler before <code>return</code> was invoked.<code>return</code> may also be used to terminate execution of a script being executed with the <code>.</code> (<code>source</code>) builtin, returning either <var>n</var> or the exit status of the last command executed within the script as the exit status of the script. If <var>n</var> is supplied, the return value is its least significant 8 bits. Any command associated with the <code>RETURN</code> trap is executed before execution resumes after the function or script. The return status is non-zero if <code>return</code> is supplied a non-numeric argument or is used outside a function and not during the execution of a script by <code>.</code> or <code>source</code>.</p>", 
                        "return [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MvEu8&8BJZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin shift", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "shift", 
                        "<p>Shift the positional parameters to the left by <var>n</var>. The positional parameters from <var>n</var>+1 &hellip; <code>$#</code> are renamed to <code>$1</code> &hellip; <code>$#</code>-<var>n</var>. Parameters represented by the numbers <code>$#</code> to <code>$#</code>-<var>n</var>+1 are unset.<var>n</var> must be a non-negative number less than or equal to <code>$#</code>. If <var>n</var> is zero or greater than <code>$#</code>, the positional parameters are not changed. If <var>n</var> is not supplied, it is assumed to be 1. The return status is zero unless <var>n</var> is greater than <code>$#</code> or less than zero, non-zero otherwise.</p>", 
                        "shift [<var>n</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MIwjM$UHoh", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin times", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "times", 
                        "<p>Print out the user and system times used by the shell and its children. The return status is zero.</p>", 
                        "times", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Kf&,Y{X}-z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin trap", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "trap", 
                        "<p>The commands in <var>arg</var> are to be read and executed when the shell receives signal <var>sigspec</var>.  If <var>arg</var> is absent (and there is a single <var>sigspec</var>) or equal to &lsquo;<samp>-</samp>&rsquo;, each specified signal&rsquo;s disposition is reset to the value it had when the shell was started. If <var>arg</var> is the null string, then the signal specified by each <var>sigspec</var> is ignored by the shell and commands it invokes. If <var>arg</var> is not present and <samp>-p</samp> has been supplied, the shell displays the trap commands associated with each <var>sigspec</var>. If no arguments are supplied, or only <samp>-p</samp> is given, <code>trap</code> prints the list of commands associated with each signal number in a form that may be reused as shell input. The <samp>-l</samp> option causes the shell to print a list of signal names and their corresponding numbers. Each <var>sigspec</var> is either a signal name or a signal number. Signal names are case insensitive and the <code>SIG</code> prefix is optional.</p><p>If a <var>sigspec</var> is <code>0</code> or <code>EXIT</code>, <var>arg</var> is executed when the shell exits. If a <var>sigspec</var> is <code>DEBUG</code>, the command <var>arg</var> is executed before every simple command, <code>for</code> command, <code>case</code> command, <code>select</code> command, every arithmetic <code>for</code> command, and before the first command executes in a shell function. Refer to the description of the <code>extdebug</code> option to the <code>shopt</code> builtin (see <a href=The-Shopt-Builtin.html#The-Shopt-Builtin\">The Shopt Builtin</a>) for details of its effect on the <code>DEBUG</code> trap. If a <var>sigspec</var> is <code>RETURN</code>, the command <var>arg</var> is executed each time a shell function or a script executed with the <code>.</code> or <code>source</code> builtins finishes executing.</p><p>If a <var>sigspec</var> is <code>ERR</code>, the command <var>arg</var>  is executed whenever a pipeline (which may consist of a single simple command), a list, or a compound command returns a non-zero exit status, subject to the following conditions. The <code>ERR</code> trap is not executed if the failed command is part of the command list immediately following an <code>until</code> or <code>while</code> keyword, part of the test following the <code>if</code> or <code>elif</code> reserved words, part of a command executed in a <code>&amp;&amp;</code> or <code>||</code> list except the command following the final <code>&amp;&amp;</code> or <code>||</code>, any command in a pipeline but the last, or if the command&rsquo;s return status is being inverted using <code>!</code>. These are the same conditions obeyed by the <code>errexit</code> (<samp>-e</samp>) option.</p><p>Signals ignored upon entry to the shell cannot be trapped or reset. Trapped signals that are not being ignored are reset to their original values in a subshell or subshell environment when one is created.</p><p>The return status is zero unless a <var>sigspec</var> does not specify a valid signal.</p>\"", 
                        "trap [-lp] [<var>arg</var>] [<var>sigspec</var> &hellip;]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e:#u4H}7G[", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;Bourne Shell builtin umask", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "umask", 
                        "<p>Set the shell process&rsquo;s file creation mask to <var>mode</var>.  If <var>mode</var> begins with a digit, it is interpreted as an octal number; if not, it is interpreted as a symbolic mode mask similar to that accepted by the <code>chmod</code> command.  If <var>mode</var> is omitted, the current value of the mask is printed.  If the <samp>-S</samp> option is supplied without a <var>mode</var> argument, the mask is printed in a symbolic format. If the  <samp>-p</samp> option is supplied, and <var>mode</var> is omitted, the output is in a form that may be reused as input. The return status is zero if the mode is successfully changed or if no <var>mode</var> argument is supplied, and non-zero otherwise.</p><p>Note that when the mode is interpreted as an octal number, each number of the umask is subtracted from <code>7</code>.  Thus, a umask of <code>022</code> results in permissions of <code>755</code>.</p>", 
                        "umask [-p] [-S] [<var>mode</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Npb%hy?dw)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash Bourne Shell builtin unset", 
                        "bash", 
                        "Bourne Shell builtin", 
                        "", 
                        "", 
                        "unset", 
                        "<p>Remove each variable or function <var>name</var>. If the <samp>-v</samp> option is given, each <var>name</var> refers to a shell variable and that variable is removed. If the <samp>-f</samp> option is given, the <var>name</var>s refer to shell functions, and the function definition is removed. If the <samp>-n</samp> option is supplied, and <var>name</var> is a variable with the <var>nameref</var> attribute, <var>name</var> will be unset rather than the variable it references.<samp>-n</samp> has no effect if the <samp>-f</samp> option is supplied. If no options are supplied, each <var>name</var> refers to a variable; if there is no variable by that name, any function with that name is unset. Readonly variables and functions may not be unset. The return status is zero unless a <var>name</var> is readonly.</p>", 
                        "unset [-fnv] [<var>name</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p5ja+V{&&V", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set", 
                        "set", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>If no options or arguments are supplied, <code>set</code> displays the names and values of all shell variables and functions, sorted according to the current locale, in a format that may be reused as input for setting or resetting the currently-set variables. Read-only variables cannot be reset. In <small>POSIX</small> mode, only shell variables are listed. </p> <p>When options are supplied, they set or unset shell attributes.</p> <p>Using <samp><code>+</code></samp>&nbsp;rather than <samp><code>-</code></samp>&nbsp;causes these options to be turned off.  The options can also be used upon invocation of the shell.  The current set of options may be found in <code>$-</code>. </p> <p>The remaining N <var>arguments</var> are positional parameters and are assigned, in order, to <code>$1</code>, <code>$2</code>, …  <code>$N</code>. The special parameter <code>#</code> is set to N. </p> <p>The return status is always zero unless an invalid option is supplied. </p>", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">set</span> <span style=\"color: #d0d0d0\">[</span>--abefhkmnptuvxBCEHPT<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>-o option-name<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>argument …<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #24909d\">set</span> <span style=\"color: #d0d0d0\">[</span>+abefhkmnptuvxBCEHPT<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>+o option-name<span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">[</span>argument …<span style=\"color: #d0d0d0\">]</span> </pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNjk3MDgsICJpZCI6ICIxNDk1MjY5NDEyMjc1LTAwNyIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHNldCBbLS1hYmVmaGttbnB0dXZ4QkNFSFBUXSBbLW8gb3B0aW9uLW5hbWVdIFthcmd1bWVudCBcdTIwMjZdXG4gICAgc2V0IFsrYWJlZmhrbW5wdHV2eEJDRUhQVF0gWytvIG9wdGlvbi1uYW1lXSBbYXJndW1lbnQgXHUyMDI2XVxuIn0=---->", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "qliJfd2r<;", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -b", 
                        "set", 
                        "", 
                        "-b", 
                        "-o notify", 
                        "", 
                        "<p>Cause the status of terminated background jobs to be reported immediately, rather than before printing the next primary prompt.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JQpRJ8phvH", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -e", 
                        "set", 
                        "", 
                        "-e", 
                        "-o errexit", 
                        "", 
                        "<p>Exit immediately if a pipeline (see <a href=Pipelines.html#Pipelines\">Pipelines</a>), which may consist of a single simple command (see <a href=\"Simple-Commands.html#Simple-Commands\">Simple Commands</a>), a list (see <a href=\"Lists.html#Lists\">Lists</a>), or a compound command (see <a href=\"Compound-Commands.html#Compound-Commands\">Compound Commands</a>) returns a non-zero status. The shell does not exit if the command that fails is part of the command list immediately following a <code>while</code> or <code>until</code> keyword, part of the test in an <code>if</code> statement, part of any command executed in a <code>&amp;&amp;</code> or <code>||</code> list except the command following the final <code>&amp;&amp;</code> or <code>||</code>, any command in a pipeline but the last, or if the command&rsquo;s return status is being inverted with <code>!</code>. If a compound command other than a subshell returns a non-zero status because a command failed while <samp>-e</samp> was being ignored, the shell does not exit. A trap on <code>ERR</code>, if set, is executed before the shell exits.</p><p>This option applies to the shell environment and each subshell environment separately (see <a href=\"Command-Execution-Environment.html#Command-Execution-Environment\">Command Execution Environment</a>), and may cause subshells to exit before executing all the commands in the subshell.</p><p>If a compound command or shell function executes in a context where <samp>-e</samp> is being ignored, none of the commands executed within the compound command or function body will be affected by the <samp>-e</samp> setting, even if <samp>-e</samp> is set and a command returns a failure status. If a compound command or shell function sets <samp>-e</samp> while executing in a context where <samp>-e</samp> is ignored, that setting will not have any effect until the compound command or the command containing the function call completes.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BWv6|<0W/P", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -f", 
                        "set", 
                        "", 
                        "-f", 
                        "-o noglob", 
                        "", 
                        "<p>Disable filename expansion (globbing).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bbCR@n6GWJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -h", 
                        "set", 
                        "", 
                        "-h", 
                        "-o hashall", 
                        "", 
                        "<p>Locate and remember (hash) commands as they are looked up for execution. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "F!}%#a3nk4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -k", 
                        "set", 
                        "", 
                        "-k", 
                        "-o keyword", 
                        "", 
                        "<p>All arguments in the form of assignment statements are placed in the environment for a command, not just those that precede the command name.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GCoAkX}zj{", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -m", 
                        "set", 
                        "", 
                        "-m", 
                        "-o monitor", 
                        "", 
                        "<p>Job control is enabled (see <a href=Job-Control.html#Job-Control\">Job Control</a>). All processes run in a separate process group. When a background job completes, the shell prints a line containing its exit status.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O8aA5aA;&B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -n", 
                        "set", 
                        "", 
                        "-n", 
                        "-o noexec", 
                        "", 
                        "<p>Read commands but do not execute them. This may be used to check a script for syntax errors. This option is ignored by interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "kh@E_9q39X", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -p", 
                        "set", 
                        "", 
                        "-p", 
                        "-o privileged", 
                        "", 
                        "<p>Turn on privileged mode. In this mode, the <code>$BASH_ENV</code> and <code>$ENV</code> files are not processed, shell functions are not inherited from the environment, and the <code>SHELLOPTS</code>, <code>BASHOPTS</code>, <code>CDPATH</code> and <code>GLOBIGNORE</code>variables, if they appear in the environment, are ignored. If the shell is started with the effective user (group) id not equal to the real user (group) id, and the <samp>-p</samp> option is not supplied, these actions are taken and the effective user id is set to the real user id. If the <samp>-p</samp> option is supplied at startup, the effective user id is not reset. Turning this option off causes the effective user and group ids to be set to the real user and group ids.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zcP|<&pkjC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -t", 
                        "set", 
                        "", 
                        "-t", 
                        "-o onecmd", 
                        "", 
                        "<p>Exit after reading and executing one command.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dOL$p{#?]4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -u", 
                        "set", 
                        "", 
                        "-u", 
                        "-o nounset", 
                        "", 
                        "<p>Treat unset variables and parameters other than the special parameters &lsquo;<samp>@</samp>&rsquo; or &lsquo;<samp>*</samp>&rsquo; as an error when performing parameter expansion. An error message will be written to the standard error, and a non-interactive shell will exit.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d%B28~6QT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -v", 
                        "set", 
                        "", 
                        "-v", 
                        "-o verbose", 
                        "", 
                        "<p>Print shell input lines as they are read.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "zD2Qkwam$6", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -x", 
                        "set", 
                        "", 
                        "-x", 
                        "-o xtrace", 
                        "", 
                        "<p>Print a trace of simple commands, <code>for</code> commands, <code>case</code>commands, <code>select</code> commands, and arithmetic <code>for</code> commands and their arguments or associated word lists after they are expanded and before they are executed.  The value of the <code>PS4</code>variable is expanded and the resultant value is printed before the command and its expanded arguments.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "mvkkb!y+?B", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -B", 
                        "set", 
                        "", 
                        "-B", 
                        "-o braceexpand", 
                        "", 
                        "<p>The shell will perform brace expansion (see <a href=Brace-Expansion.html#Brace-Expansion\">Brace Expansion</a>). This option is on by default.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O1=+7!*ryq", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -C", 
                        "set", 
                        "", 
                        "-C", 
                        "-o noclobber", 
                        "", 
                        "<p>Prevent output redirection using &lsquo;<samp>&gt;</samp>&rsquo;, &lsquo;<samp>&gt;&amp;</samp>&rsquo;, and &lsquo;<samp>&lt;&gt;</samp>&rsquo; from overwriting existing files.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y2M6xu~ooJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -E", 
                        "set", 
                        "", 
                        "-E", 
                        "-o errtrace", 
                        "", 
                        "<p>If set, any trap on <code>ERR</code> is inherited by shell functions, command substitutions, and commands executed in a subshell environment. The <code>ERR</code> trap is normally not inherited in such cases.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "yF5[A);Mid", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -H", 
                        "set", 
                        "", 
                        "-H", 
                        "-o histexpand", 
                        "", 
                        "<p>Enable &lsquo;<samp>!</samp>&rsquo; style history substitution (see <a href=History-Interaction.html#History-Interaction\">History Interaction</a>). This option is on by default for interactive shells.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "s$Ox&jSi)D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -T", 
                        "set", 
                        "", 
                        "-T", 
                        "-o functrace", 
                        "", 
                        "<p>If set, any trap on <code>DEBUG</code> and <code>RETURN</code> are inherited by shell functions, command substitutions, and commands executed in a subshell environment. The <code>DEBUG</code> and <code>RETURN</code> traps are normally not inherited in such cases.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CmKQ/0&HJE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set --", 
                        "set", 
                        "", 
                        "--", 
                        "", 
                        "", 
                        "<p>If no arguments follow this option, then the positional parameters are unset.  Otherwise, the positional parameters are set to the <var>arguments</var>, even if some of them begin with a &lsquo;<samp>-</samp>&rsquo;.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "f{iUC?2(?p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin set -", 
                        "set", 
                        "", 
                        "-", 
                        "", 
                        "", 
                        "<p>Signal the end of options, cause all remaining <var>arguments</var>to be assigned to the positional parameters.  The <samp>-x</samp>and <samp>-v</samp>  options are turned off. If there are no arguments, the positional parameters remain unchanged.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Re>!zH;YY2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt", 
                        "shopt", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Toggle the values of settings controlling optional shell behavior. The settings can be either those listed below, or, if the <samp>-o</samp> option is used, those available with the <samp>-o</samp> option to the <code>set</code> builtin command (see <a href=\"The-Set-Builtin.html#The-Set-Builtin\">The Set Builtin</a>). With no options, or with the <samp>-p</samp> option, a list of all settable options is displayed, with an indication of whether or not each is set. The <samp>-p</samp> option causes output to be displayed in a form that may be reused as input.</p> <p>If either <samp>-s</samp> or <samp>-u</samp> is used with no <var>optname</var> arguments, <code>shopt</code> shows only those options which are set or unset, respectively. </p> <p>Unless otherwise noted, the <code>shopt</code> options are disabled (off) by default. </p> <p>The return status when listing options is zero if all <var>optnames</var> are enabled, non-zero otherwise.  When setting or unsetting options, the return status is zero unless an <var>optname</var> is not a valid shell option. </p> <p>The return status when listing options is zero if all <var>optnames</var> are enabled, non-zero otherwise. When setting or unsetting options, the return status is zero unless an <var>optname</var> is not a valid shell option.</p>", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "bi}rXJ@s0|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -p", 
                        "shopt", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "The <samp>-p</samp> option causes output to be displayed in a form that may be reused as input.", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K{sS0vbqb3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -u", 
                        "shopt", 
                        "", 
                        "-u", 
                        "", 
                        "", 
                        "Disable (unset) each <var>optname</var>.", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "u|;-P^zq7S", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -q", 
                        "shopt", 
                        "", 
                        "-q", 
                        "", 
                        "", 
                        "<p>Suppresses normal output; the return status indicates whether the <var>optname</var> is set or unset. If multiple <var>optname</var> arguments are given with <samp>-q</samp>, the return status is zero if all <var>optnames</var> are enabled; non-zero otherwise. </p>", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "L&N)CoB?UT", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt -o", 
                        "shopt", 
                        "", 
                        "-o", 
                        "", 
                        "", 
                        "<p>Restricts the values of <var>optname</var> to be those defined for the <samp>-o</samp> option to the <code>set</code> builtin (see <a href=\"The-Set-Builtin.html#The-Set-Builtin\">The Set Builtin</a>). </p>", 
                        "shopt [-pqsu] [-o] [<var>optname</var> …]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "q=@37`bRsZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option autocd", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "autocd", 
                        "<p>If set, a command name that is the name of a directory is executed as if it were the argument to the <code>cd</code> command. This option is only used by interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cFVH+ZAFrz", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option cdable_vars", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "cdable_vars", 
                        "<p>If this is set, an argument to the <code>cd</code> builtin command that is not a directory is assumed to be the name of a variable whose value is the directory to change to.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i|^LqF>*GV", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option cdspell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "cdspell", 
                        "<p>If set, minor errors in the spelling of a directory component in a <code>cd</code> command will be corrected. The errors checked for are transposed characters, a missing character, and a character too many. If a correction is found, the corrected path is printed, and the command proceeds. This option is only used by interactive shells.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "O<<<7b3~3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option checkhash", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "checkhash", 
                        "<p>If this is set, Bash checks that a command found in the hash table exists before trying to execute it.  If a hashed command no longer exists, a normal path search is performed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Lp!J@=qEQJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option checkjobs", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "checkjobs", 
                        "<p>If set, Bash lists the status of any stopped and running jobs before exiting an interactive shell.  If any jobs are running, this causes the exit to be deferred until a second exit is attempted without an intervening command (see <a href=Job-Control.html#Job-Control\">Job Control</a>). The shell always postpones exiting if any jobs are stopped.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "px~u?E@t*!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option checkwinsize", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "checkwinsize", 
                        "<p>If set, Bash checks the window size after each command  and, if necessary, updates the values of     <code>LINES</code> and <code>COLUMNS</code>.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z(MwQuvRWr", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option cmdhist", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "cmdhist", 
                        "<p>If set, Bash attempts to save all lines of a multiple-line command in the same history entry.  This allows easy re-editing of multi-line commands.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j-qp=)GAHJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat31", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat31", 
                        "<p>If set, Bash changes its behavior to that of version 3.1 with respect to quoted arguments to the conditional command&rsquo;s &lsquo;<samp>=~</samp>&rsquo; operator and with respect to locale-specific string comparison when using the <code>[[</code> conditional command&rsquo;s &lsquo;<samp>&lt;</samp>&rsquo; and &lsquo;<samp>&gt;</samp>&rsquo; operators. Bash versions prior to bash-4.1 use ASCII collation and strcmp(3); bash-4.1 and later use the current locale&rsquo;s collation sequence and strcoll(3).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MY{-4lRES}", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat32", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat32", 
                        "<p>If set, Bash changes its behavior to that of version 3.2 with respect to locale-specific string comparison when using the <code>[[</code> conditional command&rsquo;s &lsquo;<samp>&lt;</samp>&rsquo; and &lsquo;<samp>&gt;</samp>&rsquo; operators (see previous item) and the effect of interrupting a command list. Bash versions 3.2 and earlier continue with the next command in the list after one terminates due to an interrupt.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P23Q^FPS$i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat40", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat40", 
                        "<p>If set, Bash changes its behavior to that of version 4.0 with respect to locale-specific string comparison when using the <code>[[</code> conditional command&rsquo;s &lsquo;<samp>&lt;</samp>&rsquo; and &lsquo;<samp>&gt;</samp>&rsquo; operators (see description of <code>compat31</code>) and the effect of interrupting a command list. Bash versions 4.0 and later interrupt the list as if the shell received the interrupt; previous versions continue with the next command in the list.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i?y]mDRV2z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat41", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat41", 
                        "<p>If set, Bash, when in <small>POSIX</small> mode, treats a single quote in a double-quoted parameter expansion as a special character.  The single quotes must match (an even number) and the characters between the single quotes are considered quoted.  This is the behavior of <small>POSIX</small> mode through version 4.1. The default Bash behavior remains as in previous versions.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Df`h>m.9I@", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat42", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat42", 
                        "<p>If set, Bash does not process the replacement string in the pattern substitution word expansion using quote removal.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p3nfFqagGB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option compat43", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "compat43", 
                        "<p>If set, Bash does not print a warning message if an attempt is made to use a quoted compound array assignment as an argument to <code>declare</code>, makes word expansion errors non-fatal errors that cause the current command to fail (the default behavior is to make them fatal errors that cause the shell to exit), and does not reset the loop state when a shell function is executed (this allows <code>break</code> or <code>continue</code> in a shell function to affect loops in the caller&rsquo;s context).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "IGLOWa]mJk", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option complete_fullquote", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "complete_fullquote", 
                        "<p>If set, Bash quotes all shell metacharacters in filenames and directory names when performing completion. If not set, Bash removes metacharacters such as the dollar sign from the set of characters that will be quoted in completed filenames when these metacharacters appear in shell variable references in words to be completed. This means that dollar signs in variable names that expand to directories will not be quoted; however, any dollar signs appearing in filenames will not be quoted, either. This is active only when bash is using backslashes to quote completed filenames. This variable is set by default, which is the default Bash behavior in versions through 4.2.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M|B]iF$e_z", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option direxpand", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "direxpand", 
                        "<p>If set, Bash replaces directory names with the results of word expansion when performing filename completion.  This changes the contents of the readline editing buffer. If not set, Bash attempts to preserve what the user typed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "lL<1r)|EWL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option dirspell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "dirspell", 
                        "<p>If set, Bash attempts spelling correction on directory names during word completion  if the directory name initially supplied does not exist.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G9z~ta7YyE", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option dotglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "dotglob", 
                        "<p>If set, Bash includes filenames beginning with a &lsquo;.&rsquo; in the results of filename expansion.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Mww|Y${P2_", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option execfail", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "execfail", 
                        "<p>If this is set, a non-interactive shell will not exit if it cannot execute the file specified as an argument to the <code>exec</code> builtin command.  An interactive shell does not exit if <code>exec</code> fails.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DaBH?3eFqK", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option expand_aliases", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "expand_aliases", 
                        "<p>If set, aliases are expanded as described below under Aliases, <a href=Aliases.html#Aliases\">Aliases</a>. This option is enabled by default for interactive shells.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pt+E!fEU+2", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option extdebug", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "extdebug", 
                        "<p>If set at shell invocation, arrange to execute the debugger profile before the shell starts, identical to the <samp>--debugger</samp> option. If set after invocation, behavior intended for use by debuggers is enabled: </p><ol><li> The <samp>-F</samp> option to the <code>declare</code> builtin (see <a href=Bash-Builtins.html#Bash-Builtins\">Bash Builtins</a>) displays the source file name and line number corresponding to each function name supplied as an argument.  </li><li> If the command run by the <code>DEBUG</code> trap returns a non-zero value, the next command is skipped and not executed.  </li><li> If the command run by the <code>DEBUG</code> trap returns a value of 2, and the shell is executing in a subroutine (a shell function or a shell script executed by the <code>.</code> or <code>source</code> builtins), the shell simulates a call to <code>return</code>.  </li><li><code>BASH_ARGC</code> and <code>BASH_ARGV</code> are updated as described in their descriptions (see <a href=\"Bash-Variables.html#Bash-Variables\">Bash Variables</a>).  </li><li> Function tracing is enabled: command substitution, shell functions, and subshells invoked with <code>( <var>command</var> )</code> inherit the <code>DEBUG</code> and <code>RETURN</code> traps.  </li><li> Error tracing is enabled: command substitution, shell functions, and subshells invoked with <code>( <var>command</var> )</code> inherit the <code>ERR</code> trap.</li></ol>  \"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "FCN(,NhtE/", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option extglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "extglob", 
                        "<p>If set, the extended pattern matching features described above (see <a href='Pattern-Matching.html#Pattern-Matching\"'>Pattern Matching</a>) are enabled.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dy8+)Q2qN9", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option extquote", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "extquote", 
                        "<p>If set, <code>$'<var>string</var>'</code> and <code>$&quot;<var>string</var>&quot;</code> quoting is   performed within <code>${<var>parameter</var>}</code> expansions                      enclosed in double quotes.  This option is enabled by default.  </p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "j34b&Q6Bbv", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option failglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "failglob", 
                        "<p>If set, patterns which fail to match filenames during filename expansion result in an expansion error.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E[!y;cYhHC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option force_fignore", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "force_fignore", 
                        "<p>If set, the suffixes specified by the <code>FIGNORE</code> shell variable cause words to be ignored when performing word completion even if the ignored words are the only possible completions. See <a href='Bash-Variables.html#Bash-Variables\"'>Bash Variables</a>, for a description of <code>FIGNORE</code>. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P%XM_Hlhm$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option globasciiranges", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "globasciiranges", 
                        "<p>If set, range expressions used in pattern matching bracket expressions (see <a href=Pattern-Matching.html#Pattern-Matching\">Pattern Matching</a>) behave as if in the traditional C locale when performing comparisons.  That is, the current locale&rsquo;s collating sequence is not taken into account, so &lsquo;<samp>b</samp>&rsquo; will not collate between &lsquo;<samp>A</samp>&rsquo; and &lsquo;<samp>B</samp>&rsquo;, and upper-case and lower-case ASCII characters will collate together.    </p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A=F5^p<.nQ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option globstar", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "globstar", 
                        "<p>If set, the pattern &lsquo;<samp>**</samp>&rsquo; used in a filename expansion context will match all files and zero or more directories and subdirectories. If the pattern is followed by a &lsquo;<samp>/</samp>&rsquo;, only directories and subdirectories match.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AESx[rj?bf", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option gnu_errfmt", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "gnu_errfmt", 
                        "<p>If set, shell error messages are written in the standard <small>GNU</small> error message format.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Hy@=wlv^z(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option histappend", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "histappend", 
                        "<p>If set, the history list is appended to the file named by the value of the <code>HISTFILE</code> variable when the shell exits, rather than overwriting the file.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "JlcQc;]pWM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option histreedit", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "histreedit", 
                        "<p>If set, and Readline is being used, a user is given the opportunity to re-edit a failed history substitution.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "gBgtx2e;Z,", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option histverify", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "histverify", 
                        "<p>If set, and Readline is being used, the results of history substitution are not immediately passed to the shell parser.  Instead, the resulting line is loaded into the Readline editing buffer, allowing further modification.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ku$gH`3mD1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option hostcomplete", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "hostcomplete", 
                        "<p>If set, and Readline is being used, Bash will attempt to perform hostname completion when a word containing a &lsquo;<samp>@</samp>&rsquo; is being completed (see <a href=Commands-For-Completion.html#Commands-For-Completion\">Commands For Completion</a>).  This option is enabled by default.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p)5B}=6?_+", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option huponexit", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "huponexit", 
                        "<p>If set, Bash will send <code>SIGHUP</code> to all jobs when an interactive login shell exits (see <a href='Signals.html#Signals\"'>Signals</a>).</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "M88[|l#qI:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option inherit_errexit", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "inherit_errexit", 
                        "<p>If set, command substitution inherits the value of the <code>errexit</code> option, instead of unsetting it in the subshell environment. This option is enabled when <small>POSIX</small> mode is enabled.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ee&$#*nno3", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option interactive_comments", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "interactive_comments", 
                        "<p>Allow a word beginning with &lsquo;<samp>#</samp>&rsquo; to cause that word and all remaining characters on that line to be ignored in an interactive shell. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "D>V:Kc<L_y", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option lastpipe", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "lastpipe", 
                        "<p>If set, and job control is not active, the shell runs the last command of a pipeline not executed in the background in the current shell environment.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ko@53Q+!`L", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option lithist", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "lithist", 
                        "<p>If enabled, and the <code>cmdhist</code> option is enabled, multi-line commands are saved to the history with embedded newlines rather than using semicolon separators where possible.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Q-Lz^;8fol", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option login_shell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "login_shell", 
                        "<p>The shell sets this option if it is started as a login shell (see <a href=Invoking-Bash.html#Invoking-Bash\">Invoking Bash</a>). The value may not be changed.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pqe+:0r38<", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option mailwarn", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "mailwarn", 
                        "<p>If set, and a file that Bash is checking for mail has been accessed since the last time it was checked, the message <code>&quot;The mail in <var>mailfile</var> has been read&quot;</code> is displayed.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "KXuB?98+T5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option no_empty_cmd_completion", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "no_empty_cmd_completion", 
                        "<p>If set, and Readline is being used, Bash will not attempt to search the <code>PATH</code> for possible completions when completion is attempted on an empty line.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qk4gM_suXZ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option nocaseglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "nocaseglob", 
                        "<p>If set, Bash matches filenames in a case-insensitive fashion when performing filename expansion.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OCC&A=^Eu)", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option nocasematch", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "nocasematch", 
                        "<p>If set, Bash matches patterns in a case-insensitive fashion when performing matching while executing <code>case</code> or <code>[[</code> conditional commands, when performing pattern substitution word expansions, or when filtering possible completions as part of programmable completion.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "23@ic9iB", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option nullglob", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "nullglob", 
                        "<p>If set, Bash allows filename patterns which match no files to expand to a null string, rather than themselves.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "weQ-btT>l^", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option progcomp", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "progcomp", 
                        "<p>If set, the programmable completion facilities (see <a href=Programmable-Completion.html#Programmable-Completion\">Programmable Completion</a>) are enabled. This option is enabled by default.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OohQ~/w3-F", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option promptvars", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "promptvars", 
                        "<p>If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded as described below (see <a href=Controlling-the-Prompt.html#Controlling-the-Prompt\">Controlling the Prompt</a>). This option is enabled by default.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Pg0)[laVb!", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option restricted_shell", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "restricted_shell", 
                        "<p>The shell sets this option if it is started in restricted mode (see <a href=The-Restricted-Shell.html#The-Restricted-Shell\">The Restricted Shell</a>). The value may not be changed. This is not reset when the startup files are executed, allowing the startup files to discover whether or not a shell is restricted.</p>\"", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "CwW67eQ0az", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option shift_verbose", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "shift_verbose", 
                        "<p>If this is set, the <code>shift</code> builtin prints an error message when the shift count exceeds the number of positional parameters.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t@g<`0=:|i", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option sourcepath", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "sourcepath", 
                        "<p>If set, the <code>source</code> builtin uses the value of <code>PATH</code> to find the directory containing the file supplied as an argument. This option is enabled by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P{87F(0c7a", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin shopt option xpg_echo", 
                        "shopt", 
                        "option", 
                        "", 
                        "", 
                        "xpg_echo", 
                        "<p>If set, the <code>echo</code> builtin expands backslash-escape sequences by default.</p>", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r}hDE5W@:>", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs", 
                        "dirs", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Display the list of currently remembered directories.  Directories are added to the list with the <code>pushd</code> command; the <code>popd</code> command removes directories from the list. The current directory is always the first directory in the stack. </p>", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "e=R]4(~:!O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd", 
                        "popd", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>When no arguments are given, <code>popd</code> removes the top directory from the stack and performs a <code>cd</code> to the new top directory. The elements are numbered from 0 starting at the first directory listed with <code>dirs</code>; that is, <code>popd</code> is equivalent to <code>popd +0</code>. </p>", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "lmifg{<;qu", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd", 
                        "pushd", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Save the current directory on the top of the directory stack and then <code>cd</code> to <var>dir</var>. With no arguments, <code>pushd</code> exchanges the top two directories and makes the new top the current directory. </p>", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "n7wQX:j`Q1", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;-n", 
                        "pushd", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "Suppresses the normal change of directory when rotating or adding directories to the stack, so that only the stack is manipulated.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "DHcH;Kd^{s", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;+N", 
                        "pushd", 
                        "", 
                        "+<var>N</var>", 
                        "", 
                        "", 
                        "Brings the <var>N</var>th directory (counting from the left of the list printed by <code>dirs</code>, starting with zero) to the top of the list by rotating the stack.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "njUW32Q7$$", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;-N", 
                        "pushd", 
                        "", 
                        "-<var>N</var>", 
                        "", 
                        "", 
                        "Brings the <var>N</var>th directory (counting from the right of the list printed by <code>dirs</code>, starting with zero) to the top of the list by rotating the stack.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "e?_[~,WS34", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin pushd&nbsp;dir", 
                        "pushd", 
                        "", 
                        "<var>dir</var>", 
                        "", 
                        "", 
                        "Makes <var>dir</var> be the top of the stack, making it the new current directory as if it had been supplied as an argument to the <code>cd</code> builtin.", 
                        "pushd [-n] [<var>+N</var> | <var>-N</var> | <var>dir</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "fUR.%hQl:O", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd -n", 
                        "popd", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "Suppresses the normal change of directory when removing directories from the stack, so that only the stack is manipulated.", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "w8t;g4x:<#", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd +N", 
                        "popd", 
                        "", 
                        "+<var>N</var>", 
                        "", 
                        "", 
                        "Removes the <var>N</var>th directory (counting from the left of the list printed by <code>dirs</code>), starting with zero.", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "un;%Sa/x?(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin popd -N", 
                        "popd", 
                        "", 
                        "-<var>N</var>", 
                        "", 
                        "", 
                        "Removes the <var>N</var>th directory (counting from the right of the list printed by <code>dirs</code>), starting with zero.", 
                        "popd [-n] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P(<w>rEWME", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -N", 
                        "dirs", 
                        "", 
                        "-<var>N</var>", 
                        "", 
                        "", 
                        "Displays the <var>N</var>th directory (counting from the right of the list printed by <code>dirs</code> when invoked without options), starting with zero.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "n=1b@w`ESL", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs +N", 
                        "dirs", 
                        "", 
                        "+<var>N</var>", 
                        "", 
                        "", 
                        "Displays the <var>N</var>th directory (counting from the left of the list printed by <code>dirs</code> when invoked without options), starting with zero.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tR;G:|5RHt", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -v", 
                        "dirs", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "Causes <code>dirs</code> to print the directory stack with one entry per line, prefixing each entry with its index in the stack.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "o/YB4R[^f%", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -p", 
                        "dirs", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "Causes <code>dirs</code> to print the directory stack with one entry per line.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OIG*1f}iNM", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -l", 
                        "dirs", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "Produces a listing using full pathnames; the default listing format uses a tilde to denote the home directory.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p`aKp8JjeJ", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash builtin dirs -c", 
                        "dirs", 
                        "", 
                        "-c", 
                        "", 
                        "", 
                        "Clears the directory stack by deleting all of the elements.", 
                        "dirs [-clpv] [+<var>N</var> | -<var>N</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i865(zhO}5", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -l", 
                        "jobs", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "List process IDs in addition to the normal information.", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "NQGJOsU[jw", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -n", 
                        "jobs", 
                        "", 
                        "-n", 
                        "", 
                        "", 
                        "Display information only about jobs that have changed status since the user was last notified of their status.&nbsp;", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "logpsC>l,4", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -p", 
                        "jobs", 
                        "", 
                        "-p", 
                        "", 
                        "", 
                        "List only the process ID of the job’s process group leader.", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "b8_]~X:CT(", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -r", 
                        "jobs", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "Display only running jobs.&nbsp;", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "P}8f{v7,M:", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin jobs -s", 
                        "jobs", 
                        "", 
                        "-s", 
                        "", 
                        "", 
                        "Display only stopped jobs.&nbsp;", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "GWG]sse/NX", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash jobs&nbsp;builtin jobs", 
                        "jobs", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "The first form lists the active jobs.<div><br /></div><div>If <var>jobspec</var> is given, output is restricted to information about that job.  If <var>jobspec</var> is not supplied, the status of all jobs is listed.</div> <p>If the <samp>-x</samp> option is supplied, <code>jobs</code> replaces any <var>jobspec</var> found in <var>command</var> or <var>arguments</var> with the corresponding process group <small>ID</small>, and executes <var>command</var>, passing it <var>argument</var>s, returning its exit status.  </p>", 
                        "jobs [-lnprs] [<var>jobspec</var>] jobs -x <var>command</var> [<var>arguments</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "p[jS?3wpYC", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin bg", 
                        "bg", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Resume each suspended job <var>jobspec</var> in the background, as if it had been started with <samp><code>&amp;</code></samp>. If <var>jobspec</var> is not supplied, the current job is used. The return status is zero unless it is run when job control is not enabled, or, when run with job control enabled, any <var>jobspec</var> was not found or specifies a job that was started without job control. </p>", 
                        "bg [<var>jobspec</var>&nbsp;…]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "sh&+d~vj.m", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin fg", 
                        "fg", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Resume the job <var>jobspec</var> in the foreground and make it the current job. If <var>jobspec</var> is not supplied, the current job is used. The return status is that of the command placed into the foreground, or non-zero if run when job control is disabled or, when run with job control enabled, <var>jobspec</var> does not specify a valid job or <var>jobspec</var> specifies a job that was started without job control. </p>", 
                        "bg [<var>jobspec</var>&nbsp;…]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "hppd&Q,t~D", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin kill", 
                        "kill", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Send a signal specified by <var>sigspec</var> or <var>signum</var> to the process named by job specification <var>jobspec</var> or process <small>ID</small> <var>pid</var>. <var>sigspec</var> is either a case-insensitive signal name such as <code>SIGINT</code> (with or without the <code>SIG</code> prefix) or a signal number; <var>signum</var> is a signal number. If <var>sigspec</var> and <var>signum</var> are not present, <code>SIGTERM</code> is used. The <samp>-l</samp> option lists the signal names. If any arguments are supplied when <samp>-l</samp> is given, the names of the signals corresponding to the arguments are listed, and the return status is zero. <var>exit_status</var> is a number specifying a signal number or the exit status of a process terminated by a signal. The <samp>-L</samp> option is equivalent to <samp>-l</samp>. The return status is zero if at least one signal was successfully sent, or non-zero if an error occurs or an invalid option is encountered. </p><p>When job control is not active, the <code>kill</code> and <code>wait</code> builtins do not accept <var>jobspec</var> arguments.  They must be supplied process <var>ID</var>s.</p>", 
                        "kill [-s <var>sigspec</var>] [-n <var>signum</var>] [-<var>sigspec</var>] <var>jobspec</var> or <var>pid</var> kill -l|-L [<var>exit_status</var>]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "J@?[f|Is6|", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash jobs builtin wait", 
                        "wait", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Wait until the child process specified by each process <small>ID</small> <var>pid</var> or job specification <var>jobspec</var> exits and return the exit status of the last command waited for. If a job spec is given, all processes in the job are waited for. If no arguments are given, all currently active child processes are waited for, and the return status is zero. If the <samp>-n</samp> option is supplied, <code>wait</code> waits for any job to terminate and returns its exit status. If neither <var>jobspec</var> nor <var>pid</var> specifies an active child process of the shell, the return status is 127. </p><p>When job control is not active, the <code>kill</code> and <code>wait</code> builtins do not accept <var>jobspec</var> arguments.  They must be supplied process <var>ID</var>s.</p>", 
                        "wait [-n] [<var>jobspec</var> or <var>pid</var> …]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "HTXDyS/Xil", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash&nbsp;jobs&nbsp;builtin disown", 
                        "disown", 
                        "", 
                        "", 
                        "", 
                        "", 
                        "<p>Without options, remove each <var>jobspec</var> from the table of active jobs. If the <samp>-h</samp> option is given, the job is not removed from the table, but is marked so that <code>SIGHUP</code> is not sent to the job if the shell receives a <code>SIGHUP</code>. If <var>jobspec</var> is not present, and neither the <samp>-a</samp> nor the <samp>-r</samp> option is supplied, the current job is used. If no <var>jobspec</var> is supplied, the <samp>-a</samp> option means to remove or mark all jobs; the <samp>-r</samp> option without a <var>jobspec</var> argument restricts operation to running jobs. </p>", 
                        "disown [-ar] [-h] [<var>jobspec</var> … | <var>pid</var> … ]", 
                        "y"
                    ], 
                    "flags": 0, 
                    "guid": "dm8~aXk$;u", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "bash pipeline", 
                        "<p>The output of each command in the pipeline is connected via a pipe\nto the input of the next command.\nThat is, each command reads the previous command’s output.  This\nconnection is performed before any redirections specified by the\ncommand.\n</p>\n<p>If <samp><code>|&amp;</code></samp>&nbsp;is used, <var>command1</var>’s standard error, in addition to\nits standard output, is connected to\n<var>command2</var>’s standard input through the pipe;\nit is shorthand for <code>2&gt;&amp;1 |</code>.\nThis implicit redirection of the standard error to the standard output is\nperformed after any redirections specified by the command.\n</p>\n<p>The reserved word <code>time</code> causes timing statistics\nto be printed for the pipeline once it finishes.\nThe statistics currently consist of elapsed (wall-clock) time and\nuser and system time consumed by the command’s execution.\nThe <samp>-p</samp> option changes the output format to that specified\nby <small>POSIX</small>.\nWhen the shell is in <small>POSIX</small> mode (see <a href=\"Bash-POSIX-Mode.html#Bash-POSIX-Mode\">Bash POSIX Mode</a>),\nit does not recognize <code>time</code> as a reserved word if the next\ntoken begins with a <samp><code>-</code></samp>.\nThe <code>TIMEFORMAT</code> variable may be set to a format string that\nspecifies how the timing information should be displayed.\nSee <a href=\"Bash-Variables.html#Bash-Variables\">Bash Variables</a>, for a description of the available formats.\nThe use of <code>time</code> as a reserved word permits the timing of\nshell builtins, shell functions, and pipelines.  An external\n<code>time</code> command cannot time these easily.\n</p>\n<p>When the shell is in <small>POSIX</small> mode (see <a href=\"Bash-POSIX-Mode.html#Bash-POSIX-Mode\">Bash POSIX Mode</a>), <code>time</code>\nmay be followed by a newline.  In this case, the shell displays the\ntotal user and system time consumed by the shell and its children.\nThe <code>TIMEFORMAT</code> variable may be used to specify the format of\nthe time information.\n</p>\n<p>If the pipeline is not executed asynchronously (see <a href=\"Lists.html#Lists\">Lists</a>), the\nshell waits for all commands in the pipeline to complete.\n</p>\n<p>Each command in a pipeline is executed in its own subshell\n(see <a href=\"Command-Execution-Environment.html#Command-Execution-Environment\">Command Execution Environment</a>).  The exit\nstatus of a pipeline is the exit status of the last command in the\npipeline, unless the <code>pipefail</code> option is enabled\n(see <a href=\"The-Set-Builtin.html#The-Set-Builtin\">The Set Builtin</a>).\nIf <code>pipefail</code> is enabled, the pipeline’s return status is the\nvalue of the last (rightmost) command to exit with a non-zero status,\nor zero if all commands exit successfully.\nIf the reserved word <samp><code>!</code></samp>&nbsp;precedes the pipeline, the\nexit status is the logical negation of the exit status as described\nabove.\nThe shell waits for all commands in the pipeline to terminate before\nreturning a value.\n</p>", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C5^ZB^W5^h", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "specify crontab editor", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">export </span><span style=\"color: #40ffff\">EDITOR</span><span style=\"color: #d0d0d0\">=</span>vi\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM0OTQsICJpZCI6ICIxNDk1MjczNDU2NTA0LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGV4cG9ydCBFRElUT1I9dmlcbiJ9---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "ez1A9XST0d", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -e", 
                        "crontab", 
                        "", 
                        "-e", 
                        "", 
                        "", 
                        "Edit crontab file, or create one if it doesn’t already exist.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bv/*ZrPq,f", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -l", 
                        "crontab", 
                        "", 
                        "-l", 
                        "", 
                        "", 
                        "crontab list of cronjobs , display crontab file contents.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "duD{p@:K%p", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -r", 
                        "crontab", 
                        "", 
                        "-r", 
                        "", 
                        "", 
                        "Remove your crontab file.", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QesTU+4pao", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab -v", 
                        "crontab", 
                        "", 
                        "-v", 
                        "", 
                        "", 
                        "Display the last time you edited your crontab file. (This option is only available on a few systems.)", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "l75VqS-SFU", 
                    "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab syntax", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">*</span>     <span style=\"color: #d0d0d0\">*</span>     <span style=\"color: #d0d0d0\">*</span>   <span style=\"color: #d0d0d0\">*</span>    <span style=\"color: #d0d0d0\">*</span>        <span style=\"color: #d0d0d0\">command</span> <span style=\"color: #d0d0d0\">to</span> <span style=\"color: #d0d0d0\">be</span> <span style=\"color: #d0d0d0\">executed</span>\n<span style=\"color: #d0d0d0\">-</span>     <span style=\"color: #d0d0d0\">-</span>     <span style=\"color: #d0d0d0\">-</span>   <span style=\"color: #d0d0d0\">-</span>    <span style=\"color: #d0d0d0\">-</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>   <span style=\"color: #d0d0d0\">|</span>    <span style=\"color: #d0d0d0\">|</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>   <span style=\"color: #d0d0d0\">|</span>    <span style=\"color: #d0d0d0\">+-----</span> <span style=\"color: #d0d0d0\">day</span> <span style=\"color: #d0d0d0\">of</span> <span style=\"color: #d0d0d0\">week</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">(Sunday=</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>   <span style=\"color: #d0d0d0\">+-------</span> <span style=\"color: #d0d0d0\">month</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">12</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">+---------</span> <span style=\"color: #d0d0d0\">day</span> <span style=\"color: #d0d0d0\">of</span>        <span style=\"color: #d0d0d0\">month</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">31</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">|</span>     <span style=\"color: #d0d0d0\">+-----------</span> <span style=\"color: #d0d0d0\">hour</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">23</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">+-------------</span> <span style=\"color: #d0d0d0\">min</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">0</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #3677a9\">59</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<ul>\n<li style=\"text-align: left; \">Repeat pattern like <code>/2</code> for every 2 minutes or <code>/10</code> for every 10 minutes is not supported by all operating systems. If you try to use it and crontab complains it is probably not supported.</li>\n<li style=\"text-align: left; \">The specification of days can be made in two fields: month day and weekday. If both are specified in an entry, they are cumulative meaning both of the entries will get executed .</li>\n</ul><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM3MDQsICJpZCI6ICIxNDk1MjczNTcwODkwLTAwMSIsICJtZCI6ICIgICAgKiAgICAgKiAgICAgKiAgICogICAgKiAgICAgICAgY29tbWFuZCB0byBiZSBleGVjdXRlZFxuICAgIC0gICAgIC0gICAgIC0gICAtICAgIC1cbiAgICB8ICAgICB8ICAgICB8ICAgfCAgICB8XG4gICAgfCAgICAgfCAgICAgfCAgIHwgICAgKy0tLS0tIGRheSBvZiB3ZWVrICgwIC0gNikgKFN1bmRheT0wKVxuICAgIHwgICAgIHwgICAgIHwgICArLS0tLS0tLSBtb250aCAoMSAtIDEyKVxuICAgIHwgICAgIHwgICAgICstLS0tLS0tLS0gZGF5IG9mICAgICAgICBtb250aCAoMSAtIDMxKVxuICAgIHwgICAgICstLS0tLS0tLS0tLSBob3VyICgwIC0gMjMpXG4gICAgKy0tLS0tLS0tLS0tLS0gbWluICgwIC0gNTkpXG4gIFxuKiBSZXBlYXQgcGF0dGVybiBsaWtlIGAvMmAgZm9yIGV2ZXJ5IDIgbWludXRlcyBvciBgLzEwYCBmb3IgZXZlcnkgMTAgbWludXRlcyBpcyBub3Qgc3VwcG9ydGVkIGJ5IGFsbCBvcGVyYXRpbmcgc3lzdGVtcy4gSWYgeW91IHRyeSB0byB1c2UgaXQgYW5kIGNyb250YWIgY29tcGxhaW5zIGl0IGlzIHByb2JhYmx5IG5vdCBzdXBwb3J0ZWQuXG4qIFRoZSBzcGVjaWZpY2F0aW9uIG9mIGRheXMgY2FuIGJlIG1hZGUgaW4gdHdvIGZpZWxkczogbW9udGggZGF5IGFuZCB3ZWVrZGF5LiBJZiBib3RoIGFyZSBzcGVjaWZpZWQgaW4gYW4gZW50cnksIHRoZXkgYXJlIGN1bXVsYXRpdmUgbWVhbmluZyBib3RoIG9mIHRoZSBlbnRyaWVzIHdpbGwgZ2V0IGV4ZWN1dGVkIC5cbiJ9---->", 
                        "", 
                        "y", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oCtt9la,bj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "disable crontab email", 
                        "<p>By default cron jobs sends a email to the user account executing the cronjob. If this is not needed put the following command At the end of the cron job line .</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">&gt;/dev/null 2&gt;<span style=\"color: #d0d0d0\">&amp;</span>1\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM3NjgsICJpZCI6ICIxNDk1MjczNjI4NTg2LTAwMSIsICJtZCI6ICJCeSBkZWZhdWx0IGNyb24gam9icyBzZW5kcyBhIGVtYWlsIHRvIHRoZSB1c2VyIGFjY291bnQgZXhlY3V0aW5nIHRoZSBjcm9uam9iLiBJZiB0aGlzIGlzIG5vdCBuZWVkZWQgcHV0IHRoZSBmb2xsb3dpbmcgY29tbWFuZCBBdCB0aGUgZW5kIG9mIHRoZSBjcm9uIGpvYiBsaW5lIC5cbiAgXG4gICAgOjo6YmFzaFxuICAgICZndDsvZGV2L251bGwgMiZndDsmYW1wOzFcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "dM|p4Xnr&U", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab location on Mac OS X", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">/usr/lib/cron/tabs/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM4MjQsICJpZCI6ICIxNDk1MjczNzcxNjE5LTAwMSIsICJtZCI6ICIgICAgL3Vzci9saWIvY3Jvbi90YWJzL1xuIn0=---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "QFPC)`P(YR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab location on&nbsp;Solaris, HP-UX, Debian, Ubuntu", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">/var/spool/cron/crontabs/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM4NDksICJpZCI6ICIxNDk1MjczODI4OTcyLTAwMSIsICJtZCI6ICIgICAgL3Zhci9zcG9vbC9jcm9uL2Nyb250YWJzLyBcbiJ9---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "G$:?#<W{xV", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "crontab location on&nbsp;AIX, Red Hat Linux, CentOS, Ferdora", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">/var/spool/cron/\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNzM4NzYsICJpZCI6ICIxNDk1MjczODU2MjEwLTAwMSIsICJtZCI6ICIgICAgL3Zhci9zcG9vbC9jcm9uLyBcbiJ9---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "wvP2A>Xwz#", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }
            ]
        }, 
        {
            "__type__": "Deck", 
            "children": [
                {
                    "__type__": "Deck", 
                    "children": [], 
                    "crowdanki_uuid": "a69e2b7a-6d5b-11e6-adf3-8c705a50cbf0", 
                    "deck_config_uuid": "a69e3016-6d5b-11e6-adf3-8c705a50cbf0", 
                    "desc": "Please see the <a href='https://ankiweb.net/shared/info/2107904924'>shared deck page</a> for more info.", 
                    "dyn": 0, 
                    "extendNew": 10, 
                    "extendRev": 50, 
                    "media_files": [], 
                    "mid": 1408638528289, 
                    "name": "General Information", 
                    "notes": [
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the main characteristic of a  <b>distributed\n                  version control system\n                  (DVCS)</b>?", 
                                "A distributed version control system has no\n                  central server which\n                  stores the data. Every local copy contains the full history of the\n                  source code.\n                  \n               ", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "b#GLS`mD*f", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does the use of a\n                  <b>DVCS</b> require a\n                  central\n                  code\n                  repository?\n                  \n               ", 
                                "No.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "CPlCr{/4m(", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Where does Git\n                  <b>commit</b> file changes to?<br />", 
                                "To the local repository.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "O9BDWhx,@(", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens when you <b>clone</b> a\n                  repository with                    Git?", 
                                "An exact copy of the\n                  repository is created locally.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Dkiv9+0iTX", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does the local clone of a remote repository include the\n                  complete history of the source code?", 
                                "Yes.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "M,[&ZR-I$S", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What's the meaning of <b>master branch</b>?", 
                                "The \"master\" in Git is the default branch, which generally represents the most stable code.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "bm{uO(^4b/", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>commit</b>?", 
                                "A commit is a pointer to a spot&nbsp;(revision)&nbsp;on the code history.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "LknXA>P{gu", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How are Git commits <b>identified</b>?", 
                                "Instead of numbering commits, Git uses the code contents of the commit to create a unique, 40 character SHA-1 hash.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "M!|;;-isLS", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does a branch created in a repository,&nbsp;which was cloned from another repository, need to have a&nbsp;counterpart in the&nbsp;remote repository?<br /> ", 
                                "No it doesn't.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "cr,S-na/4y", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which two steps are neccessary to persist modifications on a file in the repository?<br />", 
                                "1. Staging (mark the file to be relevant for Git) = adding the file to the index.<br />2. Commiting: storing the changes in the Git repository.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wp*ChGY&nd", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the term <b>staging</b> describe?", 
                                "Marking changes as relevant for the version control, by adding them to the index.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s2b*|BtuO2", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>Revision</b>?<br />", 
                                "A revision represents a version of the source code. Git identifies\n                                               revisions\n                                               with SHA-1 IDs using a commit object. SHA-1 IDs are 160 bits long and are\n                                               represented\n                                               in\n                                               hexadecimal. The latest version can be addressed\n                                               via\n                                               HEAD, the version before that via\n                                               HEAD~1\n                                               and so on.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "DF$yg5cnTs", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "In which file does Git store <b>global settings</b>?<br />", 
                                "In the <b>.gitconfig</b> file.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "cq9}90`8%l", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which file tells Git which files and directories to <b>ignore</b>?<br />", 
                                "<pre>.gitignore</pre>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "p{@pLqf8~)", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between <b>local .gitignore</b> and <b>global .gitignore</b> files, regarding visibility?<br />", 
                                "The local\n               .gitignore\n               file can be committed into the Git repository and\n               therefore is visible\n               to everyone who clones the repository. The\n               global\n               .gitignore\n               file is only\n               locally visible.\n               \n            ", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "bALcFrS[,0", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How are <b>empty directories</b> handled under Git version control / by common practice?", 
                                "Git ignores empty directories, i.e. it does not put them under version control. Common practice for tracking an empty directory though, is to put a file called <b>.gitkeep</b> into such a directory.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "julVRci`rj", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the command <b>git reflog</b>&nbsp;do?<br />", 
                                "It displays the history of the complete changes of the current branch, based on the HEAD revision.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s$go8!a4M`", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Does <b>git reflog</b>&nbsp;also contain deleted commits?", 
                                "Yes.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "o7*md3rMpY", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How is the <b>default branch</b> called in Git?<br />", 
                                "Master.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "KQ=K|X^!V@", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the term <b>merging</b>&nbsp;describe?<br />", 
                                "The process of combining changes of two branches.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "IMAr1$Qa%~", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>merge conflict</b>?<br />", 
                                "A merge conflict occurs, if two people have modified the same content and Git cannot automatically determine how both changes should be applied.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u}r83:+:~S", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the <b>rebase</b>&nbsp;command do?<br>", 
                                "In general terms - rewrites history. E.g: Combining several commits into<br>                  one commit. Or replaying changes from one branch on top of the other.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ioQ[YMk002", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What functionality does the <b>stash</b> command add?<br />", 
                                "Saving the current uncommmitted changes and&nbsp;checkout&nbsp;the last committed revision. This allows pulling-in the latest changes or to develop an urgent fix. Afterwards the stashed changes can be restored, which will reapply the changes to the current version of the source code.<br /> ", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i`-!UI5`9n", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What's the rule of thumb, concerning the <b>stash</b>&nbsp;command?<br />", 
                                "It should be the exception to using Git. Typically you would create new branches for new features and switch between branches.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "My4;,HZvH:", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a <b>patch file</b>?<br />", 
                                "A text file that contains changes to the source code.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "m5arfU*|ZX", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is an <b>alias</b> in Git?", 
                                "An alias in Git allows you to setup your own Git command. E.g. you can define an alias which is a short form of your own favorite commands or you can combine several commands with an alias.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "PE`j{-UNE?", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Name two <b>transport types</b>&nbsp;that are supported protocols for Git checkouts", 
                                "The native Git protocol is <b>git</b>, alternatively the <b>http</b> protocol is also supported.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BKdJz<y,i?", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens in regards to naming of the original repository, when <b>cloning</b> a remote repository?<br />", 
                                "The original repository will automatically be called \"origin\".<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "xDNKnks;P;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the possibility of using the <b>HTTP protocol</b> with Git especially helpful for?", 
                                "If a firewall blocks all requests other than http.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ykx4hD1f`?", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which are the two variants of <b>ssh keys</b>?<br />", 
                                "Public and private.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K5v/_?3y;F", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does <b>rev~</b> stand for?", 
                                "The first parent of a revision \"rev\"", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "NvGA`?8=%", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the starting point of the scope of <b>.gitignore</b> files?", 
                                "They define ignore definitions for the whole directory tree, starting from the point where the .gitignore file itself resides.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "op.FKBEm<w", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What's the difference between <b>git pull</b> and <b>git fetch</b>? (<span style=\" font-style: normal; font-weight: normal;\">In the simplest terms)</span>", 
                                "git pull does a git fetch followed by a git merge.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "j@2Mww$9I{", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between <b>git commit</b> and <b>git push</b>?", 
                                "<b>commit:</b> adding changes to the repository.<div><b>push</b>: to transfer the last commit(s) to a remote server</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "n/=o]SCdPT", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the <b>head</b> in Git?", 
                                "The head is a pointer to the current branch, which is in turn the last commit you made or checked out into your working directory.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Dgx!t", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the <b>index</b> in Git?", 
                                "It's a snapshot of changes contained in your next commit, this way it's the \"<b>proposed next commit</b>\".", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "KRd1.", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does <b>head^</b> mean?", 
                                "It means the first parent of the tip of the current branch.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "gTh:E.xGT7", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between <b>head~</b> and <b>head^</b> ?", 
                                "&nbsp;~&lt;n&gt; means the revision that is the &lt;n&gt;th generation ancestor of the named revision, following only the first parents.<div>^&lt;n&gt; means the &lt;n&gt;th parent of that revision.</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "oSbQ@6YX3O", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a local version control system?", 
                                "A database of changes kept on the same computer as the files being versioned.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "lyLiO", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How is a distributed version control system different from others?", 
                                "Every client has a full backup of all the data.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "vL>PF", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the \"snapshot\" concept?", 
                                "In Git, the data is more like a stream of complete snapshots of a mini filesystem rather than a list of file changes like you'll see in SVN, Perforce, etc.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "[=E+4", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why are most git operations so fast?<br>", 
                                "They happen on the local disk, rather than over a network<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "nWWq:b)^~N", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How does git maintain file integrity?<br>", 
                                "Everything is SHA-1 checksummed and stored not by filename, but rather hash value of each file's contents.<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "j-w#1jS:X.", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are the 3 git states your files can reside in?<br>", 
                                "committed, modified, and staged<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "C4^;Av:G|V", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does it mean when a file is in the \"committed\" state?<br>", 
                                "The data is safely stored in your local database<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "d1B#YWuY@B", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does it mean if a file is in the \"modified\" state?<br>", 
                                "You have changed the file, but not yet committed it.<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B*=9usvjro", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does it mean if a file is in the \"staged\" state?<br>", 
                                "You have marked a file in its current state to go into the next commit snapshot.<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fZB+bI=,I[", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are the 3 sections of a git project?<br />", 
                                "the Git directory (repository), the working directory, and the staging area<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "exQD~)OGAp", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is stored in the Git directory?<br>", 
                                "The metadata and object database for your project<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tE7lTjYc[[", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is copied when you clone a repository from another computer?<br>", 
                                "the Git directory<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "k,m+XqcVpU", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the working directory?<br>", 
                                "A single checkout of one version of the project. These files are pulled out of the compressed database in the git directory and placed on disk for you to use and modify.<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K.$%A~oaD9", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the staging area?", 
                                "It is a file in the git directory that stores information about what goes into the next commit. It is sometimes referred to as the \"index\".", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "L41A}A*]ro", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the 3-step basic git workflow?", 
                                "1. modify files in working directory<div>2. stage files, adding snapshots of them to the staging area</div><div>3. commit, which takes the files in the staging area and stores that snapshot permanently to your git directory</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "F*ctH#)=J&", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Where are the three places that git config variables can be stored?", 
                                "1. systemwide: &nbsp;/etc/gitconfig<div>2. per user: ~/.gitconfig or ~/.config/git/config</div><div>3. per project: .git/config</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u(@cQ<B8CM", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option do you pass to git config to modify system-level configs?", 
                                "--system", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i})V+Dzh9J", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option do you pass to git config to make changes for specific to your user?", 
                                "--global", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BarEPJKq84", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are three ways to get help on a git verb?", 
                                "1. git help &lt;verb&gt;<div>2. git &lt;verb&gt; --help</div><div>3. man git-&lt;verb&gt;</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "O`8m5XL4n_", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you get a copy of an existing git repository, say https://github.com/libgit2/libgit2<span style=\"line-height: 1.1;\">?</span><br>", 
                                "git clone&nbsp;https://github.com/libgit2/libgit2", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "o=}nL8EYm$", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are a couple different transfer protocols used by git?", 
                                "https://<div>git://</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "A}1)?]T`vM", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between a tracked and untracked file?", 
                                "Tracked files are all files that were in the last snapshot. They can be unmodified, modified, or staged. Untracked files are not in the latest snapshot or staged.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q`hDEs1([I", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why is it possible for a tracked file to be both in staging and modified state?", 
                                "Because the staged version is the contents of the file at the exact time you ran \"git add\" to stage the file. You have to run \"git add\" again if you've modified it and want to stage the latest contents of the file.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Ft&|}kHYmQ", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What file is used to ignore some untracked files?", 
                                ".gitignore", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "A(Pz~1U7<!", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the default shortname for cloned repositories?", 
                                "origin", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "t;V;(s*,@A", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How does git fetch affect your local repository?", 
                                "It pulls the data, but does not merge or modify your working copy. To actually merge, it must be manually done.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Pj#|SXYy$f", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is stored in a git commit object?", 
                                "* pointer to the snapshot of the staged content<div>* author's name and email</div><div>* commit message</div><div>* pointer to the commit(s) directly before this one</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s]So><?rVW", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a branch in terms of git commit objects?", 
                                "A lightweight movable pointer to one of the commits", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B0mlW%vB3_", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the name of the special pointer which tells you which local branch you're currently on?", 
                                "HEAD", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wx>?/9M3;E", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens to the HEAD pointer when you create a new branch?", 
                                "Nothing, it continues to point to the existing branch (such as master, if you haven't changed it yet). It does not switch to the new branch automatically.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "rSIJ1yGYe", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens to the working directory when you switch branches?", 
                                "The files are updated to reflect the last commit of the branch. If it cannot be updated cleanly, git will not let you switch.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "uZYKi_w!c;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why is a git branch cheap?", 
                                "A branch is a simple file that contains the 40 character SHA-1 checksum of the commit it points to.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i}td:;X-$8", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a \"fast-forward\" merge?", 
                                "When you try to merge a commit that can be reached by following the first commit's history, git will simply move the pointer forward because there is no divergent work to merge together. This is known as a \"fast-forward\" merge.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "rVbh7YpG/J", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a merge commit?", 
                                "When two divergent branches are merged, git creates a new snapshot and a new commit that points to it. A merge commit has more than one parent.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "I_KQ5^#C&9", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How is git different in dealing with the merge base when merging branches?", 
                                "Git determines the best common ancestor to use for its merge base, which is a lot simpler than many other VCSes.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tgr3Vb|<^/", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the leading * character mean in the output of git branch?", 
                                "It indicates the branch you have currently checked out (that HEAD points to).", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B@=#&gvD8$", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the name used for a branching workflow where sets of commits graduate to a more stable silo when they're fully tested?<br>", 
                                "progressive-stability branching<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z/@Lr]Q(#S", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the name for a short-lived branch for a single particular feature or related work?<br>", 
                                "topic branch<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i!X._o?lw1", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are remote branches?<br>", 
                                "Pointers to the state of branches in remote repositories. They are local branches that you cannot move.<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "G#8JF}nb2h", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "When are remote branch pointers updated?<br>", 
                                "They are automatically moved when you do any network communication.<br>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "J6*@RPtUh1", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "When you fetch a remote branch, will it automatically set up a local branch with the same name?", 
                                "No. You must either merge it or create your own branch from it.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q5})51ApH+", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the shorthand for referencing the tracking remote and branch?", 
                                "@{u} or @{upstream}", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tK3qT-!z5k", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How does rebasing affect the commit history differently than a merge?", 
                                "A rebase will make the commit history look linear/clean rather than a bunch of branch merges. This is often done to make sure your commits apply cleanly to a remote branch.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "zcp*jH9a&8", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What one tip should you follow to avoid a drawback of rebasing?", 
                                "Do not rebase commits that exist outside of your repository.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ATWa!RS=Z&", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a good general rule for deciding when to rebase or to merge?", 
                                "Rebase local changes you haven't shared yet in order to clean up, but never rebase anything you pushed somewhere.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "xN+rNGwU1e", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is a \"bare repository\"?", 
                                "A repository that doesn't contain a working directory", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "uN=LqKN.,h", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }
                    ]
                }, 
                {
                    "__type__": "Deck", 
                    "children": [], 
                    "crowdanki_uuid": "a6a24430-6d5b-11e6-adf3-8c705a50cbf0", 
                    "deck_config_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
                    "desc": "Please see the <a href='https://ankiweb.net/shared/info/'>shared deck page</a> for more info.", 
                    "dyn": 0, 
                    "extendNew": 1, 
                    "extendRev": 50, 
                    "media_files": [], 
                    "mid": "1467568254113", 
                    "name": "Commands", 
                    "notes": [
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>initialize a new, empty repository</b> in the current working directory?", 
                                "<pre>git init</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "vd<-:IY:nA", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What command is used to configure the local user's email (\"email\"), that are used when committing to Git repositories?", 
                                "<pre><span style=\"font-family: Arial\">git config --global user.email \"email\"</span></pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Oy*>$5ZF=,", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does this command do:&nbsp;<b>git add . &nbsp;</b>", 
                                "It adds everything inside the current working directory to the index.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "bFER[=-<|E", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which commands are needed to <b>add</b> <b>all .js files </b>to the local Git repository?", 
                                "<pre>git add *.js</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ybvT<[dy(K", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>commit</b> to the local repository, including a <b>commit message </b>(\"message\")?", 
                                "<pre>git commit -m \"message\"</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "db&Hk]Np30", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command prints&nbsp;&nbsp;the <b>current state</b> of your code/repository?", 
                                "<pre style=\"text-align: justify;\">git status</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "yl]3.#F=wd", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which Git command is used to <b>list the existing branches</b>?", 
                                "<pre>git branch</pre>", 
                                "", 
                                "Ommitting all options to the \"git branch\" command, will list the existing branches."
                            ], 
                            "flags": 0, 
                            "guid": "xx=?AKe[yR", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>creates</b> a new branch (\"branchname\")?", 
                                "<pre>git branch branchname</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "P~gJ-(ZRpb", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will switch to the branch \"myotherbranch\"?", 
                                "<pre style=\"line-height: 25px;\">git checkout myotherbranch</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "A;K+h*%{g+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What commands will join everything from the branch \"bigIdea\" to be part of the \"master\" branch?", 
                                "<pre>git checkout master</pre>\n<pre>git merge bigIdea</pre>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "xj?aKvn]u;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will delete (even) an unmerged branch (\"branchname\")?", 
                                "git branch -D branchname", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "cy@|.4O)Rb", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the existing <b>global Git settings</b>?<br />", 
                                "<pre>git config --list</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "gCNrkn8>}D", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command shows<b> commit logs </b>(list of all commits, starting with newest)?<br />", 
                                "<pre>git log</pre>", 
                                "<div>For each commit the following info would be displayed</div>1. SHA-1 identifier<br />2. Author and Email<br />3. Date + time of the commit<br />4. Commit message header", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "F.SR4G,Gfi", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays all <b>changes to tracked files since the last commit</b>?<br />", 
                                "<pre>git diff</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "gz>^p#~9is", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the changes in a <b>specific commit </b>(\"commitid\")?", 
                                "<pre>git show commitid</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Km<`;Sy=)R", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the <b>change history</b> of a specific file (\"filename\")?", 
                                "<pre>git log filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "c|}&67Vq<k", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays which commit and author modified a file (\"filename\") on a line by line basis?", 
                                "<pre>git blame filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "zhQu]56^%W", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command deletes a file (\"filename\")&nbsp;from the working directory and at the same time marks it for the next commit?<br />", 
                                "<pre>git rm filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "jPCDaOPH-e", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays the existing defined <b>remote repositories</b>?<br />", 
                                "<pre>git remote</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BW0mPtV2np", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>cleans</b>&nbsp;untracked changes in the working directory?", 
                                "<pre>git clean -f</pre>", 
                                "optional:<div>-d to remove untracked directories</div><div>-x remove also \"ignored files\"</div>", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tLncJ/l5g8", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can you <b>revert a deleted or changed file </b>(\"filename\")<b> that has not yet been added to the index</b>?<br />", 
                                "git checkout filename", 
                                "Add -- after checkout to avoid naming conflicts if you have tag or branch with the same name", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fB~P#a9Rr9", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can you checkout older revisions of your source code (revision \"commitid\")?<br />", 
                                "git checkout commitid", 
                                "Via checking out specific commit id", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "mO83Khi,Bp", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command removes an added file (\"filename\") from the index again?<br />", 
                                "<pre>git reset filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "r9_$:6`{&]", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can all changes of a commit (\"commitid\") be reverted and a new commit be recorded, which documents that the other commit was reverted?<br />", 
                                "<pre>git revert commitid</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "IkdEc`A5@C", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command lists the <b>available tags</b>?<br />", 
                                "<pre>git tag</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "C%6YFoMT|@", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command creates a <b>new tag </b>(\"tagname\") <b>with a description&nbsp;</b>(description)?", 
                                "<pre>git tag tagname -m 'description'</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "QXr(!z{!JN", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>check out a specific tag </b>(\"tagname\")?", 
                                "<pre>git checkout tagname</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "px*W<u78A!", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command / parameter <b>lists all branches, including remote</b> branches?", 
                                "<pre>git branch -a</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Lh{-~`~T,3", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>creates a new branch </b>(branchname)<b> and switches to it</b>?", 
                                "git checkout -b branchname", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "M|AX8qt~>O", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command would <b>delete </b>the local \"testing\" branch (if it is merged)?<br />", 
                                "<pre>git branch -d testing</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "E$0ONs0VO;", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command <b>merges differences</b> of the \"testing\" branch into the current active branch?<br />", 
                                "<pre>git merge testing</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BX2UBkW5(_", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which default Git tool exists for <b>resolving conflicts</b>, which command starts it?<br />", 
                                "git mergetool", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wV]w?R>lcp", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command would <b>start interactive rebase </b>of the last seven commits?", 
                                "<pre>git rebase -i HEAD~7</pre>", 
                                "", 
                                "More info on interactive mode here:&nbsp;<a href=\"https://git-scm.com/docs/git-rebase\">https://git-scm.com/docs/git-rebase</a>"
                            ], 
                            "flags": 0, 
                            "guid": "rYX3zdLiLv", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command displays <b>which commit deleted a specific file </b>(\"filename\")?<br />", 
                                "<pre>git log -- filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "qT8-CD>aCh", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the <b>--</b> option in <b>git log</b>&nbsp;used for?<br />", 
                                "To see the commit history for a file, even if the file has been deleted.<br />", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "en>uh_WPEG", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will define an alias \"add-commit\", which<br />                  combines<br /> <b>git add . -A</b><br />                  and<br /> <b>git commit</b>?", 
                                "<pre class=\"programlisting\">git config --global alias.add-commit <span class=\"hl-string\">'!git add . -A &amp;&amp; git commit'</span></pre>", 
                                "! is to specify that it's an external command", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "v4!4YvMOyH", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does the command do: <b>git reset --soft HEAD~</b>", 
                                "Undo the last commit. The affected files will be back on stage again.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Bb9(y,?O!N", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What does <b>git reset --hard HEAD~</b>&nbsp;do? (instead of HEAD~ it could be also a commit SHA-1 or another reference)", 
                                "Undo the last commit, unstage files AND undo any changes in the working directory. (Not tracked files won't be affected)", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "e?#@Ae7yYi", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which parameter allows you to <b>stage an ignored file</b>?", 
                                "<pre>--force</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "t#C`2kFJh%", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which Git command <b>newly stages a specific file </b>(\"filename\")?", 
                                "<pre>git add filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "F9hBmh|l1!", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will <b>undo the checking-in of an unwanted change </b>in a file \"filename\"&nbsp;(remove the respective file from the index), but keep the changes in the filesystem?", 
                                "<pre>git reset filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K&{Me3,SpN", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What is the difference between:<br><pre>git checkout -f</pre> and <pre>git reset --hard HEAD</pre>?", 
                                "None, with these parameters they do exactly the same.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "v*,Ks", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Remove main.txt from staging but keep in working (untrack file, after this and commit file would be remove from repo)", 
                                "git rm --cached main.txt", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q+7&uzQT|w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command / parameter changes the message of the last commit? (for \"newmessage\")<br />", 
                                "<code>git commit --amend -m \"newmessage\"</code><br />", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "PI~KTfs,vb", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Clone an existing repository (address: \"url\")", 
                                "git clone url", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "G82n[7RC-w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create a new local repository", 
                                "git init", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "q@#s*s3u]g", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Add some (allows you interactively to choose which) changes in <i>file</i> to the next commit", 
                                "git add -p <i>file</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "PMP7kE]98_", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Commit all local changes in tracked files", 
                                "git commit -a", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u.R(/o`lN5", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Commit previously staged changes", 
                                "git commit", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "CD?#JCMZQT", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Change the last commit [only before pushing]", 
                                "git commit --amend", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "AuqfF!TJF|", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show changes over time (diffs) for a specific file (\"filename\")", 
                                "git log -p <i>filename</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "LXatc~.8(T", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Switch HEAD to <i>branch</i>", 
                                "git checkout<i>&nbsp;branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "oQvc(-wSfJ", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create a new branch (name \"nbranch\") based on current HEAD", 
                                "git branch n<i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "D@AO#)N}^n", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create a new tracking branch (\"tbranch\") based on a remote branch (\"rbranch\")", 
                                "git branch --track t<i>branch</i> <i>rbranch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "iSDwh!LidQ", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Delete a local branch (\"branch\")", 
                                "git branch -d <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "kFL]Z[c?WW", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Mark the current commit with a tag (\"tagname\")", 
                                "git tag <i>tagname</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s!ZB.hS(-G", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show information about a remote&nbsp;(\"origin\")", 
                                "git remote show <i>origin</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tF=*UV)5N=", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Add remote server 'url' with shortname 'myurl'", 
                                "git remote add myurl url", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "HoFoQWIJch", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Download all changes from <i>remote&nbsp;</i>(\"origin\")&nbsp;but don't integrate into HEAD", 
                                "git fetch <i>origin</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fANXqT[p/F", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Download changes from remote&nbsp;(\"origin\")&nbsp;branch \"branch\" and directly merge into HEAD", 
                                "git pull <i>origin</i> <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u82$&koLO+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Publish local changes (for a branch \"branch\") on a remote (\"origin\")", 
                                "git push <i>origin</i>&nbsp;<i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Ln4&)EH3[6", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Delete a \"branch\" on the remote&nbsp;(\"origin\") (old way)", 
                                "git push <i>origin</i>&nbsp;:<i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "b:dG)*p%)g", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Publish your tags", 
                                "git push --tags", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "lapc;rQKP$", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Merge <i>branch</i> into your current HEAD", 
                                "git merge <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "AKq80IBb}P", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Rebase your current HEAD onto <i>branch</i>", 
                                "git rebase <i>branch</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "J<:a=e?`oZ", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Abort a rebase", 
                                "git rebase --abort", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q8k(Cko^;c", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Continue a rebase after resolving conflicts", 
                                "git rebase --continue", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "P}-RgapC#;", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Use your configured merge tool to solve conflicts", 
                                "git mergetool", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ktUT0Y8n@/", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Use your editor to manually solve conflicts during merge/rebase and after resolving mark file as resolved with:", 
                                "git add <i>resolved-file or</i><div>git rm <i>resolved-file</i></div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "x:&=qX<?g[", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "uncertain"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Discard all local changes in working directory", 
                                "git reset --hard HEAD", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z4bjQlX^a)", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Discard local changes in a specific file (\"filename\")", 
                                "git checkout&nbsp;<i>filename</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "AiXZD7qnCt", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset your HEAD pointer to some previous <i>commit</i> (and discard all changes since then)", 
                                "git reset --hard <i>commit</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "i[4p_Cw|hU", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset your HEAD pointer to some previous commit, and preserve all changes as unstaged changes", 
                                "git reset <i>commit</i>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "f.*![R]E|?", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset your HEAD pointer to some previous commit (\"commit\") and preserve uncommited local changes", 
                                "git reset --keep <i>commit</i>", 
                                "If a file that is different between &lt;commit&gt; and HEAD has local changes, reset is aborted.", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "R|LmdnJ,y", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What tool is used to get and set configuration variables that control how git looks and operates?", 
                                "git config", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "fxZQIT(,(b", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What .gitignore pattern would you use to ignore all .txt files in the doc folder?", 
                                "doc/**/*.txt", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/gitignore\">https://git-scm.com/docs/gitignore</a>"
                            ], 
                            "flags": 0, 
                            "guid": "EADNWO/y%=", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How can you skip the staging area for modified, tracked files when doing a commit?", 
                                "git commit -a", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "v].?TQ-:3w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you delete a <i>file</i> that has been modified and already added to the staging area?", 
                                "git rm -f file", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "t-q}2tG:=X", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you rename or move a file in git (\"src\" to \"target\")?", 
                                "git mv src target", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "hwwyi_%Pd8", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are some of the options to view the commit log history in different formats?", 
                                "--pretty=[oneline | short | full | fuller]<div>--pretty=format:\"...\"</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "mqXLAB~pFz", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you view the history for author jdoe with keyword potato in the commit message made in the last two weeks that added or removed a reference to the function mashThePotato that were not merges?", 
                                "git log --author jdoe --grep potato --all-match -SmashThePotato --since=2.weeks --no-merges", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "eh}B.z/n^;", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Why is git reset considered safe without \"--hard\" option?", 
                                "It only affects your staging area", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "JC%^;+L+{p", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you tag revision 0123abc with the name v1.0?", 
                                "git tag v1.0 0123abc", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wi-I)r_kC{", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What happens if you try to delete a branch with \"git branch -d &lt;name&gt;\" that has not yet been merged?", 
                                "It will fail, and offer -D if you really want to lose your branch.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "u)(3>G(PkD", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "If you want to use a different name than \"origin\" (eg \"norig\") for the remote when cloning a repository (\"repo\"), what parameter would you use?<br />", 
                                "git clone -o norig repo<br />", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ce?E649%xX", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you share a local branch called \"badname\" as \"goodname\" on a remote called \"origin\"?<br>", 
                                "git push origin badname:goodname<br>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K7n]nn1&|k", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you set up a credential cache so that you don't have to keep typing your password for git push?", 
                                "git config --global credential.helper cache", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "p2[Clw3O~<", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "If you have a local branch and you want it to use a remote branch (say origin/hotfix) as upstream, how would you set it?", 
                                "git branch -u origin/hotfix", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "m8|o{YV!nU", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you see what tracking branches you have set up?", 
                                "git branch -vv", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "LRM3~SSVl%", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you delete a remote branch (\"serverfix\") from the server (\"origin\")?", 
                                "git push origin --delete serverfix", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Igy_c!s=?[", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How would you use rebase to apply master changes to branch b1, then apply b1 changes to master? The result being a linear history.", 
                                "<div># method: 1</div>git checkout b1<div>git rebase master</div><div>git checkout master</div><div>git merge b1</div><div><br /></div><div># method: 2</div><div>git rebase b1 master</div><div>git checkout master</div><div>git merge b1</div>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "BU,]d;k1vy", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "If you have changes on commits that no longer exist upstream (due to a remote rebase), how can you pull in those changes and avoid conflicts that would happen with git pull origin/master?", 
                                "<div>git pull --rebase origin/master</div>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "r&Du}9yV]>", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": []
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What are limitations of the command that changes the message of the last commit (<span style=\"font-family: monospace\">git commit --amend</span>)?", 
                                "It only works before the commit has been pushed to remote repo.", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "p}K},k:N*K", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What command is used to configure the local user's name (\"Name\"), that are used when committing to Git repositories?", 
                                "<pre>git config --global user.name \"Name\"</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "tc$Es;:D1%", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show what file would be delited with \"git clean\" (dry run)", 
                                "git clean -n", 
                                "(or --dry-run)", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "e%>lbo,!2:", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "marked", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option should you add to \"git clean\" in order to remove untracked directories", 
                                "-d", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q`Z}4EnZK~", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What option should you add to \"git clean\" in order to remove \"ignored\" files", 
                                "-x", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "dk~4Dx5y5N", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Which command will&nbsp;<b>show the entire history (</b>including renames<b>)&nbsp;</b>for the file (\"filename\")?", 
                                "<pre>git log --follow -p filename</pre>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "k`%2n:=CjO", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<b>Create a stash</b>&nbsp;with uncommitted changes (analogous to save uncommited changes, and do reset hard)", 
                                "git stash", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ez-t2N[Xx1", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<b>Reapply the stashed changes</b>&nbsp;<b>and</b>&nbsp;<b>delete the stash&nbsp;</b>from the list of stashes", 
                                "git stash pop", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "h?w8D]L^FH", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<b>Reapply the stashed changes</b>&nbsp;without deleting<b>&nbsp;stash&nbsp;</b>from the list of stashes", 
                                "git stash apply", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "s]W5g${#u#", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show git stash stack (list of stashes)", 
                                "git stash list", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Pd,w:x7/_-", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell", 
                                "stash"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show branches already merged into current branch", 
                                "git branch --merged", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "r6fVPW{|To", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show branches not yet merged into current branch", 
                                "git branch --no-merged", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "c@|3gg#;C]", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Rebase master onto develop without checking it out", 
                                "git rebase master develop", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "zi:*@|txPH", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show remote servers with URL displayed", 
                                "git remote -v", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "B*+[Z2P7KB", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Rename remote 'server1' to 'server2'", 
                                "git remote rename server1 server2", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ti2E88+S5G", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Remove remote 'server1'", 
                                "git remote rm server1", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "NeFQQhW5^#", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show last two commits with diffs", 
                                "git log -p -2", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "jEwY}^Te}u", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show commit logs with stats", 
                                "git log --stat", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "8.]Jh.QO$", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<div>Show commit logs one per line</div>", 
                                "git log --pretty=oneline", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Nt[d(Wa#l9", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show commit logs with ascii graph", 
                                "git log --graph", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "N3Nv.H3g;i", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show commit log for the last week", 
                                "git log --since=1.week", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K9W#BB4D6c", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<div>Show prev commits for each lines 10-15 of file.rb</div>", 
                                "git blame -L 10,15 file.rb", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "DpA{?G=4xx", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reapply stash 2", 
                                "git stash apply stash@{2}", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "ASur]9.2r1", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reapply stashed changes along with the changes in index (staging the changes, for example)", 
                                "git stash apply --index", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z0v]ev^m&4", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Drop stash 2", 
                                "git stash drop stash@{2}", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "K?U.M_8qGm", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create branch 'mybranch' from stash", 
                                "git stash branch mybranch", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "frj9MIHYN;", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Delete all stashes", 
                                "git stash clear", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "vMkxJ_N}WR", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show what's staged but not yet committed", 
                                "git diff --staged", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "C=%4u;E{qS", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Start binary search of commits to find bad commit", 
                                "git bisect start", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "I;|,m~EPM+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Mark current commit as broken during bisect", 
                                "git bisect bad", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "snS(|j2h+c", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "<div>Mark current commit as good during bisect</div>", 
                                "git bisect good", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "nV[EjN,:@f", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Mark v2.2 as last known good commit during bisect (beginning of binary search)", 
                                "git bisect good v2.2", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "B&(BK&(f`i", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "How do you initiate bisect algorithm in git (several commands)", 
                                "<div><div>Suppose you are trying to find the commit that broke a feature that was known to work in version v2.6.13-rc2 of your project. You start a bisect session as follows:</div><div><br /></div><div>$ git bisect start</div><div>$ git bisect bad # Current version is bad</div><div>$ git bisect good v2.6.13-rc2 # v2.6.13-rc2 is known to be good</div></div><div><br /></div><a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>", 
                                "", 
                                "", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "z+Mb^@:H2B", 
                            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Reset to original&nbsp;HEAD when finished with bisect", 
                                "git bisect reset", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a>"
                            ], 
                            "flags": 0, 
                            "guid": "zT>)P:<]^A", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Run 'test.sh' on each commit during bisect (automates designation of commit as \"good\" or \"bad\")", 
                                "git bisect run test.sh", 
                                "Note that the script should exit with code 0 if the current source code is good/old, and exit with a code between 1 and 127 (inclusive), except 125, if the current source code is bad/new.", 
                                "<div><a href=\"https://git-scm.com/docs/git-bisect\">https://git-scm.com/docs/git-bisect</a></div>"
                            ], 
                            "flags": 0, 
                            "guid": "P375+&ZLLM", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Search the working directory for \"foo()\"", 
                                "git grep \"foo()\"", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "w/@P4=C{XI", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "View all the merge conflicts (if your working tree is in corresponding state)", 
                                "git diff", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "goZxIb4w*t", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "See differences between two commits (\"commitid1\", \"commitid2\")", 
                                "git diff commitid1 commitid2", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "wb7|*(on45", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "See the files (only filenames) changed between two commits (\"commitid1\", \"commitid2\")", 
                                "git diff&nbsp;--name-only&nbsp;commitid1 commitid2&nbsp;", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "D-cA<mm5S>", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Undo non-pushed commits (if you are tracking branch origin/master)", 
                                "git reset origin/master", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "j+p@19O^.m", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Apply a patch (\"patchname.patch\")", 
                                "<div>git apply -v patchname.patch</div>", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "nsS,t6r6k~", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Re-checkout file (\"filename\") or files specified by path to version specified by <i>rev</i> (which may be specified using a SHA1 commit ID, branch name, or tag), overwriting any local changes.", 
                                "git checkout rev filename", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "rZOpQ[aZ<4", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Check out the client branch, figure out the patches from the common ancestor of the client and server branches (the common ancestor branched from master in the past), and then replay the patches from client that are not into common ancestor onto master.", 
                                "git rebase --onto master server client", 
                                "", 
                                "Here are some diargrams:&nbsp;<a href=\"https://git-scm.com/book/ch3-6.html\">https://git-scm.com/book/ch3-6.html</a>"
                            ], 
                            "flags": 0, 
                            "guid": "dOe.P/`?3w", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Create alias \"co\" for git checkout", 
                                "git config --global alias.co checkout", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Q00f>K3|x]", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Add \"unstage\" alias to git (for current user)", 
                                "git config --global alias.unstage 'reset HEAD --'", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "H+[B`$4X}+", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Filter commit by author ('jdoe') in git log", 
                                "git log --author jdoe", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "OK9(#LMJ]r", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Filter commit by presense of \"pattern\" in commit message in git log", 
                                "git log --grep pattern", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "Oe9~pAq==p", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "What parameter of git log should you use to specify that you want to see only commits matching all given patterns (with --grep option)?", 
                                "--all-match", 
                                "", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "L%bpn*{MB[", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Look for differences whose patch text contains added/removed lines that match &lt;regex&gt;.", 
                                "git log -G&lt;regex&gt;", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-log\">https://git-scm.com/docs/git-log</a>"
                            ], 
                            "flags": 0, 
                            "guid": "D]39x!74>j", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "log", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Stash all changes (including untracked and ignored files)", 
                                "git stash --all", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-stash\">https://git-scm.com/docs/git-stash</a>"
                            ], 
                            "flags": 0, 
                            "guid": "bf+S])w`{#", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Stash files in repo including untracked files (but not ignored ones)", 
                                "git stash&nbsp;--include-untracked", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-stash\">https://git-scm.com/docs/git-stash</a>"
                            ], 
                            "flags": 0, 
                            "guid": "H[wLNmJhnn", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Start git stash interactive mode (allows you to &nbsp;interactively select changes, that would be stashed)", 
                                "git stash -p", 
                                "", 
                                "<a href=\"https://git-scm.com/docs/git-stash\">https://git-scm.com/docs/git-stash</a>"
                            ], 
                            "flags": 0, 
                            "guid": "tnbnb&KWxw", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }, 
                        {
                            "__type__": "Note", 
                            "data": "", 
                            "fields": [
                                "Show status of the repository, ignoring untracked files", 
                                "git status -uno", 
                                "or&nbsp;--untracked-files=no. Other options - normal (Shows untracked files and directories),&nbsp;all (default, Also shows individual files in untracked directories).", 
                                ""
                            ], 
                            "flags": 0, 
                            "guid": "sG?>pdX-Dy", 
                            "note_model_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
                            "tags": [
                                "command", 
                                "git", 
                                "shell"
                            ]
                        }
                    ]
                }
            ], 
            "crowdanki_uuid": "a69dcedc-6d5b-11e6-adf3-8c705a50cbf0", 
            "deck_config_uuid": "a69dd698-6d5b-11e6-adf3-8c705a50cbf0", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "name": "git", 
            "notes": []
        }, 
        {
            "__type__": "Deck", 
            "children": [], 
            "crowdanki_uuid": "542bb6d1-35b7-11e7-88e0-2c56dc924912", 
            "deck_config_uuid": "604d2e8f-3a8b-11e7-b94d-2c56dc924912", 
            "desc": "", 
            "dyn": 0, 
            "extendNew": 10, 
            "extendRev": 50, 
            "media_files": [], 
            "mid": "1475043240989", 
            "name": "Python", 
            "notes": [
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python byte code cache location", 
                        "<p><code>.pyc</code> files alongside <code>.py</code> files, or in 3.2 and later, in subdirectory named <code>__pycache__</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDYxMDksICJpZCI6ICIxNDg4Njg1OTc3NTkzLTAwMSIsICJtZCI6ICJgLnB5Y2AgZmlsZXMgYWxvbmdzaWRlIGAucHlgIGZpbGVzLCBvciBpbiAzLjIgYW5kIGxhdGVyLCBpbiBzdWJkaXJlY3RvcnkgbmFtZWQgYF9fcHljYWNoZV9fYFxuIn0=---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "pP$JC^/bt.", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Can Python execute without <code>.py</code> file?", 
                        "Yes, if the <code>.pyc</code> files are present", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uQk.c.n>RE", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python byte code is saved for which files?", 
                        "Anything imported, but not the top level file that is only run as a script.", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "N9zv~cK)!", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python interactive interpreter automatically", 
                        "prints", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "p#6owraIzU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Force Python to run a file again", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">from</span> <span style=\"color: #447fcf; text-decoration: underline\">imp</span> <span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #24909d\">reload</span>\n<span style=\"color: #999999; font-style: italic\"># not required to import in 2.X</span>\n<span style=\"color: #24909d\">reload</span><span style=\"color: #d0d0d0\">(_script_)</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">import</span> <span style=\"color: #447fcf; text-decoration: underline\">imp</span>\n<span style=\"color: #999999; font-style: italic\"># not required to import in 2.X</span>\n<span style=\"color: #d0d0d0\">imp.reload(_script_)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDYzMjMsICJpZCI6ICIxNDg4Njg3Mjc3NjEwLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgZnJvbSBpbXAgaW1wb3J0IHJlbG9hZFxuICAgICMgbm90IHJlcXVpcmVkIHRvIGltcG9ydCBpbiAyLlhcbiAgICByZWxvYWQoX3NjcmlwdF8pXG4gIFxuICAgIGltcG9ydCBpbXBcbiAgICAjIG5vdCByZXF1aXJlZCB0byBpbXBvcnQgaW4gMi5YXG4gICAgaW1wLnJlbG9hZChfc2NyaXB0XylcbiAgXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ls}jZoqY|N", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Reading file with <b>exec</b> in Python", 
                        "<p>2.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">execfile</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'module.py'</span><span style=\"color: #d0d0d0\">)</span>\n\n<span style=\"color: #6ab825; font-weight: bold\">exec</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'module.py'</span><span style=\"color: #d0d0d0\">))</span> <span style=\"color: #999999; font-style: italic\"># automatically reads</span>\n</pre></div>\n<p>3.X and 2.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825; font-weight: bold\">exec</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'module.py'</span><span style=\"color: #d0d0d0\">).read())</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDYzNTAsICJpZCI6ICIxNDg4Njg4NjIwNzQ0LTAwMSIsICJtZCI6ICIyLlg6XG4gIFxuICAgIDo6OnB5dGhvblxuICAgIGV4ZWNmaWxlKCZhcG9zO21vZHVsZS5weSZhcG9zOylcbiAgXG4gICAgZXhlYyhvcGVuKCZhcG9zO21vZHVsZS5weSZhcG9zOykpICMgYXV0b21hdGljYWxseSByZWFkc1xuICBcbjMuWCBhbmQgMi5YOlxuICBcbiAgICA6OjpweXRob25cbiAgICBleGVjKG9wZW4oJmFwb3M7bW9kdWxlLnB5JmFwb3M7KS5yZWFkKCkpXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jHLr8)I|BP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "<code>$ python -i m.py</code>", 
                        "Enter interactive interpreter mode after running script whether it ends successfully or not, allowing accessing variables and doing postmortem", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "MM:+Y%T&<$", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Number</b> examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #3677a9\">1234</span>\n<span style=\"color: #3677a9\">3.1415</span>\n<span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">+</span><span style=\"color: #3677a9\">4j</span>\n<span style=\"color: #3677a9\">0b111</span>\n<span style=\"color: #d0d0d0\">Decimal()</span>\n<span style=\"color: #d0d0d0\">Fraction()</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY0MDcsICJpZCI6ICIxNDg4Njg5NzExNTIyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgMTIzNFxuICAgIDMuMTQxNVxuICAgIDMrNGpcbiAgICAwYjExMVxuICAgIERlY2ltYWwoKVxuICAgIEZyYWN0aW9uKClcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "bwhY0w+nkh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>String</b> examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">'spam'</span>\n<span style=\"color: #ed9d13\">\"Bob's\"</span>\n<span style=\"color: #d0d0d0\">b</span><span style=\"color: #ed9d13\">'a\\x01c'</span>\n<span style=\"color: #ed9d13\">u'sp\\xc4m'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY0NDcsICJpZCI6ICIxNDg4NjkxMzM5NjQyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmFwb3M7c3BhbSZhcG9zO1xuICAgICZxdW90O0JvYiZhcG9zO3MmcXVvdDtcbiAgICBiJmFwb3M7YVxceDAxYyZhcG9zO1xuICAgIHUmYXBvcztzcFxceGM0bSZhcG9zO1xuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "J-ceq.f8TM", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>List</b> examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'three'</span><span style=\"color: #d0d0d0\">],</span> <span style=\"color: #3677a9\">4.5</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">))</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2NjgsICJpZCI6ICIxNDg4NjkxMzkxNDkxLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgWzEsIFsyLCAmYXBvczt0aHJlZSZhcG9zO10sIDQuNV1cbiAgICBsaXN0KHJhbmdlKDEwKSlcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "x}=%t0`:9,", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Dictionary</b> examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'food'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'taste'</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #ed9d13\">'yum'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #24909d\">dict</span><span style=\"color: #d0d0d0\">(hours=</span><span style=\"color: #3677a9\">10</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2NzcsICJpZCI6ICIxNDg4NjkxNDI5MTAzLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgeyZhcG9zO2Zvb2QmYXBvczs6ICZhcG9zO3NwYW0mYXBvczssICZhcG9zO3Rhc3RlJmFwb3M7OiAmYXBvczt5dW0mYXBvczt9XG4gICAgZGljdChob3Vycz0xMClcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m!EMC.HUOh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Tuple</b> examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'U'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #24909d\">tuple</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">namedtuple</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2ODksICJpZCI6ICIxNDg4NjkxNDY2MDAyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgKDEsICZhcG9zO3NwYW0mYXBvczssIDQsICZhcG9zO1UmYXBvczspXG4gICAgdHVwbGUoJmFwb3M7c3BhbSZhcG9zOylcbiAgICBuYW1lZHR1cGxlXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Dl[7B{yE<&", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>File </b>examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'eggs.txt'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #24909d\">open</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">r'C:\\ham.bin'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'wb'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY2OTgsICJpZCI6ICIxNDg4NjkxNDk4NjA4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgb3BlbigmYXBvcztlZ2dzLnR4dCZhcG9zOylcbiAgICBvcGVuKHImYXBvcztDOlxcaGFtLmJpbiZhcG9zOywgJmFwb3M7d2ImYXBvczspXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "or^Q4U(>,;", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Set</b> examples", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">set</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'abc'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'c'</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3MDUsICJpZCI6ICIxNDg4NjkxNTQ5NzM2LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgc2V0KCZhcG9zO2FiYyZhcG9zOylcbiAgICB7JmFwb3M7YSZhcG9zOywgJmFwb3M7YiZhcG9zOywgJmFwb3M7YyZhcG9zO31cbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rS1G?P$R?:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python other core types", 
                        "<code>Boolean</code>s, <code>type</code>s, <code>None</code>", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "K+JxW4f)XR", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python program unit types", 
                        "Functions, modules, classes", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ak_5DHRpnP", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python implementation-related types", 
                        "Compiled code, stack tracebacks", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g9r4~i+nEU", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python has type declarations?", 
                        "no", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ck?B4yY~Aj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python exponentiation operator", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #3677a9\">2</span> <span style=\"color: #d0d0d0\">**</span> <span style=\"color: #3677a9\">100</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NDYsICJpZCI6ICIxNDg4NjkxNzU3MDM0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgMiAqKiAxMDBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cW|si*]Wvh", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python slice of all but last", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">S[:-</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NjUsICJpZCI6ICIxNDg4NjkyMDU2MDI5LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgU1s6LTFdXG4ifQ==---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "d^ateNJA5a", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python repetition", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">*</span> <span style=\"color: #3677a9\">8</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NzIsICJpZCI6ICIxNDg4NjkyMzk0MTQzLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgUyAqIDhcbiJ9---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "OBv@tllTLS", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python string concatentation", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">+</span> <span style=\"color: #ed9d13\">'ing'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY3NzcsICJpZCI6ICIxNDg4NjkyNTM5NzYyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgUyArICZhcG9zO2luZyZhcG9zO1xuIn0=---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "BU&93~0EDK", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python strings are mutable?", 
                        "no", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "qDC2mrXBh]", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python core mutable types", 
                        "lists, dictionaries, sets", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "krR_0G3e*p", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python core immutable types", 
                        "numbers, strings, tuples", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "i*-{Yo*E|_", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python type that allows in place text changes", 
                        "<p>2.6+, 3.0+, only supports 8 bit wide characters:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">bytearray</span><span style=\"color: #d0d0d0\">(b</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B.extend(b</span><span style=\"color: #ed9d13\">'eggs'</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #999999; font-style: italic\"># 'b' needed in 3.X, not 2.X</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B</span> <span style=\"color: #999999; font-style: italic\"># B[i] = ord(x) works here too</span>\n<span style=\"color: #24909d\">bytearray</span><span style=\"color: #d0d0d0\">(b</span><span style=\"color: #ed9d13\">'spameggs'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">B.decode()</span> <span style=\"color: #999999; font-style: italic\"># translate to normal string</span>\n<span style=\"color: #ed9d13\">'spameggs'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4NDgsICJpZCI6ICIxNDg4NjkyNzQ3OTg5LTAwMSIsICJtZCI6ICIyLjYrLCAzLjArLCBvbmx5IHN1cHBvcnRzIDggYml0IHdpZGUgY2hhcmFjdGVyczpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEIgPSBieXRlYXJyYXkoYiZhcG9zO3NwYW0mYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IEIuZXh0ZW5kKGImYXBvcztlZ2dzJmFwb3M7KSAjICZhcG9zO2ImYXBvczsgbmVlZGVkIGluIDMuWCwgbm90IDIuWFxuICAgICZndDsmZ3Q7Jmd0OyBCICMgQltpXSA9IG9yZCh4KSB3b3JrcyBoZXJlIHRvb1xuICAgIGJ5dGVhcnJheShiJmFwb3M7c3BhbWVnZ3MmYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IEIuZGVjb2RlKCkgIyB0cmFuc2xhdGUgdG8gbm9ybWFsIHN0cmluZ1xuICAgICZhcG9zO3NwYW1lZ2dzJmFwb3M7XG4ifQ==---->", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "A>YZJl#;fm", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python basic substring search operation", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">S</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'Spam'</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">S.**find**(</span><span style=\"color: #ed9d13\">'pa'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #3677a9\">1</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4NjQsICJpZCI6ICIxNDg4NjkzMDA0ODg0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IFMgPSAmYXBvcztTcGFtJmFwb3M7XG4gICAgJmd0OyZndDsmZ3Q7IFMuKipmaW5kKiooJmFwb3M7cGEmYXBvczspXG4gICAgMVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "RbEo@jDd_/", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python string formatting expression", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">'%s, eggs, and %s'</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'SPAM!'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #999999; font-style: italic\"># works in 2.X and 3.X</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4NzQsICJpZCI6ICIxNDg4NjkzMDk2MTk0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmFwb3M7JXMsIGVnZ3MsIGFuZCAlcyZhcG9zOyAlICgmYXBvcztzcGFtJmFwb3M7LCAmYXBvcztTUEFNISZhcG9zOylcbiAgICAjIHdvcmtzIGluIDIuWCBhbmQgMy5YXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "g/?d7i(tiz", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python string formatting method", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999;font-style: italic\"># works in 2.6+ and 3.0+</span>\n<span style=\"color: #ed9d13\">'{0}, eggs, and {1}'</span><span style=\"color: #d0d0d0\">.format(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'SPAM!'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div>\n<p>Numbers optional:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #999999; font-style: italic\"># works in 2.7+ and 3.1+</span>\n<span style=\"color: #ed9d13\">'{}, eggs, and {}'</span><span style=\"color: #d0d0d0\">.format(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'SPAM!'</span><span style=\"color: #d0d0d0\">)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY4ODksICJpZCI6ICIxNDg4NjkzMjM1MzY4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgIyB3b3JrcyBpbiAyLjYrIGFuZCAzLjArXG4gICAgJmFwb3M7ezB9LCBlZ2dzLCBhbmQgezF9JmFwb3M7LmZvcm1hdCgmYXBvcztzcGFtJmFwb3M7LCAmYXBvcztTUEFNISZhcG9zOylcbiAgXG5OdW1iZXJzIG9wdGlvbmFsOlxuICBcbiAgICA6OjpweXRob25cbiAgICAjIHdvcmtzIGluIDIuNysgYW5kIDMuMStcbiAgICAmYXBvczt7fSwgZWdncywgYW5kIHt9JmFwb3M7LmZvcm1hdCgmYXBvcztzcGFtJmFwb3M7LCAmYXBvcztTUEFNISZhcG9zOylcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "PH1Vy=}10q", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python: list all attributes available for any object", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">dir</span><span style=\"color: #d0d0d0\">(S)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5MjUsICJpZCI6ICIxNDg4NjkzMzUxODM0LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgZGlyKFMpXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Ncu(.H4)/?", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python raw string literal", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #ed9d13\">r'C:\\text\\new'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5MzAsICJpZCI6ICIxNDg4Njk0OTQ4NjAyLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgciZhcG9zO0M6XFx0ZXh0XFxuZXcmYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "v*_i*VaI-M", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python multiline string", 
                        "<p>Use three quotes or doublequotes</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">msg</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">\"\"\"</span>\n<span style=\"color: #ed9d13\">aaaaaa</span>\n<span style=\"color: #ed9d13\">bbb''''bbbbb\"\"bbbbb'bbbbb</span>\n<span style=\"color: #ed9d13\">ccccc</span>\n<span style=\"color: #ed9d13\">\"\"\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NDUsICJpZCI6ICIxNDg4Njk1NjUxMTY0LTAwMSIsICJtZCI6ICJVc2UgdGhyZWUgcXVvdGVzIG9yIGRvdWJsZXF1b3Rlc1xuICBcbiAgICA6OjpweXRob25cbiAgICBtc2cgPSAmcXVvdDsmcXVvdDsmcXVvdDtcbiAgICBhYWFhYWFcbiAgICBiYmImYXBvczsmYXBvczsmYXBvczsmYXBvcztiYmJiYiZxdW90OyZxdW90O2JiYmJiJmFwb3M7YmJiYmJcbiAgICBjY2NjY1xuICAgICZxdW90OyZxdW90OyZxdW90O1xuICBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "jI9i%N8DIj", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python strings and Unicode", 
                        "<p>3.X, normal <code>str</code> strings support Unicode:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'sp\\xc4m'</span> <span style=\"color: #999999; font-style: italic\"># but in 2.X this works like 3.X byte strings</span>\n<span style=\"color: #ed9d13\">'spām'</span>\n</pre></div>\n<p>3.X byte strings are raw bytes, also works in 2.6+:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">b</span><span style=\"color: #ed9d13\">'a\\x01c'</span>\n<span style=\"color: #d0d0d0\">b</span><span style=\"color: #ed9d13\">'a\\x01c'</span>\n</pre></div>\n<p>2.X Unicode literal also works in 3.3+:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">u'sp\\u00c4m'</span>\n<span style=\"color: #ed9d13\">'spām'</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NjQsICJpZCI6ICIxNDg4Njk1Njk0NzI2LTAwMSIsICJtZCI6ICIzLlgsIG5vcm1hbCBgc3RyYCBzdHJpbmdzIHN1cHBvcnQgVW5pY29kZTpcbiAgXG4gICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICZhcG9zO3NwXFx4YzRtJmFwb3M7ICMgYnV0IGluIDIuWCB0aGlzIHdvcmtzIGxpa2UgMy5YIGJ5dGUgc3RyaW5nc1xuICAgICZhcG9zO3NwXHUwMTAxbSZhcG9zO1xuICBcbjMuWCBieXRlIHN0cmluZ3MgYXJlIHJhdyBieXRlcywgYWxzbyB3b3JrcyBpbiAyLjYrOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgYiZhcG9zO2FcXHgwMWMmYXBvcztcbiAgICBiJmFwb3M7YVxceDAxYyZhcG9zO1xuICBcbjIuWCBVbmljb2RlIGxpdGVyYWwgYWxzbyB3b3JrcyBpbiAzLjMrOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgdSZhcG9zO3NwXFx1MDBjNG0mYXBvcztcbiAgICAmYXBvcztzcFx1MDEwMW0mYXBvcztcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "Er=rpeUuFM", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python short Unicode escape", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">\\<span style=\"color: #d0d0d0\">u</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NzAsICJpZCI6ICIxNDg4Njk2NDYxODc3LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgXFx1XG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "tz?%D5xwnB", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python long Unicode escape", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">\\<span style=\"color: #d0d0d0\">U</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDY5NzQsICJpZCI6ICIxNDg4Njk2NDg4NzExLTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgXFxVXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "oc67},ng?T", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python 2.X/3.X files differences regarding Unicode", 
                        "In 3.X, text files implement named encodings and accept and return <code>str</code> strings, but binary files instead deal in bytes strings for raw binary data.<div><br /></div><div>In 2.X, normal files' content is <code>str</code> bytes, and a special codecs module handles Unicode and represents content with the unicode type</div>", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "m<Yq=}sL5L", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>List</b> description", 
                        "The Python list object is the most general <i>sequence</i> provided by the language. Lists are <b>positionally ordered</b> collections of arbitrarily typed objects, and they have no fixed size and are <b>mutable</b>.", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "AH(1E[abK{", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python list comprehension expression example", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">M</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">],[</span><span style=\"color: #3677a9\">4</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">],[</span><span style=\"color: #3677a9\">7</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">8</span><span style=\"color: #d0d0d0\">,</span><span style=\"color: #3677a9\">9</span><span style=\"color: #d0d0d0\">]]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[row[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">row</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">M]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">5</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">8</span><span style=\"color: #d0d0d0\">]</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">[row[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">row</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">M</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">row[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #d0d0d0\">%</span> <span style=\"color: #3677a9\">2</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">]</span> <span style=\"color: #999999; font-style: italic\">#filter out odd items</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">col2</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">8</span><span style=\"color: #d0d0d0\">]</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDcwNDUsICJpZCI6ICIxNDg4Njk4NDgyMTI4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IE0gPSBbWzEsMiwzXSxbNCw1LDZdLFs3LDgsOV1dXG4gICAgJmd0OyZndDsmZ3Q7IGNvbDIgPSBbcm93WzFdIGZvciByb3cgaW4gTV1cbiAgICAmZ3Q7Jmd0OyZndDsgY29sMlxuICAgIFsyLCA1LCA4XVxuICBcbiAgICAmZ3Q7Jmd0OyZndDsgY29sMiA9IFtyb3dbMV0gZm9yIHJvdyBpbiBNIGlmIHJvd1sxXSAlIDIgPT0gMF0gI2ZpbHRlciBvdXQgb2RkIGl0ZW1zXG4gICAgJmd0OyZndDsmZ3Q7IGNvbDJcbiAgICBbMiwgOF1cbiAgXG4ifQ==---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B<v-6Rj$`*", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python expressions to collect values need wrapping in collection in 3.X", 
                        "```<div>&gt;&gt;&gt; list(range(4)) # list() required in 3.X<div>&nbsp; &nbsp; [0, 1, 2, 3]</div></div><div>```</div>", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C<z|cUR{ZY", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": [
                        "marked"
                    ]
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python generator from comprehension", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">G</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">sum</span><span style=\"color: #d0d0d0\">(row)</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">row</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">M)</span> <span style=\"color: #999999; font-style: italic\"># wrap in parentheses</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">next</span><span style=\"color: #d0d0d0\">(G)</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDcwMTMsICJpZCI6ICIxNDg4Njk5OTU5MDI4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IEcgPSAoc3VtKHJvdykgZm9yIHJvdyBpbiBNKSAjIHdyYXAgaW4gcGFyZW50aGVzZXNcbiAgICAmZ3Q7Jmd0OyZndDsgbmV4dChHKVxuIn0=---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B9HY5ZV,p(", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python comprehension syntax can make sets and dictionaries in which versions?", 
                        "<p><strong>2.7</strong> and <strong>3.X</strong>:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #24909d\">sum</span><span style=\"color: #d0d0d0\">(M[i])</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">i</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #24909d\">range</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #3677a9\">3</span><span style=\"color: #d0d0d0\">)}</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #3677a9\">0</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">6</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">15</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">2</span><span style=\"color: #d0d0d0\">:</span> <span style=\"color: #3677a9\">24</span><span style=\"color: #d0d0d0\">}</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDcwMjEsICJpZCI6ICIxNDg4NzAwMDUzOTg3LTAwMSIsICJtZCI6ICIqKjIuNyoqIGFuZCAqKjMuWCoqOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsge3N1bShNW2ldKSBmb3IgaSBpbiByYW5nZSgzKX1cbiAgICB7MDogNiwgMTogMTUsIDI6IDI0fVxuIn0=---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "z=4.YnfSMp", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python dictionaries", 
                        "Dictionaries are the only mapping type in Python's core objects set, and are also mutable: like lists, they may be changed in place and can grow and shrink on demand.<div><br></div><div>&gt;&gt;&gt; D = {'food': 'Spam', 'quantity': 4, 'color': 'pink'}</div>", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "y}:cQ?sNTG", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python dictionary key existence test", 
                        "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #ed9d13\">'f'</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">D</span>\n<span style=\"color: #24909d\">False</span>\n\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #6ab825; font-weight: bold\">not</span> <span style=\"color: #ed9d13\">'f'</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">D:</span>\n       <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'missing'</span><span style=\"color: #d0d0d0\">)</span>\n\n<span style=\"color: #d0d0d0\">missing</span>\n</pre></div>\n<p>Can also avoid accessing nonexistent by using <code>get()</code> method, conditional index with a default, or in 2.X <code>has_key()</code> method, or <code>try</code> statement, or <code>if</code>/<code>else</code> ternary</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDcyNzgsICJpZCI6ICIxNDg4NzAwNTgyMTk2LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7ICZhcG9zO2YmYXBvczsgaW4gRFxuICAgIEZhbHNlXG4gIFxuICAgICZndDsmZ3Q7Jmd0OyBpZiBub3QgJmFwb3M7ZiZhcG9zOyBpbiBEOlxuICAgICAgICAgICBwcmludCgmYXBvczttaXNzaW5nJmFwb3M7KVxuICBcbiAgICBtaXNzaW5nXG4gIFxuICBcbkNhbiBhbHNvIGF2b2lkIGFjY2Vzc2luZyBub25leGlzdGVudCBieSB1c2luZyBgZ2V0KClgIG1ldGhvZCwgY29uZGl0aW9uYWwgaW5kZXggd2l0aCBhIGRlZmF1bHQsIG9yIGluIDIuWCBgaGFzX2tleSgpYCBtZXRob2QsIG9yIGB0cnlgIHN0YXRlbWVudCwgb3IgYGlmYC9gZWxzZWAgdGVybmFyeVxuIn0=---->", 
                        "", 
                        "y", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "B&DyqD-huo", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python sorted dictionary keys", 
                        "<p>Use dictionary <code>keys()</code> method and sort with list <code>sort()</code> method, then step through result with for loop</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">Ks</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">(D.keys())</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">Ks.sort()</span>\n<span style=\"color: #d0d0d0\">[</span><span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'b'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'c'</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">for</span> <span style=\"color: #d0d0d0\">key</span> <span style=\"color: #6ab825; font-weight: bold\">in</span> <span style=\"color: #d0d0d0\">Ks:</span>\n        <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(key,</span> <span style=\"color: #ed9d13\">'=&gt;'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">D[key])</span> <span style=\"color: #999999; font-style: italic\"># 3.X print, in 2.X remove parentheses</span>\n\n<span style=\"color: #d0d0d0\">a</span> <span style=\"color: #d0d0d0\">=&gt;</span> <span style=\"color: #3677a9\">1</span>\n<span style=\"color: #d0d0d0\">b</span> <span style=\"color: #d0d0d0\">=&gt;</span> <span style=\"color: #3677a9\">2</span>\n<span style=\"color: #d0d0d0\">c</span> <span style=\"color: #d0d0d0\">=&gt;</span> <span style=\"color: #3677a9\">3</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDczMTcsICJpZCI6ICIxNDg4NzAwODk2NzAzLTAwMSIsICJtZCI6ICJVc2UgZGljdGlvbmFyeSBga2V5cygpYCBtZXRob2QgYW5kIHNvcnQgd2l0aCBsaXN0IGBzb3J0KClgIG1ldGhvZCwgdGhlbiBzdGVwIHRocm91Z2ggcmVzdWx0IHdpdGggZm9yIGxvb3BcbiAgXG4gIFxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgS3MgPSBsaXN0KEQua2V5cygpKVxuICAgICZndDsmZ3Q7Jmd0OyBLcy5zb3J0KClcbiAgICBbJmFwb3M7YSZhcG9zOywgJmFwb3M7YiZhcG9zOywgJmFwb3M7YyZhcG9zO11cbiAgICAmZ3Q7Jmd0OyZndDsgZm9yIGtleSBpbiBLczpcbiAgICAgICAgICAgIHByaW50KGtleSwgJmFwb3M7PSZndDsmYXBvczssIERba2V5XSkgIyAzLlggcHJpbnQsIGluIDIuWCByZW1vdmUgcGFyZW50aGVzZXNcbiAgXG4gICAgYSA9Jmd0OyAxXG4gICAgYiA9Jmd0OyAyXG4gICAgYyA9Jmd0OyAzXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "C#4ha/?cyd", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <b>Tuple</b>", 
                        "<p>immutable sequence, usually coded with parentheses instead of square brackets, which is built by commas. Parentheses aren't needed where commas don't otherwise matter, such as:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">T</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">3.0</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #d0d0d0\">[</span><span style=\"color: #3677a9\">11</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">22</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #3677a9\">33</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">T[</span><span style=\"color: #3677a9\">1</span><span style=\"color: #d0d0d0\">]</span>\n<span style=\"color: #3677a9\">3.0</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDczNjYsICJpZCI6ICIxNDg4NzAyNzA5NjA3LTAwMSIsICJtZCI6ICJpbW11dGFibGUgc2VxdWVuY2UsIHVzdWFsbHkgY29kZWQgd2l0aCBwYXJlbnRoZXNlcyBpbnN0ZWFkIG9mIHNxdWFyZSBicmFja2V0cywgd2hpY2ggaXMgYnVpbHQgYnkgY29tbWFzLiBQYXJlbnRoZXNlcyBhcmVuJmFwb3M7dCBuZWVkZWQgd2hlcmUgY29tbWFzIGRvbiZhcG9zO3Qgb3RoZXJ3aXNlIG1hdHRlciwgc3VjaCBhczpcbiAgXG4gIFxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgVCA9ICZhcG9zO3NwYW0mYXBvczssIDMuMCwgWzExLCAyMiwgMzNdXG4gICAgJmd0OyZndDsmZ3Q7IFRbMV1cbiAgICAzLjBcbiAgXG4ifQ==---->", 
                        "", 
                        "y", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "E+^E{{baU)", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python set syntax", 
                        "<p>New in 3.X and 2.7, sets use <code>{...}</code>, as they are like keys in a valueless dictionary:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #24909d\">set</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'spam'</span><span style=\"color: #d0d0d0\">)</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #d0d0d0\">=</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'h'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X,</span> <span style=\"color: #d0d0d0\">Y</span>\n<span style=\"color: #d0d0d0\">({</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'p'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'s'</span><span style=\"color: #d0d0d0\">},</span> <span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'h'</span><span style=\"color: #d0d0d0\">})</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">&amp;</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># intersection</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">|</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># union</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'m'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'h'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'a'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'p'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'s'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">-</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># difference</span>\n<span style=\"color: #d0d0d0\">{</span><span style=\"color: #ed9d13\">'p'</span><span style=\"color: #d0d0d0\">,</span> <span style=\"color: #ed9d13\">'s'</span><span style=\"color: #d0d0d0\">}</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #d0d0d0\">X</span> <span style=\"color: #d0d0d0\">&gt;</span> <span style=\"color: #d0d0d0\">Y</span> <span style=\"color: #999999; font-style: italic\"># superset</span>\n<span style=\"color: #24909d\">False</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDczODksICJpZCI6ICIxNDg4NzA1NjM1MDExLTAwMSIsICJtZCI6ICJOZXcgaW4gMy5YIGFuZCAyLjcsIHNldHMgdXNlIGB7Li4ufWAsIGFzIHRoZXkgYXJlIGxpa2Uga2V5cyBpbiBhIHZhbHVlbGVzcyBkaWN0aW9uYXJ5OlxuICBcbiAgXG4gIFxuICAgIDo6OnB5dGhvblxuICAgICZndDsmZ3Q7Jmd0OyBYID0gc2V0KCZhcG9zO3NwYW0mYXBvczspXG4gICAgJmd0OyZndDsmZ3Q7IFkgPSB7JmFwb3M7aCZhcG9zOywgJmFwb3M7YSZhcG9zOywgJmFwb3M7bSZhcG9zO31cbiAgICAmZ3Q7Jmd0OyZndDsgWCwgWVxuICAgICh7JmFwb3M7bSZhcG9zOywgJmFwb3M7YSZhcG9zOywgJmFwb3M7cCZhcG9zOywgJmFwb3M7cyZhcG9zO30sIHsmYXBvczttJmFwb3M7LCAmYXBvczthJmFwb3M7LCAmYXBvcztoJmFwb3M7fSlcbiAgICAmZ3Q7Jmd0OyZndDsgWCAmYW1wOyBZICMgaW50ZXJzZWN0aW9uXG4gICAgeyZhcG9zO20mYXBvczssICZhcG9zO2EmYXBvczt9XG4gICAgJmd0OyZndDsmZ3Q7IFggfCBZICMgdW5pb25cbiAgICB7JmFwb3M7bSZhcG9zOywgJmFwb3M7aCZhcG9zOywgJmFwb3M7YSZhcG9zOywgJmFwb3M7cCZhcG9zOywgJmFwb3M7cyZhcG9zO31cbiAgICAmZ3Q7Jmd0OyZndDsgWCAtIFkgIyBkaWZmZXJlbmNlXG4gICAgeyZhcG9zO3AmYXBvczssICZhcG9zO3MmYXBvczt9XG4gICAgJmd0OyZndDsmZ3Q7IFggJmd0OyBZICMgc3VwZXJzZXRcbiAgICBGYWxzZVxuICBcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "rA*xJ>i$`u", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python objects and names commonly initialized with this value", 
                        "<p><code>None</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc0MDAsICJpZCI6ICIxNDg4NzA2NTg2Mzc4LTAwMSIsICJtZCI6ICJgTm9uZWBcbiJ9---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "r$Q<Yb~IB%", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python <code><b>Boolean</b></code>s", 
                        "<p><code>True</code> and <code>False</code> objects, essentially just <code>0</code> and <code>1</code> with custom display logic</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNTM0NTAsICJpZCI6ICIxNDg4NzA2NjgwNzc2LTAwMSIsICJtZCI6ICJgVHJ1ZWAgYW5kIGBGYWxzZWAgb2JqZWN0cywgZXNzZW50aWFsbHkganVzdCBgMGAgYW5kIGAxYCB3aXRoIGN1c3RvbSBkaXNwbGF5IGxvZ2ljXG4ifQ==---->", 
                        "", 
                        "", 
                        "", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "cNhZ_qsS~:", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python type differences 2.X and 3.X", 
                        "<p>2.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #24909d\">type</span> <span style=\"color: #ed9d13\">'list'</span><span style=\"color: #d0d0d0\">&gt;</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L))</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #24909d\">type</span> <span style=\"color: #ed9d13\">'type'</span><span style=\"color: #d0d0d0\">&gt;</span>\n</pre></div>\n<p>3.X:</p>\n<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">class</span> <span style=\"color: #a61717; background-color: #e3d2d2\">'</span><span style=\"color: #447fcf; text-decoration: underline\">list</span><span style=\"color: #ed9d13\">'&gt;</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L))</span>\n<span style=\"color: #d0d0d0\">&lt;</span><span style=\"color: #6ab825; font-weight: bold\">class</span> <span style=\"color: #a61717; background-color: #e3d2d2\">'</span><span style=\"color: #447fcf; text-decoration: underline\">type</span><span style=\"color: #ed9d13\">'&gt;</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc0NjEsICJpZCI6ICIxNDg4NzA4MDY5MTk1LTAwMSIsICJtZCI6ICIyLlg6XG4gIFxuICAgIDo6OnB5dGhvblxuICAgICZndDsmZ3Q7Jmd0OyB0eXBlKEwpXG4gICAgJmx0O3R5cGUgJmFwb3M7bGlzdCZhcG9zOyZndDtcbiAgICAmZ3Q7Jmd0OyZndDsgdHlwZSh0eXBlKEwpKVxuICAgICZsdDt0eXBlICZhcG9zO3R5cGUmYXBvczsmZ3Q7XG4gIFxuMy5YOlxuICBcbiAgICA6OjpweXRob25cbiAgICAmZ3Q7Jmd0OyZndDsgdHlwZShMKVxuICAgICZsdDtjbGFzcyAmYXBvcztsaXN0JmFwb3M7Jmd0O1xuICAgICZndDsmZ3Q7Jmd0OyB0eXBlKHR5cGUoTCkpXG4gICAgJmx0O2NsYXNzICZhcG9zO3R5cGUmYXBvczsmZ3Q7XG4ifQ==---->", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "t.l:Vq4Pj4", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }, 
                {
                    "__type__": "Note", 
                    "data": "", 
                    "fields": [
                        "Python type checking", 
                        "<table class=\"codehilitetable\"><tbody><tr><td><div class=\"linenodiv\" style=\"background-color: #f0f0f0; padding-right: 10px\"><pre style=\"line-height: 125%\">1\n2\n3\n4\n5\n6</pre></div></td><td class=\"code\"><div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">([]):</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'yes'</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">yes</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #24909d\">type</span><span style=\"color: #d0d0d0\">(L)</span> <span style=\"color: #d0d0d0\">==</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">:</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'yes'</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">yes</span>\n<span style=\"color: #d0d0d0\">&gt;&gt;&gt;</span> <span style=\"color: #6ab825; font-weight: bold\">if</span> <span style=\"color: #24909d\">isinstance</span><span style=\"color: #d0d0d0\">(L,</span> <span style=\"color: #24909d\">list</span><span style=\"color: #d0d0d0\">):</span>\n    <span style=\"color: #6ab825; font-weight: bold\">print</span><span style=\"color: #d0d0d0\">(</span><span style=\"color: #ed9d13\">'yes'</span><span style=\"color: #d0d0d0\">)</span> <span style=\"color: #d0d0d0\">yes</span>\n</pre></div>\n</td></tr></tbody></table><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNTYxMDgsICJpZCI6ICIxNDg4NzA4MTUyMDY4LTAwMSIsICJtZCI6ICIgICAgOjo6cHl0aG9uXG4gICAgJmd0OyZndDsmZ3Q7IGlmIHR5cGUoTCkgPT0gdHlwZShbXSk6XG4gICAgICAgIHByaW50KCZhcG9zO3llcyZhcG9zOykgeWVzXG4gICAgJmd0OyZndDsmZ3Q7IGlmIHR5cGUoTCkgPT0gbGlzdDpcbiAgICAgICAgcHJpbnQoJmFwb3M7eWVzJmFwb3M7KSB5ZXNcbiAgICAmZ3Q7Jmd0OyZndDsgaWYgaXNpbnN0YW5jZShMLCBsaXN0KTpcbiAgICAgICAgcHJpbnQoJmFwb3M7eWVzJmFwb3M7KSB5ZXNcbiJ9---->", 
                        "", 
                        "", 
                        "y", 
                        ""
                    ], 
                    "flags": 0, 
                    "guid": "uKcs;^*|t5", 
                    "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
                    "tags": []
                }
            ]
        }
    ], 
    "crowdanki_uuid": "5426a6cc-35b7-11e7-ac96-2c56dc924912", 
    "deck_config_uuid": "604d2e8f-3a8b-11e7-b94d-2c56dc924912", 
    "deck_configurations": [
        {
            "__type__": "DeckConfig", 
            "autoplay": true, 
            "crowdanki_uuid": "604d2e8f-3a8b-11e7-b94d-2c56dc924912", 
            "dyn": false, 
            "lapse": {
                "delays": [
                    10
                ], 
                "leechAction": 0, 
                "leechFails": 8, 
                "minInt": 1, 
                "mult": 0.0
            }, 
            "maxTaken": 60, 
            "name": "Aggressive", 
            "new": {
                "bury": true, 
                "delays": [
                    1, 
                    10
                ], 
                "initialFactor": 2500, 
                "ints": [
                    1, 
                    8
                ], 
                "order": 0, 
                "perDay": 200, 
                "separate": true
            }, 
            "replayq": true, 
            "rev": {
                "bury": true, 
                "ease4": 1.3, 
                "fuzz": 0.05, 
                "ivlFct": 1.0, 
                "maxIvl": 36500, 
                "minSpace": 1, 
                "perDay": 500
            }, 
            "timer": 0
        }
    ], 
    "desc": "", 
    "dyn": 0, 
    "extendNew": 1000, 
    "extendRev": 50, 
    "media_files": [], 
    "mid": "1475043240989", 
    "name": "General::Technical", 
    "note_models": [
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "css": "@import url(\"_dark.css\");\n</style><script>\nfunction setDisplay(selector, display) { [].forEach.call(document.querySelectorAll(selector), function (el) { el.style.display = display; }); }\nfunction currentDeckMessages() {\nvar article = document.getElementsByTagName(\"article\")[0];\nvar subdeck = article.dataset.deck.replace(/^General(?:::Language)?::((?:(?!::).)*)(?:::.*)?/, '$1');\nsetDisplay('.subdeck', 'none');\nif(subdeck === ''){ setDisplay('.subdeck.Other', ''); }\nelse { setDisplay('.subdeck.' + subdeck, ''); }\n}\n</script><style>\n", 
            "flds": [
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "sort name", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "command", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "extra type", 
                    "ord": 2, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "short option", 
                    "ord": 3, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "long option", 
                    "ord": 4, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "extra", 
                    "ord": 5, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "description", 
                    "ord": 6, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Monaco", 
                    "media": [], 
                    "name": "examples", 
                    "ord": 7, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "command only", 
                    "ord": 8, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[18pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}", 
            "name": "Shell", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        1, 
                        6, 
                        8
                    ]
                ], 
                [
                    1, 
                    "all", 
                    [
                        6, 
                        8
                    ]
                ], 
                [
                    2, 
                    "all", 
                    [
                        3, 
                        6
                    ]
                ], 
                [
                    3, 
                    "all", 
                    [
                        4, 
                        6
                    ]
                ], 
                [
                    4, 
                    "all", 
                    [
                        3, 
                        4
                    ]
                ], 
                [
                    5, 
                    "all", 
                    [
                        3, 
                        4
                    ]
                ], 
                [
                    6, 
                    "all", 
                    [
                        3, 
                        6
                    ]
                ], 
                [
                    7, 
                    "all", 
                    [
                        4, 
                        6
                    ]
                ], 
                [
                    8, 
                    "all", 
                    [
                        3, 
                        5
                    ]
                ], 
                [
                    9, 
                    "all", 
                    [
                        3, 
                        5
                    ]
                ], 
                [
                    10, 
                    "all", 
                    [
                        4, 
                        5
                    ]
                ], 
                [
                    11, 
                    "all", 
                    [
                        4, 
                        5
                    ]
                ], 
                [
                    12, 
                    "all", 
                    [
                        5, 
                        6
                    ]
                ], 
                [
                    13, 
                    "all", 
                    [
                        5, 
                        6
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [], 
            "tmpls": [
                {
                    "afmt": "<article>\n\n<section>\n<mark><code>{{command}}</code></mark>\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "cmd desc", 
                    "ord": 0, 
                    "qfmt": "{{#description}}\n{{#command only}}\n<article>\n\n<section>\n<mark><code>{{command}}</code></mark>\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/command only}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n<mark><code>{{command}}</code></mark>\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc cmd", 
                    "ord": 1, 
                    "qfmt": "{{#description}}\n{{#command only}}\n<article>\n\n<section>\n<mark><code><var class=\"q\">command</var></code></mark>\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/command only}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <mark><code>{{command}} {{short option}}</code></mark>\n  {{#long option}}<br><em><code>{{long option}}</code></em>{{/long option}}\n</section>\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc -", 
                    "ord": 2, 
                    "qfmt": "{{#description}}\n{{#short option}}\n<article>\n\n<section>\n  <mark><code>{{command}} <var class=\"q\">short option</var></code></mark>\n  {{#long option}}<br>&nbsp;{{/long option}}\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <mark><code>{{command}} {{long option}}</code></mark>\n  {{#short option}}<br><em><code>{{short option}}</code></em>{{/short option}}\n</section>\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc --", 
                    "ord": 3, 
                    "qfmt": "{{#description}}\n{{#long option}}\n<article>\n\n<section>\n  <mark><code>{{command}} <var class=\"q\">long option</var></code></mark>\n  {{#short option}}<br>&nbsp;{{/short option}}\n</section>\n\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{long option}}</code></mark>\n  <br><em><code>{{short option}}</code></em>\n</section>\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "-- -", 
                    "ord": 4, 
                    "qfmt": "{{#long option}}\n{{#short option}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{long option}}</code></mark>\n  <br><em><code><var class=\"q\">short option</var></code></em>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/long option}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{short option}}</code></mark>\n  {{#short option}}<br><em><code>{{long option}}</code></em>{{/short option}}\n</section>\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "- --", 
                    "ord": 5, 
                    "qfmt": "{{#long option}}\n{{#short option}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{short option}}</code></mark>\n  <br><em><code><var class=\"q\">long option</var></code></em>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/long option}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{short option}}</code></mark>\n  {{#long option}}<br><em><code>{{long option}}</code></em>{{/long option}}\n</section>\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "- desc", 
                    "ord": 6, 
                    "qfmt": "{{#description}}\n{{#short option}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{short option}}</code></mark>\n  {{#long option}}<br>&nbsp;{{/long option}}\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{long option}}</code></mark>\n  {{#short option}}<br><em><code>{{short option}}</code></em>{{/short option}}\n</section>\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "-- desc", 
                    "ord": 7, 
                    "qfmt": "{{#description}}\n{{#long option}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{long option}}</code></mark>\n  {{#short option}}<br>&nbsp;{{/short option}}\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{short option}}</code></mark>\n{{#long option}}<br><em><code>{{long option}}</code></em>{{/long option}}\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "alias -", 
                    "ord": 8, 
                    "qfmt": "{{#extra}}\n{{#short option}}\n<article>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n<mark><code><var class=\"q\">{{#long option}}short form {{/long option}}{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</var></code></mark>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{short option}}</code></mark>\n{{#long option}}<br><em><code>{{long option}}</code></em>{{/long option}}\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "- alias", 
                    "ord": 9, 
                    "qfmt": "{{#extra}}\n{{#short option}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code><var class=\"q\">alias</var></code></mark>\n</section>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{short option}}</code></mark>\n  {{#long option}}<br>&nbsp;{{/long option}}\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/short option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{long option}}</code></mark>\n{{#short option}}<br><em><code>{{short option}}</code></em>{{/short option}}\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "alias --", 
                    "ord": 10, 
                    "qfmt": "{{#extra}}\n{{#long option}}\n<article>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n<mark><code><var class=\"q\">{{#short option}}long form {{/short option}}{{#extra type}}{{extra type}}{{/extra type}}{{^extra type}}alias{{/extra type}}</var></code></mark>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n{{#command}}<cite><code>{{command}}</code></cite>{{/command}}\n<mark><code>{{long option}}</code></mark>\n{{#short option}}<br><em><code>{{short option}}</code></em>{{/short option}}\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "-- alias", 
                    "ord": 11, 
                    "qfmt": "{{#extra}}\n{{#long option}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code><var class=\"q\">alias</var></code></mark>\n</section>\n\n<section>\n  <cite><code>{{command}}</code></cite> <mark><code>{{long option}}</code></mark>\n  {{#short option}}<br>&nbsp;{{/short option}}\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/long option}}\n{{/extra}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <cite><code>{{command}}</code></cite>\n  {{extra type}}\n  <mark><code>{{extra}}</code></mark>\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "desc extra", 
                    "ord": 12, 
                    "qfmt": "{{#description}}\n{{#extra}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite>\n  <var class=\"q\">{{extra type}}</var>\n</section>\n\n<blockquote>{{description}}</blockquote>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/extra}}\n{{/description}}\n"
                }, 
                {
                    "afmt": "<article>\n\n<section>\n  <cite><code>{{command}}</code></cite>\n  {{extra type}}\n  <mark><code>{{extra}}</code></mark>\n</section>\n\n{{#description}}\n<section>\n<blockquote>{{description}}</blockquote>\n</section>\n{{/description}}\n\n{{#examples}}\n<section>\n  <details open=\"open\">\n    <summary>Examples</summary>\n    <pre><code>{{examples}}</code></pre>\n  </details>\n</section>\n{{/examples}}\n\n</article>\n<script>currentDeckMessages();</script>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "extra desc", 
                    "ord": 13, 
                    "qfmt": "{{#description}}\n{{#extra}}\n<article>\n\n<section>\n  <cite><code>{{command}}</code></cite>\n  {{extra type}}\n  <mark><code>{{extra}}</code></mark>\n</section>\n\n<section>\n<blockquote><var class=\"q\">description</var></blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/extra}}\n{{/description}}\n"
                }
            ], 
            "type": 0, 
            "vers": []
        }, 
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "css": "@import url(\"_dark.css\");\n</style><script>\n\nfunction setDisplay(selector, display) { [].forEach.call(document.querySelectorAll(selector), function (el) { el.style.display = display; }); }\nfunction currentDeckMessages() {\nsetDisplay('.subdeck.Other', '');\nvar article = document.getElementsByTagName(\"article\")[0];\nvar subdeck = article.dataset.deck.replace(/^General(?:::Language)?::((?:(?!::).)*)(?:::.*)?/, '$1');\nsetDisplay('.subdeck', 'none');\nif( ['English', 'Spanish'].indexOf(subdeck) < 0 ){ setDisplay('.subdeck.Other', ''); }\nelse { setDisplay('.subdeck.' + subdeck, ''); }\n}\n</script><style>\n", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Front", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Back", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Example", 
                    "ord": 2, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "ShowReversed", 
                    "ord": 3, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "LongAnswer", 
                    "ord": 4, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Alternate", 
                    "ord": 5, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[18pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}", 
            "name": "BasicDark", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ], 
                [
                    1, 
                    "all", 
                    [
                        3
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "Latin"
            ], 
            "tmpls": [
                {
                    "afmt": "<article data-deck=\"{{Deck}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n<mark>{{Front}}</mark>{{#Alternate}}; <mark>{{Alternate}}</mark>{{/Alternate}}\n</section>\n\n<section>\n<blockquote{{#LongAnswer}} class=\"long\"{{/LongAnswer}}>{{Back}}</blockquote>\n</section>\n\n{{#Example}}\n<section>\n<blockquote><var>{{Example}}</var></blockquote>\n</section>\n{{/Example}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "Forward", 
                    "ord": 0, 
                    "qfmt": "<article data-deck=\"{{Deck}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n<mark>{{Front}}</mark>\n</section>\n\n<section>\n<blockquote{{#LongAnswer}} class=\"long\"{{/LongAnswer}}>\n<var class=\"q subdeck English\">definition</var>\n<var class=\"q subdeck Spanish\">en español</var>\n</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n"
                }, 
                {
                    "afmt": "<article data-deck=\"{{Deck}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n<mark>{{Front}}</mark>{{#Alternate}}; <mark>{{Alternate}}</mark>{{/Alternate}}\n</section>\n\n<section>\n<blockquote{{#LongAnswer}} class=\"long\"{{/LongAnswer}}>{{Back}}</blockquote>\n</section>\n\n{{#Example}}\n<section>\n<blockquote><var>{{Example}}</var></blockquote>\n</section>\n{{/Example}}\n\n</article>\n<script>currentDeckMessages();</script>\n", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "Reverse", 
                    "ord": 1, 
                    "qfmt": "{{#ShowReversed}}\n<article data-deck=\"{{Deck}}\">\n\n<section style=\"position: relative;\">\n<small class=\"subdeck English\">\n<a href=\"http://dictionary.com/browse/{{text:Front}}\">dictionary</a> | <a href=\"https://ssl.gstatic.com/dictionary/static/sounds/de/0//{{text:Front}}.mp3\">audio</a>\n</small>\n<mark>\n<var class=\"q subdeck Other\">what does the following describe</var>\n<var class=\"q subdeck English\">word or phrase</var>\n<var class=\"q subdeck Spanish\">English</var>\n</mark>\n</section>\n\n<section>\n<blockquote{{#LongAnswer}} class=\"long\"{{/LongAnswer}}>{{Back}}</blockquote>\n</section>\n\n</article>\n<script>currentDeckMessages();</script>\n{{/ShowReversed}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }, 
        {
            "__type__": "NoteModel", 
            "crowdanki_uuid": "a6a2f2e0-6d5b-11e6-adf3-8c705a50cbf0", 
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: center;\n color: black;\n background-color: white;\n}\n", 
            "flds": [
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Purpose", 
                    "ord": 0, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Command", 
                    "ord": 1, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Extra", 
                    "ord": 2, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": false
                }, 
                {
                    "font": "Arial", 
                    "media": [], 
                    "name": "Source", 
                    "ord": 3, 
                    "rtl": false, 
                    "size": 20, 
                    "sticky": true
                }
            ], 
            "latexPost": "\\end{document}", 
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n", 
            "name": "Command line", 
            "req": [
                [
                    0, 
                    "all", 
                    [
                        0
                    ]
                ]
            ], 
            "sortf": 0, 
            "tags": [
                "Linux", 
                "bash", 
                "command", 
                "tar"
            ], 
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n<br>\n{{Extra}}\n<br>\n<a href=\"{{text:Source}}\">{{Source}}</a>", 
                    "bafmt": "", 
                    "bqfmt": "", 
                    "did": null, 
                    "name": "TypeCard", 
                    "ord": 0, 
                    "qfmt": "{{Purpose}}\n<br>\n{{type:Command}}"
                }
            ], 
            "type": 0, 
            "vers": []
        }
    ], 
    "notes": [
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Find version available on Homebrew", 
                "<div><pre>brew search <i>keyword</i>\nbrew info <i>result</i></pre></div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "nVw^)xx&{-", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>cmd: hex to decimal</div>", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">echo</span> <span style=\"color: #6ab825; font-weight: bold\">$((</span><span style=\"color: #3677a9\">0</span>x15a<span style=\"color: #6ab825; font-weight: bold\">))</span><br><span style=\"color: #24909d\">printf</span> <span style=\"color: #ed9d13\">'%d\\n'</span> 0x15a<br>perl -e <span style=\"color: #ed9d13\">'printf (\"%d\\n\", 0x15a)'</span><br><span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">'ibase=16;obase=A;15A'</span> <span style=\"color: #d0d0d0\">|</span> bc<br></pre></div><br><p>Note <code>ibase</code> and <code>obase</code> specify the input and the output notation respectively. By default, the notation for both is decimal unless you change it using <code>ibase</code> or <code>obase</code>. Because you change the notation to hex using <code>ibase</code>, your <code>obase</code> needs to be specified in hex (<code>A</code> in hex = <code>10</code> in decimal). The input number (<code>15A</code>) needs to be in UPPER case. <code>15a</code> will give you a parse error.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDgxNzYsICJpZCI6ICIxNDg5MzUwNjMzMzMwLTAwMSIsICJtZCI6ICIgICAgOjo6c2hlbGxcbiAgICBlY2hvICQoKDB4MTVhKSlcbiAgICBwcmludGYgJmFwb3M7JWRcXG4mYXBvczsgMHgxNWFcbiAgICBwZXJsIC1lICZhcG9zO3ByaW50ZiAoJnF1b3Q7JWRcXG4mcXVvdDssIDB4MTVhKSZhcG9zO1xuICAgIGVjaG8gJmFwb3M7aWJhc2U9MTY7b2Jhc2U9QTsxNUEmYXBvczsgfCBiY1xuICBcbk5vdGUgYGliYXNlYCBhbmQgYG9iYXNlYCBzcGVjaWZ5IHRoZSBpbnB1dCBhbmQgdGhlIG91dHB1dCBub3RhdGlvbiByZXNwZWN0aXZlbHkuIEJ5IGRlZmF1bHQsIHRoZSBub3RhdGlvbiBmb3IgYm90aCBpcyBkZWNpbWFsIHVubGVzcyB5b3UgY2hhbmdlIGl0IHVzaW5nIGBpYmFzZWAgb3IgYG9iYXNlYC4gQmVjYXVzZSB5b3UgY2hhbmdlIHRoZSBub3RhdGlvbiB0byBoZXggdXNpbmcgYGliYXNlYCwgeW91ciBgb2Jhc2VgIG5lZWRzIHRvIGJlIHNwZWNpZmllZCBpbiBoZXggKGBBYCBpbiBoZXggPSBgMTBgIGluIGRlY2ltYWwpLiBUaGUgaW5wdXQgbnVtYmVyIChgMTVBYCkgbmVlZHMgdG8gYmUgaW4gVVBQRVIgY2FzZS4gYDE1YWAgd2lsbCBnaXZlIHlvdSBhIHBhcnNlIGVycm9yLlxuIn0=---->", 
                "", 
                "y", 
                "y", 
                ""
            ], 
            "flags": 0, 
            "guid": "l!*NGvAC9L", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "lscpu", 
                "lscpu", 
                "", 
                "", 
                "", 
                "", 
                "<div>Gathers CPU architecture information like number of CPUs, threads, cores, sockets, NUMA nodes, information about&nbsp;CPU caches, CPU family, model, bogoMIPS, byte order and stepping from sysfs and /proc/cpuinfo, &nbsp;and &nbsp;prints &nbsp;it &nbsp;in &nbsp;a&nbsp;human-readable format. &nbsp;It supports both online and offline CPUs. &nbsp;It can also print out in a parsable format, including how different caches are shared by different CPUs, which can be fed to other programs.</div>", 
                "", 
                "y"
            ], 
            "flags": 0, 
            "guid": "Cim3wI+j=}", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "nproc", 
                "nproc", 
                "", 
                "", 
                "", 
                "", 
                "print the number of processing units available", 
                "", 
                "y"
            ], 
            "flags": 0, 
            "guid": "AL0Y,j&8[@", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": [
                "command"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Simulate cron env in script", 
                "<div>Add to crontab:</div><div><br /></div><div>&nbsp; &nbsp; :::shell</div><div>&nbsp; &nbsp; * * * * * env &gt; ~/cronenv</div><div><br /></div><div>If adding to global `/etc/crontab`, need username too:</div><div><br /></div><div>&nbsp; &nbsp; :::shell</div><div>&nbsp; &nbsp; * * * * * root env &gt; ~/cronenv</div><div><br /></div><div>After it runs, do this:</div><div><br /></div><div>&nbsp; &nbsp; :::shell</div><div>&nbsp; &nbsp; env - `cat ~/cronenv` /bin/sh</div><div><br /></div><div><br /></div>", 
                "", 
                "y", 
                "y", 
                ""
            ], 
            "flags": 0, 
            "guid": "p3L$WG=&Q3", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Typical default cron environment", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">HOME <span style=\"color: #999999;font-style: italic\"># user's home directory)</span>\nLOGNAME <span style=\"color: #999999; font-style: italic\"># user's login)</span>\n<span style=\"color: #40ffff\">PATH</span><span style=\"color: #d0d0d0\">=</span>/usr/bin:/usr/sbin:. <span style=\"color: #999999; font-style: italic\"># usually no longer . for sec reasons</span>\n<span style=\"color: #40ffff\">SHELL</span><span style=\"color: #d0d0d0\">=</span>/usr/bin/sh\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc2OTksICJpZCI6ICIxNDkwMDM5NDYxNjA5LTAwMSIsICJtZCI6ICIgICAgOjo6c2hcbiAgICBIT01FICMgdXNlciZhcG9zO3MgaG9tZSBkaXJlY3RvcnkpXG4gICAgTE9HTkFNRSAjIHVzZXImYXBvcztzIGxvZ2luKVxuICAgIFBBVEg9L3Vzci9iaW46L3Vzci9zYmluOi4gIyB1c3VhbGx5IG5vIGxvbmdlciAuIGZvciBzZWMgcmVhc29uc1xuICAgIFNIRUxMPS91c3IvYmluL3NoXG4ifQ==---->", 
                "", 
                "y", 
                "y", 
                ""
            ], 
            "flags": 0, 
            "guid": "q;,hp]SR(h", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Connect forked Git repo to original", 
                "<div><code>git remote add upstream <i>https://github.com/ORIGINAL_OWNER/ORIGINAL_REPOSITORY.git</i></code></div>", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "xd+zWs5_@;", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Sync forked Git repo with original", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">git remote add upstream https://....git\ngit fetch upstream\ngit checkout master\ngit merge upstream/master\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4MjksICJpZCI6ICIxNDkwMjI0MjA1NTA4LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGdpdCByZW1vdGUgYWRkIHVwc3RyZWFtIGh0dHBzOi8vLi4uLmdpdFxuICAgIGdpdCBmZXRjaCB1cHN0cmVhbVxuICAgIGdpdCBjaGVja291dCBtYXN0ZXJcbiAgICBnaXQgbWVyZ2UgdXBzdHJlYW0vbWFzdGVyXG4ifQ==---->", 
                "", 
                "y", 
                "y", 
                ""
            ], 
            "flags": 0, 
            "guid": "k2Ht/!uc?-", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin printf %q", 
                "printf", 
                "extension", 
                "", 
                "", 
                "%q", 
                "Causes <code>printf</code> to output the\ncorresponding <var>argument</var> in a format that can be reused as shell input.", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #24909d\">printf</span> <span style=\"color: #ed9d13\">\"%q\\n\"</span> <span style=\"color: #ed9d13\">\"</span><span style=\"color: #6ab825; font-weight: bold\">$(</span>tput bold<span style=\"color: #6ab825; font-weight: bold\">)</span><span style=\"color: #ed9d13\">\"</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNjA0NDcsICJpZCI6ICIxNDkwNDE1ODA4NTc5LTAwNyIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIHByaW50ZiAmcXVvdDslcVxcbiZxdW90OyAmcXVvdDskKHRwdXQgYm9sZCkmcXVvdDtcbiJ9---->", 
                ""
            ], 
            "flags": 0, 
            "guid": "Hs:N7A-peT", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "how to&nbsp;use find and xargs&nbsp;together", 
                "<div>If you use find and xargs together, you should use -print0 to separate filenames with a null character rather than new lines. You then need to use -0 with xargs.</div><div><br /></div><div>david% touch \"foo bar\"</div><div>david% find | xargs ls</div><div>ls: ./foo: No such file or directory</div><div>ls: bar: No such file or directory</div><div>david% find -print0 | xargs -0 ls</div><div>./foo bar</div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l^26ZBIZ/N", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "prevent reading uninitialized variables in shell", 
                "set -o nounset<div>set -u</div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Cc%Ay(1N@q", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "make shell exit on any nonzero return", 
                "set -e<div>set -o errexit</div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "w6gL;0D_[c", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<p>checking <code>$?</code> if using <code>set -e</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTMyNzcsICJpZCI6ICIxNDkwNDcyNTU5OTc1LTAwMCIsICJtZCI6ICJjaGVja2luZyBgJD9gIGlmIHVzaW5nIGBzZXQgLWVgXG4ifQ==---->", 
                "<div>Cannot do:</div><div><br /></div><div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; command</div><div>&nbsp; &nbsp; if [ \"$?\"-ne 0]; then echo \"command failed\"; exit 1; fi</div><div><br /></div><div>Alternative 1:</div><div><br /></div><div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; command || { echo \"command failed\"; exit 1; }</div><div><br /></div><div>Alternative 2:</div><div><br /></div><div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; if ! command; then echo \"command failed\"; exit 1; fi</div><div><br /></div><div>Alternative 3:</div><div><br /></div><div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; set +e</div><div>&nbsp; &nbsp; command1</div><div>&nbsp; &nbsp; command2</div><div>&nbsp; &nbsp; set -e</div><div><br /></div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "zXpl*Z#=a~", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "disable pipe returning code of last command", 
                "set -o pipefail", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Bq70=PbT}U", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "List all signals you can trap", 
                "kill -l", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "N.Z`Nq17H_", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "lockfile without race condition", 
                "<div>It’s worth pointing out that there is a slight race condition in the above lock example between the time we test for the lockfile and the time we create it. A possible solution to this is to use IO redirection and `bash`’s `noclobber` mode, which won’t redirect to an existing file. We can use something similar to:</div><div><br /></div><div><br /></div><div>&nbsp; &nbsp; :::bash</div><div>&nbsp; &nbsp; if ( set -o noclobber; echo \"$$\" &gt; \"$lockfile\") 2&gt; /dev/null; </div><div>&nbsp; &nbsp; then</div><div>&nbsp; &nbsp; &nbsp; &nbsp;trap 'rm -f \"$lockfile\"; exit $?' INT TERM EXIT</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp;critical-section</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp;rm -f \"$lockfile\"</div><div>&nbsp; &nbsp; &nbsp; &nbsp;trap - INT TERM EXIT</div><div>&nbsp; &nbsp; else</div><div>&nbsp; &nbsp; &nbsp; &nbsp;echo \"Failed to acquire lockfile: $lockfile.\" </div><div>&nbsp; &nbsp; &nbsp; &nbsp;echo \"Held by $(cat $lockfile)\"</div><div>&nbsp; &nbsp; fi</div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l~pK`|d7:/", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "find .. in shell history", 
                "grep \\\\.\\\\. ~/.zsh_history", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "O2G@PiA=YZ", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash for range", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">for</span> i in <span style=\"color: #d0d0d0\">{</span>1..1000<span style=\"color: #d0d0d0\">};</span> <span style=\"color: #6ab825; font-weight: bold\">do</span><span style=\"color: #d0d0d0\">;</span> <span style=\"color: #24909d\">echo </span>i<span style=\"color: #d0d0d0\">;</span> <span style=\"color: #6ab825; font-weight: bold\">done</span>\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzODIzMTEsICJpZCI6ICIxNDkwNDc3MDMzMjM2LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaFxuICAgIGZvciBpIGluIHsxLi4xMDAwfTsgZG87IGVjaG8gaTsgZG9uZVxuIn0=---->", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "G)B!tZjN-M", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "zsh synonym for true", 
                ":", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "y}hH5ZlPux", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "change to prevoius directory", 
                "cd -", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "bT*3+$`RVC", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "replace first <code>&lt;old&gt;</code> with <code>&lt;new&gt;</code> in current directory path", 
                "<p><code>cd &lt;old&gt; &lt;new&gt;</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4NjgsICJpZCI6ICIxNDkwNDc4OTU0MjMxLTAwMSIsICJtZCI6ICJgY2QgJmx0O29sZCZndDsgJmx0O25ldyZndDtgXG4ifQ==---->", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "f|*.q):-*9", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "directory stack", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\">pushd dirname\n...\npopd\n</pre></div><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4NDYsICJpZCI6ICIxNDkwNDc5MTc5OTg1LTAwMSIsICJtZCI6ICIgICAgcHVzaGQgZGlybmFtZVxuICAgIC4uLlxuICAgIHBvcGRcbiJ9---->", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "q(UhduSpl1", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "null byte in GNU sed", 
                "<p><code>\\x00</code></p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDc4NTIsICJpZCI6ICIxNDkzNTkzNzM4NTIyLTAwMSIsICJtZCI6ICJgXFx4MDBgXG4ifQ==---->", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "q~n&UC%}4w", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "null byte", 
                "<code>\\0</code>", 
                "", 
                "y", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "r6vi$iO+>u", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\a", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\a", 
                "alert (bell)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "b{X[$<$7=f", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\b", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\b", 
                "backspace", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "yBaKZ1I$#1", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\c", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\c", 
                "suppress further output", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "gTc?HdmM[3", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\e", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\e", 
                "escape", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Q};n?~mhH,", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\f", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\f", 
                "form feed", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "LjF{S!(Q;~", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\n", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\n", 
                "new line", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "5^2{^=+eo", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\r", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\r", 
                "carriage return", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "qN6Z<}k@nT", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\t", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\t", 
                "horizontal tab", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "l]CR58wCu:", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\v", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\v", 
                "vertical tab", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "O|oSw=)Rz#", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\\\", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\\\", 
                "backslash", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "we-8CTX>E=", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\0nnn", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\0<i>nnn</i>", 
                "the eight-bit character whose value is the octal value <var>nnn</var>\n(zero to three octal digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "m-#Oh>b(*0", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\xHH", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\x<i>HH</i>", 
                "the eight-bit character whose value is the hexadecimal value <var>HH</var>\n(one or two hex digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "h@pC2>#X8s", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "Zsh startup files", 
                "<p><code>$ZDOTDIR/.zshenv</code><br />\n<code>$ZDOTDIR/.zprofile</code><br />\n<code>$ZDOTDIR/.zshrc</code><br />\n<code>$ZDOTDIR/.zlogin</code><br />\n<code>$ZDOTDIR/.zlogout</code></p>\n<p>If <code>ZDOTDIR</code> is not set, then the value of <code>HOME</code> is used.</p>\n<p><code>.zshenv</code> is sourced on all invocations of the shell, unless the <code>-f</code> option is set. It should contain commands to set the command search path, plus other important environment variables. <code>.zshenv</code> should not contain commands that produce output or assume the shell is attached to a tty.</p>\n<p><code>.zshrc</code> is sourced in interactive shells. It should contain commands to set up aliases, functions, options, key bindings, etc.</p>\n<p><code>.zlogin</code> is sourced in login shells. It should contain commands that should be executed only in login shells. <code>.zlogout</code> is sourced when login shells exit. <code>.zprofile</code> is similar to <code>.zlogin</code>, except that it is sourced before <code>.zshrc</code>. <code>.zprofile</code> is meant as an alternative to <code>.zlogin</code> for ksh fans; the two are not intended to be used together, although this could certainly be done if desired. <code>.zlogin</code> is not the place for alias definitions, options, environment variable settings, etc.; as a general rule, it should not change the shell environment at all. Rather, it should be used to set the terminal type and run a series of external commands (fortune, msgs, etc). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNDU3MjIsICJpZCI6ICIxNDkzNTk0NTczMzEyLTAwMSIsICJtZCI6ICJgJFpET1RESVIvLnpzaGVudmBcbmAkWkRPVERJUi8uenByb2ZpbGVgXG5gJFpET1RESVIvLnpzaHJjYFxuYCRaRE9URElSLy56bG9naW5gXG5gJFpET1RESVIvLnpsb2dvdXRgXG4gIFxuSWYgYFpET1RESVJgIGlzIG5vdCBzZXQsIHRoZW4gdGhlIHZhbHVlIG9mIGBIT01FYCBpcyB1c2VkLlxuICBcbmAuenNoZW52YCBpcyBzb3VyY2VkIG9uIGFsbCBpbnZvY2F0aW9ucyBvZiB0aGUgc2hlbGwsIHVubGVzcyB0aGUgYC1mYCBvcHRpb24gaXMgc2V0LiBJdCBzaG91bGQgY29udGFpbiBjb21tYW5kcyB0byBzZXQgdGhlIGNvbW1hbmQgc2VhcmNoIHBhdGgsIHBsdXMgb3RoZXIgaW1wb3J0YW50IGVudmlyb25tZW50IHZhcmlhYmxlcy4gYC56c2hlbnZgIHNob3VsZCBub3QgY29udGFpbiBjb21tYW5kcyB0aGF0IHByb2R1Y2Ugb3V0cHV0IG9yIGFzc3VtZSB0aGUgc2hlbGwgaXMgYXR0YWNoZWQgdG8gYSB0dHkuXG4gIFxuYC56c2hyY2AgaXMgc291cmNlZCBpbiBpbnRlcmFjdGl2ZSBzaGVsbHMuIEl0IHNob3VsZCBjb250YWluIGNvbW1hbmRzIHRvIHNldCB1cCBhbGlhc2VzLCBmdW5jdGlvbnMsIG9wdGlvbnMsIGtleSBiaW5kaW5ncywgZXRjLlxuICBcbmAuemxvZ2luYCBpcyBzb3VyY2VkIGluIGxvZ2luIHNoZWxscy4gSXQgc2hvdWxkIGNvbnRhaW4gY29tbWFuZHMgdGhhdCBzaG91bGQgYmUgZXhlY3V0ZWQgb25seSBpbiBsb2dpbiBzaGVsbHMuIGAuemxvZ291dGAgaXMgc291cmNlZCB3aGVuIGxvZ2luIHNoZWxscyBleGl0LiBgLnpwcm9maWxlYCBpcyBzaW1pbGFyIHRvIGAuemxvZ2luYCwgZXhjZXB0IHRoYXQgaXQgaXMgc291cmNlZCBiZWZvcmUgYC56c2hyY2AuIGAuenByb2ZpbGVgIGlzIG1lYW50IGFzIGFuIGFsdGVybmF0aXZlIHRvIGAuemxvZ2luYCBmb3Iga3NoIGZhbnM7IHRoZSB0d28gYXJlIG5vdCBpbnRlbmRlZCB0byBiZSB1c2VkIHRvZ2V0aGVyLCBhbHRob3VnaCB0aGlzIGNvdWxkIGNlcnRhaW5seSBiZSBkb25lIGlmIGRlc2lyZWQuIGAuemxvZ2luYCBpcyBub3QgdGhlIHBsYWNlIGZvciBhbGlhcyBkZWZpbml0aW9ucywgb3B0aW9ucywgZW52aXJvbm1lbnQgdmFyaWFibGUgc2V0dGluZ3MsIGV0Yy47IGFzIGEgZ2VuZXJhbCBydWxlLCBpdCBzaG91bGQgbm90IGNoYW5nZSB0aGUgc2hlbGwgZW52aXJvbm1lbnQgYXQgYWxsLiBSYXRoZXIsIGl0IHNob3VsZCBiZSB1c2VkIHRvIHNldCB0aGUgdGVybWluYWwgdHlwZSBhbmQgcnVuIGEgc2VyaWVzIG9mIGV4dGVybmFsIGNvbW1hbmRzIChmb3J0dW5lLCBtc2dzLCBldGMpLiBcbiJ9---->", 
                "", 
                "y", 
                "y", 
                ""
            ], 
            "flags": 0, 
            "guid": "fnE@twd-fq", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "unset shell function", 
                "<b>unset -f</b> my_function<div><b>unfunction</b> my_function (zsh)</div>", 
                "", 
                "", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "B.Xp)DM8&I", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "<div>mv second_file.txt{.new,}</div>", 
                "mv second_file.txt.new second_file.txt", 
                "", 
                "f", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "F@w*_t?yZ+", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": [
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin&nbsp;echo -n", 
                "echo", 
                "", 
                "-n", 
                "", 
                "", 
                "<div>suppress trailing newline</div>", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "qV}2$PPZ1:", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin&nbsp;echo -e", 
                "echo", 
                "", 
                "-e", 
                "", 
                "", 
                "enable interpretation of backslash-escaped characters", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "EwW@=JDZm.", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo -E", 
                "echo", 
                "", 
                "-E", 
                "", 
                "", 
                "disable interpretation of backslash-escaped characters", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "FX.&tH$K!|", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash special parameter $?", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$?", 
                "Expands to the exit status of the most recently executed foreground pipeline.", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "jG0StMrpt!", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": [
                "command"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$#", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$#", 
                "Expands to the number of positional parameters in decimal.", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Dh9Y{8j=<Y", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$*", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$*", 
                "<p>Expands to the positional parameters, starting from one. When the expansion is not within double quotes, each positional parameter expands to a separate word. In contexts where it is performed, those words are subject to further word splitting and pathname expansion. When the expansion occurs within double quotes, it expands to a single word with the value of each parameter separated by the first character of the IFS special variable. That is, this parameter is equivalent to <code>\"$1c$2c…\"</code>, where <code>c</code> is the first character of the value of the <code>IFS</code> variable. If <code>IFS</code> is unset, the parameters are separated by spaces. If <code>IFS</code> is null, the parameters are joined without intervening separators.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDk1NjksICJpZCI6ICIxNDk1MjQ5MjE5NTU3LTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwb3NpdGlvbmFsIHBhcmFtZXRlcnMsIHN0YXJ0aW5nIGZyb20gb25lLiBXaGVuIHRoZSBleHBhbnNpb24gaXMgbm90IHdpdGhpbiBkb3VibGUgcXVvdGVzLCBlYWNoIHBvc2l0aW9uYWwgcGFyYW1ldGVyIGV4cGFuZHMgdG8gYSBzZXBhcmF0ZSB3b3JkLiBJbiBjb250ZXh0cyB3aGVyZSBpdCBpcyBwZXJmb3JtZWQsIHRob3NlIHdvcmRzIGFyZSBzdWJqZWN0IHRvIGZ1cnRoZXIgd29yZCBzcGxpdHRpbmcgYW5kIHBhdGhuYW1lIGV4cGFuc2lvbi4gV2hlbiB0aGUgZXhwYW5zaW9uIG9jY3VycyB3aXRoaW4gZG91YmxlIHF1b3RlcywgaXQgZXhwYW5kcyB0byBhIHNpbmdsZSB3b3JkIHdpdGggdGhlIHZhbHVlIG9mIGVhY2ggcGFyYW1ldGVyIHNlcGFyYXRlZCBieSB0aGUgZmlyc3QgY2hhcmFjdGVyIG9mIHRoZSBJRlMgc3BlY2lhbCB2YXJpYWJsZS4gVGhhdCBpcywgYCZxdW90OyQqJnF1b3Q7YCBpcyBlcXVpdmFsZW50IHRvIGAmcXVvdDskMWMkMmNcdTIwMjYmcXVvdDtgLCB3aGVyZSBgY2AgaXMgdGhlIGZpcnN0IGNoYXJhY3RlciBvZiB0aGUgdmFsdWUgb2YgdGhlIGBJRlNgIHZhcmlhYmxlLiBJZiBgSUZTYCBpcyB1bnNldCwgdGhlIHBhcmFtZXRlcnMgYXJlIHNlcGFyYXRlZCBieSBzcGFjZXMuIElmIGBJRlNgIGlzIG51bGwsIHRoZSBwYXJhbWV0ZXJzIGFyZSBqb2luZWQgd2l0aG91dCBpbnRlcnZlbmluZyBzZXBhcmF0b3JzLlxuIn0=---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "m|WFe~DtmV", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$@", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$@", 
                "<p>Expands to the positional parameters, starting from one. When the expansion occurs within double quotes, each parameter expands to a separate word. That is, <code>\"$@\"</code> is equivalent to <code>\"$1\" \"$2\" …</code>. If the double-quoted expansion occurs within a word, the expansion of the first parameter is joined with the beginning part of the original word, and the expansion of the last parameter is joined with the last part of the original word. When there are no positional parameters, <code>\"$@\"</code> and <code>$@</code> expand to nothing (i.e., they are removed). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDkzNjksICJpZCI6ICIxNDk1MjQ5MzI0MjE3LTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwb3NpdGlvbmFsIHBhcmFtZXRlcnMsIHN0YXJ0aW5nIGZyb20gb25lLiBXaGVuIHRoZSBleHBhbnNpb24gb2NjdXJzIHdpdGhpbiBkb3VibGUgcXVvdGVzLCBlYWNoIHBhcmFtZXRlciBleHBhbmRzIHRvIGEgc2VwYXJhdGUgd29yZC4gVGhhdCBpcywgYCZxdW90OyRAJnF1b3Q7YCBpcyBlcXVpdmFsZW50IHRvIGAmcXVvdDskMSZxdW90OyAmcXVvdDskMiZxdW90OyBcdTIwMjZgLiBJZiB0aGUgZG91YmxlLXF1b3RlZCBleHBhbnNpb24gb2NjdXJzIHdpdGhpbiBhIHdvcmQsIHRoZSBleHBhbnNpb24gb2YgdGhlIGZpcnN0IHBhcmFtZXRlciBpcyBqb2luZWQgd2l0aCB0aGUgYmVnaW5uaW5nIHBhcnQgb2YgdGhlIG9yaWdpbmFsIHdvcmQsIGFuZCB0aGUgZXhwYW5zaW9uIG9mIHRoZSBsYXN0IHBhcmFtZXRlciBpcyBqb2luZWQgd2l0aCB0aGUgbGFzdCBwYXJ0IG9mIHRoZSBvcmlnaW5hbCB3b3JkLiBXaGVuIHRoZXJlIGFyZSBubyBwb3NpdGlvbmFsIHBhcmFtZXRlcnMsIGAmcXVvdDskQCZxdW90O2AgYW5kIGAkQGAgZXhwYW5kIHRvIG5vdGhpbmcgKGkuZS4sIHRoZXkgYXJlIHJlbW92ZWQpLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "b@:;nS<d#a", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash special parameter $-", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$-", 
                "<p>Expands to the current option flags as specified upon invocation, by the <code>set</code> builtin command, or those set by the shell itself (such as the <code>-i</code> option). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDk3NjAsICJpZCI6ICIxNDk1MjQ5Mzg4NzA0LTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBjdXJyZW50IG9wdGlvbiBmbGFncyBhcyBzcGVjaWZpZWQgdXBvbiBpbnZvY2F0aW9uLCBieSB0aGUgYHNldGAgYnVpbHRpbiBjb21tYW5kLCBvciB0aG9zZSBzZXQgYnkgdGhlIHNoZWxsIGl0c2VsZiAoc3VjaCBhcyB0aGUgYC1pYCBvcHRpb24pLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "M&cX|oy&ya", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$$", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$$", 
                "Expands to the process ID of the shell. In a `()` subshell, it expands to the process ID of the invoking shell, not the subshell.", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Eh?/s0},d{", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": [
                "marked"
            ]
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$!", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$!", 
                "<p>Expands to the process ID of the job most recently placed into the background, whether executed as an asynchronous command or using the <code>bg</code> builtin (see <a href=\"https://www.gnu.org/software/bash/manual/html_node/Job-Control-Builtins.html#Job-Control-Builtins\">Job Control Builtins</a>). </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUzNTU5NjQsICJpZCI6ICIxNDk1MjQ5ODE4NjcwLTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBwcm9jZXNzIElEIG9mIHRoZSBqb2IgbW9zdCByZWNlbnRseSBwbGFjZWQgaW50byB0aGUgYmFja2dyb3VuZCwgd2hldGhlciBleGVjdXRlZCBhcyBhbiBhc3luY2hyb25vdXMgY29tbWFuZCBvciB1c2luZyB0aGUgYGJnYCBidWlsdGluIChzZWUgW0pvYiBDb250cm9sIEJ1aWx0aW5zXShodHRwczovL3d3dy5nbnUub3JnL3NvZnR3YXJlL2Jhc2gvbWFudWFsL2h0bWxfbm9kZS9Kb2ItQ29udHJvbC1CdWlsdGlucy5odG1sI0pvYi1Db250cm9sLUJ1aWx0aW5zKSkuIFxuIn0=---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "j*{I)@?oSQ", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$0", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$0", 
                "<p>Expands to the name of the shell or shell script. This is set at shell initialization. If Bash is invoked with a file of commands (see <a href=\"Shell-Scripts.html#Shell-Scripts\">Shell Scripts</a>), <code>$0</code> is set to the name of that file. If Bash is started with the <code>-c</code> option (see <a href=\"Invoking-Bash.html#Invoking-Bash\">Invoking Bash</a>), then <code>$0</code> is set to the first argument after the string to be executed, if one is present. Otherwise, it is set to the filename used to invoke Bash, as given by argument zero. </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNDk5MTksICJpZCI6ICIxNDk1MjQ5ODU4OTQxLTAwNiIsICJtZCI6ICJFeHBhbmRzIHRvIHRoZSBuYW1lIG9mIHRoZSBzaGVsbCBvciBzaGVsbCBzY3JpcHQuIFRoaXMgaXMgc2V0IGF0IHNoZWxsIGluaXRpYWxpemF0aW9uLiBJZiBCYXNoIGlzIGludm9rZWQgd2l0aCBhIGZpbGUgb2YgY29tbWFuZHMgKHNlZSBbU2hlbGwgU2NyaXB0c10oU2hlbGwtU2NyaXB0cy5odG1sI1NoZWxsLVNjcmlwdHMpKSwgYCQwYCBpcyBzZXQgdG8gdGhlIG5hbWUgb2YgdGhhdCBmaWxlLiBJZiBCYXNoIGlzIHN0YXJ0ZWQgd2l0aCB0aGUgYC1jYCBvcHRpb24gKHNlZSBbSW52b2tpbmcgQmFzaF0oSW52b2tpbmctQmFzaC5odG1sI0ludm9raW5nLUJhc2gpKSwgdGhlbiBgJDBgIGlzIHNldCB0byB0aGUgZmlyc3QgYXJndW1lbnQgYWZ0ZXIgdGhlIHN0cmluZyB0byBiZSBleGVjdXRlZCwgaWYgb25lIGlzIHByZXNlbnQuIE90aGVyd2lzZSwgaXQgaXMgc2V0IHRvIHRoZSBmaWxlbmFtZSB1c2VkIHRvIGludm9rZSBCYXNoLCBhcyBnaXZlbiBieSBhcmd1bWVudCB6ZXJvLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "FlMDhtjc|a", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash&nbsp;special parameter&nbsp;$_", 
                "bash", 
                "special parameter", 
                "", 
                "", 
                "$_", 
                "<div>At shell startup, set to the absolute pathname used to invoke the shell or shell script being executed as passed in the environment or argument list. Subsequently, expands to the last argument to the previous command, after expansion. Also set to the full pathname used to invoke each command executed and placed in the environment exported to that command. When checking mail, this parameter holds the name of the mail file. </div>", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "C4TR0cQ_Hp", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash positional parameter ${N}", 
                "bash", 
                "positional parameter", 
                "", 
                "", 
                "${N}", 
                "<p>A <em>positional parameter</em> is a parameter denoted by one or more digits, other than the single digit <code>0</code>. Positional parameters are assigned from the shell’s arguments when it is invoked, and may be reassigned using the <code>set</code> builtin command. Positional parameter <code>N</code> may be referenced as <code>${N}</code>, or as <code>$N</code> when <code>N</code> consists of a single digit. Positional parameters may not be assigned to with assignment statements. The <code>set</code> and <code>shift</code> builtins are used to set and unset them (see <a href=\"Shell-Builtin-Commands.html#Shell-Builtin-Commands\">Shell Builtin Commands</a>). The positional parameters are temporarily replaced when a shell function is executed (see <a href=\"Shell-Functions.html#Shell-Functions\">Shell Functions</a>). <br />\nWhen a positional parameter consisting of more than a single digit is expanded, it must be enclosed in braces. </p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTAxODgsICJpZCI6ICIxNDk1MjUwMDUxNTAxLTAwNiIsICJtZCI6ICJBIF9wb3NpdGlvbmFsIHBhcmFtZXRlcl8gaXMgYSBwYXJhbWV0ZXIgZGVub3RlZCBieSBvbmUgb3IgbW9yZSBkaWdpdHMsIG90aGVyIHRoYW4gdGhlIHNpbmdsZSBkaWdpdCBgMGAuIFBvc2l0aW9uYWwgcGFyYW1ldGVycyBhcmUgYXNzaWduZWQgZnJvbSB0aGUgc2hlbGxcdTIwMTlzIGFyZ3VtZW50cyB3aGVuIGl0IGlzIGludm9rZWQsIGFuZCBtYXkgYmUgcmVhc3NpZ25lZCB1c2luZyB0aGUgYHNldGAgYnVpbHRpbiBjb21tYW5kLiBQb3NpdGlvbmFsIHBhcmFtZXRlciBgTmAgbWF5IGJlIHJlZmVyZW5jZWQgYXMgYCR7Tn1gLCBvciBhcyBgJE5gIHdoZW4gYE5gIGNvbnNpc3RzIG9mIGEgc2luZ2xlIGRpZ2l0LiBQb3NpdGlvbmFsIHBhcmFtZXRlcnMgbWF5IG5vdCBiZSBhc3NpZ25lZCB0byB3aXRoIGFzc2lnbm1lbnQgc3RhdGVtZW50cy4gVGhlIGBzZXRgIGFuZCBgc2hpZnRgIGJ1aWx0aW5zIGFyZSB1c2VkIHRvIHNldCBhbmQgdW5zZXQgdGhlbSAoc2VlIFtTaGVsbCBCdWlsdGluIENvbW1hbmRzXShTaGVsbC1CdWlsdGluLUNvbW1hbmRzLmh0bWwjU2hlbGwtQnVpbHRpbi1Db21tYW5kcykpLiBUaGUgcG9zaXRpb25hbCBwYXJhbWV0ZXJzIGFyZSB0ZW1wb3JhcmlseSByZXBsYWNlZCB3aGVuIGEgc2hlbGwgZnVuY3Rpb24gaXMgZXhlY3V0ZWQgKHNlZSBbU2hlbGwgRnVuY3Rpb25zXShTaGVsbC1GdW5jdGlvbnMuaHRtbCNTaGVsbC1GdW5jdGlvbnMpKS4gXG5XaGVuIGEgcG9zaXRpb25hbCBwYXJhbWV0ZXIgY29uc2lzdGluZyBvZiBtb3JlIHRoYW4gYSBzaW5nbGUgZGlnaXQgaXMgZXhwYW5kZWQsIGl0IG11c3QgYmUgZW5jbG9zZWQgaW4gYnJhY2VzLiBcbiJ9---->", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "E4*M=EaJ^z", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "basic lockfile implementation", 
                "<div class=\"codehilite\" style=\"background: #202020\" align=\"left\"><pre style=\"line-height: 125%\"><span style=\"color: #6ab825;font-weight: bold\">if</span> <span style=\"color: #d0d0d0\">[</span> ! -e <span style=\"color: #40ffff\">$lockfile</span> <span style=\"color: #d0d0d0\">];</span> <span style=\"color: #6ab825; font-weight: bold\">then</span>\n<span style=\"background-color: #404040\">   <span style=\"color: #24909d\">trap</span> <span style=\"color: #ed9d13\">\"rm -f </span><span style=\"color: #40ffff\">$lockfile</span><span style=\"color: #ed9d13\">; exit\"</span> INT TERM EXIT\n</span>   touch <span style=\"color: #40ffff\">$lockfile</span>\n   critical-section\n   rm <span style=\"color: #40ffff\">$lockfile</span>\n<span style=\"background-color: #404040\">   <span style=\"color: #24909d\">trap</span> - INT TERM EXIT\n</span><span style=\"color: #6ab825; font-weight: bold\">else</span>\n   <span style=\"color: #24909d\">echo</span> <span style=\"color: #ed9d13\">\"critical-section is already running\"</span>\n<span style=\"color: #6ab825; font-weight: bold\">fi</span>\n</pre></div>\n<p>It’s worth pointing out that there is a slight race condition in the above lock example between the time we test for the lockfile and the time we create it.</p><!----SBAdata:eyJpc2NvbnZlcnRlZCI6ICJUcnVlIiwgImxhc3Rtb2RpZmllZCI6IDE0OTUyNTQ2MTYsICJpZCI6ICIxNDk1MjU0NDAzOTE3LTAwMSIsICJtZCI6ICIgICAgOjo6YmFzaCBobF9saW5lcz0mcXVvdDsyIDYmcXVvdDtcbiAgICBpZiBbICEgLWUgJGxvY2tmaWxlIF07IHRoZW5cbiAgICAgICB0cmFwICZxdW90O3JtIC1mICRsb2NrZmlsZTsgZXhpdCZxdW90OyBJTlQgVEVSTSBFWElUXG4gICAgICAgdG91Y2ggJGxvY2tmaWxlXG4gICAgICAgY3JpdGljYWwtc2VjdGlvblxuICAgICAgIHJtICRsb2NrZmlsZVxuICAgICAgIHRyYXAgLSBJTlQgVEVSTSBFWElUXG4gICAgZWxzZVxuICAgICAgIGVjaG8gJnF1b3Q7Y3JpdGljYWwtc2VjdGlvbiBpcyBhbHJlYWR5IHJ1bm5pbmcmcXVvdDtcbiAgICBmaVxuICBcbkl0XHUyMDE5cyB3b3J0aCBwb2ludGluZyBvdXQgdGhhdCB0aGVyZSBpcyBhIHNsaWdodCByYWNlIGNvbmRpdGlvbiBpbiB0aGUgYWJvdmUgbG9jayBleGFtcGxlIGJldHdlZW4gdGhlIHRpbWUgd2UgdGVzdCBmb3IgdGhlIGxvY2tmaWxlIGFuZCB0aGUgdGltZSB3ZSBjcmVhdGUgaXQuXG4ifQ==---->", 
                "", 
                "", 
                "y", 
                ""
            ], 
            "flags": 0, 
            "guid": "t`FmHx.|,l", 
            "note_model_uuid": "542689c7-35b7-11e7-bf3b-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo \\uHHHH", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\u<var>HHHH</var>", 
                "the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value\n<var>HHHH</var> (one to four hex digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "Eh1u+)OP]z", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }, 
        {
            "__type__": "Note", 
            "data": "", 
            "fields": [
                "bash builtin echo&nbsp;\\U<var>HHHHHHHH</var>", 
                "echo", 
                "escape sequence", 
                "", 
                "", 
                "\\U<var>HHHHHHHH</var>", 
                "the Unicode (ISO/IEC 10646) character whose value is the hexadecimal value\n<var>HHHHHHHH</var> (one to eight hex digits)", 
                "", 
                ""
            ], 
            "flags": 0, 
            "guid": "pk]f&[m`r_", 
            "note_model_uuid": "54286cbd-35b7-11e7-bc63-2c56dc924912", 
            "tags": []
        }
    ]
}